- en: Messaging in the Cloud Using Amazon SNS and Amazon SQS
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Amazon SNS 和 Amazon SQS 在云中进行消息传递
- en: In the previous chapter, we briefly explored the AWS code suite of services,
    namely AWS CodeCommit, AWS CodeDeploy, and AWS CodePipeline, and how they tie
    into the continuous integration and continuous delivery life cycle of an application.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一章中，我们简要探讨了 AWS 代码套件服务，即 AWS CodeCommit、AWS CodeDeploy 和 AWS CodePipeline，以及它们如何与应用程序的持续集成和持续交付生命周期结合。
- en: 'In this chapter, we will be learning and exploring yet another group of AWS
    services that are extremely useful when it comes to developing modern cloud-ready
    applications, as well as for the general housekeeping of your AWS accounts: Amazon
    **Simple Notification Services**, or **SNS**, and Amazon **Simple Queue Service**,
    or **SQS**.'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将学习并探索另一组在开发现代云原生应用程序时极其有用的 AWS 服务，以及用于管理 AWS 账户的常规操作：Amazon **简单通知服务**（**SNS**）和
    Amazon **简单队列服务**（**SQS**）。
- en: 'Keeping this in mind, let''s have a quick look at the various topics that we
    will be covering in this chapter:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 记住这一点，让我们快速浏览一下本章将要涵盖的各个主题：
- en: Introducing the various messaging services provided by AWS, along with an insight
    into which service to use for what purpose
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 介绍 AWS 提供的各种消息服务，并深入了解每个服务的用途
- en: Introducing Amazon SNS and Amazon SQS, along with their core concepts and terminologies
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 介绍 Amazon SNS 和 Amazon SQS，以及它们的核心概念和术语
- en: Creating your own SNS topics and subscriptions, and leveraging them for your
    AWS account
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建您自己的 SNS 主题和订阅，并将其用于您的 AWS 账户
- en: Monitoring SNS notifications using Amazon CloudWatch
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 Amazon CloudWatch 监控 SNS 通知
- en: Integrating Amazon SNS with Slack for a richer, user notification experience
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将 Amazon SNS 与 Slack 集成，提供更丰富的用户通知体验
- en: Getting started with standard and FIFO queues, and integrating Amazon SNS with
    Amazon SQS
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 入门标准队列和 FIFO 队列，并将 Amazon SNS 与 Amazon SQS 集成
- en: So, without any further ado, let's get started!
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，事不宜迟，我们开始吧！
- en: Understanding the AWS messaging services
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 了解 AWS 消息服务
- en: 'We all know by now that AWS provides a plethora of services designed to help
    you with developing a rich set of cloud-ready applications; but with so many different
    services to choose from, how do you make the right set of choices to begin with?
    That''s exactly what we will be learning and exploring in this section, starting
    with a brief understanding and comparison of a few commonly used AWS messaging
    services, as depicted in the following diagram:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在都知道 AWS 提供了大量的服务，旨在帮助您开发丰富的云原生应用程序；但是，面对如此多的服务，您该如何选择合适的服务组合呢？这正是我们在本节中将要学习和探索的内容，首先是简要了解并比较几个常用的
    AWS 消息服务，如下图所示：
- en: '![](img/4ceb42aa-aaf7-419e-ab19-6b469fcf27dc.png)'
  id: totrans-13
  prefs: []
  type: TYPE_IMG
  zh: '![](img/4ceb42aa-aaf7-419e-ab19-6b469fcf27dc.png)'
- en: '**Amazon SNS:** Amazon **SNS**, or **Simple Notification Service**, is a synchronous,
    managed service that provides the end user with the ability to deliver or send
    messages to one or more endpoints or clients. This works by using a **Publisher–****Subscriber**-like
    model, as depicted in the following diagram:'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Amazon SNS：** Amazon **SNS**，即**简单通知服务**，是一种同步的、托管的服务，能够让最终用户将消息发送或传递给一个或多个端点或客户端。它通过使用类似**发布者–订阅者**的模型来工作，如下图所示：'
- en: '![](img/2967ae78-1d27-44d0-8ce9-3cf53823afc0.png)'
  id: totrans-15
  prefs: []
  type: TYPE_IMG
  zh: '![](img/2967ae78-1d27-44d0-8ce9-3cf53823afc0.png)'
- en: One or more publishers or producers post a message to a corresponding SNS **topic** without
    knowing which subscribers or consumers will ultimately consume the message. The
    producer also doesn't wait for a response back from the consumers, thus making
    SNS a loosely-coupled service. It is the consumer's task to subscribe to the topic
    and get notified of the incoming messages. SNS supports a variety of consumer
    implementation options, such as email, mobile push notifications or SMS, HTTP/HTTPS
    notifications, and even Lambda functions.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 一个或多个发布者或生产者将消息发布到相应的 SNS **主题**，而不需要知道哪些订阅者或消费者最终会消费这些消息。生产者也不需要等待消费者的响应，这使得
    SNS 成为一种松耦合服务。消费者的任务是订阅主题并获取传入的消息通知。SNS 支持多种消费者实现选项，如电子邮件、移动推送通知、SMS、HTTP/HTTPS
    通知，甚至是 Lambda 函数。
- en: '**Amazon SQS:** Amazon **SQS**, or **Simple Queue Service**, on the other hand,
    is an asynchronous managed service that provides users with the ability to push
    and pull messages from a queue. Here too, one or more producers can be used to
    push messages into the queue, which a corresponding set of consumers on the other
    end consume and process the messages one at a time. An important point to note
    here is that, unlike its counterpart, SNS, where the consumers are notified of
    a new message, here, the consumers have to poll the queue in short intervals of
    time for newer messages. Once a message is found, the consumer has to process
    it and then delete it from the queue. The process is shown here:'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Amazon SQS：** 另一方面，Amazon **SQS**，或称为 **Simple Queue Service**，是一种异步托管服务，提供了将消息推送到队列并从队列中拉取消息的能力。在这里，多个生产者可以将消息推送到队列中，而在另一端的消费者会逐个消费并处理这些消息。这里需要注意的重要一点是，与其对应的
    SNS 不同，后者会在有新消息时通知消费者，而在 SQS 中，消费者必须定期轮询队列以查找新消息。一旦发现消息，消费者需要处理它，并将其从队列中删除。该过程如下所示：'
- en: '![](img/031e540b-e8d8-4646-9645-803989fd882c.png)'
  id: totrans-18
  prefs: []
  type: TYPE_IMG
  zh: '![](img/031e540b-e8d8-4646-9645-803989fd882c.png)'
- en: '**Amazon Kinesis**: Amazon Kinesis functions a lot like Amazon SQS; however,
    it is fundamentally designed and optimized for high-throughput data writes and
    reads. Here, instead of a queue, you are provided with a stream that consumers
    can use to read from multiple times. The stream is automatically trimmed after
    a span of 24 hours, so, unlike your consumers from the queue, here you are not
    required to delete the messages once they are processed:'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Amazon Kinesis：** Amazon Kinesis 与 Amazon SQS 很像；然而，它本质上是为高吞吐量的数据写入和读取而设计和优化的。在这里，代替队列，你将得到一个流，消费者可以多次读取该流。该流会在
    24 小时后自动修剪，因此，与队列中的消费者不同，这里不需要在处理完消息后删除消息：'
- en: '![](img/60bab0ac-5337-495e-8d73-fa98b952294e.png)'
  id: totrans-20
  prefs: []
  type: TYPE_IMG
  zh: '![](img/60bab0ac-5337-495e-8d73-fa98b952294e.png)'
- en: Similar to Amazon Kinesis, AWS also provides a streaming functionality with
    DynamoDB as well, called DynamoDB streams. Using this feature, you can basically
    enable real-time changes to certain items within your tables in the form of a
    stream. And, finally, you also get the standard request–reply model of messaging
    using a combination of Amazon API Gateway, ELBs, AWS Lambda, and other services.
    This mode of communication is also synchronous in nature and can be used to fit
    a variety of use cases, as per your requirements.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 与 Amazon Kinesis 类似，AWS 也提供了一种流式功能，称为 DynamoDB streams，结合 DynamoDB 使用。通过这个功能，你可以基本上启用对表中某些项的实时变更，并以流的形式进行处理。最后，你还可以通过结合使用
    Amazon API Gateway、ELB、AWS Lambda 和其他服务，获得标准的请求-回复消息模型。这种通信模式本质上是同步的，可以根据你的需求用于各种用例。
- en: Keeping these basic differences in mind, let's now move forward and learn more
    about SNS.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 牢记这些基本的区别后，我们现在可以继续了解更多关于 SNS 的内容。
- en: Getting started with Amazon Simple Notification Service
  id: totrans-23
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 开始使用 Amazon Simple Notification Service
- en: As discussed briefly earlier, SNS is a managed web service that you, as an end
    user, can leverage to send messages to various subscribing endpoints. SNS works
    in a publisher–subscriber or producer and consumer model, where producers create
    and send messages to a particular topic, which is in turn consumed by one or more
    subscribers over a supported set of protocols. At the time of writing this book,
    SNS supports HTTP, HTTPS, email, push notifications in the form of SMS, as well
    as AWS Lambda and Amazon SQS, as the preferred modes of subscribers.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，SNS 是一种托管的 Web 服务，你可以作为最终用户利用它将消息发送到各种订阅的端点。SNS 采用发布-订阅或生产者-消费者模型，在该模型中，生产者创建并将消息发送到特定主题，随后一个或多个订阅者通过一组受支持的协议消费这些消息。在编写本书时，SNS
    支持 HTTP、HTTPS、电子邮件、短信形式的推送通知，以及作为首选订阅者模式的 AWS Lambda 和 Amazon SQS。
- en: SNS is a really simple and yet extremely useful service that you can use for
    a variety of purposes, the most common being pushing notifications or system alerts
    to cloud administrators whenever a particular event occurs. We have been using
    SNS throughout this book for this same purpose; however, there are many more features
    and use cases that SNS can be leveraged for. For example, you can use SNS to send
    out promotional emails or SMS to a large group of targeted audiences, or even
    use it as a mobile push notification service where the messages are pushed directly
    to your Android or IOS applications.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: SNS 是一个非常简单但又极其有用的服务，你可以将其用于各种目的，其中最常见的是在特定事件发生时向云管理员推送通知或系统警报。我们在本书中一直使用 SNS
    来实现这一目的；然而，SNS 还有许多其他功能和使用案例。例如，你可以使用 SNS 向大量目标受众发送促销电子邮件或短信，甚至可以将其用作移动推送通知服务，将消息直接推送到你的
    Android 或 iOS 应用程序。
- en: 'With this in mind, let''s quickly go ahead and create a simple SNS topic of
    our own:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 记住这一点，让我们快速创建一个简单的 SNS 主题：
- en: To do so, first log in to your AWS Management Console and, from the Filter option,
    filter out `SNS` service. Alternatively, you can also access the SNS dashboard
    by selecting [https://console.aws.amazon.com/sns](https://console.aws.amazon.com/sns).
  id: totrans-27
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为此，首先登录到你的 AWS 管理控制台，并在筛选选项中筛选出 `SNS` 服务。或者，你也可以通过选择 [https://console.aws.amazon.com/sns](https://console.aws.amazon.com/sns)
    来访问 SNS 仪表板。
- en: 'If this is your first time with SNS, simply select the Get Started option to
    begin. Here, at the SNS dashboard, you can start off by selecting the Create topic option,
    as shown in the following screenshot:'
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果这是你第一次使用 SNS，只需选择“开始使用”选项即可开始。在 SNS 仪表板中，你可以通过选择“创建主题”选项来开始，如下图所示：
- en: '![](img/5ab61416-e32b-4a10-a48a-88887bbf394f.png)'
  id: totrans-29
  prefs: []
  type: TYPE_IMG
  zh: '![](img/5ab61416-e32b-4a10-a48a-88887bbf394f.png)'
- en: Once selected, you will be prompted to provide a suitable Topic name and its
    corresponding Display name. Topics form the core functionality for SNS. You can
    use topics to send messages to a particular type of subscribing consumer. Remember,
    a single topic can be subscribed by more than one consumer. Once you have typed
    in the required fields, select the Create topic option to complete the process.
    That's it! Simple, isn't it?
  id: totrans-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择后，你将被提示提供一个合适的主题名称以及对应的显示名称。主题是 SNS 的核心功能。你可以使用主题向特定类型的订阅者发送消息。记住，一个主题可以被多个订阅者订阅。一旦你填写了所需的字段，选择“创建主题”选项以完成此过程。就这样！简单吧？
- en: 'Having created your topic, you can now go ahead and associate it with one or
    more subscribers. To do so, first we need to create one or more subscriptions.
    Select the Create subscription option provided under the newly created topic,
    as shown in the following screenshot:'
  id: totrans-31
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建主题后，你现在可以将其与一个或多个订阅者关联。为此，首先我们需要创建一个或多个订阅。在新创建的主题下，选择提供的“创建订阅”选项，如下图所示：
- en: '![](img/9775190b-9918-4ccf-97ea-d049457aaad2.png)'
  id: totrans-32
  prefs: []
  type: TYPE_IMG
  zh: '![](img/9775190b-9918-4ccf-97ea-d049457aaad2.png)'
- en: Here, in the Create subscription dialog box, select a suitable Protocol that
    will subscribe to the newly created topic. In this case, I've selected Email as
    the Protocol. Next, provide a valid email address in the subsequent Endpoint field.
    The Endpoint field will vary based on the selected protocol. Once completed, click
    on the Create subscription button to complete the process.
  id: totrans-33
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在此，在“创建订阅”对话框中，选择一个合适的协议来订阅新创建的主题。在这种情况下，我选择了 Email 作为协议。接下来，在随后的“终端节点”字段中提供一个有效的电子邮件地址。终端节点字段会根据所选协议而有所不同。完成后，点击“创建订阅”按钮以完成该过程。
- en: With the subscription created, you will now have to validate the subscription.
    This can be performed by launching your email application and selecting the Confirm
    subscription link in the mail that you would have received.
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建订阅后，你现在需要验证该订阅。这可以通过启动你的电子邮件应用并选择你收到的邮件中的“确认订阅”链接来完成。
- en: 'Once the subscription is confirmed, you will be redirected to a confirmation
    page where you can view the subscribed topic''s name as well as the subscription
    ID, as shown in the following screenshot:'
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦订阅得到确认，你将被重定向到一个确认页面，在那里你可以查看订阅的主题名称以及订阅 ID，如下图所示：
- en: '![](img/f674ccdd-a2e4-46e9-b3ac-3396b17e2806.png)'
  id: totrans-36
  prefs: []
  type: TYPE_IMG
  zh: '![](img/f674ccdd-a2e4-46e9-b3ac-3396b17e2806.png)'
- en: 'You can use the same process to create and assign multiple subscribers to the
    same topic. For example, select the Create subscription option, as performed earlier,
    and from the Protocol drop-down list, select SMS as the new protocol. Next, provide
    a valid phone number in the subsequent Endpoint field. The number can be prefixed
    by your country code, as shown in the following screenshot. Once completed, click
    on the Create subscription button to complete the process:'
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您可以使用相同的过程为同一主题创建并分配多个订阅者。例如，选择创建订阅选项，按之前的操作，从协议下拉列表中选择SMS作为新的协议。接下来，在随后的端点字段中提供一个有效的电话号码。该号码可以以您的国家代码为前缀，如下图所示。完成后，点击创建订阅按钮以完成此过程：
- en: '![](img/c9bbe421-b9b7-4540-8605-b2beea459f1d.png)'
  id: totrans-38
  prefs: []
  type: TYPE_IMG
  zh: '![](img/c9bbe421-b9b7-4540-8605-b2beea459f1d.png)'
- en: With the subscriptions created successfully, you can now test the two by publishing
    a message to your topic. To do so, select the Publish to topic option from your
    topics page. Once a message is published here, SNS will attempt to deliver that
    message to each of its subscribing endpoints; in this case, to the email address
    as well as the phone number.
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 订阅成功创建后，您现在可以通过向您的主题发布消息来测试这两项功能。为此，请从您的主题页面选择发布到主题选项。一旦在此处发布消息，SNS将尝试将该消息发送到每个订阅端点；在此案例中，发送到电子邮件地址以及电话号码。
- en: Type in a suitable Subject name followed by the actual message that you wish
    to send. Note that if your character count exceeds 160 for an SMS, SNS will automatically
    send another SMS with the remainder of the character count. You can optionally
    switch the Message format between Raw and JSON to match your requirements. Once
    completed, select Publish Message.
  id: totrans-40
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输入合适的主题名称，后跟您希望发送的实际消息。请注意，如果您的字符数超过160个字符，SNS将自动发送另一条短信，包含剩余的字符数。您可以选择在原始格式和JSON格式之间切换消息格式，以符合您的需求。完成后，选择发布消息。
- en: 'Check your email application once more for the published message. You should
    receive an mail, as shown in the following screenshot:'
  id: totrans-41
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 再次检查您的电子邮件应用程序以查看已发布的消息。您应该会收到一封邮件，如下图所示：
- en: '![](img/40f8b3ed-8ae2-441c-b5d1-4920f43e199e.png)'
  id: totrans-42
  prefs: []
  type: TYPE_IMG
  zh: '![](img/40f8b3ed-8ae2-441c-b5d1-4920f43e199e.png)'
- en: Similarly, you can create and associate one or more such subscriptions to each
    of the topics that you create. In the next section, we will look at how you can
    leverage SNS to send SMS messages or text messages to one or multiple phone numbers.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 类似地，您可以为每个创建的主题创建并关联一个或多个订阅。在下一节中，我们将介绍如何利用SNS向一个或多个电话号码发送短信或文本消息。
- en: Sending text messages using SNS
  id: totrans-44
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用SNS发送短信
- en: 'Amazon SNS also provides users with a really easy-to-use interface which allows
    you to send text messages or SMS messages to one or multiple phone numbers. It
    also provides you with the ability to classify and send messages based on their
    criticality, as well as specify the maximum amount that you wish to spend on sending
    SMS messages each month. So, without wasting any time, let''s get straight to
    it:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 亚马逊SNS还为用户提供了一个非常易于使用的界面，允许您向一个或多个电话号码发送短信或SMS消息。它还提供了根据消息的紧急程度对消息进行分类和发送的功能，并可以指定您每月发送短信时愿意花费的最大金额。所以，别浪费时间，让我们直接开始吧：
- en: To send SMS messages using SNS, first log in to the SNS dashboard by selecting [https://console.aws.amazon.com/sns/](https://console.aws.amazon.com/sns/).
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要使用SNS发送短信，首先通过选择[https://console.aws.amazon.com/sns/](https://console.aws.amazon.com/sns/)登录SNS仪表板。
- en: Once logged in, select the Text messaging (SMS) option from the navigation pane.
    This will bring up the Text messaging (SMS) dashboard, where you can set your
    SMS preferences as well as send messages to one or more phone numbers. First up,
    let's set some preferences by selecting the Manage text messaging preferences option
    from the dashboard.
  id: totrans-47
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 登录后，从导航面板中选择文本消息（SMS）选项。这将打开文本消息（SMS）仪表板，您可以在此设置您的短信偏好设置，并向一个或多个电话号码发送消息。首先，通过从仪表板中选择管理短信偏好设置选项来设置一些偏好设置。
- en: 'Fill in the following preference fields:'
  id: totrans-48
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 填写以下偏好设置字段：
- en: 'Default message type: SNS provides two message types: Promotional and Transactional.
    The Promotional option can be selected if the messages that you wish to send require
    less criticality, for example, simple marketing messages, and so on. On the other
    hand, Transactional messages are ideally suited for critical messages, such as
    one-time passwords, transaction details, and so on. SNS optimizes the message
    delivery for Transactional messages to achieve the best reliability.'
  id: totrans-49
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 默认消息类型：SNS 提供两种消息类型：推广和事务性。如果您要发送的消息不那么重要（例如，简单的营销信息等），可以选择推广选项。另一方面，事务性消息更适合发送关键性信息，例如一次性密码、交易详情等。SNS
    优化事务性消息的发送，以确保最佳的可靠性。
- en: At the time of writing this book, sending SMS messages is supported in the countries
    listed at [https://docs.aws.amazon.com/sns/latest/dg/sms_supported-countries.html](https://docs.aws.amazon.com/sns/latest/dg/sms_supported-countries.html).
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 在撰写本书时，发送短信在以下国家/地区得到支持，详情请见[https://docs.aws.amazon.com/sns/latest/dg/sms_supported-countries.html](https://docs.aws.amazon.com/sns/latest/dg/sms_supported-countries.html)。
- en: 'For this particular scenario, I''ve selected the Promotional option, as shown
    in the following screenshot:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 对于这个特定场景，我选择了推广选项，如下图所示：
- en: '![](img/cd797451-30a0-46e5-99af-d992c876b9b4.png)'
  id: totrans-52
  prefs: []
  type: TYPE_IMG
  zh: '![](img/cd797451-30a0-46e5-99af-d992c876b9b4.png)'
- en: 'Account spend limit: The maximum amount you wish to spend, in USD, for sending
    messages in a month. By default, the limit is set to USD 1.00\. For this scenario,
    we are not going to change this value.'
  id: totrans-53
  prefs:
  - PREF_UL
  - PREF_UL
  type: TYPE_NORMAL
  zh: 账户消费限制：您希望每月发送消息时的最大花费，单位为美元。默认情况下，限制设置为 1.00 美元。在本场景中，我们将不更改此值。
- en: Both Promotional and Transactional message types have different costs based
    on the specified country or region. You can look up the prices at [https://aws.amazon.com/sns/sms-pricing/](https://aws.amazon.com/sns/sms-pricing/).
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 推广消息和事务性消息类型的费用根据指定的国家或地区不同而有所不同。您可以在[https://aws.amazon.com/sns/sms-pricing/](https://aws.amazon.com/sns/sms-pricing/)查询价格。
- en: 'IAM role for CloudWatch Logs access: This option is used to create an IAM role
    that basically allows Amazon SNS to write its logs to CloudWatch. Since this is
    the first time we are configuring this feature, select the Create IAM role option.
    This will redirect you to a new page where you should select the Allow option
    to grant SNS the necessary rights. Here is a snippet of the rights that are provided
    for your IAM role:'
  id: totrans-55
  prefs:
  - PREF_UL
  - PREF_UL
  type: TYPE_NORMAL
  zh: CloudWatch Logs 访问的 IAM 角色：此选项用于创建一个 IAM 角色，允许 Amazon SNS 将日志写入 CloudWatch。由于这是第一次配置此功能，请选择创建
    IAM 角色选项。这将引导您到一个新页面，您应选择允许选项，以授予 SNS 所需的权限。以下是为您的 IAM 角色提供的权限片段：
- en: '[PRE0]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Default percentage of success to sample: This option is used to specify the
    percentage of successful SMS messages delivered, based on which SNS will write
    logs into CloudWatch. To write only logs for failed message deliveries, set this
    value to `0`. By default, SNS will write logs for all successful deliveries (100%).'
  id: totrans-57
  prefs:
  - PREF_UL
  - PREF_UL
  type: TYPE_NORMAL
  zh: 默认成功采样百分比：此选项用于指定成功发送的短信百分比，基于此，SNS 会将日志写入 CloudWatch。如果仅想记录失败的消息发送日志，请将此值设置为`0`。默认情况下，SNS
    会记录所有成功的发送日志（100%）。
- en: 'Default sender ID: This option is used to specify the name of the message''s
    sender. You can provide any meaningful name here.'
  id: totrans-58
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 默认发送者 ID：此选项用于指定消息发送者的名称。您可以在此处提供任何有意义的名称。
- en: 'Reports storage: Use this option to configure an S3 bucket that will store
    daily SMS usage reports from Amazon SNS. If you are providing an existing bucket
    as your Reports storage then ensure that it has the necessary access rights to
    interact with the SNS service.'
  id: totrans-59
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 报告存储：使用此选项配置一个 S3 存储桶，用于存储来自 Amazon SNS 的每日短信使用报告。如果您提供的是现有的存储桶作为报告存储，请确保该存储桶具有与
    SNS 服务交互所需的访问权限。
- en: Once the required fields are filled in, select the Update preferences option
    to complete the process.
  id: totrans-60
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 填写完所需字段后，选择更新偏好设置选项以完成该过程。
- en: 'To send the SMS messages, simply select the Send a text message (SMS) option
    from the Text messaging (SMS) dashboard. This will bring up the Send text message
    (SMS) dialog box, as shown in the following screenshot. Provide a valid phone
    Number and a Message. Remember to prefix your country code in the phone number
    as well:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 要发送短信，只需从文本消息（SMS）仪表板选择发送文本消息（SMS）选项。这将弹出发送短信（SMS）对话框，如下图所示。提供有效的电话号码和消息。记得在电话号码中前缀添加您的国家区号：
- en: '![](img/96b04b21-cc91-4e2a-9f24-9f66b624aa28.png)'
  id: totrans-62
  prefs: []
  type: TYPE_IMG
  zh: '![](img/96b04b21-cc91-4e2a-9f24-9f66b624aa28.png)'
- en: You can optionally even overwrite the Sender ID field here, however, for this
    case, we have left it to the default value that was configured in the preferences
    stage. After the required fields are filled in, simply select Send text message to
    complete the message-sending process. You can also verify the delivery status
    of each message sent, either Transactional or Promotional, by using the Account
    stats section provided in the Text messaging (SMS) page.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 你还可以选择性地覆盖此处的Sender ID字段，不过在这个案例中，我们保持默认值，它是在偏好设置阶段配置的。填写完必填字段后，只需选择发送短信以完成消息发送过程。你还可以通过在“短信（SMS）”页面提供的账户统计部分验证每个消息的送达状态，可以是交易性或促销性。
- en: Using Amazon SNS as triggers
  id: totrans-64
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Amazon SNS作为触发器。
- en: One of the key benefits of having a service such as SNS is that it can also
    be used as a trigger mechanism for a variety of use cases. Messages sent by SNS
    can be used to trigger simple Lambda functions that in turn perform some action
    over another AWS service, or simply process the message from SNS and forward its
    contents to another application. In this section, we will be exploring a really
    simple use case where an SNS topic is used as a trigger mechanism for a Lambda
    function to push CloudWatch alerts over to Slack! The alerts will be sent out
    to a custom-made Slack channel that your IT team can use to track alerts and other
    important notifications with regards to your AWS environment.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 拥有像SNS这样的服务的一个关键好处是，它也可以作为多种用例的触发机制。SNS发送的消息可以触发简单的Lambda函数，Lambda函数执行某些操作，比如对其他AWS服务进行操作，或者简单地处理SNS的消息内容并将其转发到另一个应用程序。在本节中，我们将探索一个非常简单的用例，其中SNS主题作为触发机制，触发Lambda函数将CloudWatch警报推送到Slack！这些警报将发送到一个自定义的Slack频道，IT团队可以在该频道中跟踪警报和有关AWS环境的其他重要通知。
- en: 'At a broader level, here are the list of things that we plan to do for this
    activity:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 从更广泛的角度来看，以下是我们计划为此活动做的事情：
- en: Create an SNS topic that will act as the Lambda trigger
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建一个SNS主题，它将作为Lambda触发器。
- en: Create a CloudWatch alarm for one of our EC2 machines, say, if CPU utilization
    goes higher than 80% then trigger the alarm
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为我们的EC2机器创建一个CloudWatch报警，比如当CPU利用率超过80%时触发报警。
- en: The CloudWatch alarm will post the notification to an SNS topic
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: CloudWatch报警将把通知发送到SNS主题。
- en: The SNS topic will act as a trigger to our Lambda function
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: SNS主题将作为我们的Lambda函数的触发器。
- en: As soon as the Lambda function gets a trigger, it will post the notification
    to our Slack channel
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一旦Lambda函数收到触发，它将把通知发送到我们的Slack频道。
- en: 'Sounds simple? Let''s get down to implementing it then:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 听起来很简单？那我们就开始实现它吧：
- en: First, we will need to create a simple SNS topic which will act as a trigger
    for the Lambda function. Go ahead and create a simple SNS topic as we did in our
    earlier steps. Once completed, make a note of the SNS topic's ARN from the topics
    dashboard. In this case, our SNS is configured to send notifications to an email
    subscriber in the form of an IT admin email alias.
  id: totrans-73
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，我们需要创建一个简单的SNS主题，它将作为Lambda函数的触发器。按照我们之前的步骤创建一个简单的SNS主题。完成后，记下主题仪表板中的SNS主题ARN。在本例中，我们的SNS配置为将通知发送到一个电子邮件订阅者，该订阅者是IT管理员的邮件别名。
- en: Next up, we create our CloudWatch alarm. To do so, select the CloudWatch service
    from the AWS Management Console and click on Alarms in the navigation panel. Select Create
    alarm to get started.
  id: totrans-74
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们创建我们的CloudWatch报警。为此，选择AWS管理控制台中的CloudWatch服务，并点击导航面板中的“警报”。选择“创建警报”以开始。
- en: 'In this scenario, we will be monitoring the EC2 instances in our environment,
    so I''ve gone ahead and selected the EC2 Metrics option. Alternatively, you can
    select any other Metrics, as per your requirements. In our case, we have gone
    ahead and configured a simple CPUUtilization alarm, as shown in the following
    screenshot:'
  id: totrans-75
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在这个场景中，我们将监控我们环境中的EC2实例，因此我选择了EC2指标选项。你也可以根据需求选择其他指标。在我们的例子中，我们配置了一个简单的CPUUtilization报警，如下图所示：
- en: '![](img/108e1972-18e0-4f59-bf71-afaa0c1c8952.png)'
  id: totrans-76
  prefs: []
  type: TYPE_IMG
  zh: '![](img/108e1972-18e0-4f59-bf71-afaa0c1c8952.png)'
- en: 'Make sure that you set up a notification for the alerts and point it to the
    newly created SNS topic, as shown in the following screenshot:'
  id: totrans-77
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确保你为警报设置了通知，并将其指向新创建的SNS主题，如下图所示：
- en: '![](img/aa361d85-1ba4-49c8-914f-4ece2ddce92f.png)'
  id: totrans-78
  prefs: []
  type: TYPE_IMG
  zh: '![](img/aa361d85-1ba4-49c8-914f-4ece2ddce92f.png)'
- en: 'With the SNS topic and CloudWatch alarm in place, we now need to configure
    a Slack channel where the alert notifications will be posted. For that, we will
    need an incoming webhook to be set and a hook URL that will be used to post the
    notifications:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 在设置好SNS主题和CloudWatch警报后，我们需要配置一个Slack频道，用于发布警报通知。为此，我们需要设置一个传入的Webhook并获取一个钩子URL，之后可以用它来发布通知：
- en: 'Go to your Slack team''s settings page and select the Apps & integrations option,
    as shown in the following screenshot:'
  id: totrans-80
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 进入你的Slack团队设置页面，选择“应用和集成”选项，如下图所示：
- en: '![](img/7ae85fcd-290c-4028-a7c6-499ed8ede6f4.jpg)'
  id: totrans-81
  prefs: []
  type: TYPE_IMG
  zh: '![](img/7ae85fcd-290c-4028-a7c6-499ed8ede6f4.jpg)'
- en: You can sign up for a free Slack account at [https://slack.com/get-started](https://slack.com/get-started).
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在[https://slack.com/get-started](https://slack.com/get-started)注册一个免费的Slack账户。
- en: Once you click on Apps & integrations, it will take you to a new page which
    lists a variety of pre-configured apps. Search for `Incoming` and select the Incoming
    Webhooks from the options that appear.
  id: totrans-83
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦点击“应用和集成”，系统会将你带到一个新页面，列出了多种预配置的应用。搜索`Incoming`并从出现的选项中选择“传入Webhook”。
- en: Next, click on Add Configuration. It will ask you to select the Channel to post,
    along with a few other necessary parameters. Make sure that you copy and save
    the Webhook URL before you proceed any further with the next steps.
  id: totrans-84
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，点击“添加配置”。系统会要求你选择要发布的频道，并填写一些其他必要的参数。在继续执行下一步之前，请确保你已复制并保存Webhook URL。
- en: 'Now that we have our Slack hook URL ready, we can finally get started with
    deploying our Lambda function. For this exercise, we will be using an existing
    AWS Lambda function blueprint designed for Slack integration, using the Node.js
    4.3 version:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经准备好Slack钩子URL，可以开始部署我们的Lambda函数了。在这个示例中，我们将使用为Slack集成设计的现有AWS Lambda函数蓝图，使用的是Node.js
    4.3版本：
- en: From the AWS Management dashboard, filter the service Lambda using the Filter option,
    or alternatively, select [https://console.aws.amazon.com/lambda/home](https://console.aws.amazon.com/lambda/home).
  id: totrans-86
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从AWS管理控制台的仪表盘中，使用筛选选项筛选Lambda服务，或者选择[https://console.aws.amazon.com/lambda/home](https://console.aws.amazon.com/lambda/home)。
- en: From the AWS Lambda landing page, select the Create a function option to get
    started.
  id: totrans-87
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在AWS Lambda的首页，选择“创建函数”选项开始操作。
- en: 'For working with Lambda functions, you can choose to create your own function
    from scratch, or alternatively, filter and use a function from a list of predefined
    and configured blueprints. In this case, select the Blueprints option and use
    the adjoining blueprints filter to search for the following function: Blueprint
    name: cloudwatch-alarm-to-slack (as shown in the following screenshot):'
  id: totrans-88
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在使用Lambda函数时，你可以选择从头创建一个新的函数，或者从一系列预定义和配置好的蓝图中筛选并使用一个函数。在这种情况下，选择“蓝图”选项，并使用相邻的蓝图筛选器搜索以下函数：蓝图名称：cloudwatch-alarm-to-slack（如下面的截图所示）：
- en: '![](img/48fa3787-c106-4faf-b468-c848188bde69.png)'
  id: totrans-89
  prefs: []
  type: TYPE_IMG
  zh: '![](img/48fa3787-c106-4faf-b468-c848188bde69.png)'
- en: Select the blueprint and fill out the necessary information for your function,
    such as its name, role name, and so on. Once done, from the SNS section, select
    the newly created SNS topic from the drop-down list.
  id: totrans-90
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择蓝图后，填写你函数的必要信息，比如名称、角色名称等。完成后，在SNS部分，从下拉列表中选择新创建的SNS主题。
- en: Remember to select the Enable trigger checkbox before proceeding with the next
    steps.
  id: totrans-91
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在继续下一步之前，记得勾选“启用触发器”复选框。
- en: 'Finally, in the Environment variables section, provide the appropriate values
    for the `slackChannel` and `kmsEncryptedHookUrl` parameters, as shown in the following
    screenshot. Remember, the `kmsEncryptedHookUrl` is nothing but the Slack hook
    URL that we created a while back:'
  id: totrans-92
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，在“环境变量”部分，提供`slackChannel`和`kmsEncryptedHookUrl`参数的适当值，如下图所示。记住，`kmsEncryptedHookUrl`就是我们之前创建的Slack钩子URL：
- en: '![](img/21efa3ea-75cf-4419-bc3b-0cff721aee5f.png)'
  id: totrans-93
  prefs: []
  type: TYPE_IMG
  zh: '![](img/21efa3ea-75cf-4419-bc3b-0cff721aee5f.png)'
- en: With the values filled in, simply select the Create function option and let
    the magic begin!
  id: totrans-94
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 填写完所有值后，简单选择“创建函数”选项，让魔法开始吧！
- en: Based on the selected CloudWatch metric for your alarm, go ahead and create
    some synthetic load for your EC2 instance. Once the load crosses the set threshold
    in the alarm, it triggers a corresponding message to the SNS topic, which in turn
    triggers the Lambda function to post the alert over on the Slack channel. In this
    way, you can also use the same SNS topic for subscribing to various other services,
    such as Amazon SQS, for other processing requirements.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 根据为告警选择的 CloudWatch 指标，继续为你的 EC2 实例创建一些合成负载。一旦负载超过告警中设定的阈值，它会触发相应的消息到 SNS 主题，进而触发
    Lambda 函数在 Slack 渠道发布告警。通过这种方式，你还可以使用相同的 SNS 主题来订阅其他服务，例如 Amazon SQS，进行其他处理需求。
- en: Monitoring Amazon SNS using Amazon CloudWatch metrics
  id: totrans-96
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Amazon CloudWatch 指标监控 Amazon SNS
- en: 'Amazon SNS automatically collects and sends various metrics about message deliveries
    to Amazon CloudWatch. You can view these metrics and assign them with alarms to
    alert you, in case a message delivery rate drops beyond a certain threshold. You
    can additionally view the message delivery logs, as well using the CloudWatch
    Logs page:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: Amazon SNS 会自动收集并将消息投递的各种指标发送到 Amazon CloudWatch。你可以查看这些指标，并为它们设置告警，提醒你在消息投递率低于某个阈值时。你还可以使用
    CloudWatch 日志页面查看消息投递日志：
- en: To get started, first ensure that you have assigned an IAM role that allows
    SNS to write SMS delivery logs over to CloudWatch. To do so, from the navigation
    pane, select the Text messaging (SMS) option.
  id: totrans-98
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要开始，首先确保你已经分配了允许 SNS 将短信投递日志写入 CloudWatch 的 IAM 角色。为此，从导航窗格中选择“文本消息（SMS）”选项。
- en: Next, from the Manage text messaging preferences option, ensure that you have
    a valid IAM role provided under the IAM role for CloudWatch Logs access field.
  id: totrans-99
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，在“管理短信偏好设置”选项中，确保在“CloudWatch 日志访问的 IAM 角色”字段下提供了有效的 IAM 角色。
- en: Once the IAM role is created, log in to your CloudWatch dashboard by selecting
    [https://console.aws.amazon.com/cloudwatch/home](https://console.aws.amazon.com/cloudwatch/home).
  id: totrans-100
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦 IAM 角色创建完成，登录到你的 CloudWatch 仪表盘，选择[https://console.aws.amazon.com/cloudwatch/home](https://console.aws.amazon.com/cloudwatch/home)。
- en: Here, select the Logs option from the navigation pane to bring up the CloudWatch
    Log Groups page. You should see a default Log Group created here, by the name
    of `DirectPublishToPhoneNumber`.
  id: totrans-101
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在这里，从导航窗格中选择“日志”选项，打开 CloudWatch 日志组页面。你应该能看到一个名为`DirectPublishToPhoneNumber`的默认日志组。
- en: 'Select the Log Group to view the SMS delivery log messages. The logs will either
    show a `SUCCESS` or `FAILURE` in the `status` field, as shown in the following
    screenshot:'
  id: totrans-102
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择日志组以查看短信投递日志信息。日志将显示`SUCCESS`或`FAILURE`，并出现在`status`字段中，如下截图所示：
- en: '![](img/0c1357dd-ed17-45dd-844f-cb32dde6274e.png)'
  id: totrans-103
  prefs: []
  type: TYPE_IMG
  zh: '![](img/0c1357dd-ed17-45dd-844f-cb32dde6274e.png)'
- en: You can additionally create and associate CloudWatch alarms with your monitored
    SNS metrics. To do so, from the CloudWatch dashboard, select the Metrics option.
  id: totrans-104
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你还可以为监控的 SNS 指标创建并关联 CloudWatch 告警。为此，从 CloudWatch 仪表盘中选择“指标”选项。
- en: From the All metrics tab, filter and select the SNS option.
  id: totrans-105
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从“所有指标”标签页中，筛选并选择 SNS 选项。
- en: Based on the requirements, you can now select between viewing the metrics based
    on the PhoneNumber, or Country, SMSType, and so on. In this case, we have selected
    the PhoneNumber option to view the NumberOfNotificationsFailed and NumberOfNotificationsDelivered metrics.
  id: totrans-106
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 根据需求，你现在可以选择根据 PhoneNumber、Country、SMSType 等查看指标。在本例中，我们选择了 PhoneNumber 选项，以查看
    NumberOfNotificationsFailed 和 NumberOfNotificationsDelivered 指标。
- en: Next, select the Graphed metrics tab to view the two metrics and their associated
    actions. Using the Actions column, select the Create alarm option for the metric
    that you wish to monitor.
  id: totrans-107
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，选择“图表化的指标”标签页，查看这两个指标及其相关操作。使用“操作”列，选择你希望监控的指标的“创建告警”选项。
- en: Fill in the respective details and configure the alarm's threshold values based
    on your requirements. Once completed, click on Create Alarm to complete the process.
  id: totrans-108
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 填写相关详细信息，并根据需求配置告警的阈值。一旦完成，点击“创建告警”以完成设置。
- en: 'In this way, you can leverage Amazon CloudWatch to create and view logs and
    alerts generated by the SNS service. In the next section, we will be exploring
    and learning a bit about the second part of the AWS messaging services: SQS.'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 通过这种方式，你可以利用 Amazon CloudWatch 创建并查看由 SNS 服务生成的日志和告警。在下一部分中，我们将探索并学习 AWS 消息服务的第二部分：SQS。
- en: Introducing Amazon Simple Queue Service
  id: totrans-110
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍 Amazon 简单队列服务
- en: Amazon SQS is a managed, highly scalable, and durable service that provides
    developers with a mechanism to store messages that can be later consumed by one
    or more applications. In this section, we will be exploring a few of the concepts
    and terminologies offered by SQS along with an understanding of which SQS, queue
    to use for what scenarios, so let's get started!
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: Amazon SQS 是一项托管的、高度可扩展的且持久的服务，提供开发人员一种机制来存储消息，供一个或多个应用程序稍后消费。在本节中，我们将探讨 SQS
    提供的一些概念和术语，并了解在不同场景下该使用哪个 SQS 队列，下面我们就开始吧！
- en: 'To start off with, SQS is provided in two different modes:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，SQS 提供两种不同的模式：
- en: '**Standard queue**: Standard queues are the default selection when it comes
    to working with SQS. Here, the queues created offer a nearly-unlimited **transaction
    per second** (**TPS**) rate coupled with an *at-least-once* delivery model. What
    this model means is that a message can be delivered at least once, but occasionally
    there is a good probability that more than one copy of that same message can be
    delivered as well. This is due to the fact that SQS is designed and built on a
    highly distributed system that is known to create copies of the same message in
    order to maintain a high-availability scenario. As a result, you may end up with
    the same message more than once.'
  id: totrans-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**标准队列**：标准队列是使用 SQS 时的默认选择。在这里，所创建的队列提供几乎无限的**每秒事务数**（**TPS**），并配有 *至少一次*
    的交付模型。这意味着消息至少会被交付一次，但偶尔也可能有很大概率同一消息会被多次交付。这是因为 SQS 设计和构建在一个高度分布式的系统上，已知会创建同一消息的副本以维持高可用性。因此，你可能会收到多次相同的消息。'
- en: Standard queues also work on a *best-effort ordering* model, in which case,
    messages might be delivered in a different order to the one in which they were
    sent. It is up to your application to sort the messages into the right order in
    which the messages should be received. So, when is the standard queue an ideal
    choice for decoupling your applications? Well, if your application has a high
    throughput requirement, for example, processing of batch messages, decoupling
    incoming user requests from an intense background processing work, and so on,
    then standard queues are the right way to go.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 标准队列还采用 *尽力而为的顺序* 模型，在这种情况下，消息的交付顺序可能与发送时的顺序不同。将消息按正确的接收顺序排序的工作由你的应用程序来完成。那么，什么时候标准队列是解耦应用程序的理想选择呢？如果你的应用程序有高吞吐量要求，例如批量消息处理、将用户请求与高强度背景处理工作解耦等，那么标准队列是正确的选择。
- en: Standard queues are available across all AWS regions.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 标准队列在所有 AWS 区域都可用。
- en: '**FIFO queues**: When working with standard queues, there is a problem of maintaining
    the order of the messages and also ensuring that each message is processed only
    once. To solve this issue, AWS introduced the FIFO queue that provides developers
    with a guaranteed order of delivery of messages, as well as the assurance that
    each message is delivered only once, where no duplicates or copies are ever sent
    out.'
  id: totrans-116
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**FIFO 队列**：在使用标准队列时，会遇到保持消息顺序并确保每条消息只处理一次的问题。为了解决这个问题，AWS 引入了 FIFO 队列，它为开发人员提供了消息交付顺序的保证，并确保每条消息只交付一次，绝不发送重复或副本。'
- en: FIFO queues, on the other hand, do not offer an unlimited throughput capacity,
    unlike their predecessor. At the time of writing this book, FIFO queues support
    up to 300 messages sent per second, with an additional 3,000 messages per second
    capacity if a batch of 10 messages per operation is performed.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 另一方面，FIFO 队列不像其前身那样提供无限的吞吐能力。截止本书编写时，FIFO 队列每秒最多支持发送 300 条消息，如果每次操作处理 10 条消息，则额外可支持每秒
    3,000 条消息的吞吐量。
- en: Such queues are really useful when the order of the messages is of critical
    importance, for example, ensuring that a user follows the correct order of events
    while registering or purchasing of a product, and so on.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 这种队列在消息顺序至关重要时非常有用，例如，确保用户在注册或购买产品时按照正确的事件顺序进行操作等。
- en: FIFO queues are currently only available in the US East (N. Virginia), US East
    (Ohio), US West (Oregon), and EU (Ireland) regions.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: FIFO 队列目前仅在美国东部（北弗吉尼亚）、美国东部（俄亥俄）、美国西部（俄勒冈）和欧盟（爱尔兰）地区提供。
- en: With this basic understanding, let's look at some simple steps to get you started
    with your very own queue in a matter of minutes!
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 在有了这些基本了解之后，让我们看看一些简单的步骤，帮助你在几分钟内创建自己的队列！
- en: Creating your first queue
  id: totrans-121
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建你的第一个队列
- en: 'Getting started with your own SQS queue is a fairly straightforward process.
    In this section, we will be looking at how you can create your very own standard
    queue using the AWS Management Console:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 使用您自己的 SQS 队列入门是一个相当简单的过程。在本节中，我们将介绍如何使用 AWS 管理控制台创建您自己的标准队列：
- en: To begin with, log in to your AWS Management Console and filter out the SQS service
    using the Filter option provided. Alternatively, you can also access the SQS dashboard
    by selecting [https://console.aws.amazon.com/sqs/home](https://console.aws.amazon.com/sqs/home).
  id: totrans-123
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，登录到您的 AWS 管理控制台，并使用提供的过滤器选项过滤出 SQS 服务。或者，您也可以通过选择[https://console.aws.amazon.com/sqs/home](https://console.aws.amazon.com/sqs/home)来访问
    SQS 仪表板。
- en: Since this is our first time configuring the SQS queue, select the Get started
    now option to continue.
  id: totrans-124
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 由于这是我们第一次配置 SQS 队列，请选择“立即开始”选项继续。
- en: Here, in the Create New Queue page, start off by providing a suitable name for
    your queue by filling in the Queue Name field.
  id: totrans-125
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在“创建新队列”页面中，首先在队列名称字段中为您的队列提供一个合适的名称。
- en: 'If you are building a FIFO queue, you will need to suffix `.fifo` after your
    queues name, for example: `myQueue.fifo`.'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您正在构建 FIFO 队列，您需要在队列名称后加上 `.fifo` 后缀，例如：`myQueue.fifo`。
- en: With the queue name filled out, the next step is to select the type of queue
    you wish to set up. In this case, let's first start off by selecting the `Standard
    Queue` option.
  id: totrans-127
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 填写完队列名称后，下一步是选择您希望设置的队列类型。在这种情况下，我们首先选择`标准队列`选项。
- en: Next, select the Configure Queue option to go through some of the queue's configuration
    parameters. Alternatively, you can also select the Quick-Create Queue option to
    select all the default parameters for your queue.
  id: totrans-128
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，选择“配置队列”选项，以查看队列的一些配置参数。或者，您也可以选择“快速创建队列”选项，选择队列的所有默认参数。
- en: 'In the Queue Attributes section, feel free to modify the following set of parameters
    for your queue, based on your requirements:'
  id: totrans-129
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在队列属性部分，您可以根据需求自由修改以下一组队列参数：
- en: 'Default Visibility Timeout: Amazon SQS does not automatically delete messages
    from the queue, even if they are processed by the consumers. Hence, it is the
    consumer''s duty to delete the respective message from the queue after it has
    been received and processed.'
  id: totrans-130
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 默认可见性超时：Amazon SQS 不会自动从队列中删除消息，即使这些消息已经被消费者处理。因此，消费者有责任在接收到并处理消息后，将其从队列中删除。
- en: However, due to the distributed nature of SQS, there is no guarantee that other
    consumers may not try to read from a copy of the same message. To prevent such
    scenarios from occurring, SQS sets a small *Visibility Timeout* period on a message
    once it is received by a consumer. This prevents other consumers from reading
    that message until the timeout expires.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，由于 SQS 的分布式特性，不能保证其他消费者不会尝试从同一消息的副本中读取。为了防止这种情况发生，SQS 在消息被消费者接收后，设置了一个短暂的*可见性超时*期。这会防止其他消费者在超时之前读取该消息。
- en: By default, the Visibility Timeout can be set to a minimum of 30 seconds to
    a maximum of 12 hours. If, by chance, the consumer is not able to process the
    message in the allocated timeout window, then the message will be delivered to
    another consumer and the process will continue until the message is not deleted
    from the queue by a consumer.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，可见性超时可以设置为最短 30 秒，最长 12 小时。如果消费者未能在分配的超时窗口内处理该消息，则该消息将被交付给其他消费者，直到消费者从队列中删除该消息为止，过程才会结束。
- en: 'Message Retention Period: The amount of time Amazon SQS retains a message in
    case it is not deleted. The accepted values here are a minimum of 1 minute and
    a maximum of 14 days.'
  id: totrans-133
  prefs:
  - PREF_UL
  - PREF_UL
  type: TYPE_NORMAL
  zh: 消息保留时间：Amazon SQS 保留消息的时间，如果消息没有被删除。这里接受的值最小为 1 分钟，最大为 14 天。
- en: 'Maximum Message Size: The maximum message size in bytes accepted by Amazon
    SQS. The maximum limit is 256 KB.'
  id: totrans-134
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最大消息大小：Amazon SQS 接受的最大消息大小（字节）。最大限制为 256 KB。
- en: 'Delivery Delay: Amazon SQS allows you to temporarily delay the delivery of
    new messages in a queue for a specified amount of seconds. This is achieved by
    placing the new messages in a Delay queue which is completely managed by AWS itself.
    Although it seems similar to the concept of Visibility Timeouts, a delay queue
    hides a message when it is first added to the queue, unlike the latter where the
    message is hidden when it is picked up by a consumer. The accepted values here
    are between 0 seconds and 15 minutes:'
  id: totrans-135
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 传递延迟：Amazon SQS 允许您在队列中暂时延迟新消息的投递，延迟时间为指定的秒数。这是通过将新消息放入由 AWS 完全管理的延迟队列来实现的。尽管这看起来与可见性超时的概念相似，但延迟队列在消息首次添加到队列时会将其隐藏，而后者则是在消息被消费者提取时将其隐藏。此处接受的值为
    0 秒到 15 分钟之间：
- en: '![](img/2d065b21-0899-4674-8f26-45c3deaf9c82.png)'
  id: totrans-136
  prefs: []
  type: TYPE_IMG
  zh: '![](img/2d065b21-0899-4674-8f26-45c3deaf9c82.png)'
- en: 'Receive Message Wait Time: Amazon SQS periodically queries a small subset of
    the servers to determine if any new messages are available for consumption. This
    method is called **short polling** and is generally enabled by default when the
    Receive Message Wait Time is set to `0`. This method, however, results in a lot
    of empty responses as well, as sometimes messages just may not be present in the
    queue for consumption. In that case, SQS also provides a concept of **long polling**, whereby
    Amazon SQS waits until a message is available in the queue before sending a response.
    This drastically reduces the number of empty responses and is helpful in reducing
    the overall running costs of your system. To enable long polling, simply change
    the value of Receive Message Wait Time to a value between 0 and 20 seconds.'
  id: totrans-137
  prefs:
  - PREF_UL
  - PREF_UL
  type: TYPE_NORMAL
  zh: 接收消息等待时间：Amazon SQS 定期查询少量服务器，以确定是否有新消息可供消费。此方法称为**短轮询**，并且通常在接收消息等待时间设置为 `0`
    时默认启用。然而，这种方法会导致大量空响应，因为有时队列中可能没有可供消费的消息。在这种情况下，SQS 还提供了**长轮询**的概念，即 Amazon SQS
    等待直到队列中有消息可用时才发送响应。这大大减少了空响应的数量，并有助于降低系统的整体运行成本。要启用长轮询，只需将接收消息等待时间的值更改为 0 到 20
    秒之间的值。
- en: With these basic settings configured, you can now go ahead and create your very
    own queue. Note, however, that there are a few additional settings that you can
    configure, such as a **dead letter queue** and a **server-side encryption**. However,
    we will park these out for the time being. Select Create Queue once done.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 配置了这些基本设置后，您现在可以继续创建自己的队列。不过需要注意的是，您还可以配置一些额外的设置，比如**死信队列**和**服务器端加密**。但我们暂时先不讨论这些内容。完成后请选择“创建队列”。
- en: 'With the new queue created, you can now start using it by simply copying the
    queue''s URL (`https://sqs.us-east-1.amazonaws.com/<ACCOUNT_ID>/<QUEUE_NAME>`)
    and providing the same to your applications or consumers to consume from:'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 在创建新队列后，您现在可以通过简单地复制队列的 URL（`https://sqs.us-east-1.amazonaws.com/<ACCOUNT_ID>/<QUEUE_NAME>`）并将其提供给您的应用程序或消费者来开始使用它：
- en: '![](img/199544a4-05a7-4e81-a907-c7513676c523.png)'
  id: totrans-140
  prefs: []
  type: TYPE_IMG
  zh: '![](img/199544a4-05a7-4e81-a907-c7513676c523.png)'
- en: You can also test the functionality of your queue by sending a test message
    to it using the SQS dashboard itself. Select the newly-created queue from the
    SQS dashboard, and from the Queue Actions drop-down menu select the Send a Message option.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以通过使用 SQS 仪表板向队列发送测试消息来测试队列的功能。从 SQS 仪表板中选择新创建的队列，然后在“队列操作”下拉菜单中选择“发送消息”选项。
- en: 'This will bring up the Send a Message dialog box, as shown in the following
    screenshot. Next, type in a test message in the Message Body section and click
    on Send Message to complete the process:'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 这将打开“发送消息”对话框，如下图所示。接下来，在“消息正文”部分输入测试消息，然后点击“发送消息”以完成该过程：
- en: '![](img/68d86778-b486-446b-b12c-50068c08d23c.png)'
  id: totrans-143
  prefs: []
  type: TYPE_IMG
  zh: '![](img/68d86778-b486-446b-b12c-50068c08d23c.png)'
- en: You can optionally also change the delivery delay of this individual message
    by enabling the Delay delivery of this message by option and providing a value
    between 0 and 15 minutes.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以选择通过启用“延迟发送此消息”选项并提供 0 到 15 分钟之间的值，来更改此单个消息的传递延迟。
- en: With the message sent, you will be notified of the message's *identifier* along
    with an *MD5 checksum* of the body. Click on Close to close the Send a Message dialog
    box. With this, the status of the Messages Available column should change to 1
    as the new message is now waiting to be read or consumed. To read the message
    from the SQS dashboard, once again select the Queue Actions drop-down menu and
    select the View/Delete Messages option.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 发送消息后，你将收到消息的 *标识符* 和消息体的 *MD5 校验和*。点击“关闭”以关闭“发送消息”对话框。此时，“可用消息”列的状态应该变为 1，因为新消息现在正在等待被读取或消费。要从
    SQS 控制台读取消息，再次选择队列操作下拉菜单，并选择“查看/删除消息”选项。
- en: 'This brings up the View/Delete Messages dialog box, as shown in the following
    screenshot. Here, the dialog will poll the queue once every 2 seconds until you
    have specified the polling to run using the Poll queue for option. You can also
    change the maximum number of messages viewed by modifying the View up to field.
    Once done, select the Start Polling for Messages option to get things underway:'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 这将弹出“查看/删除消息”对话框，如下图所示。在这里，系统会每隔 2 秒轮询一次队列，直到你使用“轮询队列”选项指定轮询。你还可以通过修改“最多查看”字段来更改查看的最大消息数。完成后，选择“开始轮询消息”选项以启动操作：
- en: '![](img/3eda1805-0997-4578-81c5-2e7b4f9b915c.png)'
  id: totrans-147
  prefs: []
  type: TYPE_IMG
  zh: '![](img/3eda1805-0997-4578-81c5-2e7b4f9b915c.png)'
- en: With the polling started, you should see your test message in the display area,
    shortly. You can also verify the validity of the message by selecting the More
    Details option adjoining the message and verifying the MD5 checksum from the earlier
    recorded one.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 启动轮询后，你应该很快在显示区域看到你的测试消息。你还可以通过选择与消息相邻的“更多详情”选项，并验证之前记录的 MD5 校验和，来验证消息的有效性。
- en: Once completed, select the message and click on the Delete Messages option to
    remove the message from the queue. Remember, this is a permanent action and it
    cannot be undone. With the message deleted, your queue should once again show
    zero messages in flight or available.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 完成后，选择消息并点击“删除消息”选项，将消息从队列中移除。记住，这是一个永久性操作，无法撤销。删除消息后，队列应该会再次显示零个正在传输或可用的消息。
- en: Creating a FIFO queue using the AWS CLI
  id: totrans-150
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 AWS CLI 创建 FIFO 队列
- en: 'Working with the AWS Management Console is easy enough, but the AWS CLI makes
    things even simpler! In this section, we will look at a few simple AWS CLI commands
    that you can use to create and work on your first FIFO queue:'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 AWS 管理控制台足够简单，但 AWS CLI 使事情变得更简单！在本节中，我们将介绍一些简单的 AWS CLI 命令，你可以使用它们来创建并操作你的第一个
    FIFO 队列：
- en: To get started, we require a server or instance with the latest version of the
    AWS CLI installed and configured. If you don't already have this working, you
    might want to have a quick look at the detailed steps provided at [https://docs.aws.amazon.com/cli/latest/userguide/installing.html](https://docs.aws.amazon.com/cli/latest/userguide/installing.html).
  id: totrans-152
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要开始操作，我们需要一台已经安装并配置了最新版本 AWS CLI 的服务器或实例。如果你还没有配置好，可以快速查看[https://docs.aws.amazon.com/cli/latest/userguide/installing.html](https://docs.aws.amazon.com/cli/latest/userguide/installing.html)提供的详细步骤。
- en: 'With the AWS CLI installed and prepped, you can now use the following command
    to create your first FIFO queue. First, create a simple JSON file that will store
    the necessary list of attributes that we wish to pass to our new FIFO queue:'
  id: totrans-153
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装并配置好 AWS CLI 后，你可以使用以下命令来创建你的第一个 FIFO 队列。首先，创建一个简单的 JSON 文件，用于存储我们希望传递给新 FIFO
    队列的必要属性列表：
- en: '[PRE1]'
  id: totrans-154
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Here, most of the values are probably known to you already, such as the `VisibilityTimeout`,
    the `MaximumMessageSize`, `DelaySeconds`, and so on. The two new attributes listed
    here specifically for the FIFO queue are:'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，大多数值你可能已经熟悉了，比如 `VisibilityTimeout`、`MaximumMessageSize`、`DelaySeconds`
    等等。这里列出的两个专门为 FIFO 队列设计的新属性是：
- en: '`FifoQueue`: Used to designate a queue as a FIFO queue. Note that you cannot
    change an existing standard queue to a FIFO queue. You will have to create a new
    FIFO queue altogether. Additionally, when you set this attribute for your queue,
    you must also provide the `MessageGroupId` for your messages explicitly.'
  id: totrans-156
  prefs:
  - PREF_UL
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`FifoQueue`：用于将队列指定为 FIFO 队列。请注意，无法将现有的标准队列更改为 FIFO 队列。你必须完全重新创建一个 FIFO 队列。此外，当你为队列设置此属性时，必须显式提供消息的
    `MessageGroupId`。'
- en: '`ContentBasedDeduplication`: It enables each message to be processed exactly
    one time from the queue. Once `ContentBasedDeduplication` is enabled, messages
    with identical content sent within the deduplication interval are treated as duplicates
    and only one copy of the message is actually delivered.'
  id: totrans-157
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ContentBasedDeduplication`：它确保每条消息只会被处理一次。当启用`ContentBasedDeduplication`后，在去重时间窗口内，具有相同内容的消息会被视为重复消息，且只会传递一份消息。'
- en: 'Once the JSON file is created, run the following command to create your FIFO
    queue:'
  id: totrans-158
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建 JSON 文件后，运行以下命令以创建你的 FIFO 队列：
- en: '[PRE2]'
  id: totrans-159
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'You should receive the new FIFO queues endpoint URL in the output, as shown
    in the following screenshot:'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 你应该在输出中收到新的 FIFO 队列终端节点 URL，如下图所示：
- en: '![](img/4c6a8f93-0439-4e1f-86af-cf23ca7a77d4.png)'
  id: totrans-161
  prefs: []
  type: TYPE_IMG
  zh: '![](img/4c6a8f93-0439-4e1f-86af-cf23ca7a77d4.png)'
- en: 'With the queue created, you can additionally use the CLI to pass messages to
    the queue as well. This is also accomplished by using the following command:'
  id: totrans-162
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建队列后，你还可以使用 CLI 将消息传递到队列中。这也可以通过以下命令来实现：
- en: '[PRE3]'
  id: totrans-163
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'The `send-message` command accepts the queue URL as one of the input parameters,
    along with the actual message that has to be sent. The message can be raw, JSON,
    or XML formatted. In addition to this, the `send-message` command also uses the
    `--message-group-id` parameter that essentially tags the message to belong to
    a specific message group. Messages that belong to the same message group are processed
    in a FIFO manner:'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: '`send-message`命令将队列 URL 作为输入参数之一，另外还需要提供要发送的实际消息。消息可以是原始的、JSON 格式或 XML 格式。除此之外，`send-message`命令还使用`--message-group-id`参数，它基本上将消息标记为属于特定的消息组。属于同一消息组的消息会按
    FIFO 顺序处理：'
- en: '![](img/7722207c-e8b1-4a19-9a26-b46e9b381cd7.png)'
  id: totrans-165
  prefs: []
  type: TYPE_IMG
  zh: '![](img/7722207c-e8b1-4a19-9a26-b46e9b381cd7.png)'
- en: The `--message-id-group` parameter is mandatory when working with FIFO queues.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 在使用 FIFO 队列时，`--message-id-group`参数是必需的。
- en: 'With the message now sent to the queue, you can use the AWS CLI to receive
    the message as well. Use the following command to fetch the messages from your
    FIFO queue:'
  id: totrans-167
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在消息已被发送到队列，你也可以使用 AWS CLI 来接收消息。使用以下命令从你的 FIFO 队列中获取消息：
- en: '[PRE4]'
  id: totrans-168
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'You can also additionally use the `--max-number-of-messages` attribute to list
    up to 10 messages that are currently available in the queue. Here is a snippet
    of the output that you may get with the previous command:'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 你还可以额外使用`--max-number-of-messages`属性列出当前队列中最多 10 条可用消息。以下是你可能通过前述命令获得的输出片段：
- en: '[PRE5]'
  id: totrans-170
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: You can similarly use the AWS CLI to list the available queues in your environment,
    modify their parameters, push and poll for new messages, delete messages, and
    much more! Remember, the messages will persist in the queue unless you manually
    delete them or the validity of the queue's `MessageRetentionPeriod` has expired.
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 你也可以使用 AWS CLI 列出环境中可用的队列，修改其参数，推送和轮询新消息，删除消息，等等！记住，消息会在队列中持续存在，直到你手动删除它们或队列的`MessageRetentionPeriod`有效期过期。
- en: Integrating Amazon SNS and Amazon SQS
  id: totrans-172
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 集成亚马逊 SNS 和亚马逊 SQS
- en: 'One of the key features of Amazon SQS is that it can easily be integrated with
    other AWS services, such as Amazon SNS. Why would I need something like that?
    To begin with, let us quickly recap the things we have learned so far about both
    SNS and SQS:'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 亚马逊 SQS 的一个关键特点是它可以轻松与其他 AWS 服务集成，例如亚马逊 SNS。为什么我需要这样的功能？首先，让我们快速回顾一下我们目前所了解的
    SNS 和 SQS：
- en: '| **Amazon SNS** | **Amazon SQS** |'
  id: totrans-174
  prefs: []
  type: TYPE_TB
  zh: '| **亚马逊 SNS** | **亚马逊 SQS** |'
- en: '| Leverages the push mechanism | Leverages the polling mechanism |'
  id: totrans-175
  prefs: []
  type: TYPE_TB
  zh: '| 利用推送机制 | 利用轮询机制 |'
- en: '| Amazon SNS messages can push messages to mobile devices or other subscribers
    directly | Amazon SQS needs a worker to poll the messages |'
  id: totrans-176
  prefs: []
  type: TYPE_TB
  zh: '| 亚马逊 SNS 消息可以直接推送到移动设备或其他订阅者 | 亚马逊 SQS 需要一个工作者来轮询消息 |'
- en: '| Persistence of messages is not supported | Amazon SQS supports message persistence
    which can come in really handy if you can''t reach your consumers due to a network
    failure |'
  id: totrans-177
  prefs: []
  type: TYPE_TB
  zh: '| 不支持消息持久化 | 亚马逊 SQS 支持消息持久化，如果由于网络故障无法接触到消费者，这非常有用 |'
- en: From the table, it is easy to see that both the services offer their own pros
    and cons when it comes to working with them. However, when we join the two services,
    you can actually leverage them to design and build massively scalable yet decoupled
    applications. One common architectural pattern that you can leverage by combining
    both SNS and SQS is called the **fan out pattern**.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 从表格中可以很容易地看到，这两项服务在使用时各有优缺点。然而，当我们将这两项服务结合使用时，实际上可以利用它们来设计和构建大规模可扩展且解耦的应用程序。结合
    SNS 和 SQS 使用的一个常见架构模式被称为 **扇出模式**。
- en: 'In this pattern, a single message published to a particular SNS topic can be
    distributed to a number of SQS queues in parallel. Thus, you can build highly-decoupled
    applications that take advantage of parallel and asynchronous processing. Consider
    a simple example to demonstrate this pattern. A user uploads an image to his S3
    bucket, which triggers an SNS notification to be sent to a particular SNS topic.
    This topic can be subscribed by a number of SQS queues, each running a completely
    independent process from the other. For example, one queue can be used to process
    the image''s metadata while the other can be used to resize the image to a thumbnail,
    and so on. In this pattern, the queues can work independently of each other without
    even having to worry about whether or not the other completed its processing or
    not. Here is a representational figure of this pattern:'
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种模式下，发布到特定 SNS 主题的单条消息可以并行分发到多个 SQS 队列。因此，您可以构建高度解耦的应用程序，利用并行和异步处理的优势。考虑一个简单的示例来演示这种模式。用户将一张图片上传到其
    S3 存储桶，这会触发 SNS 通知并发送到特定的 SNS 主题。该主题可以被多个 SQS 队列订阅，每个队列都运行与其他队列完全独立的进程。例如，一个队列可以用于处理图片的元数据，而另一个队列可以用于将图片调整为缩略图，依此类推。在这种模式中，队列可以独立工作，而无需担心其他队列是否完成了处理。以下是该模式的示意图：
- en: '![](img/1dd28266-9131-4304-ab7e-7df08ab1fc94.png)'
  id: totrans-180
  prefs: []
  type: TYPE_IMG
  zh: '![](img/1dd28266-9131-4304-ab7e-7df08ab1fc94.png)'
- en: To integrate both the SNS and SQS services, you will first be required to create
    a simple SNS topic of your own. Go ahead and create a new SNS topic using the
    AWS Management Console, as performed earlier in this chapter.
  id: totrans-181
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要集成 SNS 和 SQS 服务，您首先需要创建您自己的简单 SNS 主题。请按照本章前面所示，使用 AWS 管理控制台创建一个新的 SNS 主题。
- en: Once the topic is ready, the next step involves the creation of an associated
    subscription. To do so, from the SNS dashboard, select the Subscriptions option
    from the navigation pane and click on Create subscription to get started.
  id: totrans-182
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 主题准备好后，下一步是创建关联的订阅。为此，在 SNS 控制台中，从导航面板中选择“订阅”选项，点击“创建订阅”以开始操作。
- en: 'In the Create subscription dialog box, copy and paste the newly created topic''s
    ARN in the Topic ARN field, as shown in the following screenshot:'
  id: totrans-183
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在“创建订阅”对话框中，将新创建的主题的 ARN 复制并粘贴到 Topic ARN 字段，如下图所示：
- en: '![](img/668d026c-465c-40a1-a6cf-9897b35a6038.png)'
  id: totrans-184
  prefs: []
  type: TYPE_IMG
  zh: '![](img/668d026c-465c-40a1-a6cf-9897b35a6038.png)'
- en: Once the Topic ARN is pasted, select the Amazon SQS option from the Protocol drop-down
    list, followed by pasting a queue's ARN in the Endpoint field. In this case, I'm
    using the standard queue's endpoint that we created a while back in this chapter.
  id: totrans-185
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦粘贴了 Topic ARN，选择协议下拉列表中的 Amazon SQS 选项，然后将队列的 ARN 粘贴到 Endpoint 字段中。在这种情况下，我使用的是我们在本章前面创建的标准队列的端点。
- en: With the required fields filled out, select Create subscription to complete
    the process.
  id: totrans-186
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 填写必填字段后，选择“创建订阅”以完成过程。
- en: 'Next, from the SQS dashboard, select the queue that you have identified for
    this integration and, from the Permissions tab, select Add a Permission to allow
    the SNS service to send messages to the queue. To do so, provide the following
    set of permissions:'
  id: totrans-187
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，在 SQS 控制台中，选择您为此集成所确定的队列，并在“权限”选项卡中选择“添加权限”，以允许 SNS 服务向该队列发送消息。为此，请提供以下权限集：
- en: 'Effect: Allow'
  id: totrans-188
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 效果：允许
- en: 'Principal: Everybody'
  id: totrans-189
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 角色：Everybody
- en: 'Actions: SendMessage'
  id: totrans-190
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 操作：SendMessage
- en: Once done, click on Add Permission to grant the SNS service the required set
    of permissions.
  id: totrans-191
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 完成后，点击“添加权限”以授予 SNS 服务所需的权限集。
- en: We are now ready to test the integration! To do so, simply fire a sample message
    using the Publish to Topic option from the SNS dashboard. Once the message is
    successfully sent, cross over to the SQS dashboard and poll the queue using the
    View/Delete Messages option from under the Queue Actions drop-down list.
  id: totrans-192
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在我们准备测试集成！要做到这一点，只需从SNS仪表板的“发布到主题”选项中发送一个示例消息。一旦消息成功发送，请切换到SQS仪表板，并使用“查看/删除消息”选项从“队列操作”下拉列表中轮询队列。
- en: 'Here is a snippet of the Message Body obtained after long polling the queue:'
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 这是在长轮询队列后获取的消息正文片段：
- en: '![](img/520433e2-0bb8-4b01-a086-64f1b96777df.png)'
  id: totrans-194
  prefs: []
  type: TYPE_IMG
  zh: '![](img/520433e2-0bb8-4b01-a086-64f1b96777df.png)'
- en: Similarly, you can use such a fan out pattern to design and build your very
    own highly scalable and decoupled cloud-ready applications.
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 同样，您可以使用这样的扇出模式来设计和构建自己的高度可扩展和解耦的云应用程序。
- en: Planning your next steps
  id: totrans-196
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 计划您的下一步
- en: Well, that was really quite a lot to learn and try out, but we are not done
    yet! There are still a few things that you ought to try on your own with SNS,
    as well as with SQS. First up, Amazon SNS mobile push notifications.
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 嗯，这确实是很多需要学习和尝试的内容，但我们还没有完成！您还应该自己尝试一些关于SNS和SQS的内容。首先是Amazon SNS移动推送通知。
- en: 'We have already touched upon the fact that Amazon SNS can be used to send notifications
    to a variety of subscribers, including HTTP, HTTPS endpoints, Amazon SQS, and
    AWS Lambda, but one other key feature recently added is SNS'' ability to push
    notifications directly to your applications on mobile devices. This is called
    **SNS mobile push notifications** and, as of now, SNS supports the following push
    notification services:'
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经提到了 Amazon SNS 可以用来向各种订阅者发送通知，包括 HTTP、HTTPS 端点、Amazon SQS 和 AWS Lambda，但最近增加的另一个关键功能是
    SNS 直接推送通知到您的移动设备应用程序上。这就是所谓的**SNS移动推送通知**，目前，SNS支持以下推送通知服务：
- en: '**Amazon Device Messaging** (**ADM**)'
  id: totrans-199
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Amazon设备消息** (**ADM**)'
- en: '**Apple Push Notification Service** (**APNS**) for both iOS and macOS'
  id: totrans-200
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Apple推送通知服务** (**APNS**) 用于iOS和macOS'
- en: '**Baidu Cloud Push** (**Baidu**)'
  id: totrans-201
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**百度云推送** (**Baidu**)'
- en: '**Google Cloud Messaging** (**GCM**) for Android'
  id: totrans-202
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Google云消息传递** (**GCM**) 用于Android'
- en: '**Microsoft Push Notification Service** (**MPNS**) for Windows Phone'
  id: totrans-203
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Microsoft推送通知服务** (**MPNS**) 用于Windows Phone'
- en: '**Windows Push Notification Services** or **Windows Notification Service**
    (**WNS**)'
  id: totrans-204
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Windows推送通知服务** 或 **Windows通知服务** (**WNS**)'
- en: It's pretty easy and straightforward to get started with mobile push notifications.
    All you need is a set of credentials for connecting to one of the supported push
    notification services, a device token or registration ID for the mobile application
    and device itself, and an Amazon SNS configured to send push notification messages
    to the mobile endpoints.
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 要开始使用移动推送通知非常简单明了。您只需要一组用于连接支持的推送通知服务的凭据，用于移动应用程序和设备本身的设备令牌或注册ID，以及配置为向移动端点发送推送通知消息的Amazon
    SNS。
- en: You can read more about SNS mobile push notification services at [https://docs.aws.amazon.com/sns/latest/dg/SNSMobilePush.html](https://docs.aws.amazon.com/sns/latest/dg/SNSMobilePush.html).
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在[https://docs.aws.amazon.com/sns/latest/dg/SNSMobilePush.html](https://docs.aws.amazon.com/sns/latest/dg/SNSMobilePush.html)了解更多关于SNS移动推送通知服务的信息。
- en: The other important feature worth trying out is the configuration of server-side
    encryption for your Amazon SQS queue. You can leverage SSE to encrypt and protect
    data stored in your queue, however, this feature is only available in the US East
    (N. Virginia), US East (Ohio), and US West (Oregon) regions at present.
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个值得尝试的重要功能是为您的Amazon SQS队列配置服务器端加密。您可以利用SSE对存储在队列中的数据进行加密和保护，但是目前此功能仅在美国东部（弗吉尼亚北部）、美国东部（俄亥俄州）和美国西部（俄勒冈州）地区可用。
- en: Encrypting the queue can be done at the time of the queue's creation, as well
    as after the queue has been created. Old messages present in the queue, however,
    are not encrypted if the SSE is switched on in an existing queue.
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 在队列创建时以及队列创建后都可以对队列进行加密。但是，如果现有队列已经开启了SSE，则队列中存在的旧消息不会被加密。
- en: You can configure SSE for an existing queue simply by selecting it from the
    SQS dashboard and selecting the Configure Queue option present in the Queue Actions drop-down
    menu. Here, check the Use SSE checkbox to enable the server-side encryption on
    your queue. At this time, you will be prompted to select a **customer master key**
    (**CMK**) ID which you can leave to the default value if you do not have an CMK
    of your own. Once done, set a duration for the Data key reuse period of between
    1 minute and 24 hours. Click on Save changes to apply the recent modifications
    to the queue.
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过在 SQS 仪表板上选择现有队列，并在队列操作下拉菜单中选择“配置队列”选项，来配置现有队列的 SSE。然后，选中“使用 SSE”复选框以启用队列的服务器端加密。此时，你将被提示选择一个**客户主密钥**（**CMK**）ID，如果你没有自己的
    CMK，可以保留默认值。完成后，设置数据密钥重用周期的持续时间，范围为 1 分钟到 24 小时。点击“保存更改”以应用最近对队列的修改。
- en: You can read more about SSE and how to enable it on a new queue, at [https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-create-queue-sse.html](https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-create-queue-sse.html).
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以阅读更多关于 SSE 以及如何在新队列上启用它的内容，访问[https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-create-queue-sse.html](https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-create-queue-sse.html)。
- en: Last, but not the least, I also recommend that you try out the *dead letter
    queue* feature provided by Amazon SQS. Dead letter queues are nothing more than
    queues that you create for storing messages that could not be processed by your
    application's main processing queue. This comes in really handy when you need
    to debug issues in your application or the messaging system. However, it is very
    important to note that the dead letter queue of a standard queue is always a standard
    queue, and the same applies for a FIFO-based queue as well.
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 最后但同样重要的是，我还建议你尝试一下 Amazon SQS 提供的*死信队列*功能。死信队列其实就是你为存储无法被应用程序主处理队列处理的消息而创建的队列。当你需要调试应用程序或消息系统中的问题时，这非常有用。然而，非常重要的一点是，标准队列的死信队列始终是标准队列，同样，基于
    FIFO 的队列也是如此。
- en: You can configure any queue within your account to be a dead letter queue for
    another queue by simply configuring the Redrive Policy of your application's main
    queue. To know more about dead letter queues and how they work, check out [https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-dead-letter-queues.html](https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-dead-letter-queues.html).
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过简单地配置应用程序主队列的 Redrive 策略，将账户中的任何队列配置为另一个队列的死信队列。想要了解更多关于死信队列及其工作原理的信息，请查看[https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-dead-letter-queues.html](https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-dead-letter-queues.html)。
- en: Summary
  id: totrans-213
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: Well, this has been a really insightful chapter indeed. Before we move on to
    the next chapter, here's a quick look at the things we have learned so far!
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 哇，这一章确实很有洞察力。在我们进入下一章之前，快速回顾一下我们迄今为止学到的内容！
- en: First up, we started with a quick look at the various messaging services that
    are provided by AWS. Next, we deep dived into the amazing world of Amazon SNS,
    created our very first topic, and subscribed to both email and phone subscriptions.
    We also looked at how to configure and leverage SNS' text messaging service.
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们快速了解了 AWS 提供的各种消息服务。接下来，我们深入探索了神奇的 Amazon SNS 世界，创建了我们的第一个主题，并订阅了电子邮件和手机订阅。我们还了解了如何配置和利用
    SNS 的短信服务。
- en: Once we had the basics of SNS covered, we moved on to the next messaging service,
    SQS, and learned a bit about its concepts and terminologies as well. We created
    our first queues using both the AWS Management Console and the AWS CLI, and finally
    we looked at a really useful integration of the two services that you can use
    to design and build scalable and decoupled cloud applications. We finally topped
    it all off with a handy next steps guide that you ought to try out in your free
    time!
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦我们掌握了 SNS 的基础知识，我们就进入了下一个消息服务 SQS，了解了它的一些概念和术语。我们使用 AWS 管理控制台和 AWS CLI 创建了我们的第一个队列，最后我们还了解了这两个服务的一个非常有用的集成，您可以利用它来设计和构建可扩展的、解耦的云应用程序。最后，我们为你提供了一个实用的后续步骤指南，供你在空闲时间尝试！
- en: In the next chapter, we will be learning and exploring two really awesome analytics
    services, in the form of Amazon Elastic MapReduce and Amazon Redshift, so stay
    tuned!
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将学习并探索两个非常棒的分析服务，分别是 Amazon Elastic MapReduce 和 Amazon Redshift，敬请期待！
