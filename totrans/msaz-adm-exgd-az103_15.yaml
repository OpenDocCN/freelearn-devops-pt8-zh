- en: Monitoring and Troubleshooting Virtual Networking
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In the previous chapter, we covered the second part of the *Deploying and Managing
    Virtual Networks* objective. We've covered how to integrate your on-premises network
    with an Azure virtual network.
  prefs: []
  type: TYPE_NORMAL
- en: This chapter covers the third part of the *Deploying and Managing Virtual Networks*
    objective by covering how to monitor and troubleshoot virtual networking. In this
    chapter, we are going to focus on how you can monitor your virtual networks using
    **Network Watcher**. You will learn how to manage your virtual network connectivity
    and how you can monitor and troubleshoot on-premises connectivity as well use
    Network Watcher. We will end this chapter by covering how to manage external networking.
  prefs: []
  type: TYPE_NORMAL
- en: 'We will look at the following topics in this chapter:'
  prefs: []
  type: TYPE_NORMAL
- en: Network Watcher
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Network resource monitoring
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Managing virtual network connectivity
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Monitoring and troubleshooting on-premises connectivity
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Managing external networking
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Network Watcher
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Azure Network Watcher is a network monitoring solution that provides tools to
    diagnose, monitor, and view metrics and logging for resources in an Azure Virtual
    Network. This includes application gateway traffic, Load Balancers, ExpressRoute circuits,
    and more.
  prefs: []
  type: TYPE_NORMAL
- en: 'Azure Network Watcher offers the following capabilities:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Monitoring**: Connection monitor is a cloud-based hybrid network monitoring solution
    that can monitor the communication between virtual machines and endpoints. An
    endpoint can be another **Virtual Machine** (**VM**), a URL, an IPv4 address,
    or a **Fully Qualified Domain Name** (**FQDN**). The network communication is
    monitored at regular intervals and information about latency, network topology
    changes, and the reachability between a VM and the endpoint is collected. If an
    endpoint becomes unreachable, Network Watcher will inform the user about the error.
    The reason for this can be a problem with the memory or CPU of a VM, a security
    rule for the VM, or the hop type of a custom route. Latency problems are also
    monitored. The connection monitor will provide the average, minimum, and maximum
    latency observed over time. The monitoring solution is capable of monitoring network
    performance between various points in the network infrastructure and it can generate
    alerts and notifications.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Diagnostics**: You can diagnose network traffic filtering for VMs. The VM
    can, for instance, become unable to communicate with other resources because of
    a security rule.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: An IP flow can verify and test the communication and informs you as to whether
    the connection has succeeded or failed. An IP flow can tell you which security
    rule allowed or denied the connection and communication. Network Watcher can also
    diagnose network routing problems from a VM. When a virtual network is created,
    there are several default outbound routes created for that VNet as well. Outbound
    traffic from all resources that are deployed in a virtual network are routed based
    on Azure's default routes.
  prefs: []
  type: TYPE_NORMAL
- en: In cases where you want to override the default routing rules, or create additional
    rules, **next hop** can be used to test the communication between the different
    routes. When the communication fails, you can then change, add, or remove a route
    to resolve the problem.
  prefs: []
  type: TYPE_NORMAL
- en: 'Using Azure Network Watcher, you can diagnose outbound connection from a VM.
    You can also diagnose problems with an Azure Virtual Network gateway and connections, capture
    packets to and from a VM, view security rules for a network interface, and determine
    relative latencies between Azure regions and internet service providers:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Metrics**:The network subscription limit feature can provide a summary of
    how many network resources there are deployed in a subscription or region. If
    the limitations of the maximum amount of network resources are met, a summary
    is provided.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Logs**: **N****etwork Security Groups** (**NSGs**) are responsible for allowing
    or denying the inbound and outbound traffic to a network interface in the virtual
    machine. The NSG flow log feature can log the port, protocol, whether traffic
    is allowed or denied, and can log the source and IP address. These logs can be
    analyzed using several tools, such as the traffic analytics feature and Power
    BI. Traffic analytics can provide rich visualization of the data that is written
    to the NSG flow logs.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Automatic enablement**: Network Watcher will be automatically enabled when
    a new virtual network is created or updated. There is no extra charge for enabling
    Network Watcher inside a subscription.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In the following sections, we are going to see Network Watcher in action.
  prefs: []
  type: TYPE_NORMAL
- en: Network resource monitoring
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this demonstration, we are going to monitor the network on VMs. For this
    demonstration, create three Windows Server 2016 datacenter VMs inside one virtual
    network. We can use these VMs for monitoring.
  prefs: []
  type: TYPE_NORMAL
- en: Before we are able to monitor the network using network resource monitoring,
    we need to install the Network Watcher agent on the three VMs. After that, we
    are going to inspect the network traffic.
  prefs: []
  type: TYPE_NORMAL
- en: Installing the Network Watcher agent
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'To install the Network Watcher agent on a VM in Azure, take the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Navigate to the Azure portal by opening [https://portal.azure.com/](https://portal.azure.com/).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Open the VM settings, and under **Settings**, select **Extensions**, and then click
    the **Add **button:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/58cea88a-047f-4a8f-9a63-84e2ee099e7d.png)'
  prefs: []
  type: TYPE_IMG
- en: Adding a VM extension
  prefs: []
  type: TYPE_NORMAL
- en: 'Add the **Network Watcher Agent for Windows **extension to the VM (extensions
    can be installed on the VM during creation as well), and click **Create**:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/a6e6c7fd-705c-4457-bcd9-6c473275ccd9.png)'
  prefs: []
  type: TYPE_IMG
- en: Adding the Network Watcher Agent for Windows extension
  prefs: []
  type: TYPE_NORMAL
- en: Repeat these steps for the other two VMs as well, and install the agent on it.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Now that the **Network Watcher Agent for** **Windows** is installed on all the
    VMs, we can enable it for a specific region.
  prefs: []
  type: TYPE_NORMAL
- en: Enabling Network Watcher
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'To enable Network Watcher in a specific region, take the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Navigate to the Azure portal by opening [https://portal.azure.com/](https://portal.azure.com/).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Select **All services**, and in the top menu, type `network watcher`:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/22b497c0-2d94-4133-ad8c-c14a0409d56b.png)'
  prefs: []
  type: TYPE_IMG
- en: Opening Network Watcher
  prefs: []
  type: TYPE_NORMAL
- en: 'In the **Network Watcher** overview page, select the subscription and the region
    where the VMs are created. In my case, this is **East US**. Then click the three
    dots and enable Network Watcher for that region, as follows:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/69133476-2cbc-46c7-bba3-0bed6c717e52.png)'
  prefs: []
  type: TYPE_IMG
- en: Enabling Network Watcher
  prefs: []
  type: TYPE_NORMAL
- en: Now that Network Watcher is enabled, we can actually start monitoring the network
    resources.
  prefs: []
  type: TYPE_NORMAL
- en: Monitoring the network connectivity
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Network monitoring can be used for monitoring connection reachability, latency,
    and network topology changes. To do this you need to set up a connection monitor
    instance. Take the following steps to set this up:'
  prefs: []
  type: TYPE_NORMAL
- en: 'With the Network Watcher resource still open, under **Monitoring**, select **Connection
    monitor**:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/f0a9c865-e6c0-4dc4-a754-9d56f194ed21.png)'
  prefs: []
  type: TYPE_IMG
- en: Connection monitor
  prefs: []
  type: TYPE_NORMAL
- en: 'We are going to use the monitor resource for testing the connectivity between
    `VM1` and `VM2`. Therefore, add the following values:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Name**: `VM1-VM2-Test`.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Subscription**: Select the subscription where the VMs are deployed.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Source virtual machine**: `VM1`.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Destination ****virtual machine**: `VM2`.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Port:** `22`:'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](img/7f93bb5d-cdf8-43a5-9514-0c0f0f9d5e70.png)'
  prefs: []
  type: TYPE_IMG
- en: Connection monitor settings
  prefs: []
  type: TYPE_NORMAL
- en: Click **Add**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: We are now able to monitor the network connectivity. In the next section, we
    are going to look at how to manage the connectivity.
  prefs: []
  type: TYPE_NORMAL
- en: Managing virtual network connectivity
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: You can manage your virtual network connectivity from the Azure portal. In the
    upcoming section, we are going to look at the possibilities that the Azure portal
    has to offer to manage the virtual network connectivity.
  prefs: []
  type: TYPE_NORMAL
- en: Network topology
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The network topology section in the Azure portal displays an overview of the
    virtual networks inside an Azure subscription and a resource group. To go to the
    network topology section, you have to take the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Navigate to the Azure portal by opening [https://portal.azure.com/](https://portal.azure.com/).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select **All** **services**, and, in the top menu, type `network watcher` again.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Under **Monitoring**, select **Topology**. In there, you need to select the
    subscription, resource group, and, if relevant, the virtual network, as shown
    in the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/42812342-75cb-492c-8291-4fc36cae5afb.png)'
  prefs: []
  type: TYPE_IMG
- en: Network topology
  prefs: []
  type: TYPE_NORMAL
- en: You can now drill down into all the components of the network, such as the VNet,
    NIC, VMs, IP address, and more, by clicking on the items in the topology. This
    will take you to the settings of the different resources.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'You can download the topology as well, by clicking the **Download topology **button
    in the top menu, as follows:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/ab8ac0ee-9308-4af0-9b3c-f879bffabea8.png)'
  prefs: []
  type: TYPE_IMG
- en: Downloading the network topology
  prefs: []
  type: TYPE_NORMAL
- en: Besides monitoring the networks in Azure, you can also monitor the on-premises
    connectivity. We are going to look at this in the next section.
  prefs: []
  type: TYPE_NORMAL
- en: Monitoring and troubleshooting on-premises connectivity
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: You can monitor your on-premises connectivity using Network Watcher as well.
    It offers two different features for this, **Network Performance Monitor** and
    **VPN Troubleshoot**, which, just like the other features, are accessible from
    the Azure portal.
  prefs: []
  type: TYPE_NORMAL
- en: Network Performance Monitor
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '**Network Performance Monitor** is a hybrid network monitoring solution. It
    can monitor network connectivity for on-premises and cloud networks, and between
    various points in your network infrastructure. It can detect issues such as routing
    errors and **blackholing**. The monitoring solution is stored inside Azure Log
    Analytics.'
  prefs: []
  type: TYPE_NORMAL
- en: Network Performance Monitor can create alerts and notifications when network
    performance errors appear and it can localize the source of the problem to a specific
    network device or segment.
  prefs: []
  type: TYPE_NORMAL
- en: 'It offers the following capabilities:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Performance monitor**: A performance monitor can monitor the network connectivity
    across cloud deployments and on-premises locations. It can also monitor connectivity
    between multiple data centers, branch offices, multi-tier applications, and microservices.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Service connectivity monitor**: You can identify the network bottlenecks
    inside the network infrastructure and detect the exact locations of the issues
    in the network. You can also monitor connectivity between users and services.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**ExpressRoute monitor**: You can monitor the ExpressRoute connection between
    the on-premises locations and Azure.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Next hop
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: You can use the **next hop** feature to specify a source and destination IPv4
    address. The communication between these addresses is then tested, and you will
    get informed about what type of next hop is used to route the traffic. When you
    experience a routing error or problem, you can add, change, or remove a route
    to resolve this.
  prefs: []
  type: TYPE_NORMAL
- en: 'To see this in action, you need to take the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Navigate to the Azure portal by opening [https://portal.azure.com/](https://portal.azure.com/).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select **All** **services**, and in the top menu, type `network watcher`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Under **Network diagnostic tools**, select **Next hop**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'In the settings blade, add the following values:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Resource group**: `PacktNetworkWatcher`.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Virtual machine**: `VM2`.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Network interface**: This is selected automatically.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Source IP address**: This is selected automatically as well.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Destination IP address**: `13.107.21.200` (the Bing server again).'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Select **Next hop**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'You will see the following result. In this case, there is no next hop, because
    the connection is going straight to the internet:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/2b5dad95-1998-430a-aa5d-ed1aa419e240.png)'
  prefs: []
  type: TYPE_IMG
- en: Next hop to internet
  prefs: []
  type: TYPE_NORMAL
- en: 'If you change the destination IP address to one of the IP addresses of the
    other VMs, which in my case is `172.18.0.6`, you will see the following result:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/b3421443-cf74-46ac-97f3-7912401fc898.png)'
  prefs: []
  type: TYPE_IMG
- en: Next hop to another VM
  prefs: []
  type: TYPE_NORMAL
- en: In the next section, we are going to look at how to troubleshoot a VPN connection.
  prefs: []
  type: TYPE_NORMAL
- en: VPN troubleshoot
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: For the VPN troubleshoot demonstration, we are going to use the VPN connection
    that we created in the previous chapter.
  prefs: []
  type: TYPE_NORMAL
- en: 'You can diagnose the VPN connection by taking the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: From the **Network Watcher** blade, select **VPN troubleshoot**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'In the **Network Watcher -** **VPN troubleshoot** blade, you can diagnose the
    gateway by selecting the subscription, resource group, location, and the following
    checkbox. You also need to select or create a storage account for storing the diagnostic
    information. After selecting the checkbox, you can start the troubleshooting process
    by clicking **Start troubleshooting **in the top menu, as shown in the following
    screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/95450815-68a0-465d-9b6d-2a55803bbd98.png)'
  prefs: []
  type: TYPE_IMG
- en: VPN troubleshooting
  prefs: []
  type: TYPE_NORMAL
- en: 'This will start the troubleshooting process, and, in my case, the VPN connections
    seem unhealthy. You can click on the **Action **tab to see the recommendations:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/80580be2-df9f-44f3-bbed-67759e19c8d0.png)'
  prefs: []
  type: TYPE_IMG
- en: Unhealthy VPN connection
  prefs: []
  type: TYPE_NORMAL
- en: You can manage external networking using Azure Network Watcher as well. We will
    cover this in the upcoming section.
  prefs: []
  type: TYPE_NORMAL
- en: Managing external networking
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Azure Network Watcher offers three features to monitor and troubleshoot external
    networking. Their features are **IP flow verify**, **Effective security rules**,
    and **Connection troubleshoot**, which are going to be covered in the next sections.
  prefs: []
  type: TYPE_NORMAL
- en: IP flow verify
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: With **IP flow verify**, you can detect whether a package is allowed or denied
    to or from a network interface of a virtual machine. Included in the information
    are the protocol, the local and remote IP addresses, the direction, and the local
    and remote ports. When a packet is denied, the name of the routing rule that denies
    the packet is returned. You can use this to diagnose connectivity issues from
    or in the on-premises environment and to and from the internet. You can basically
    choose any source or IP address to verify the connectivity.
  prefs: []
  type: TYPE_NORMAL
- en: To run IP flow verify, you need to enable an instance of Network Watcher in
    the region where you plan to run the tool. This is similar to the demonstration
    covered in the *Enabling Network Watcher* section that appeared earlier in this
    chapter, where we enabled Network Watcher for a particular region.
  prefs: []
  type: TYPE_NORMAL
- en: Using IP flow verify
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In this demonstration, we are going to use IP flow verify to test the connection
    between two of the VMs that we created in the first demonstration. To use IP flow
    verify, take the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Inside the Network Watcher resource blade, under **Network diagnostic tools**,
    select **IP flow verify**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'In the settings page, add the following settings:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Resource group**:`PacktNetworkWatcher`.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Virtual machine**: `VM1`.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Network interface**: This will be filled in automatically after selecting
    the VM.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Protocol**: TCP.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Direction**: Outbound.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Local IP address**: This is filled in automatically as well.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Local port**: `60000`.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Remote IP address**: `13.107.21.200` (address of Bing).'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Remote port**: `80`.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Click the **Check** button:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/e7dbadcb-4096-4784-ac82-627fd86da20d.png)'
  prefs: []
  type: TYPE_IMG
- en: IP flow verify
  prefs: []
  type: TYPE_NORMAL
- en: 'The request is executed and the result it will return will be that access is
    allowed, because of the `AllowInternetOutBound` security rule, as shown in the
    following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/edd61df8-5850-4d01-8156-2f304757dcbf.png)'
  prefs: []
  type: TYPE_IMG
- en: IP flow verify access allowed
  prefs: []
  type: TYPE_NORMAL
- en: 'Repeat the previous steps, but change the **Remote IP address** to `172.31.0.100`.
    This will result in access being denied because of the `DefaultOutboundDenyAll` security
    rule:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/4f30ce8f-4567-4516-bb04-6d82a616e909.png)'
  prefs: []
  type: TYPE_IMG
- en: IP flow verify access denied
  prefs: []
  type: TYPE_NORMAL
- en: 'Lastly, repeat the step again, and this time make the following changes:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Direction**: Inbound'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Local port**:`80`'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Remote port**:`60000`'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'This will result in the following:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/2188a8e7-f0e8-4652-98fd-6e8b8d2a0e6f.png)'
  prefs: []
  type: TYPE_IMG
- en: Access denied
  prefs: []
  type: TYPE_NORMAL
- en: We've looked at how to use IP flow verify to test the connection between two
    of the VMs. In the next part, we are going to look at effective security rules.
  prefs: []
  type: TYPE_NORMAL
- en: Effective security rules
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The **Effective security rules** feature displays all the security rules that
    are applied to the network interface and the subnet where the network interface
    is. It then aggregates both. This will give you a complete overview of all the
    rules that are applied to a network interface, and it will give you the ability
    to change, add, or remove rules.
  prefs: []
  type: TYPE_NORMAL
- en: 'You need to select the right subscription, the resource group, and the VM to
    get the overview of the applied security rules, as shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/62fbfa4b-ef0f-467b-b38e-2b9a1099ea2a.png)'
  prefs: []
  type: TYPE_IMG
- en: Effective security rules
  prefs: []
  type: TYPE_NORMAL
- en: We've now seen an overview of the security rules that are applied to the network
    interface. In the next section, we are going to cover connection troubleshoot.
  prefs: []
  type: TYPE_NORMAL
- en: Connection troubleshoot
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Azure Network Watcher Connection troubleshoot enables you to troubleshoot network
    performance and connectivity issues in Azure. It provides visualization of the
    hop-by-hop path from source to destination, identifying issues that can potentially
    impact your network performance and connectivity.
  prefs: []
  type: TYPE_NORMAL
- en: 'Azure Network Watcher connection troubleshoot provides the following features
    and insights:'
  prefs: []
  type: TYPE_NORMAL
- en: A graphical topology view from your source to destination.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: It checks the connectivity between the source (VM) and the destination (VM,
    URI, FQDN, IP) address.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: It offers hop-by-hop latency.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: It can identify configuration issues that are impacting reachability.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: It provides all possible hop-by-hop paths from the source to the destination.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: It checks latency, such as minimum, maximum, and average latency, between the
    source and destination.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The number of packets dropped during the connection troubleshoot check.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Connection troubleshoot requires that the source VM has the **AzureNetworkWatcherExtension**
    VM extension installed. For installing the extension on a Windows VM, you can
    refer to [https://docs.microsoft.com/en-us/azure/virtual-machines/extensions/network-watcher-windows?toc=%2Fazure%2Fnetwork-watcher%2Ftoc.json](https://docs.microsoft.com/en-us/azure/virtual-machines/extensions/network-watcher-windows?toc=%2Fazure%2Fnetwork-watcher%2Ftoc.json), and
    for a Linux VM, you can refer to [https://docs.microsoft.com/en-us/azure/virtual-machines/extensions/network-watcher-linux?toc=%2Fazure%2Fnetwork-watcher%2Ftoc.json](https://docs.microsoft.com/en-us/azure/virtual-machines/extensions/network-watcher-linux?toc=%2Fazure%2Fnetwork-watcher%2Ftoc.json).
  prefs: []
  type: TYPE_NORMAL
- en: 'To check network connectivity using **Connection troubleshoot**, you have to
    take the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: From the Network Watcher overview blade in the Azure portal, under Network diagnostic
    tools, select **Connection troubleshoot**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Select a virtual machine and provide an outbound connection, such as the following:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/f1a21e0b-0fa6-4c2d-8942-87b79b1b5035.png)'
  prefs: []
  type: TYPE_IMG
- en: Selecting source and destination
  prefs: []
  type: TYPE_NORMAL
- en: Click **Check**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The agent will automatically be installed on the source machine when you click
    the check button.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'After checking, the results will be displayed:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/1ce986ca-37b3-4384-91ae-3ab5f787cb52.png)'
  prefs: []
  type: TYPE_IMG
- en: Unreachable endpoint
  prefs: []
  type: TYPE_NORMAL
- en: We have now checked an outbound connection from a VM using **Connection troubleshoot**.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we covered the third part of the *Deploying and Managing Virtual
    Networks*objective, by covering how to monitor and troubleshoot your network traffic
    in Azure Network Watcher. We also covered how to monitor and troubleshoot on-premises and
    external network connectivity using Network Watcher.
  prefs: []
  type: TYPE_NORMAL
- en: In the next chapter, we are going to continue with the fourth part of this objective,
    by covering how to create and configure Azure security groups and Azure DNS.
  prefs: []
  type: TYPE_NORMAL
- en: Questions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Answer the following questions to test your knowledge of the information in
    this chapter. You can find the answers in the *Assessments* section at the end
    of this book:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Azure Network Watcher is only for monitoring and diagnosing network connectivity in
    Azure:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'True'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'False'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Can you use IP flow verify to verify outbound connections from a VNet in Azure?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Yes'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'No'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Can you use IP flow verify to verify connections between two different VMs inside
    a VNet?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Yes'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'No'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Further reading
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'You can check the following links for more information about the topics that
    are covered in this chapter:'
  prefs: []
  type: TYPE_NORMAL
- en: '*What is Azure Network Watcher?*: [https://docs.microsoft.com/en-us/azure/network-watcher/network-watcher-monitoring-overview](https://docs.microsoft.com/en-us/azure/network-watcher/network-watcher-monitoring-overview)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Quickstart: Diagnose a virtual machine network traffic filter problem using
    the Azure portal*: [https://docs.microsoft.com/en-us/azure/network-watcher/diagnose-vm-network-traffic-filtering-problem](https://docs.microsoft.com/en-us/azure/network-watcher/diagnose-vm-network-traffic-filtering-problem)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Network Performance Monitor solution in Azure*: [https://docs.microsoft.com/en-us/azure/azure-monitor/insights/network-performance-monitor?toc=%2Fazure%2Fnetwork-watcher%2Ftoc.json](https://docs.microsoft.com/en-us/azure/azure-monitor/insights/network-performance-monitor?toc=%2Fazure%2Fnetwork-watcher%2Ftoc.json)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Introduction to IP flow verify in Azure Network Watcher*: [https://docs.microsoft.com/en-us/azure/network-watcher/network-watcher-ip-flow-verify-overview](https://docs.microsoft.com/en-us/azure/network-watcher/network-watcher-ip-flow-verify-overview)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Tutorial: Diagnose a communication problem between networks using the Azure
    portal*: [https://docs.microsoft.com/en-us/azure/network-watcher/diagnose-communication-problem-between-networks](https://docs.microsoft.com/en-us/azure/network-watcher/diagnose-communication-problem-between-networks)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
