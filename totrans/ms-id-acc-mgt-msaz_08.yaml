- en: Managing Authentication Protocols
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 管理身份验证协议
- en: In this chapter, we will provide you with an overview about the important authentication
    protocols you need to know in order to handle your configurations and projects
    in that field.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将为你提供一个关于你需要了解的重要身份验证协议的概述，以帮助你处理在该领域的配置和项目。
- en: 'We see a lot of confusion in the usage of authentication protocols in our projects.
    It''s very important to understand the different protocols, that you can discuss
    with application providers about the correct implementation tasks and requirements.
    We see very often that a lot of time is used for discussing authentication methods
    and solutions. It''s clearly impossible to put all the material about the different
    authentication methods in only one chapter, as that would fill a complete book
    in the real world. We decided to provide you with essential summaries with extensive
    and working external examples. We will deploy many of the different authentication
    methods in the labs of this book. You will find specific labs to adapt your knowledge
    of technical configurations in the following chapters:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在项目中看到很多关于身份验证协议的混淆。理解不同的协议非常重要，这样你就可以与应用程序提供商讨论正确的实现任务和要求。我们经常看到，讨论身份验证方法和解决方案耗费了大量时间。显然，不可能将所有关于不同身份验证方法的材料都放在一个章节中，因为那样会填满一本书。在实际情况中，我们决定提供给你一些必要的总结，并附上大量有效的外部示例。我们将在本书的实验中部署多种不同的身份验证方法。你将在接下来的章节中找到一些特定的实验，帮助你适应技术配置的知识：
- en: '[Chapter 7](468509fa-856c-411d-abdb-e9a39c266750.xhtml), *Deploying* *Solutions
    on Azure AD and ADFS*'
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[第7章](468509fa-856c-411d-abdb-e9a39c266750.xhtml)，*在Azure AD和ADFS上部署解决方案*'
- en: '[Chapter 8](efbe1917-c755-4449-b29e-fa4a21e819fd.xhtml), *Using the Azure AD
    App Proxy and the Web Application Proxy*'
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[第8章](efbe1917-c755-4449-b29e-fa4a21e819fd.xhtml)，*使用Azure AD应用程序代理和Web应用程序代理*'
- en: '[Chapter 9](0cb2c20e-ca96-41ce-b555-24f63e63b9bf.xhtml), *Deploying additional
    applications on Azure AD*'
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[第9章](0cb2c20e-ca96-41ce-b555-24f63e63b9bf.xhtml)，*在Azure AD上部署额外应用程序*'
- en: '[Chapter 10](6b29475f-7917-49bf-91d4-3024835d0278.xhtml), *Exploring Azure
    AD identity services*'
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[第10章](6b29475f-7917-49bf-91d4-3024835d0278.xhtml)，*探索Azure AD身份服务*'
- en: 'The focus of this chapter will be to get you acquainted with some experiences
    and decision paths that can assist you with authentication protocols. We will
    divide the chapter into the following sections:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 本章的重点将是帮助你熟悉一些体验和决策路径，这些内容可以帮助你理解身份验证协议。我们将本章分为以下几个部分：
- en: Microsoft identity platform
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Microsoft身份平台
- en: Common token standards in a federated world
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 联邦世界中的常见令牌标准
- en: '**Security Assertion Markup Language** (**SAML**) 2.0'
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**安全断言标记语言**（**SAML**）2.0'
- en: WS-Federation
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: WS-Federation
- en: OAuth 2.0
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: OAuth 2.0
- en: '**OpenID Connect** (**OIDC**)'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**OpenID Connect**（**OIDC**）'
- en: Pass-through authentication and seamless **single sign-on** (**SSO**)
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 传递式身份验证和无缝的**单点登录**（**SSO**）
- en: '**Multi-factor authentication** (**MFA**)'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**多因素身份验证**（**MFA**）'
- en: Let's start working through this authentication reference to kick off your journey.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们开始通过这个身份验证参考文献，开启你的学习旅程。
- en: We highly recommend that you work through all the references in this chapter.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 我们强烈建议你完整阅读本章中的所有参考文献。
- en: We will start with an overview of the Microsoft identity platform.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将从Microsoft身份平台的概述开始。
- en: Microsoft identity platform
  id: totrans-19
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Microsoft身份平台
- en: 'Microsoft provides an identity platform with two endpoints called V1.0 and
    V2.0 with two sets of client libraries to work with these endpoints. The following
    libraries are used: Azure **AD Authentication Library** (**ADAL**) SDK and the
    **Microsoft Authentication Library** (**MSAL**). In the Azure AD portal, we will
    find how to include applications built with ADAL or MSAL over the app registrations
    (preview), as shown in the following screenshot:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: Microsoft提供了一个身份平台，包含两个端点V1.0和V2.0，并为这两个端点提供了两套客户端库。这些库包括：Azure **AD身份验证库**（**ADAL**）SDK和**Microsoft身份验证库**（**MSAL**）。在Azure
    AD门户中，我们将看到如何通过应用注册（预览）将使用ADAL或MSAL构建的应用程序包含在内，如下图所示：
- en: '![](img/e4da5681-7ca3-42fe-979d-9349eacd13c0.png)'
  id: totrans-21
  prefs: []
  type: TYPE_IMG
  zh: '![](img/e4da5681-7ca3-42fe-979d-9349eacd13c0.png)'
- en: Microsoft identity platform overview
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: Microsoft身份平台概述
- en: 'The following list describes the main use cases of the two endpoints:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 以下列表描述了两个端点的主要使用案例：
- en: The V1.0 endpoint allows only work and school accounts to sign in
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: V1.0端点仅允许工作和学校账户登录
- en: The V2.0 endpoint allows work and school accounts from Azure AD and **Microsoft
    Accounts** (**MSA**) to sign in
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: V2.0端点允许来自Azure AD和**Microsoft账户**（**MSA**）的工作和学校账户登录
- en: The v2.0 endpoint does not support SAML or WS-Federation—only OIDC and OAuth
    2.0
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: v2.0 端点不支持 SAML 或 WS-Federation——仅支持 OIDC 和 OAuth 2.0
- en: The v2.0 endpoint doesn't support the SAML assertion grant
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: v2.0 端点不支持 SAML 断言授权
- en: Both endpoints accept sign-ins from guest users for single-tenant or multi-tenant
    applications
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这两个端点都接受来自来宾用户的登录请求，适用于单租户或多租户应用程序
- en: Now that we have an overview on the available endpoints, we will jump into the
    token formats.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经对可用的端点有了一个概览，接下来我们将讨论令牌格式。
- en: Common token standards in a federated world
  id: totrans-30
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 联邦世界中的常见令牌标准
- en: When a digital identity is transferred across a network, it's only a collection
    of bytes. It's common to refer to a set of bytes containing identity information
    as a security token or just a token. In a claims-based world, a token contains
    one or more claims, each of which carries some piece of information about the
    user it identifies.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 当数字身份在网络中传输时，它仅仅是一组字节。通常将包含身份信息的一组字节称为安全令牌或简称令牌。在基于声明的世界中，令牌包含一个或多个声明，每个声明承载着关于它所识别的用户的一些信息。
- en: 'Today, the tokens come in different flavors, including the following token
    formats:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 如今，令牌有多种不同的格式，包括以下令牌格式：
- en: '**Security Assertion Markup Language** (**SAML**):'
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**安全断言标记语言**（**SAML**）：'
- en: XML-based
  id: totrans-34
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 基于 XML
- en: Very descriptive metadata
  id: totrans-35
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 非常具描述性的元数据
- en: '**JSON Web Token** (**JWT**):'
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**JSON Web Token**（**JWT**）：'
- en: Easily readable by humans
  id: totrans-37
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 易于人类阅读
- en: Smaller token size
  id: totrans-38
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更小的令牌大小
- en: '**Simple Web Token** (**SWT**):'
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**简单网页令牌**（**SWT**）：'
- en: Form-encoded attribute/value pairs
  id: totrans-40
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 表单编码的属性/值对
- en: Not very common
  id: totrans-41
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不太常见
- en: '**Kerberos**'
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Kerberos**'
- en: For the following protocol specifications, we recommend a good basic knowledge
    of claims-based authentication. You can download the Microsoft claims-based authentication
    handbook to prepare yourself. Use the following download link to get the book: [https://www.microsoft.com/en-us/download/details.aspx?id=28362](https://www.microsoft.com/en-us/download/details.aspx?id=28362).
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 对于以下协议规范，我们建议具备良好的基于声明的身份验证基础知识。你可以下载《微软基于声明的身份验证手册》来为自己做好准备。使用以下下载链接获取该书：[https://www.microsoft.com/en-us/download/details.aspx?id=28362](https://www.microsoft.com/en-us/download/details.aspx?id=28362)。
- en: We will discuss SAML 2.0 in the next section.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在下一部分讨论 SAML 2.0。
- en: Security Assertion Markup Language (SAML) 2.0
  id: totrans-45
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安全断言标记语言（SAML）2.0
- en: SAML is the foundation for much of the current identity federation activity.
    SAML 2.0 is preceded by SAML 1.0 and 1.1\. SAML 1.1 was released in 2003 and had
    just two scenarios (also known as profiles), and both were IdP-initiated. Shibboleth
    1.3 and Liberty Alliance—WS-FF 1.2 extended SAML 1.1, and SAML 2.0 was released
    by OASIS in 2005.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: SAML 是当前大多数身份联合活动的基础。SAML 2.0 的前身是 SAML 1.0 和 1.1。SAML 1.1 于 2003 年发布，并且只有两种场景（也称为配置文件），这两种都是由
    IdP 发起的。Shibboleth 1.3 和 Liberty Alliance—WS-FF 1.2 扩展了 SAML 1.1，SAML 2.0 于 2005
    年由 OASIS 发布。
- en: 'The following table shows the SAML core principles:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 以下表格显示了 SAML 的核心原则：
- en: '| **Assertions** | **Protocols** | **Bindings** |'
  id: totrans-48
  prefs: []
  type: TYPE_TB
  zh: '| **断言** | **协议** | **绑定** |'
- en: '| **Package of identity** **information** | Request/response based | Associates
    a message (protocol) with transport (communication'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: '| **身份信息包** | 基于请求/响应 | 将消息（协议）与传输（通信机制）关联'
- en: mechanism) |
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 机制） |
- en: '| **Synonym token** | Defines the messaging requirements | Examples:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: '| **同义令牌** | 定义消息传递要求 | 示例：'
- en: HTTP Redirect
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: HTTP 重定向
- en: HTTP POST
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: HTTP POST
- en: HTTP Artifact
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: HTTP 工件
- en: SOAP
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: SOAP
- en: '|'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '| **XML-based** | Examples:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: '| **基于 XML** | 示例：'
- en: Authentication request
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 身份验证请求
- en: Single logout
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 单点注销
- en: Artifact resolution
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 工件解析
- en: '|  |'
  id: totrans-61
  prefs: []
  type: TYPE_TB
  zh: '|  |'
- en: In the next section, we will talk about the key facts of the SAML 2.0 protocol.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一部分中，我们将讨论 SAML 2.0 协议的关键事实。
- en: Key facts about SAML
  id: totrans-63
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: SAML 的关键事实
- en: The SAML standard provides accurate messages for the transfer of requests and
    assertions (claims). SAML offers several options for the transfer of information,
    such as the use of SOAP. The SAML standard defines identity information as assertions.
    A large part of the standard flows into the definition of assertions and attribute
    profiles. A session timeout is not considered. When logging off, an attempt is
    made to reach a large circle of recipients. SAML 2.0 uses profiles, which describe
    how assertions, protocols, and bindings combine to form a federation scenario.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: SAML 标准提供了准确的消息，用于请求和断言（声明）的传输。SAML 提供了多种信息传输方式，例如使用 SOAP。SAML 标准将身份信息定义为断言。标准的大部分内容涉及断言和属性配置文件的定义。会话超时不被考虑。在注销时，会尝试达到一个大范围的接收者。SAML
    2.0 使用配置文件，描述了断言、协议和绑定如何结合形成一个联合场景。
- en: 'For example, a web SSO profile will be used as follows:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，Web SSO 配置文件将按以下方式使用：
- en: Authentication Request Protocol
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 身份验证请求协议
- en: HTTP Redirect binding at IdP
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 IdP 处的 HTTP 重定向绑定
- en: HTTP POST Binding at SP
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: SP 处的 HTTP POST 绑定
- en: 'There are many different SSO profiles available that are defined in the specification:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 有许多不同的 SSO 配置文件可以使用，这些配置文件在规范中有定义：
- en: Web Browser SSO profile
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Web 浏览器 SSO 配置文件
- en: '**Enhanced Client or Proxy** (**ECP**) profile'
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**增强客户端或代理**（**ECP**）配置文件'
- en: Identity provider discovery profile
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 身份提供者发现配置文件
- en: Single logout profile
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 单点注销配置文件
- en: Name identifier management profile
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 名称标识符管理配置文件
- en: Artifact resolution profile
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 文档解析配置文件
- en: Assertion query/request profile
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 断言查询/请求配置文件
- en: Name identifier mapping profile
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 名称标识符映射配置文件
- en: For Shibboleth administrators, we highly recommend the following source: [https://bit.ly/2DnG5pQ](https://bit.ly/2DnG5pQ)[.](https://bit.ly/2DnG5pQ)
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 对于 Shibboleth 管理员，我们强烈推荐以下资源：[https://bit.ly/2DnG5pQ](https://bit.ly/2DnG5pQ)[。](https://bit.ly/2DnG5pQ)
- en: 'There are also SAML attribute profiles, such as the following, available for
    use:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 还有一些 SAML 属性配置文件可供使用，如下所示：
- en: Basic attribute profile
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 基本属性配置文件
- en: X.500/LDAP attribute profile
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: X.500/LDAP 属性配置文件
- en: UUID attribute profile
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: UUID 属性配置文件
- en: DCE PAC attribute profile
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: DCE PAC 属性配置文件
- en: XACML attribute profile
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: XACML 属性配置文件
- en: 'To give an example, we use the typical SAML web SSO profile in the following
    diagram:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 举个例子，我们在以下图示中使用典型的 SAML Web SSO 配置文件：
- en: '![](img/99f4c4a4-ba4c-489f-a5bc-45cb738629ac.png)'
  id: totrans-86
  prefs: []
  type: TYPE_IMG
  zh: '![](img/99f4c4a4-ba4c-489f-a5bc-45cb738629ac.png)'
- en: SAML web SSO profile
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: SAML Web SSO 配置文件
- en: 'The following description explains the different steps in the authentication
    process:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 以下描述解释了身份验证过程中的不同步骤：
- en: Trust is established between the **Web Application** and the **SAML Issuer**
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Web 应用程序**和**SAML 发行者**之间建立信任'
- en: The user browses to the **Web Application**
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用户浏览到 **Web 应用程序**
- en: The **Web Application** detects that the user is not authenticated and redirects
    him to the ****SAML Issuer****
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Web 应用程序**检测到用户未通过身份验证，并将其重定向到 **SAML 发行者**'
- en: The user automatically browses to the **SAML Issuer**
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用户自动浏览到 **SAML 发行者**
- en: The user authenticates to the **SAML Issuer**
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用户向 **SAML 发行者**进行身份验证
- en: The **SAML Issuer** builds the token and passes it back to the user
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**SAML 发行者**构建令牌并将其返回给用户'
- en: The user POSTs the token to the **Web Application**
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用户将令牌通过 POST 提交到 **Web 应用程序**
- en: We highly recommend you work through the following Azure AD SAML 2.0 article:[ https://docs.microsoft.com/en-us/azure/active-directory/develop/single-sign-on-saml-protocol](https://docs.microsoft.com/en-us/azure/active-directory/develop/single-sign-on-saml-protocol)[.](https://bit.ly/2VYK2Z8)
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 我们强烈推荐你阅读以下 Azure AD SAML 2.0 文章：[https://docs.microsoft.com/en-us/azure/active-directory/develop/single-sign-on-saml-protocol](https://docs.microsoft.com/en-us/azure/active-directory/develop/single-sign-on-saml-protocol)[。](https://bit.ly/2VYK2Z8)
- en: 'For debugging SAML-based SSO, work through the following articles:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 对于调试基于 SAML 的 SSO，请按照以下文章进行操作：
- en: '[https://social.technet.microsoft.com/wiki/contents/articles/31247.azure-active-directory-how-to-debug-saml-based-single-sign-on-to-applications.aspx](https://bit.ly/2MpiDLK) -
    How to debug SAML-based single sign-on to applications'
  id: totrans-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://social.technet.microsoft.com/wiki/contents/articles/31247.azure-active-directory-how-to-debug-saml-based-single-sign-on-to-applications.aspx](https://bit.ly/2MpiDLK)
    - 如何调试基于 SAML 的应用单点登录'
- en: '[https://docs.microsoft.com/en-us/azure/active-directory/develop/howto-v1-debug-saml-sso-issues](https://bit.ly/2U45UR8) - Debug
    SAML-based single sign-on to applications in Azure Active Directory'
  id: totrans-99
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://docs.microsoft.com/en-us/azure/active-directory/develop/howto-v1-debug-saml-sso-issues](https://bit.ly/2U45UR8)
    - 在 Azure Active Directory 中调试基于 SAML 的应用单点登录'
- en: In conclusion, we can say that SAML 2.0, which was released in 2005 by OASIS,
    is now commonly used in web sign-in scenarios, particularly for web applications
    with an XML token format.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 总结来说，我们可以说，2005 年由 OASIS 发布的 SAML 2.0 现在在 Web 登录场景中被广泛使用，特别是对于具有 XML 令牌格式的 Web
    应用程序。
- en: WS-Federation
  id: totrans-101
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: WS-Federation
- en: 'WS-Federation was developed by an industry consortium and was released in December 2006,
    with Microsoft being a key contributor. WS-Federation is also part of a larger framework,
    WS-Security, and builds on the work of WS-Trust from February 2005, defining the
    following two key principles:'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: WS-Federation 是由一个行业联盟开发的，并于 2006 年 12 月发布，微软是主要贡献者之一。WS-Federation 也是一个更大框架
    WS-Security 的一部分，并基于 2005 年 2 月的 WS-Trust 工作，定义了以下两个关键原则：
- en: The protocol for requesting/receiving security tokens
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 请求/接收安全令牌的协议
- en: How trust should be brokered between parties using an **Security Token Service**
    (**STS**)
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何在使用 **安全令牌服务**（**STS**）的各方之间建立信任
- en: 'It also defines two profiles:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 它还定义了两个配置文件：
- en: Active Requestor Profile
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 主动请求者配置文件
- en: Passive Requestor Profile
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 被动请求者配置文件
- en: 'WS-* Federation Suite consists of:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: WS-* 联邦套件包括：
- en: WS-Trust
  id: totrans-109
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: WS-Trust
- en: WS-Federation
  id: totrans-110
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: WS-Federation
- en: WS-Policy
  id: totrans-111
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: WS-Policy
- en: In the next section, we will describe the key elements of the WS-Federation
    specification.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一部分，我们将描述 WS-Federation 规范的关键元素。
- en: Key facts about WS-Federation
  id: totrans-113
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 关于 WS-Federation 的关键信息
- en: In **WS-Federation**, in contrast to SAML, the token can be anything. Basically
    no defined messages are used. On the other hand, a suggestion is made for the
    use of a web service. The WS-Federation standard uses SOAP and makes the tunneling
    of SOAP available via the Web browser. The token for this standard is not subject
    to any concrete specification. WS-Federation can use a security token that is
    a SAML assertion. This means that WS-Federation can also use components from the
    SAML standard. As with SAML, there is no session timeout and an application must
    explicitly register to receive the information about a logoff.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 在 **WS-Federation** 中，与 SAML 相比，令牌可以是任何东西。基本上没有定义的消息被使用。另一方面，建议使用 Web 服务。WS-Federation
    标准使用 SOAP，并通过 Web 浏览器使 SOAP 隧道化。该标准的令牌不受任何具体规范的约束。WS-Federation 可以使用作为 SAML 声明的安全令牌。这意味着
    WS-Federation 也可以使用来自 SAML 标准的组件。与 SAML 一样，没有会话超时，应用程序必须显式注册以接收注销信息。
- en: 'There are also some relationships regarding SAML-P with the WS-Federation and
    the passive requestor profile, for example:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 也有一些关于 SAML-P 与 WS-Federation 以及被动请求者配置文件的关系，例如：
- en: Similar to **SAML WebSSO** profile
  id: totrans-116
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 类似于 **SAML WebSSO** 配置文件
- en: 'The following parts are incompatible:'
  id: totrans-117
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 以下部分不兼容：
- en: Different request and response messages
  id: totrans-118
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不同的请求和响应消息
- en: No IdP-initiated use case
  id: totrans-119
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 没有 IdP 启动的用例
- en: No Assertion Query profile
  id: totrans-120
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 无声明查询配置文件
- en: 'Use the following source to gather more information about the topic:'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 使用以下来源收集更多关于该主题的信息：
- en: '[https://docs.microsoft.com/en-us/azure/active-directory/develop/azure-ad-federation-metadata](https://bit.ly/2AOnwcD)'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://docs.microsoft.com/en-us/azure/active-directory/develop/azure-ad-federation-metadata](https://bit.ly/2AOnwcD)'
- en: 'With the following sample, you can test and analyze WS-Federation with Azure
    AD:'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 通过以下示例，您可以测试并分析与 Azure AD 结合使用的 WS-Federation：
- en: '[https://github.com/Azure-Samples/active-directory-dotnet-webapp-wsfederation](https://bit.ly/2TYiyRu)'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://github.com/Azure-Samples/active-directory-dotnet-webapp-wsfederation](https://bit.ly/2TYiyRu)'
- en: Conclusively, we can say that WS-Federation, which was established in 2006,
    is now commonly used for web sign-in scenarios, and .NET web applications. The
    token format is agnostic, like SAML, JWT, and so on.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 总结来说，我们可以说，WS-Federation 于 2006 年建立，现在常用于 Web 登录场景和 .NET Web 应用程序。令牌格式是通用的，像
    SAML、JWT 等都可以使用。
- en: OAuth 2.0
  id: totrans-126
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: OAuth 2.0
- en: In simple words, authentication is the act of proving who you are, whereas authorization
    is the act of determining what you can do. OAuth 2.0 is about delegated authorization
    and not about authentication. It is not a protocol, it's an authorization framework
    defined in the RFC 6749, *The OAuth 2.0 Authorization Framework*. This can be
    confusing because there are many cases in which you use OAuth 2.0 to log in to
    a client web application.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 简单来说，身份验证是证明你是谁的行为，而授权是确定你可以做什么的行为。OAuth 2.0 关注的是委托授权，而不是身份验证。它不是一个协议，而是在 RFC
    6749 中定义的授权框架，*OAuth 2.0 授权框架*。这可能会让人困惑，因为有很多情况下你使用 OAuth 2.0 登录客户端 web 应用程序。
- en: The authentication process must end by figuring out and validating the identity
    of the end user, but OAuth doesn't do that. OAuth provides time-based tokens,
    which can be used to access a resource on behalf of the end user without providing
    any identity information about the end user.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 身份验证过程必须通过识别和验证最终用户的身份来结束，但 OAuth 并没有做到这一点。OAuth 提供基于时间的令牌，可以代表最终用户访问资源，而无需提供任何关于最终用户的身份信息。
- en: OAuth 2.0 is the existing standard for API security and is a major breakthrough
    in identity delegation.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: OAuth 2.0 是现有的 API 安全标准，是身份委托领域的一项重大突破。
- en: Key facts about OAuth 2.0
  id: totrans-130
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 关于 OAuth 2.0 的关键信息
- en: 'The following are the principal facts concerning OAuth 2.0:'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是有关 OAuth 2.0 的主要事实：
- en: It is an internet protocol/specification for creating and managing application identity
  id: totrans-132
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它是一个用于创建和管理应用程序身份的互联网协议/规范
- en: It is a cross-platform mechanism
  id: totrans-133
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它是一个跨平台机制
- en: It has delegated authorization to APIs
  id: totrans-134
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它具有对 API 的委托授权
- en: Its main purpose is to get the client an access token
  id: totrans-135
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它的主要目的是为客户端获取访问令牌
- en: It is not an authentication protocol
  id: totrans-136
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它不是一个身份验证协议
- en: It is preceded by OAuth 1.0 and OAuth **Web Resource Authorization Profiles** (**WRAP**)
  id: totrans-137
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它的前身是 OAuth 1.0 和 OAuth **Web 资源授权配置文件** (**WRAP**)
- en: It is an internet standard used by Facebook, Google, and Twitter
  id: totrans-138
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这是Facebook、Google和Twitter使用的互联网标准
- en: 'The OAuth framework differs between two client (application) types when accessing
    a service on behalf of a user. The two types of application can be described as
    follows:'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: OAuth框架区分两种客户端（应用程序）类型，当代表用户访问服务时。这两种类型的应用程序可以描述如下：
- en: '**Public**: Runs locally on a device. Not trusted to hold a secret.'
  id: totrans-140
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**公共**：在设备上本地运行。无法信任其存储秘密。'
- en: '**Private**: Runs behind firewalls. Can be trusted with secrets.'
  id: totrans-141
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**私有**：在防火墙后运行。可以信任其存储秘密。'
- en: 'The following diagram gives an example of the roles in the OAuth framework
    :'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 以下图示展示了OAuth框架中的角色示例：
- en: '![](img/8a1f0bb5-0be6-42fd-9efe-0720c511d6ac.png)'
  id: totrans-143
  prefs: []
  type: TYPE_IMG
  zh: '![](img/8a1f0bb5-0be6-42fd-9efe-0720c511d6ac.png)'
- en: Roles in the OAuth framework
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: OAuth框架中的角色
- en: 'The provided list of roles are as follows:'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 提供的角色列表如下：
- en: '**Authorization Server**: Issues the access token'
  id: totrans-146
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**授权服务器**：发放访问令牌'
- en: '**Resource Server**: Verifies and accepts the access token'
  id: totrans-147
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**资源服务器**：验证并接受访问令牌'
- en: '**Client**: The application that requests the access token'
  id: totrans-148
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**客户端**：请求访问令牌的应用程序'
- en: '**User (Resource Owner)**: Is the end user, who grants the permission to access
    the resource server with an access token'
  id: totrans-149
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**用户（资源所有者）**：是最终用户，授予使用访问令牌访问资源服务器的权限'
- en: 'In the following screenshot, you will find an example consent, which is used
    with Cloud App Security that requires access to Salesforce:'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 在以下截图中，你将看到一个同意示例，它与Cloud App Security一起使用，要求访问Salesforce：
- en: '![](img/323e10ca-4f77-44a6-8ef5-7ee6d43e8455.png)'
  id: totrans-151
  prefs: []
  type: TYPE_IMG
  zh: '![](img/323e10ca-4f77-44a6-8ef5-7ee6d43e8455.png)'
- en: Typical OAuth 2.0 consent
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 典型的OAuth 2.0同意页面
- en: You will find more information about the Azure AD consent framework at: [https://docs.microsoft.com/en-us/azure/active-directory/develop/consent-framework](https://docs.microsoft.com/en-us/azure/active-directory/develop/consent-framework).
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在以下链接找到有关Azure AD同意框架的更多信息：[https://docs.microsoft.com/en-us/azure/active-directory/develop/consent-framework](https://docs.microsoft.com/en-us/azure/active-directory/develop/consent-framework)。
- en: It is also important to understand the flows in OAuth 2.0 that define the process
    for obtaining an access token.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 了解OAuth 2.0中的流非常重要，这些流定义了获取访问令牌的过程。
- en: Main OAuth 2.0 flow facts
  id: totrans-155
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: OAuth 2.0流的主要事实
- en: 'There are four flows defined in the specification:'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 规范中定义了四种流：
- en: '**Authorization code** **flow**:'
  id: totrans-157
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**授权码** **流**：'
- en: One-time code issued to client
  id: totrans-158
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为客户端发放一次性代码
- en: Client redeems code for access token
  id: totrans-159
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 客户端兑换代码以获取访问令牌
- en: Access and ID token
  id: totrans-160
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 访问令牌和ID令牌
- en: Used for server-side apps
  id: totrans-161
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用于服务器端应用程序
- en: '**Authorization code flow with proof key for code exchange** (**PKCE**) for native/mobile
    applications'
  id: totrans-162
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**带有代码交换证明密钥的授权码流** (**PKCE**) 用于原生/移动应用程序'
- en: '**Client credentials** **flow**:'
  id: totrans-163
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**客户端凭证** **流**：'
- en: Authenticates the client, not the user
  id: totrans-164
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 认证客户端，而非用户
- en: Client receives an access token for itself
  id: totrans-165
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 客户端为自己接收访问令牌
- en: Does not support refresh tokens
  id: totrans-166
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不支持刷新令牌
- en: Recommended for client applications with no end user (machine-to-machine communication)
  id: totrans-167
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 推荐用于没有最终用户的客户端应用程序（机器对机器通信）
- en: '**Resource owner password** **flow**:'
  id: totrans-168
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**资源所有者密码** **流**：'
- en: Client collects username/password from user
  id: totrans-169
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 客户端收集用户的用户名/密码
- en: Exchange username/password for access token
  id: totrans-170
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用用户名/密码交换访问令牌
- en: Used if you control the client application and the resource
  id: totrans-171
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果你控制客户端应用程序和资源，则使用此流
- en: Typically used in online services, where the online service client app talks
    with the own service
  id: totrans-172
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通常用于在线服务，其中在线服务客户端应用程序与自身服务进行通信
- en: '**Implicit** **flow**:'
  id: totrans-173
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**隐式** **流**：'
- en: Client is untrusted (public)
  id: totrans-174
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 客户端不可信（公共）
- en: No refresh token issued
  id: totrans-175
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不发放刷新令牌
- en: Recommended to use for **Single Page Applications** (**SPA**)
  id: totrans-176
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 推荐用于**单页应用程序**（**SPA**）
- en: 'You can use the following resources to deploy several OAuth 2.0 examples with
    your on-premise ADFS infrastructure:'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用以下资源，在你的本地ADFS基础设施中部署多个OAuth 2.0示例：
- en: '[https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/development/enabling-oauth-confidential-clients-with-ad-fs](https://bit.ly/2S3gxqc)'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/development/enabling-oauth-confidential-clients-with-ad-fs](https://bit.ly/2S3gxqc)'
- en: '[https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/development/native-client-with-ad-fs](https://bit.ly/2HnAlAt)'
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/development/native-client-with-ad-fs](https://bit.ly/2HnAlAt)'
- en: 'Work through the following examples with Azure AD to get deeper into the different
    flow types:'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 通过以下示例使用Azure AD，深入了解不同的流类型：
- en: '**OAuth 2.0 implicit grant flow**: [https://docs.microsoft.com/en-us/azure/active-directory/develop/v1-oauth2-implicit-grant-flow](https://docs.microsoft.com/en-us/azure/active-directory/develop/v1-oauth2-implicit-grant-flow)'
  id: totrans-181
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**OAuth 2.0 隐式授权流程**：[https://docs.microsoft.com/en-us/azure/active-directory/develop/v1-oauth2-implicit-grant-flow](https://docs.microsoft.com/en-us/azure/active-directory/develop/v1-oauth2-implicit-grant-flow)'
- en: '**OAuth 2.0 auth code grant flow**: [https://docs.microsoft.com/en-us/azure/active-directory/develop/v1-protocols-oauth-code](https://docs.microsoft.com/en-us/azure/active-directory/develop/v1-protocols-oauth-code)'
  id: totrans-182
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**OAuth 2.0 授权码授权流程**：[https://docs.microsoft.com/en-us/azure/active-directory/develop/v1-protocols-oauth-code](https://docs.microsoft.com/en-us/azure/active-directory/develop/v1-protocols-oauth-code)'
- en: '**OAuth 2.0 On-Behalf-Of flow**: [https://docs.microsoft.com/en-us/azure/active-directory/develop/v1-oauth2-on-behalf-of-flow](https://docs.microsoft.com/en-us/azure/active-directory/develop/v1-oauth2-on-behalf-of-flow)'
  id: totrans-183
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**OAuth 2.0 代表授权流程**：[https://docs.microsoft.com/en-us/azure/active-directory/develop/v1-oauth2-on-behalf-of-flow](https://docs.microsoft.com/en-us/azure/active-directory/develop/v1-oauth2-on-behalf-of-flow)'
- en: '**OAuth 2.0 client credentials flow**: [https://docs.microsoft.com/en-us/azure/active-directory/develop/v1-oauth2-client-creds-grant-flow](https://docs.microsoft.com/en-us/azure/active-directory/develop/v1-oauth2-client-creds-grant-flow)'
  id: totrans-184
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**OAuth 2.0 客户端凭证授权流程**：[https://docs.microsoft.com/en-us/azure/active-directory/develop/v1-oauth2-client-creds-grant-flow](https://docs.microsoft.com/en-us/azure/active-directory/develop/v1-oauth2-client-creds-grant-flow)'
- en: The next section provides you with information about the authorization code
    flow.
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 下一部分将为您提供关于授权码流程的信息。
- en: Authorization code flow
  id: totrans-186
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 授权码流程
- en: The main concept of this flow is that the client gets an authorization code
    first and uses the code to redeem the access token. It's recommended for private
    clients (web apps or native mobile applications) that have the capability to spawn
    a web browser. In that case, private clients establish a secret with the OAuth
    server. The secret will be used to authenticate the client during the access token
    redemption.
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 此流程的主要概念是客户端首先获得一个授权码，然后使用该授权码兑换访问令牌。推荐用于具有启动浏览器能力的私人客户端（如Web应用或原生移动应用）。在这种情况下，私人客户端会与OAuth服务器建立一个密钥。该密钥将用于在访问令牌兑换过程中验证客户端。
- en: The access tokens expire and need to be refreshed with refresh tokens, and each
    of them has their own lifetime and can be stored for a longer term. A refresh
    token can also be used to redeem a new access token later.
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 访问令牌会过期，并需要通过刷新令牌进行更新，每个令牌都有自己的生命周期，可以长期存储。刷新令牌也可以用于稍后兑换新的访问令牌。
- en: 'The following figure shows an example of the authorization code grant type:'
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 下图展示了授权码授权类型的示例：
- en: '![](img/4a14a60e-1151-4a1c-a298-f12bdcb68250.png)'
  id: totrans-190
  prefs: []
  type: TYPE_IMG
  zh: '![](img/4a14a60e-1151-4a1c-a298-f12bdcb68250.png)'
- en: Authorization code grant type flow
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 授权码授权类型流程
- en: 'The flow works in the following order:'
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 流程按照以下顺序进行：
- en: The **User** clicks the button to post this purchase
  id: totrans-193
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**用户**点击按钮以提交此购买'
- en: The **Client** redirects the user to OAuth server
  id: totrans-194
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**客户端**将用户重定向到OAuth服务器'
- en: The **User** authenticates and grants consent
  id: totrans-195
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**用户**进行认证并授予许可'
- en: The OAuth server redirects the **User** to the **Client** with the authorization
    code
  id: totrans-196
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: OAuth 服务器将**用户**重定向到**客户端**，并携带授权码
- en: The **Client** requests an access token from the **Authorization Server**
  id: totrans-197
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**客户端**向**授权服务器**请求访问令牌'
- en: The OAuth server returns the access token to the **Client**
  id: totrans-198
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: OAuth 服务器将访问令牌返回给**客户端**
- en: The **Client** uses the access token to authorize to the resource
  id: totrans-199
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**客户端**使用访问令牌授权访问资源'
- en: Client credential flow
  id: totrans-200
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 客户端凭证流程
- en: The main concept of this flow is application authentication and not user authorization, where
    the application establishes a secret. The application authenticates with the secret
    and receives an access token. Users are not involved in this flow and the client
    can perform this flow out of band.
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 此流程的主要概念是应用程序认证，而非用户授权，应用程序会建立一个密钥，应用程序通过该密钥进行身份验证并获得访问令牌。用户不会参与此流程，客户端可以在不涉及用户的情况下执行此流程。
- en: 'The following diagram shows the client credential grant type:'
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 下图展示了客户端凭证授权类型：
- en: '![](img/66508e4a-5bfb-4bb3-95c1-61e5c67e1ec3.png)'
  id: totrans-203
  prefs: []
  type: TYPE_IMG
  zh: '![](img/66508e4a-5bfb-4bb3-95c1-61e5c67e1ec3.png)'
- en: Client credential grant flow
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 客户端凭证授权流程
- en: 'The flow runs in the following order:'
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 流程按照以下顺序运行：
- en: The **User** uses the client (through the address book app)
  id: totrans-206
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**用户**通过客户端（通过通讯录应用）进行操作'
- en: The client authenticates to the OAuth server (**Azure AD**)
  id: totrans-207
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 客户端向OAuth服务器（**Azure AD**）进行认证
- en: The OAuth server provides an access token to the client
  id: totrans-208
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: OAuth 服务器向客户端提供访问令牌
- en: The client calls resource (web service) with the access token in the header
  id: totrans-209
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 客户端将带有访问令牌的请求发送到资源（Web 服务）头部
- en: Implicit grant flow
  id: totrans-210
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 隐式授权流
- en: While acquiring an access token, this flow is mostly used by JavaScript clients
    running in the web browser. Also, important to note is that there is no authentication
    requirement for the JavaScript client. The difference between this and the authorization
    code flow is that the access token will be received in the grant request.
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 在获取访问令牌时，此流程主要由在 Web 浏览器中运行的 JavaScript 客户端使用。还需注意的是，JavaScript 客户端无需进行身份验证。与授权码流的区别在于，访问令牌将直接在授权请求中接收。
- en: The following figure shows an example of the implicit grant type.
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 下图展示了隐式授权类型的示例。
- en: '![](img/b1dfc699-ea9f-4422-b391-043cfeafd691.png)'
  id: totrans-213
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b1dfc699-ea9f-4422-b391-043cfeafd691.png)'
- en: Implicit grant flow
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 隐式授权流
- en: 'The flow in the main points runs as follows:'
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 主要流程步骤如下：
- en: The **Client** **Application** opens a browser to send the user to the **Authorization
    Server**
  id: totrans-216
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**客户端** **应用** 打开浏览器将用户发送到 **授权服务器**'
- en: The authorization prompt appears to the user and approves the application request
  id: totrans-217
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 授权提示出现在用户面前，用户批准应用请求
- en: A redirect for the user goes back to the application with an **Access Token**
  id: totrans-218
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 用户的重定向返回到应用，并附带 **访问令牌**
- en: Resource owner password credentials flow
  id: totrans-219
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 资源所有者密码凭证流
- en: The main concept in this flow is that the resource owner must trust the client
    application. This means that the resource owner has to give its credentials directly
    to the client application.
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 此流程中的主要概念是资源所有者必须信任客户端应用。这意味着资源所有者必须将其凭据直接提供给客户端应用。
- en: 'The following figure shows the resource owner password credentials grant type:'
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 下图展示了资源所有者密码凭证授权类型：
- en: '![](img/6a6eb768-6001-463f-a4b2-3e1b24a13740.png)'
  id: totrans-222
  prefs: []
  type: TYPE_IMG
  zh: '![](img/6a6eb768-6001-463f-a4b2-3e1b24a13740.png)'
- en: Resource owner password credential flow
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 资源所有者密码凭证流
- en: In conclusion, we can say that the specification of OAuth 2.0, which was published in
    October 2012, is now commonly used in rich client and modern application scenarios
    and with **RESTful Web API** access. The token format is agnostic but **JWT**
    is primarily used.
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 总结来说，我们可以说，OAuth 2.0 规范自 2012 年 10 月发布以来，现已广泛应用于富客户端和现代应用场景中，特别是 **RESTful Web
    API** 访问。令牌格式是无关的，但主要使用 **JWT**。
- en: OpenID Connect (OIDC)
  id: totrans-225
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: OpenID Connect（OIDC）
- en: OIDC was established as a standard by its membership in February 2014\. OIDC provides
    a lightweight framework for identity interactions in a RESTful manner. The specification
    was developed under the OpenID Foundation and has its roots in OpenID; it was
    greatly affected by OAuth 2.0, because that specification was not intended for
    authentication. Microsoft was also a co-author of the OIDC specification.
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: OIDC 作为一个标准，于 2014 年 2 月通过其成员身份建立。OIDC 提供了一个轻量级的框架，以 RESTful 方式进行身份交互。该规范是在
    OpenID 基金会下开发的，根植于 OpenID；它深受 OAuth 2.0 的影响，因为 OAuth 2.0 规范本意并不用于身份验证。微软也是 OIDC
    规范的共同作者。
- en: Key facts about OIDC
  id: totrans-227
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 关于 OIDC 的关键事实
- en: 'It defines the following identity layers on top of OAuth 2.0:'
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 它在 OAuth 2.0 的基础上定义了以下身份层：
- en: 'It uses two OAuth 2.0 flows:'
  id: totrans-229
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它使用两个 OAuth 2.0 流程：
- en: Authorization code flow
  id: totrans-230
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 授权码流
- en: Implicit flow
  id: totrans-231
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 隐式授权流
- en: Adds an ID token to OAuth 2.0 exchange
  id: totrans-232
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 向 OAuth 2.0 交换中添加一个 ID 令牌
- en: Adds the ability to request claims using an OAuth 2.0 access token
  id: totrans-233
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 添加通过 OAuth 2.0 访问令牌请求声明的功能
- en: 'The following roles are used:'
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 使用了以下角色：
- en: '**OpenID Connect Provider** (**OP**): Authorization server issues the ID token'
  id: totrans-235
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**OpenID Connect 提供者**（**OP**）：授权服务器发放 ID 令牌'
- en: '**Relying Party**: Client application that requests the ID token'
  id: totrans-236
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**依赖方**：请求 ID 令牌的客户端应用'
- en: '**ID token**: Issued by the OP'
  id: totrans-237
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**ID 令牌**：由 OP 发放'
- en: '**Claim**: Information about the user'
  id: totrans-238
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**声明**：有关用户的信息'
- en: 'The following figure shows the OpenID Connect flow:'
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: 下图展示了 OpenID Connect 流程：
- en: '![](img/2d1fdfdf-c1ae-4063-86c0-c97ef28266b7.png)'
  id: totrans-240
  prefs: []
  type: TYPE_IMG
  zh: '![](img/2d1fdfdf-c1ae-4063-86c0-c97ef28266b7.png)'
- en: OpenID Connect flow
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: OpenID Connect 流程
- en: 'The flow runs with the following steps:'
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: 流程步骤如下：
- en: A client registers with the OP
  id: totrans-243
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 客户端在 OP 注册
- en: The user browses to the web app and initiates login
  id: totrans-244
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 用户浏览到 Web 应用并启动登录
- en: The web app redirects the user to the OP
  id: totrans-245
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Web 应用将用户重定向到 OP
- en: The user authenticates to the OP and gives consent for the web app to use his
    identity
  id: totrans-246
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 用户向 OP 进行身份验证，并同意 Web 应用使用他的身份
- en: OP builds the authorization code
  id: totrans-247
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: OP 构建授权码
- en: OP redirects the user back to the web app with the authorization code
  id: totrans-248
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: OP 将用户重定向回 Web 应用，并附带授权码
- en: The web app sends the authorization code to OP
  id: totrans-249
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Web 应用将授权码发送给 OP
- en: OP creates the ID token and access token and sends back to the web app
  id: totrans-250
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: OP 创建 ID 令牌和访问令牌，并发送回 Web 应用程序
- en: The web app verifies the ID token
  id: totrans-251
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Web 应用程序验证 ID 令牌
- en: 'The specification also uses a UserInfo EndPoint with the following characteristics:'
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: 该规范还使用一个 UserInfo 端点，具有以下特点：
- en: Returns additional claims about a user
  id: totrans-253
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 返回关于用户的附加声明
- en: REST-based endpoint
  id: totrans-254
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 基于 REST 的端点
- en: Authenticates with access token received from OPx
  id: totrans-255
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用从 OPx 接收到的访问令牌进行身份验证
- en: Response returned in JSON
  id: totrans-256
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 返回的响应为 JSON 格式
- en: More information about OIDC and Azure AD is available at: [https://docs.microsoft.com/en-us/azure/active-directory/develop/v2-protocols-oidc](https://docs.microsoft.com/en-us/azure/active-directory/develop/v2-protocols-oidc).
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: 关于 OIDC 和 Azure AD 的更多信息，请访问：[https://docs.microsoft.com/en-us/azure/active-directory/develop/v2-protocols-oidc](https://docs.microsoft.com/en-us/azure/active-directory/develop/v2-protocols-oidc)。
- en: 'Build the following sample applications with an on-premise ADFS infrastucture:'
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: 使用本地 ADFS 基础设施构建以下示例应用程序：
- en: '**Enabling ****OIDC**: [https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/development/enabling-openid-connect-with-ad-fs](https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/development/enabling-openid-connect-with-ad-fs)'
  id: totrans-259
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**启用 OIDC**：[https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/development/enabling-openid-connect-with-ad-fs](https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/development/enabling-openid-connect-with-ad-fs)'
- en: '**Single logout for** **OIDC**:[ https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/development/ad-fs-logout-openid-connect](https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/development/ad-fs-logout-openid-connect)'
  id: totrans-260
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**OIDC 单点注销**：[https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/development/ad-fs-logout-openid-connect](https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/development/ad-fs-logout-openid-connect)'
- en: Use the examples with Azure AD to dive further into the OIDC implementation.
    These are covered here: [https://docs.microsoft.com/en-us/azure/active-directory/develop/sample-v2-code](https://docs.microsoft.com/en-us/azure/active-directory/develop/sample-v2-code)
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 Azure AD 的示例进一步深入了解 OIDC 实现。相关内容可以在此查看：[https://docs.microsoft.com/en-us/azure/active-directory/develop/sample-v2-code](https://docs.microsoft.com/en-us/azure/active-directory/develop/sample-v2-code)
- en: In conclusion, we can say that the specification was released in February 2014,
    was co-authored by Microsoft, and is used for web sign-in when consent is needed.
    The token format is JWT.
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: 总结来说，可以说该规范于 2014 年 2 月发布，由微软共同编写，并在需要同意时用于 Web 登录。令牌格式为 JWT。
- en: Pass-through authentication and seamless SSO
  id: totrans-263
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 透传身份验证和无缝 SSO
- en: Azure AD pass-through authentication provides an alternative to the Azure AD
    password hash synchronization and a local ADFS infrastructure if all claims-based
    applications are connected to the Azure AD. Microsoft offers with this service
    the capabilities to reduce the on-premise complexity and operations of ADFS. Furthermore,
    in combination with the password hash synchronization, customers get a redundant
    and flexible authentication environment. You are also able to include password
    protection features for your local Active Directory.
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: Azure AD 透传身份验证提供了一种替代 Azure AD 密码哈希同步和本地 ADFS 基础设施的方式，如果所有基于声明的应用程序都连接到 Azure
    AD。微软通过该服务提供减少 ADFS 本地复杂性和操作的能力。此外，结合密码哈希同步，客户可以获得冗余且灵活的身份验证环境。您还可以为本地 Active
    Directory 添加密码保护功能。
- en: Pass-through authentication supports the Azure AD conditional access policies,
    Azure MFA, and the blocking of legacy authentications to secure your organization's
    or customer environment. The communication of the on-premise agent and the Azure
    AD service is protected with certificate authentication. The feature can support
    multi forest infrastructures if forest trusts are enabled and the UPN-suffix routing
    is configured correctly. In combination with seamless SSO, users get a native
    SSO experience and are automatically signed into on-premise and cloud-based applications.
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: 透传身份验证支持 Azure AD 条件访问策略、Azure MFA 和阻止遗留身份验证，以保护您组织或客户环境的安全。 本地代理与 Azure AD
    服务之间的通信通过证书身份验证进行保护。 如果启用了林信任并正确配置了 UPN 后缀路由，该功能可以支持多林基础设施。 结合无缝 SSO，用户获得原生 SSO
    体验，并自动登录本地和基于云的应用程序。
- en: 'The following components are involved in the user sign-in process:'
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: 用户登录过程中涉及到以下组件：
- en: '**Azure AD STS**: **Stateless security token service** (**STS**) for processing
    sign-in requests and security token issuance'
  id: totrans-267
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Azure AD STS**：**无状态安全令牌服务**（**STS**）用于处理登录请求和安全令牌颁发'
- en: '**Azure Service Bus**: Communication component between cloud and on-premise'
  id: totrans-268
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Azure 服务总线**：云与本地之间的通信组件'
- en: '**Azure AD Connect Authentication Agent**: Listener and responder to password
    validation requests'
  id: totrans-269
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Azure AD Connect 身份验证代理**：密码验证请求的监听者和响应者'
- en: '**Azure SQL Database**: Storage for tenant associated authentication agents'
  id: totrans-270
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Azure SQL 数据库**：存储与租户相关的身份验证代理'
- en: '**Active Directory**: Store for local user accounts and passwords'
  id: totrans-271
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Active Directory**：本地用户帐户和密码的存储库'
- en: 'Let''s look at the following diagram to understand the functionality accessing
    the Outlook web app:'
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看一下以下图表，理解如何访问 Outlook Web 应用的功能：
- en: '![](img/b67aa456-062a-478f-b62f-516ab62a6463.png)'
  id: totrans-273
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b67aa456-062a-478f-b62f-516ab62a6463.png)'
- en: Path-through authentication flow
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: 透传身份验证流程
- en: Deep dive information about the service can be found at the following source: [https://docs.microsoft.com/en-us/azure/active-directory/hybrid/how-to-connect-pta-security-deep-dive](https://docs.microsoft.com/en-us/azure/active-directory/hybrid/how-to-connect-pta-security-deep-dive)
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: 关于该服务的深入信息可以在以下资源中找到：[https://docs.microsoft.com/en-us/azure/active-directory/hybrid/how-to-connect-pta-security-deep-dive](https://docs.microsoft.com/en-us/azure/active-directory/hybrid/how-to-connect-pta-security-deep-dive)
- en: 'The flow runs with the following steps:'
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: 流程包括以下步骤：
- en: User tries to access Outlook web app
  id: totrans-277
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 用户尝试访问 Outlook Web 应用
- en: When the user is not signed in, he will be redirected to the Azure AD sign-in
    page
  id: totrans-278
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当用户未登录时，他将被重定向到 Azure AD 登录页面
- en: User enters his username, and selects Next
  id: totrans-279
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 用户输入用户名，并选择“下一步”
- en: User enters his password, and selects Sign In
  id: totrans-280
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 用户输入密码，并选择“登录”
- en: The Azure AD receives the sign in request and puts the username/password encrypted
    with the public key of the authentication agents in a queue
  id: totrans-281
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Azure AD 接收登录请求，并将使用身份验证代理公钥加密的用户名/密码放入队列中
- en: The on-premise authentication agent retrieves the encrypted credentials from
    the queue
  id: totrans-282
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 本地身份验证代理从队列中检索加密的凭证
- en: The agent retrieves requests over a pre-established and persistent connection.
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
  zh: 代理通过预先建立的持久连接检索请求
- en: The agent decrypts the password with his private key
  id: totrans-284
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 代理使用私钥解密密码
- en: The agent validates the username and credential against the local Active Directory,
    like ADFS
  id: totrans-285
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 代理将用户名和凭证与本地 Active Directory 进行验证，例如 ADFS
- en: The Domain Controller evaluates the request and responds with the result the
    agent
  id: totrans-286
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 域控制器评估请求并向代理返回结果
- en: The agent responds back to Azure AD
  id: totrans-287
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 代理响应回 Azure AD
- en: Azure AD validates the answer—the user will be signed in or Azure MFA will be
    executed
  id: totrans-288
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Azure AD 验证答案——用户将成功登录，或执行 Azure MFA
- en: If all works fine, the user is signed in
  id: totrans-289
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果一切正常，用户将成功登录
- en: To choose the best option for your hybrid authentication solution, you can use
    the following source to help you with your decision [https://docs.microsoft.com/en-us/azure/security/azure-ad-choose-authn](https://docs.microsoft.com/en-us/azure/security/azure-ad-choose-authn).
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
  zh: 要为您的混合身份验证解决方案选择最佳选项，您可以使用以下资源帮助您做出决策 [https://docs.microsoft.com/en-us/azure/security/azure-ad-choose-authn](https://docs.microsoft.com/en-us/azure/security/azure-ad-choose-authn)。
- en: Multi-factor authentication
  id: totrans-291
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 多因素身份验证
- en: 'Protecting sensitive information or application access with additional authentication
    is an important task, not just in the on-premise world. In particular, it needs
    to be extended to every sensitive cloud service used. There are a lot of variations
    for providing this level of security and additional authentication, such as certificates,
    smart cards, or biometric options. For example, smart cards depend on special
    hardware used to read the smart card and cannot be used in every scenario without
    limiting the access to a special device or hardware. The following table gives
    you an overview of different attacks and how they can be mitigated with a well-designed
    and implemented security solution:'
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
  zh: 使用额外身份验证来保护敏感信息或应用程序访问是一个重要任务，不仅仅在本地环境中。在云服务中，这一点尤为重要，尤其是它需要扩展到每个使用的敏感云服务。为提供这种安全性和额外身份验证，有很多变化，例如证书、智能卡或生物识别选项。例如，智能卡依赖于专用硬件来读取智能卡，并且不能在没有限制访问特殊设备或硬件的情况下用于所有场景。以下表格为您提供不同攻击的概述，以及如何通过设计良好且实施的安全解决方案来缓解这些攻击：
- en: '| **Attacker** | **Possible security solution** |'
  id: totrans-293
  prefs: []
  type: TYPE_TB
  zh: '| **攻击者** | **可能的安全解决方案** |'
- en: '| Password brute force | Strong password policies |'
  id: totrans-294
  prefs: []
  type: TYPE_TB
  zh: '| 密码暴力破解 | 强密码策略 |'
- en: '| Shoulder surfing Key or screen logging | One-time password solution |'
  id: totrans-295
  prefs: []
  type: TYPE_TB
  zh: '| 肩膀窥视键盘或屏幕记录 | 一次性密码解决方案 |'
- en: '| Phishing or pharming | Server authentication (HTTPS) |'
  id: totrans-296
  prefs: []
  type: TYPE_TB
  zh: '| 钓鱼或植入攻击 | 服务器身份验证（HTTPS） |'
- en: '| Man-in-the-Middle Whaling (Social engineering) | Two-factor authentication
    Certificate or one-time password solution |'
  id: totrans-297
  prefs: []
  type: TYPE_TB
  zh: '| 中间人攻击 诱饵攻击（社交工程） | 双重身份验证 证书或一次性密码解决方案 |'
- en: '| Certificate authority corruption Cross Channel Attacks (CSRF) | Transaction
    signature and verification Non repudiation |'
  id: totrans-298
  prefs: []
  type: TYPE_TB
  zh: '| 证书授权机构篡改 跨通道攻击（CSRF） | 交易签名与验证 不可否认性 |'
- en: '| Man-in-the-Browser Key loggers | Secure PIN entry Secure messaging'
  id: totrans-299
  prefs: []
  type: TYPE_NORMAL
  zh: '| 浏览器中的中间人键盘记录器 | 安全的 PIN 输入 安全消息传递'
- en: Browser (read only)
  id: totrans-300
  prefs: []
  type: TYPE_NORMAL
  zh: 浏览器（只读）
- en: Push button (token)
  id: totrans-301
  prefs: []
  type: TYPE_NORMAL
  zh: 推送按钮（令牌）
- en: Three-factor authentication |
  id: totrans-302
  prefs: []
  type: TYPE_NORMAL
  zh: 三重身份验证 |
- en: Microsoft provides the Azure MFA functionality to address exactly the attacks
    described in the previous table. With a one-time password solution, you can build
    a very capable security solution to access information or applications from devices
    that cannot use smart cards as the additional authentication method. Otherwise,
    for small or medium business organizations, a smart card deployment, including
    the appropriate management solution, will be too costly, and the Azure MFA solution
    can be a good alternative for reaching the expected higher security level.
  id: totrans-303
  prefs: []
  type: TYPE_NORMAL
  zh: 微软提供的 Azure MFA 功能正是为了应对前表中描述的攻击。通过一次性密码解决方案，你可以构建一个非常强大的安全解决方案，来访问无法使用智能卡作为额外身份验证方法的设备上的信息或应用程序。否则，对于中小型企业组织来说，智能卡部署及其相关管理解决方案将过于昂贵，而
    Azure MFA 解决方案可以成为达到预期更高安全级别的良好替代方案。
- en: Azure MFA
  id: totrans-304
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Azure MFA
- en: 'Azure MFA provides the security of a two-step verification. The user gets many
    options to verify his identity, like phone calls, text messages, the mobile app
    with notifications, and created codes. Also, the integration of OATH hardware
    tokens is in the actual preview. To roll out the feature, you can use the following
    sources:'
  id: totrans-305
  prefs: []
  type: TYPE_NORMAL
  zh: Azure MFA 提供了两步验证的安全性。用户可以选择多种方式验证身份，例如电话、短信、带通知的移动应用程序以及生成的代码。此外，OATH 硬件令牌的集成正在实际预览中。要推出此功能，你可以使用以下来源：
- en: '[https://docs.microsoft.com/en-us/azure/active-directory/authentication/tutorial-mfa-applications](https://bit.ly/2Mjdbdj)'
  id: totrans-306
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://docs.microsoft.com/en-us/azure/active-directory/authentication/tutorial-mfa-applications](https://bit.ly/2Mjdbdj)'
- en: '[https://docs.microsoft.com/en-us/azure/active-directory/authentication/howto-mfa-getstarted](https://bit.ly/2McMo1B)'
  id: totrans-307
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://docs.microsoft.com/en-us/azure/active-directory/authentication/howto-mfa-getstarted](https://bit.ly/2McMo1B)'
- en: 'Azure MFA includes the capabilities to integrate on-premise components with
    the following two agents:'
  id: totrans-308
  prefs: []
  type: TYPE_NORMAL
  zh: Azure MFA 包括将本地组件与以下两个代理集成的功能：
- en: '**Active Directory Federation Services** (**ADFS**) 2016 and higher'
  id: totrans-309
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Active Directory 联邦服务** (**ADFS**) 2016 及更高版本'
- en: '**Network Policy Server** (**NPS**)'
  id: totrans-310
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**网络策略服务器** (**NPS**)'
- en: 'If you need to integrate older versions of ADFS or third-party RADIUS servers,
    the only option is to deploy the on-premise Azure MFA server. With this integration
    there are some limitations, such as:'
  id: totrans-311
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你需要集成旧版本的 ADFS 或第三方 RADIUS 服务器，唯一的选择是部署本地 Azure MFA 服务器。通过此集成，会有一些限制，例如：
- en: No synchronization of the registration information
  id: totrans-312
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 无法同步注册信息
- en: Usage of two registration and user portals
  id: totrans-313
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用两个注册和用户门户
- en: Additional MFA infrastructure to manage
  id: totrans-314
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 需要管理额外的 MFA 基础设施
- en: In the next section, we will discuss the certificate authentication option.
  id: totrans-315
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的部分，我们将讨论证书认证选项。
- en: Certificate authentication
  id: totrans-316
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 证书认证
- en: 'Azure AD supports the use of certificate-based authentication. Devices can
    use a client certificate to connect. This feature eliminates the need to enter
    a username/password combination to access your mail and Microsoft applications
    on your mobile device. You can use the following two sources to gather more information
    on the specific platform:'
  id: totrans-317
  prefs: []
  type: TYPE_NORMAL
  zh: Azure AD 支持使用基于证书的认证。设备可以使用客户端证书进行连接。此功能消除了在移动设备上访问邮件和 Microsoft 应用程序时输入用户名/密码组合的需要。你可以使用以下两个来源获取更多关于特定平台的信息：
- en: '**Android**: [https://docs.microsoft.com/en-us/azure/active-directory/authentication/active-directory-certificate-based-authentication-android](https://docs.microsoft.com/en-us/azure/active-directory/authentication/active-directory-certificate-based-authentication-android)'
  id: totrans-318
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Android**: [https://docs.microsoft.com/en-us/azure/active-directory/authentication/active-directory-certificate-based-authentication-android](https://docs.microsoft.com/en-us/azure/active-directory/authentication/active-directory-certificate-based-authentication-android)'
- en: '**iOS**: [https://docs.microsoft.com/en-us/azure/active-directory/authentication/active-directory-certificate-based-authentication-ios](https://docs.microsoft.com/en-us/azure/active-directory/authentication/active-directory-certificate-based-authentication-ios)'
  id: totrans-319
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**iOS**：[https://docs.microsoft.com/en-us/azure/active-directory/authentication/active-directory-certificate-based-authentication-ios](https://docs.microsoft.com/en-us/azure/active-directory/authentication/active-directory-certificate-based-authentication-ios)'
- en: Otherwise, you can use the device authentication as an alternative method. We
    describe the device authentication in the next section.
  id: totrans-320
  prefs: []
  type: TYPE_NORMAL
  zh: 否则，你可以使用设备认证作为替代方法。我们将在下一节中描述设备认证。
- en: Device authentication
  id: totrans-321
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设备认证
- en: 'The other method that Microsoft includes in the multi-factor solution framework
    is the device authentication. The device authentication can be used with the following
    registration or join method of the device:'
  id: totrans-322
  prefs: []
  type: TYPE_NORMAL
  zh: 微软在多因素解决方案框架中包含的另一种方法是设备认证。设备认证可以通过以下设备注册或加入方法使用：
- en: Azure AD registration
  id: totrans-323
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Azure AD 注册
- en: Workplace Join
  id: totrans-324
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Workplace Join
- en: Azure AD Join
  id: totrans-325
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Azure AD 加入
- en: Hybrid Azure AD Join
  id: totrans-326
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 混合 Azure AD 加入
- en: You will find more information about all the different options at the following
    source: [https://docs.microsoft.com/en-us/azure/active-directory/devices/overview](https://docs.microsoft.com/en-us/azure/active-directory/devices/overview).
    You can use these states for conditional access in your on-premise ADFS or your
    Azure AD.
  id: totrans-327
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在以下来源找到有关所有不同选项的更多信息：[https://docs.microsoft.com/en-us/azure/active-directory/devices/overview](https://docs.microsoft.com/en-us/azure/active-directory/devices/overview)。你可以在本地
    ADFS 或 Azure AD 中使用这些状态进行条件访问。
- en: To deploy on-premise conditional access with your ADFS infrastructure, you can
    use the following source: [https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/configure-device-based-conditional-access-on-premises](https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/configure-device-based-conditional-access-on-premises).
    For cloud environments, we recommend the following source to start your journey
    into conditional access: [https://docs.microsoft.com/en-us/azure/active-directory/conditional-access/overview](https://docs.microsoft.com/en-us/azure/active-directory/conditional-access/overview)[.](https://bit.ly/2W2nV4h)
  id: totrans-328
  prefs: []
  type: TYPE_NORMAL
  zh: 要在你的 ADFS 基础设施上部署本地条件访问，可以参考以下来源：[https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/configure-device-based-conditional-access-on-premises](https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/configure-device-based-conditional-access-on-premises)。对于云环境，我们建议以下来源作为开始条件访问之旅的起点：[https://docs.microsoft.com/en-us/azure/active-directory/conditional-access/overview](https://docs.microsoft.com/en-us/azure/active-directory/conditional-access/overview)[.](https://bit.ly/2W2nV4h)
- en: Biometric authentication
  id: totrans-329
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 生物识别认证
- en: Windows Hello is another authentication solution that uses biometric user information
    like the fingerprint, face, or iris recognition. The functionality is available
    for personal or enterprise-grade security to provide authentication. You also
    can use this feature against your on-premise ADFS and your Azure AD. Use the following
    source to plan and deploy **Windows Hello** in your organization: [https://docs.microsoft.com/en-us/windows/security/identity-protection/hello-for-business/hello-planning-guide](https://docs.microsoft.com/en-us/windows/security/identity-protection/hello-for-business/hello-planning-guide)[.](https://bit.ly/2ELPBoL)
  id: totrans-330
  prefs: []
  type: TYPE_NORMAL
  zh: Windows Hello 是另一种使用生物识别用户信息（如指纹、人脸或虹膜识别）的认证解决方案。此功能适用于个人或企业级安全，提供认证服务。你还可以将此功能应用于本地
    ADFS 和 Azure AD。使用以下来源规划并在组织中部署**Windows Hello**：[https://docs.microsoft.com/en-us/windows/security/identity-protection/hello-for-business/hello-planning-guide](https://docs.microsoft.com/en-us/windows/security/identity-protection/hello-for-business/hello-planning-guide)[.](https://bit.ly/2ELPBoL)
- en: Summary
  id: totrans-331
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: Working through the chapter and the given references, you have worked through
    many aspects and practical examples of the most important authentication protocols.
    We have tried to provide you with a very crisp reference card with much valid
    additional information about this topic. You should be able to use WS-Federation,
    SAML, OAuth 2.0, and OIDC in your design or configuration work for customers or
    your own organization. As already mentioned at the beginning of the chapter, we
    will use the knowledge in the upcoming chapters.
  id: totrans-332
  prefs: []
  type: TYPE_NORMAL
  zh: 通过学习本章及给定的参考资料，你已经深入了解了许多最重要的认证协议的各个方面和实际示例。我们尽力为你提供了一张简洁的参考卡片，包含了有关此主题的许多有效附加信息。你应该能够在为客户或自己组织的设计或配置工作中使用
    WS-Federation、SAML、OAuth 2.0 和 OIDC。正如本章开头所提到的，我们将在接下来的章节中使用这些知识。
- en: In the next [Chapter 7](468509fa-856c-411d-abdb-e9a39c266750.xhtml), *Deploying
    Solutions on Azure AD and ADFS*, we start to work on it directly!
  id: totrans-333
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的[第七章](468509fa-856c-411d-abdb-e9a39c266750.xhtml)，*在Azure AD和ADFS上部署解决方案*，我们将直接开始工作！
