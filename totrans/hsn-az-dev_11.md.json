["```\nhttps://myaccount.blob.core.windows.net/securecontainer/blob.txt?sv=2015-04-05&st=2015-04-29T22%3A18%3A26Z&se=2015-04-30T02%3A23%3A26Z&sr=b&sp=rw&sip=168.1.5.60-168.1.5.70&spr=https&sig=Z%2FRHIX5Xcg0Mq2rqI3OlWTjEg2tYkboXr1P9ZUXDtkk%3D\n```", "```\nusing Microsoft.WindowsAzure.Storage;\n\nnamespace TableStorage\n{\n    internal class Program\n    {\n        private static void Main()\n        {\n            var storageAccount = CloudStorageAccount.Parse(\"<connection-string>\");\n            var tableClient = storageAccount.CreateCloudTableClient();\n            var table = tableClient.GetTableReference(\"orders\");\n\n            table.CreateIfNotExists();\n        }\n    }\n}\n```", "```\nvar op = TableOperation.Insert(new DynamicTableEntity(\"orders\", Guid.NewGuid().ToString(), \"*\",\n  new Dictionary<string, EntityProperty>\n  {\n    {\"Created\", EntityProperty.GeneratePropertyForDateTimeOffset(DateTimeOffset.Now)},\n    {\"CustomerId\", EntityProperty.GeneratePropertyForString(\"Customer-001\")}\n  }));\n\ntable.Execute(op);\n```", "```\nvar query = new TableQuery();\nvar result = table.ExecuteQuery(query);\n\nforeach (var entity in result)\n{\n  Console.WriteLine($\"{entity.PartitionKey}|{entity.RowKey}|{entity.Timestamp}|{entity[\"Created\"].DateTimeOffsetValue}|{entity[\"CustomerId\"].StringValue}\");\n}\n```", "```\nvar query =\n  new TableQuery().Where(\n    TableQuery.GenerateFilterCondition(\"PartitionKey\", QueryComparisons.Equal, \"orders\"));\n```", "```\n$acctKey = ConvertTo-SecureString -String \"<key>\" -AsPlainText -Force\n$credential = New-Object System.Management.Automation.PSCredential -ArgumentList \"Azure\\handsonazurestore\", $acctKey\nNew-PSDrive -Name Z -PSProvider FileSystem -Root \"\\\\handsonazurestore.file.core.windows.net\\handsonazure\" -Credential $credential -Persist\n```", "```\nusing System;\nusing Microsoft.WindowsAzure.Storage;\nusing Microsoft.WindowsAzure.Storage.Queue;\n\nnamespace QueueStorage.Producer\n{\n    internal class Program\n    {\n        private static void Main()\n        {\n            var storageAccount = CloudStorageAccount.Parse(\"UseDevelopmentStorage=true\");\n            var queueClient = storageAccount.CreateCloudQueueClient();\n            var queue = queueClient.GetQueueReference(\"orders\");\n\n            queue.CreateIfNotExists();\n\n            var message = new CloudQueueMessage($\"New order ID: {Guid.NewGuid()}\");\n            queue.AddMessage(message);\n        }\n    }\n}\n```", "```\nusing System;\nusing Microsoft.WindowsAzure.Storage;\n\nnamespace QueueStorage.Consumer\n{\n    internal class Program\n    {\n        private static void Main()\n        {\n            var storageAccount = CloudStorageAccount.Parse(\"UseDevelopmentStorage=true\");\n            var queueClient = storageAccount.CreateCloudQueueClient();\n            var queue = queueClient.GetQueueReference(\"orders\");\n\n            var message = queue.GetMessage();\n            Console.WriteLine(message.AsString);\n            Console.ReadLine();\n        }\n    }\n}\n```", "```\nusing System;\nusing Microsoft.WindowsAzure.Storage;\n\nnamespace BlobStorage\n{\n    internal class Program\n    {\n        private static void Main()\n        {\n            var storageAccount = CloudStorageAccount.Parse(\"UseDevelopmentStorage=true\");\n            var cloudBlobClient = storageAccount.CreateCloudBlobClient();\n            var container = cloudBlobClient.GetContainerReference(\"handsonazure\");\n\n            container.CreateIfNotExists();\n\n            var blob = container.GetBlockBlobReference(\"foo.txt\"); \n            blob.UploadText(\"This is my first blob!\");\n\n            Console.ReadLine();\n        }\n    }\n}\n```", "```\nusing System;\nusing Microsoft.WindowsAzure.Storage.Blob;\n\nnamespace BlobStorage\n{\n    internal class Program\n    {\n        private static void Main()\n        {\n            var container = new CloudBlobContainer(new Uri(\"<container-uri>\"));\n            var blobs = container.ListBlobs();\n\n            foreach (var blob in blobs)\n            {\n                Console.WriteLine(blob.Uri);\n            }\n\n            Console.ReadLine();\n        }\n    }\n}\n```", "```\nusing System;\nusing Microsoft.WindowsAzure.Storage;\nusing Microsoft.WindowsAzure.Storage.Blob;\n\nnamespace BlobStorage\n{\n    internal class Program\n    {\n        private static void Main()\n        {\n            var storageAccount = CloudStorageAccount.Parse(\"UseDevelopmentStorage=true\");\n            var cloudBlobClient = storageAccount.CreateCloudBlobClient();\n            var container = cloudBlobClient.GetContainerReference(\"blob\");\n\n            container.CreateIfNotExists(BlobContainerPublicAccessType.Blob);\n\n            var blob = container.GetBlockBlobReference(\"foo.txt\"); \n            blob.UploadText(\"This is my first blob!\");\n\n            Console.ReadLine();\n        }\n    }\n}\n```"]