["```\n#profile/manifests/jenkins.pp\nclass profile::jenkins {\n\n  class { 'jenkins': lts => true }\n\n  package {'git': ensure => latest }\n\n  file {'/tmp/pdk.rpm':\n    ensure => file,\n    source => 'https://puppet-pdk.s3.amazonaws.com/pdk/1.7.0.0/repos/el/7/puppet5/x86_64/pdk-1.7.0.0-1.el7.x86_64.rpm',\n  }\n\n# Install latest PDK directly from Puppet Source\n  package {'pdk':\n    ensure => installed,\n    source => '/tmp/pdk.rpm',\n    require => File['/tmp/pdk.rpm'],\n  }\n\n}\n```", "```\njenkins::plugin {'<plugin': version => 'version' } \n```", "```\nprofile/\n└── manifests\n    └── jenkins.pp\n```", "```\n[rary@workstation ~]# cd profile/\n[rary@workstation profile]# git init\nInitialized empty Git repository in ~/profile/.git/\n```", "```\n[rary@workstation profile]# git add -A\n[rary@workstation profile]# git commit -m 'initial commit'\n[master (root-commit) 64f24a1] initial commit\n 1 file changed, 19 insertions(+)\n create mode 100644 manifests/jenkins.pp\n[root@pe-puppet-master profile]# git status\n# On branch master\nnothing to commit, working directory clean\n```", "```\n[rary@workstation profile]# git remote add origin git@github.com:RARYates/cicd-walkthrough-profile.git\n[rary@workstation profile]# git push origin master\nCounting objects: 4, done.\nDelta compression using up to 2 threads.\nCompressing objects: 100% (2/2), done.\nWriting objects: 100% (4/4), 519 bytes | 0 bytes/s, done.\nTotal 4 (delta 0), reused 0 (delta 0)\nTo git@github.com:RARYates/cicd-walkthrough-profile.git\n * [new branch] master -> master\n```", "```\npipeline {\n    agent any\n\n    stages {\n        stage('Test') {\n            steps {\n                sh 'find manifests -name *.pp -exec /usr/local/bin/puppet parser validate {} +;'\n            }\n        }\n    }\n}\n```", "```\n[root@pe-puppet-master profile]# git checkout -b pdk\nSwitched to a new branch 'pdk'\n```", "```\n[rary@workstation profile]# rm .gitlab-ci.yml .travis.yml appveyor.yml\nrm: remove regular file ‘.gitlab-ci.yml’? y\nrm: remove regular file ‘.travis.yml’? y\nrm: remove regular file ‘appveyor.yml’? y\n[rary@workstation profile]# git add -A\n[rary@workstation profile]# git commit -m 'Initial PDK integration'\n[pdk 7eb5009] Initial PDK integration\n 10 files changed, 350 insertions(+)\n create mode 100644 .gitignore\n create mode 100644 .pdkignore\n create mode 100644 .rspec\n create mode 100644 .rubocop.yml\n create mode 100644 .yardopts\n create mode 100644 Gemfile\n create mode 100644 Rakefile\n create mode 100644 metadata.json\n create mode 100644 spec/default_facts.yml\n create mode 100644 spec/spec_helper.rb\n```", "```\npipeline {\n  agent any\n    stages {\n        stage('Test') {\n            steps {\n                sh '/usr/local/bin/pdk validate'\n            }\n        }\n    }\n}\n```", "```\nwarning: puppet-lint: manifests/jenkins.pp:1:1: class not documented\nwarning: puppet-lint: manifests/jenkins.pp:14:12: indentation of => is not properly aligned (expected in column 13, but found it in column 12)\nwarning: puppet-lint: manifests/jenkins.pp:15:12: indentation of => is not properly aligned (expected in column 13, but found it in column 12)\n```", "```\n# Jenkins Profile\nclass profile::jenkins {\n\n  class { 'jenkins': lts => true }\n\n  package {'git': ensure => latest }\n\n  file {'/tmp/pdk.rpm':\n    ensure => file,\n    source => 'https://puppet-pdk.s3.amazonaws.com/pdk/1.7.0.0/repos/el/7/puppet5/x86_64/pdk-1.7.0.0-1.el7.x86_64.rpm',\n  }\n\n# Install latest PDK directly from Puppet Source\n  package {'pdk':\n    ensure  => installed,\n    source  => '/tmp/pdk.rpm',\n    require => File['/tmp/pdk.rpm'],\n  }\n\n}\n```", "```\n[rary@workstation profile]# git checkout master\nSwitched to branch 'master'\n\n[rary@workstation profile]# git pull origin master\nremote: Counting objects: 1, done.\nremote: Total 1 (delta 0), reused 0 (delta 0), pack-reused 0\nUnpacking objects: 100% (1/1), done.\nFrom github.com:RARYates/cicd-walkthrough-profile\n * branch master -> FETCH_HEAD\nUpdating 1b91eec..639f8f6\nFast-forward\n ...\n\n[rary@workstation profile]# git checkout -b rspec\nSwitched to a new branch 'rspec'\n```", "```\n[rary@workstation profile]# mv manifests/jenkins.pp manifests/jenkins.pp.bak;pdk new class jenkins;mv manifests/jenkins.pp.bak manifests/jenkins.pp\npdk (INFO): Creating '/root/profile/manifests/jenkins.pp' from template.\npdk (INFO): Creating '/root/profile/spec/classes/jenkins_spec.rb' from template.\nmv: overwrite ‘manifests/jenkins.pp’? y\n```", "```\n#profile/.fixtures.yml\nfixtures:\n  repositories:\n    jenkins:\n      repo: \"git://github.com/voxpupuli/puppet-jenkins.git\"\n      ref: \"1.7.0\"\n    apt: \"https://github.com/puppetlabs/puppetlabs-apt\"\n    stdlib: \"https://github.com/puppetlabs/puppetlabs-stdlib\"\n    java: \"https://github.com/puppetlabs/puppetlabs-java\"\n    zypprepo: \"https://github.com/voxpupuli/puppet-zypprepo.git\"\n    archive: \"https://github.com/voxpupuli/puppet-archive.git\"\n    systemd: \"https://github.com/camptocamp/puppet-systemd.git\"\n    transition: \"https://github.com/puppetlabs/puppetlabs-transition.git\"\n\n```", "```\n# Brings in our Global Configuration from spec/spec_helper.rb\nrequire 'spec_helper'\n\n# Tells RSpec with manifest to check, in this case: profile/manifests.jenkins.pp\ndescribe 'profile::jenkins' do\n\n# Runs the test once for each operating system listed in metadata.json, with a suite of default facts\n  on_supported_os.each do |os, os_facts|\n    context \"on #{os}\" do\n      let(:facts) { os_facts }\n\n# The manifest should compile into a catalog\n      it { is_expected.to compile }\n    end\n  end\nend\n```", "```\nrequire 'spec_helper'\n\ndescribe 'profile::jenkins' do\n  on_supported_os.each do |os, os_facts|\n     context \"on #{os}\" do\n\n# Add a new ruby variable that returns true when the OS major release version is 6\n      systemd_fact = case os_facts[:operatingsystemmajrelease]\n                     when '6'\n                       { systemd: false }\n                     else\n                       { systemd: true }\n                     end\n# Change our facts to merge in our systemd_fact\n      let :facts { os_facts.merge(systemd_fact) }\n\n      it { is_expected.to compile }\n    end\n  end\nend\n```", "```\n[root@pe-puppet-master profile]# pdk test unit\npdk (INFO): Using Ruby 2.4.4\npdk (INFO): Using Puppet 5.5.2\n[![](img/68c8edde-5976-4632-9701-3c3dc7112db7.png)] Preparing to run the unit tests.\n[![](img/68c8edde-5976-4632-9701-3c3dc7112db7.png)] Running unit tests.\n Evaluated 4 tests in 3.562477833 seconds: 0 failures, 0 pending.\n```", "```\npipeline {\n    agent any\n\n    stages {\n        stage('Validate') {\n            steps {\n                sh '/usr/local/bin/pdk validate'\n            }\n        }\n        stage ('Unit Test') {\n            steps {\n                sh '/usr/local/bin/pdk test unit'\n             }\n        }\n    }\n}\n```", "```\n[root@pe-puppet-master profile]# git commit -m 'Initial RSpec Framework'\n[rspec 2bc4765] Initial RSpec Framework\n 3 files changed, 37 insertions(+), 1 deletion (-)\n create mode 100644 .fixtures.yml\n create mode 100644 spec/classes/jenkins_spec.rb\n[root@pe-puppet-master profile]# git push origin rspec\nCounting objects: 8, done.\nDelta compression using up to 2 threads.\nCompressing objects: 100% (5/5), done.\nWriting objects: 100% (6/6), 892 bytes | 0 bytes/s, done.\nTotal 6 (delta 1), reused 0 (delta 0)\nremote: Resolving deltas: 100% (1/1), completed with 1 local object.\nTo git@github.com:RARYates/cicd-walkthrough-profile.git\n * [new branch] rspec -> rspec\n```", "```\nrequire 'spec_helper'\n\ndescribe 'profile::jenkins' do\n  on_supported_os.each do |os, os_facts|\n    context \"on #{os}\" do\n      systemd_fact = case os_facts[:operatingsystemmajrelease]\n                     when '6'\n                       { systemd: false }\n                     else\n                       { systemd: true }\n                     end\n      let :facts do\n        os_facts.merge(systemd_fact)\n      end\n\n      ####  NEW CODE  ####\n\n      context 'With Defaults' do\n        it do\n          # Jenkins must be the LTS\n          is_expected.to contain_class('jenkins').with('lts' => 'true')\n\n          # We're unsure if we want latest git, but we want to make sure it's installed\n          is_expected.to contain_package('git')\n\n          # Download this particular version of the PDK\n          is_expected.to contain_file('/tmp/pdk.rpm').with('ensure' => 'file',\n                                                           'source' => 'https://puppet-pdk.s3.amazonaws.com/pdk/1.7.0.0/repos/el/7/puppet5/x86_64/pdk-1.7.0.0-1.el7.x86_64.rpm')\n\n          # Install PDK from Disk. We'll change this test if we place this in a proper yumrepo one day\n          # Also not that that_requires, and  the lack of quotes within the File array\n          is_expected.to contain_package('pdk').with('ensure'  => 'installed',\n                                                     'source'  => '/tmp/pdk.rpm').that_requires('File[/tmp/pdk.rpm]')\n        end\n      end\n\n      ### END NEW CODE ###\n\n      it { is_expected.to compile }\n    end\n  end\nend\n```", "```\n# Jenkins Profile\nclass profile::jenkins {\n\n  class {'jenkins':\n    lts => true,\n  }\n\n  package {'git': ensure => latest }\n\n  file {'/tmp/pdk.rpm':\n    ensure => file,\n    source => 'https://puppet-pdk.s3.amazonaws.com/pdk/1.7.0.0/repos/el/7/puppet5/x86_64/pdk-1.7.0.0-1.el7.x86_64.rpm',\n  }\n\n# Install latest PDK directly from Puppet Source\n  package {'pdk':\n    ensure => installed,\n    source => '/tmp/pdk.rpm',\n    require => File['/tmp/pdk.rpm'],\n  }\n\n  if $::virtual != 'docker' {\n    class {'docker':\n      docker_users => ['jenkins']\n    }\n  }\n\n  include rvm\n\n  rvm::system_user { 'jenkins':}\n\n  rvm_system_ruby {'ruby-2.4.1':\n    ensure => 'present',\n    default_use => true,\n  }\n\n  rvm_gem {['ruby-2.4.1/librarian-puppet',\n            'ruby-2.4.1/test-kitchen',\n            'ruby-2.4.1/executable-hooks',\n            'ruby-2.4.1/kitchen-inspec',\n            'ruby-2.4.1/kitchen-puppet',\n            'ruby-2.4.1/kitchen-docker']:\n    ensure => installed,\n    require => Rvm_system_ruby['ruby-2.4.1'],\n    notify => Service['jenkins'],\n  }\n\n}\n```", "```\n---\ndriver:\n  name: docker\n  privileged: true\n  use_sudo: false\n  run_command: /usr/sbin/init\n\nprovisioner:\n  name: puppet_apply\n  # Not installing chef since inspec is used for testing\n  require_chef_for_busser: false\n  manifests_path: test\n  modules_path: test/modules\n\nverifier:\n  name: inspec\n\nplatforms:\n- name: centos\n  driver_config:\n    image: centos/systemd\n    platform: centos\n    run_command: /usr/sbin/init\n    privileged: true\n    provision_command:\n      - yum install -y initscripts\n      - sed -i 's/UsePAM yes/UsePAM no/g' /etc/ssh/sshd_config\n      - systemctl enable sshd.service\n\nsuites:\n  - name: default\n    provisioner:\n      manifest: jenkins.pp\n    lifecycle:\n      pre_verify:\n      - sleep 30\n```", "```\nforge 'https://forge.puppetlabs.com'\nmod 'rtyler/jenkins',\n  :git => 'https://github.com/voxpupuli/puppet-jenkins.git',\n  :ref => 'v1.7.0'\n\n#mod 'puppetlabs-stdlib'\nmod 'darin-zypprepo'\nmod 'puppet-archive'\nmod 'camptocamp-systemd'\nmod 'puppetlabs-transition'\nmod 'maestrodev-rvm'\nmod 'puppetlabs-docker'\n\nmod 'puppetlabs-java'\nmod 'puppetlabs-apt'\n\nexclusion 'puppetlabs-apt'\nexclusion 'puppetlabs-java'\n```", "```\npipeline {\n    agent any\n\n    stages {\n        stage('Validate') {\n            steps {\n                sh '/usr/local/bin/pdk validate'\n            }\n        }\n        stage ('Unit Test') {\n            steps {\n                sh '/usr/local/bin/pdk test unit'\n             }\n        }\n        stage ('Integration Test') {\n            steps {\n                sh './acceptance.sh'\n             }\n        }\n    }\n```", "```\npost {\n        always {\n            deleteDir()\n        }\n    }\n}\n```", "```\n#profile/acceptance.sh\n#!/bin/bash\nPATH=$PATH:/usr/local/rvm/gems/ruby-2.4.1/bin/:/usr/local/bin\nsource /usr/local/rvm/bin/rvm\n/usr/local/rvm/gems/ruby-2.4.1/wrappers/kitchen test\n```", "```\n# profile/integration/default/jenkins_spec.rb\ncontrol 'Jenkins Status' do\n  describe package('jenkins') do\n    it { is_expected.to be_installed }\n  end\n\n  describe http('http://localhost:8080', open_timeout: 60, read_timeout: 60) do\n    its('status') { is_expected.to cmp 200 }\n  end\n\ndescribe service('jenkins') do\n    it { is_expected.to be_running }\n  end\nend\n```", "```\nrary at Ryans-MacBook-Pro-3 in ~/workspace/packt\n$ tree cicd-walkthrough-profile\ncicd-walkthrough-profile\n├── Jenkinsfile # Test to be Performed\n├── Puppetfile # Dependencies for Kitchen Tests\n├── acceptance.sh # Command to run Test Kitchen for Jenkins\n├── manifests\n│   └── jenkins.pp # Jenkins Profile\n├── spec\n│   ├── classes\n│   │   └── jenkins_spec.rb # Our Inspec test for the Kitchen Phase\n└── test\n ├── integration\n │   └── default\n │       └── jenkins_spec.rb # Our RSpec Test, checking the Catalog\n └── jenkins.pp # Our example manifest that applies the Profile for Kitchen\n\n13 directories, 18 files\n```"]