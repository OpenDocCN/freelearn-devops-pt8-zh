["```\n      package { 'sudo' : ensure => installed }\n      package { 'unzip' : ensure => installed }\n      package { 'locate' : ensure => installed }\n      package { 'lsof' : ensure => installed }\n      package { 'cron' : ensure => installed }\n      package { 'rubygems' : ensure => installed }\n    ```", "```\n      package\n      {\n        [ 'cron',\n        'locate',\n        'lsof',\n        'rubygems',\n        'sudo',\n        'unzip' ]:\n        ensure => installed,\n      }\n    ```", "```\n      class apache {\n        File {\n          owner => 'apache',\n          group => 'apache',\n          mode => 0644,\n        }\n      }\n    ```", "```\n      file {'/var/www/html/index.html':\n        content => \"<html><body><h1><a\n          href='cookbook.html'>Cookbook!\n          </a></h1></body></html>\\n\",\n      }\n      file {'/var/www/html/cookbook.html':\n        content =>\n          \"<html><body><h2>PacktPub</h2></body></html>\\n\",\n      }\n\n    ```", "```\n    t@mylaptop ~/puppet $ git pull origin production\n    From git.example.com:repos/puppet\n     * branch            production -> FETCH_HEAD\n    Already up-to-date.\n    t@mylaptop ~/puppet $ cd modules\n    t@mylaptop ~/puppet/modules $ mkdir -p apache/manifests\n    t@mylaptop ~/puppet/modules $ vim apache/manifests/init.pp\n    t@mylaptop ~/puppet/modules $ cd ..\n    t@mylaptop ~/puppet $ vim manifests/site.pp \n    t@mylaptop ~/puppet $ git status\n    On branch production\n    Changes not staged for commit:\n    modified:   manifests/site.pp\n    Untracked files:\n    modules/apache/\n    t@mylaptop ~/puppet $ git add manifests/site.pp modules/apache\n    t@mylaptop ~/puppet $ git commit -m 'adding apache module'\n    [production d639a86] adding apache module\n     2 files changed, 14 insertions(+)\n     create mode 100644 modules/apache/manifests/init.pp\n    t@mylaptop ~/puppet $ git push origin production\n    Counting objects: 13, done.\n    Delta compression using up to 4 threads.\n    Compressing objects: 100% (6/6), done.\n    Writing objects: 100% (8/8), 885 bytes | 0 bytes/s, done.\n    Total 8 (delta 0), reused 0 (delta 0)\n    remote: To puppet@puppet.example.com:/etc/puppet/environments/puppet.git\n    remote:    832f6a9..d639a86  production -> production\n    remote: Already on 'production'\n    remote: From /etc/puppet/environments/puppet\n    remote:    832f6a9..d639a86  production -> origin/production\n    remote: Updating 832f6a9..d639a86\n    remote: Fast-forward\n    remote:  manifests/site.pp                |    1 +\n    remote:  modules/apache/manifests/init.pp |   13 +++++++++++++\n    remote:  2 files changed, 14 insertions(+)\n    remote:  create mode 100644 modules/apache/manifests/init.pp\n    To git@git.example.com:repos/puppet.git\n     832f6a9..d639a86  production -> production\n\n    ```", "```\n    Notice: /Stage[main]/Apache/File[/var/www/html/cookbook.html]/ensure: defined content as '{md5}493473fb5bde778ca93d034900348c5d'\n    Notice: /Stage[main]/Apache/File[/var/www/html/index.html]/ensure: defined content as '{md5}184f22c181c5632b86ebf9a0370685b3'\n    Notice: Finished catalog run in 2.00 seconds\n    [root@hiera-test ~]# ls -l /var/www/html\n    total 8\n    -rw-r--r--. 1 apache apache 44 Sep 15 12:00 cookbook.html\n    -rw-r--r--. 1 apache apache 73 Sep 15 12:00 index.html\n\n    ```", "```\n  Package { ensure => 'installed' }\n  Service {\n    hasrestart => true,\n    enable     => true,\n    ensure     => true,\n  }\n```", "```\n      define tmpfile() {\n        file { \"/tmp/${name}\": content => \"Hello, world\\n\",\n        }\n      }\n      tmpfile { ['a', 'b', 'c']: }\n    ```", "```\n    [root@hiera-test ~]# vim tmp.pp\n    [root@hiera-test ~]# puppet apply tmp.pp \n    Notice: Compiled catalog for hiera-test.example.com in environment production in 0.11 seconds\n    Notice: /Stage[main]/Main/Tmpfile[a]/File[/tmp/a]/ensure: defined content as '{md5}a7966bf58e23583c9a5a4059383ff850'\n    Notice: /Stage[main]/Main/Tmpfile[b]/File[/tmp/b]/ensure: defined content as '{md5}a7966bf58e23583c9a5a4059383ff850'\n    Notice: /Stage[main]/Main/Tmpfile[c]/File[/tmp/c]/ensure: defined content as '{md5}a7966bf58e23583c9a5a4059383ff850'\n    Notice: Finished catalog run in 0.09 seconds\n    [root@hiera-test ~]# cat /tmp/{a,b,c}\n    Hello, world\n    Hello, world\n    Hello, world\n\n    ```", "```\ntmpfile { 'foo': }\n```", "```\n  define tmpfile($greeting) {\n    file { \"/tmp/${name}\": content => $greeting,\n    }\n  }\n```", "```\n  tmpfile{ 'foo':\n    greeting => \"Good Morning\\n\",\n  }\n```", "```\n  define webapp($domain,$path,$platform) {\n    ...\n  }\n  webapp { 'mywizzoapp':\n    domain   => 'mywizzoapp.com',\n    path     => '/var/www/apps/mywizzoapp',\n    platform => 'Rails',\n  }\n```", "```\n  define tmpfile($greeting,$mode='0644') {\n    ...\n  }\n```", "```\n      node 'cookbook' {\n        if tagged('cookbook') {\n          notify { 'tagged cookbook': }\n        }\n      }\n    ```", "```\n    root@cookbook:~# puppet agent -vt\n    Info: Caching catalog for cookbook\n    Info: Applying configuration version '1410848350'\n    Notice: tagged cookbook\n    Notice: Finished catalog run in 1.00 seconds\n\n    ```", "```\n      node 'cookbook' {\n        tag('tagging')\n        class {'tag_test': }\n      }\n    ```", "```\n      class tag_test {\n        if tagged('tagging') {\n          notify { 'containing node/class was tagged.': }\n        }\n      }\n    ```", "```\n    root@cookbook:~# puppet agent -vt\n    Info: Caching catalog for cookbook\n    Info: Applying configuration version '1410851300'\n    Notice: containing node/class was tagged.\n    Notice: Finished catalog run in 0.22 seconds\n\n    ```", "```\n      node cookbook {\n        class {'first_class': }\n        class {'second_class': }\n      }\n      class first_class {\n        notify { 'First Class': }\n      }\n      class second_class {\n        notify {'Second Class': }\n      }\n    ```", "```\n    root@cookbook:~# puppet agent -t\n    Notice: Second Class\n    Notice: First Class\n    Notice: Finished catalog run in 0.22 seconds\n\n    ```", "```\n    root@cookbook:~# puppet agent -t --tags first_class\n    Notice: First Class\n    Notice: Finished catalog run in 0.07 seconds\n\n    ```", "```\n  class firewall::service {\n    service { 'firewall': ... \n    }\n    File <| tag == 'firewall-snippet' |> ~> Service['firewall'] \n  }\n  class myapp { \n    file { '/etc/firewall.d/myapp.conf': tag => 'firewall-snippet', ... \n    } \n  }\n```", "```\n      class admin::stages {\n        stage { 'first': before => Stage['main'] }\n        stage { 'last': require => Stage['main'] }\n        class me_first {\n          notify { 'This will be done first': }\n        }\n        class me_last {\n          notify { 'This will be done last': }\n        }\n        class { 'me_first':\n          stage => 'first',\n        }\n        class { 'me_last':\n          stage => 'last',\n        }\n      }\n    ```", "```\n      node 'cookbook' {\n        class {'first_class': }\n        class {'second_class': }\n        include admin::stages\n      }\n    ```", "```\n    root@cookbook:~# puppet agent -t\n    Info: Applying configuration version '1411019225'\n    Notice: This will be done first\n    Notice: Second Class\n    Notice: First Class\n    Notice: This will be done last\n    Notice: Finished catalog run in 0.43 seconds\n\n    ```", "```\n  stage { 'first': before => Stage['main'] }\n  stage { 'last': require => Stage['main'] }\n```", "```\n  class me_first {\n    notify { 'This will be done first': }\n  }\n  class me_last {\n    notify { 'This will be done last': }\n  }\n```", "```\n  class { 'me_first': stage => 'first',\n  }\n  class { 'me_last': stage => 'last',\n  }\n```", "```\n  stage {'yumrepos': }\n  Stage['yumrepos'] -> Stage['main']\n```", "```\n  class {'yums': stage => 'yumrepos',\n  }\n  class yums {\n    notify {'always before the rest': }\n    yumrepo {'testrepo': baseurl => 'file:///var/yum', ensure  => 'present',\n    }\n  }\n```", "```\n    $ puppet module generate thomas-profiles\n    $ ln -s thomas-profiles profiles\n    $ puppet module generate thomas-roles\n    $ ln -s thomas-roles roles\n\n    ```", "```\n    $ vim profiles/manifests/base.pp\n    class profiles::base {\n     include base\n    }\n    $ vim profiles/manifests/apache.pp\n    class profiles::apache {\n     $apache = $::osfamily ? {\n     'RedHat' => 'httpd',\n     'Debian' => 'apache2',\n     }\n     service { \"$apache\":\n     enable => true,\n     ensure => true,\n     }\n     package { \"$apache\":\n     ensure => 'installed',\n     }\n    }\n\n    ```", "```\n    $ vim roles/manifests/webserver.pp\n    class roles::webserver {\n     include profiles::apache\n     include profiles::base\n    }\n\n    ```", "```\n      node 'webtest' {\n        include roles::webserver\n      }\n    ```", "```\n  class {'profiles::base':\n    parameter => 'newvalue'\n  }\n```", "```\ninclude profiles::base\n```", "```\n      class eventmachine($version) {\n        package { 'eventmachine': provider => gem, ensure   => $version,\n        }\n      }\n    ```", "```\n      class { 'eventmachine':\n        version => '1.0.3',\n      }\n    ```", "```\n  package { 'eventmachine':\n    provider => gem,\n    ensure   => $version,\n  }\n\n```", "```\ninclude eventmachine\n```", "```\n  class { 'eventmachine':\n    version => '1.0.3',\n  }\n\n```", "```\n  class mysql($package, $socket, $port) {\n```", "```\n  class { 'mysql':\n    package => 'percona-server-server-5.5',\n    socket  => '/var/run/mysqld/mysqld.sock',\n    port    => '3306',\n  }\n\n```", "```\nclass mysql($package, $socket, $port='3306') {\n```", "```\n  class mysql(\n    package = percona-server-server-5.5\",\n    socket  = '/var/run/mysqld/mysqld.sock',\n    port    = '3306') {\n\n```", "```\n    t@mylaptop ~/puppet $ mkdir -p modules/mysql/manifests t@mylaptop ~/puppet $ vim modules/mysql/manifests/init.pp\n    class mysql ( $port, $socket, $package ) {\n     notify {\"Port: $port Socket: $socket Package: $package\": }\n    }\n\n    ```", "```\n    ---\n    mysql::port: 3306\n    mysql::package: 'mysql-server'\n    mysql::socket: '/var/lib/mysql/mysql.sock'\n\n    ```", "```\n    node default {\n     class {'mysql': }\n    }\n\n    ```", "```\n    [root@hiera-test ~]# puppet agent -t\n    Info: Caching catalog for hiera-test.example.com\n    Info: Applying configuration version '1411182251'\n    Notice: Port: 3306 Socket: /var/lib/mysql/mysql.sock Package: mysql-server\n    Notice: /Stage[main]/Mysql/Notify[Port: 3306 Socket: /var/lib/mysql/mysql.sock Package: mysql-server]/message: defined 'message' as 'Port: 3306 Socket: /var/lib/mysql/mysql.sock Package: mysql-server'\n    Notice: Finished catalog run in 1.75 seconds\n\n    ```", "```\nError: Could not retrieve catalog from remote server: Error 400 on SERVER: Must pass package to Class[Mysql] at /etc/puppet/environments/production/manifests/site.pp:6 on node hiera-test.example.com\n\n```", "```\n      $ssh_service = $::operatingsystem? { /Ubuntu|Debian/ => 'ssh', default         => 'sshd',\n      }\n    ```", "```\n      service { $ssh_service: ensure => running,\n      }\n    ```", "```\n      $libdir = $::architecture ? {\n        /amd64|x86_64/   => '/usr/lib64', default => '/usr/lib',\n      }\n    ```", "```\n    ; php.ini\n    [PHP]\n    ; Directory in which the loadable extensions (modules) reside.\n    extension_dir = <%= @libdir %>/php/modules\n    ```", "```\n  service { $::operatingsystem? {\n    /Ubuntu|Debian/ => 'ssh', default         => 'sshd' }: ensure => running,\n  }\n```", "```\n$ sudo facter\narchitecture => amd64\naugeasversion => 0.10.0\ndomain => compute-1.internal\nec2_ami_id => ami-137bcf7a\nec2_ami_launch_index => 0\n\n```", "```\n$ sudo facter -p\n\n```", "```\n    notify { \"This is $::operatingsystem version $::operatingsystemrelease, on $::architecture architecture, kernel version $::kernelversion\": }\n    ```", "```\n    [root@hiera-test ~]# puppet agent -t\n    ...\n    Info: Applying configuration version '1411275985'Notice: This is RedHat version 6.5, on x86_64 architecture, kernel version 2.6.32\n    ...\n    Notice: Finished catalog run in 0.40 seconds\n\n    ```", "```\n$KLogPath <%= case @kernelversion when '2.6.31' then\n'/var/run/rsyslog/kmsg' else '/proc/kmsg' end %>\n\n```", "```\nMySQL Port = <%= scope['::mysql::port'] %>\n```", "```\n[root@hiera-test ~]# puppet agent -t\n...\nInfo: Caching catalog for hiera-test.example.com\nNotice: /Stage[main]/Erb/File[/tmp/template-test]/ensure: defined content as '{md5}96edacaf9747093f73084252c7ca7e67'\nNotice: Finished catalog run in 0.41 seconds [root@hiera-test ~]# cat /tmp/template-test\nMySQL Port = 3306\n\n```", "```\n    #!/usr/bin/env ruby\n    puts \"This runs on the master if you are centralized\"\n\n    ```", "```\n    $ sudo chmod a+x /usr/local/bin/message.rb\n\n    ```", "```\n    $message = generate('/usr/local/bin/message.rb')\n    notify { $message: }\n\n    ```", "```\n    $ puppet apply message.pp \n    ...\n    Notice: /Stage[main]/Main/Notify[This runs on the master if you are centralized\n    ]/message: defined 'message' as 'This runs on the master if you are centralized\n\n    ```", "```\n$message = generate('/bin/cat', '/etc/motd')\n\n```", "```\n    $source = 'Hello Jerry'\n    $target = 'Hello... Newman'\n    $argstring = shellquote($source, $target)\n    $command = \"/bin/mv ${argstring}\"\n    notify { $command: }\n\n    ```", "```\n    $ puppet apply shellquote.pp \n    ...\n    Notice: /bin/mv \"Hello Jerry\" \"Hello... Newman\"\n    Notice: /Stage[main]/Main/Notify[/bin/mv \"Hello Jerry\" \"Hello... Newman\"]/message: defined 'message' as '/bin/mv \"Hello Jerry\" \"Hello... Newman\"'\n\n    ```", "```\n$source = 'Hello Jerry'\n$target = 'Hello... Newman'\n\n```", "```\n$argstring = shellquote($source, $target)\n\n```", "```\n$command = \"/bin/mv ${argstring}\"\n\n```", "```\n/bin/mv \"Hello Jerry\" \"Hello... Newman\"\n\n```", "```\n$source = 'Hello Jerry'\n$target = 'Hello... Newman'\n$command = \"/bin/mv ${source} ${target}\"\nnotify { $command: }\n\nNotice: /bin/mv Hello Jerry Hello... Newman\n\n```"]