["```\naws_access_key_id = <%= $aws_access_key %>\n```", "```\naws_access_key_id = AKIAIAF7V6N2PTOIZVA2\n```", "```\nfile { '/tmp/hello.txt':\n  content => \"hello, world\\n\",\n}\n```", "```\nfile { \"/usr/local/bin/${task}\":\n  content => \"echo I am ${task}\\n\",\n  mode    => '0755',\n}\n```", "```\nfile { '/usr/local/bin/backup':\n  content => epp('/examples/backup.sh.epp',\n    {\n      'data_dir' => '/examples',\n      }\n  ),\n  mode    => '0755',\n}\n```", "```\n<%- | String $data_dir | -%>\n#!/bin/bash\nmkdir -p /backup\ntar cvzf /backup/backup.tar.gz <%= $data_dir %>\n```", "```\nfile { '/etc/ntp.conf':\n  content => epp('pbg_ntp/ntp.conf.epp'),\n}\n```", "```\n$web_root = '/var/www'\n$backup_dir = '/backup/www'\n\nfile { '/usr/local/bin/backup':\n  content => inline_epp('rsync -a <%= $web_root %>/ <%= $backup_dir %>/'),\n  mode    => '0755',\n}\n```", "```\n<%= $aws_access_key %>\n```", "```\n<% notice(\"This has no effect on the template output\") %>\n```", "```\n<%# This is a comment, and it will not appear in the output of the template %>\n```", "```\ninnodb_buffer_pool_size=<%= $facts['memory']['system']['total_bytes'] * 3/4 %>\n```", "```\nsudo puppet epp render --environment pbg /examples/template_compute.epp\ninnodb_buffer_pool_size=780257280\n```", "```\nif $install_perl {\n  ...\n} else {\n  ...\n}\n```", "```\n<% if $ssl_enabled { -%>\n  ## SSL directives\n  SSLEngine on\n  SSLCertificateFile      \"<%= $ssl_cert %>\"\n  SSLCertificateKeyFile   \"<%= $ssl_key %>\"\n  ...\n<% } -%>\n```", "```\n  ## SSL directives\n  SSLEngine on\n  SSLCertificateFile      \"<%= $ssl_cert %>\"\n  SSLCertificateKeyFile   \"<%= $ssl_key %>\"\n  ...\n```", "```\nHASH.each | KEY, VALUE | {\n  BLOCK\n}\n```", "```\n<% $facts['networking']['interfaces'].each |String $interface, Hash $attrs| { -%>\ninterface <%= $interface %>;\n<% } -%>\n```", "```\ninterface em1;\n```", "```\ninterface em1;\ninterface em2;\ninterface em3;\ninterface em4;\ninterface em5;\ninterface lo;\n```", "```\n<% $facts['networking']['interfaces'].each |String $interface, Hash $attrs| { -%>\nlocal_address <%= $attrs['bindings'][0]['address'] %>;\n<% } -%>\n```", "```\nlocal_address 10.170.81.11;\nlocal_address 75.76.222.21;\nlocal_address 204.152.248.213;\nlocal_address 66.32.100.81;\nlocal_address 189.183.255.6;\nlocal_address 127.0.0.1;\n```", "```\nAllowUsers<% lookup('users').each | $user | { -%>\n <%= $user -%>\n<% } %>\n```", "```\nAllowUsers katy lark bridget hsing-hui charles\n```", "```\n<% | String[1] $aws_access_key,\n     String[1] $aws_secret_key,\n| -%>\naws_access_key_id = <%= $aws_access_key %>\naws_secret_access_key = <%= $aws_secret_key %>\n```", "```\nfile { '/root/aws_credentials':\n  content => epp('/examples/template_params.epp',\n    {\n      'aws_access_key' => 'AKIAIAF7V6N2PTOIZVA2',\n      'aws_secret_key' => '7IBpXjoYRVbJ/rCTVLaAMyud+i4co11lVt1Df1vt',\n    }\n  ),\n}\n```", "```\n<% | Array[String] $users | -%>\nAllowUsers<% $users.each | $user | { -%>\n <%= $user -%>\n<% } %>\n```", "```\nfile { '/tmp/sshd_config_example':\n  content => epp('/examples/template_hiera_params.epp',\n    {\n      'users' => lookup('users'),\n    }\n  ),\n}\n```", "```\npuppet epp validate /examples/template_params.epp\n\n```", "```\nError: Syntax error at '%' at /examples/template_params.epp:3:4\nError: Errors while validating epp\nError: Try 'puppet help epp validate' for usage\n```", "```\npuppet epp render --values \"{ 'aws_access_key' => 'foo', 'aws_secret_key' => 'bar' }\" /examples/template_params.epp\naws_access_key_id = foo\naws_secret_access_key = bar\n```", "```\necho \"{ 'aws_access_key' => 'foo', 'aws_secret_key' => 'bar' }\" >params.pp\npuppet epp render --values_file params.pp /examples/template_params.epp\naws_access_key_id = foo\naws_secret_access_key = bar\n```", "```\npuppet epp render --values_file params.pp --values \"{ 'aws_access_key' => 'override' }\" /examples/template_params.epp\naws_access_key_id = override\naws_secret_access_key = bar\n```", "```\npuppet epp render --values \"{ 'name' => 'Dave' }\" -e 'Hello, <%= $name %>'\nHello, Dave\n```", "```\nsudo puppet apply -e \"file { '/tmp/result': content => epp('/examples/template_iterate.epp')}\"\n\n```", "```\nAllowUsers <%= @users.join(' ') %><%= scope['::ubuntu'] == 'yes' ? ',ubuntu' : '' %>\n```", "```\nscope.call_function('strftime', ...)\n```"]