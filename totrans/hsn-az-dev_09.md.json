["```\nusing System;\nusing Microsoft.Azure.CosmosDB.Table;\nusing Microsoft.Azure.Storage;\n\nnamespace HandsOnAzureCosmosDB\n{\n    internal class Program\n    {\n        private static void Main()\n        {\n            // You can get the connection string from the Quick start blade mentioned previously\n            var connectionString = \"<connection-string>\";\n            var storageAccount = CloudStorageAccount.Parse(connectionString);\n            var tableClient = storageAccount.CreateCloudTableClient();\n\n            var reference = tableClient.GetTableReference(\"handsonazure\");\n            var result = reference.CreateIfNotExists();\n\n            Console.ReadLine();\n        }\n    }\n}\n```", "```\nusing System;\nusing Microsoft.Azure.CosmosDB.Table;\nusing Microsoft.Azure.Storage;\n\nnamespace HandsOnAzureCosmosDB\n{\n    internal class Program\n    {\n        private static void Main()\n        {\n            // You can get the connection string from the Quick start blade mentioned previously\n            var connectionString = \"<connection-string>\";\n            var storageAccount = CloudStorageAccount.Parse(connectionString);\n            var tableClient = storageAccount.CreateCloudTableClient();\n\n            var reference = tableClient.GetTableReference(\"handsonazure\");\n            var result = reference.CreateIfNotExists();\n\n            var executionResult = reference.Execute(TableOperation.Insert(new TableEntity(\"handsonazure\", Guid.NewGuid().ToString())));\n            Console.WriteLine(executionResult.Result);\n\n            Console.ReadLine();\n        }\n    }\n}\n```", "```\nSELECT * FROM dbo.Order O WHERE O.AccountNumber = \"0000-12-223-12\"\n```", "```\nvar order = \n  client.CreateDocumentQuery<Order>(collectionLink)\n    .Where(so => so.AccountNumber == \"0000-12-223-12\")\n    .AsEnumerable()\n    .FirstOrDefault();\n```", "```\nmongodb://username:password@host:port/[database]?ssl=true\n```", "```\n:> g.V('thomas.1').out('knows').out('uses').out('runsos').group().by('name').by(count())\n```", "```\nCloudStorageAccount storageAccount = CloudStorageAccount.Parse(\n    CloudConfigurationManager.GetSetting(\"StorageConnectionString\"));\nCloudTableClient tableClient = storageAccount.CreateCloudTableClient();\nCloudTable table = tableClient.GetTableReference(\"people\");\nTableQuery<CustomerEntity> query = new TableQuery<CustomerEntity>().Where(TableQuery.GenerateFilterCondition(\"PartitionKey\", QueryComparisons.Equal, \"Smith\"));\n\nforeach (CustomerEntity entity in table.ExecuteQuery(query))\n{\n    Console.WriteLine(\"{0}, {1}\\t{2}\\t{3}\", entity.PartitionKey, entity.RowKey,\n        entity.Email, entity.PhoneNumber);\n}\n```", "```\n#r \"Microsoft.Azure.Documents.Client\"\n\nusing Microsoft.Azure.Documents;\nusing System.Collections.Generic;\nusing System;\n\npublic static async Task Run(IReadOnlyList<Document> input, TraceWriter log)\n{\n    log.Verbose(\"Document count \" + input.Count);\n    log.Verbose(\"First document Id \" + input[0].Id);\n}\n```", "```\n Pause  Clear  Copy logs  Expand\n2018-08-07T06:01:28  Welcome, you are now connected to log-streaming service.\n2018-08-07T06:01:34.556 [Info] Function started (Id=5fb63ab3-e128-45ad-b7a8-4ccfdad38c82)\n2018-08-07T06:01:34.573 [Verbose] Document count 1\n2018-08-07T06:01:34.573 [Verbose] First document Id test_document\n2018-08-07T06:01:34.591 [Info] Function completed (Success, Id=5fb63ab3-e128-45ad-b7a8-4ccfdad38c82, Duration=21ms)\n```", "```\nfunction sample(prefix) {\n    var context = getContext();\n    var response = context.getResponse();\n\n    response.setBody(\"Hello, World\");\n}\n```", "```\nvar context = getContext();\nvar request = context.getRequest();\nvar documentToCreate = request.getBody();\n\nif (!(\"timestamp\" in documentToCreate)) {\n  var ts = new Date();\n  documentToCreate[\"my timestamp\"] = ts.getTime();\n}\n\nrequest.setBody(documentToCreate);\n```"]