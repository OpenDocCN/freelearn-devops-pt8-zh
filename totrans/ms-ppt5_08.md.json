["```\nrary at Ryans-MacBook-Pro in ~/workspace/packt\n$ brew cask install puppetlabs/puppet/puppet-bolt\n==> Tapping puppetlabs/puppet\nCloning into '/usr/local/Homebrew/Library/Taps/puppetlabs/homebrew-puppet'...\nremote: Counting objects: 15, done.\nremote: Compressing objects: 100% (14/14), done.\nremote: Total 15 (delta 1), reused 8 (delta 1), pack-reused 0\nUnpacking objects: 100% (15/15), done.\nTapped 3 casks (49 files, 54.9KB).\n==> Satisfying dependencies\n==> Downloading https://downloads.puppet.com/mac/puppet5/10.13/x86_64/puppet-bolt-0.22.0-1.osx10.13.dmg\n######################################################################## 100.0%\n==> Verifying SHA-256 checksum for Cask 'puppet-bolt'.\n==> Installing Cask puppet-bolt\n==> Running installer for puppet-bolt; your password may be necessary.\n==> Package installers may write to any location; options such as --appdir are ignored.\nPassword:\ninstaller: Package name is puppet-bolt\ninstaller: Installing at base path /\ninstaller: The install was successful.\npuppet-bolt was successfully installed!\n```", "```\n$ bolt\nUsage: bolt <subcommand> <action> [options]\n\nAvailable subcommands:\n bolt command run <command> Run a command remotely\n bolt file upload <src> <dest> Upload a local file\n bolt script run <script> Upload a local script and run it remotely\n bolt task show Show list of available tasks\n bolt task show <task> Show documentation for task\n bolt task run <task> [params] Run a Puppet task\n bolt plan show Show list of available plans\n bolt plan show <plan> Show details for plan\n bolt plan run <plan> [params] Run a Puppet task plan\n bolt puppetfile install Install modules from a Puppetfile into a Boltdir\n\nRun `bolt <subcommand> --help` to view specific examples.\n```", "```\n# ~/.puppetlabs/bolt/inventory.yaml\n---\ngroups:\n - name: puppetserver\n nodes:\n - pe-puppet-master.puppet.net\n config:\n transport: ssh\n ssh:\n user: root\n```", "```\nrary at Ryans-MacBook in ~/workspace/packt\n$ ssh-copy-id root@pe-puppet-master.puppet.net\n\n/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed\n/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys\nroot@pe-puppet-master.puppet.net's password:\n\nNumber of key(s) added: 1\n\nNow try logging into the machine, with: \"ssh 'root@pe-puppet-master.puppet.net'\"\nand check to make sure that only the key(s) you wanted were added.\n```", "```\nrary at Ryans-MacBook-Pro-3 in ~/workspace/packt/bolt\n$ bolt command run \"echo 'Hello World'\" --nodes puppetserver --no-host-key-check\nStarted on puppetserver.puppet.net...\nFinished on puppetserver.puppet.net:\n STDOUT:\n Hello World\nSuccessful on 1 node: pe-puppet-master.puppet.net\nRan on 1 node in 0.40 seconds\n```", "```\n#./inspect.sh\n\n#!/bin/bash\n\necho 'Users:'\ncat /etc/passwd | cut -f 1 -d ':'\necho 'Ports:'\nnetstat -tulpn\n```", "```\n$ bolt script run inspect.sh --nodes puppetserver --no-host-key-check\nStarted on puppetserver.puppet.net...\nFinished on puppetserver.puppet.net:\n STDOUT:\n Users:\n root\n ...\n vboxadd\n vagrant\n Ports:\n Active Internet connections (only servers)\n Proto Recv-Q Send-Q Local Address Foreign Address State PID/Program name\n tcp 0 0 0.0.0.0:22 0.0.0.0:* LISTEN 1258/sshd\n ...\nSuccessful on 1 node: puppetserver.puppet.net\nRan on 1 node in 0.85 seconds\n```", "```\nrary at Ryans-MacBook in ~/workspace/packt/bolt\n$ bolt file upload inspect.sh /tmp/inspect.sh --nodes puppetserver --no-host-key-check\nStarted on puppetserver.puppet.net...\nFinished on puppetserver.puppet.net:\n Uploaded 'inspect.sh' to 'puppetserver.puppet.net:/tmp/inspect.sh'\nSuccessful on 1 node: puppetserver.puppet.net\nRan on 1 node in 0.66 seconds\n```", "```\n#logs/tasks/puppetserver.json\n{\n  \"puppet_task_version\": 1,\n  \"supports_noop\": false,\n  \"description\": \"Retrieve a log file from the puppetserver\",\n  \"parameters\": {\n    \"log\": {\n      \"description\": \"The Puppetserver log you want to read\",\n      \"type\": \"Enum[console,puppetdb,puppetserver]\"\n    },\n    \"store\": {\n      \"description\": \"Store logfile in /tmp/puppetlog.log\",\n      \"type\": \"Optional[Boolean]\"\n    }\n  }\n}\n```", "```\n# logs/tasks/puppetserver.sh\n#!/bin/sh\n\n# Map $PT_log to a $logfile variable\ncase \"$PT_log\" in\n 'console') logfile='/var/log/puppetlabs/console-services/console-services.log' ;;\n 'puppetdb') logfile='/var/log/puppetlabs/puppetdb/puppetdb.log' ;;\n 'puppetserver') logfile='/var/log/puppetlabs/puppetserver/puppetserver.log' ;;\nesac\n\n# Variable that stores all the text from inside the logfile\nlog=`cat $logfile`\n\n# If store is true, build a header and then print out $log\nif [ $PT_store == 'true' ]\nthen\n echo \"${PT_log}\\r============\" >> /tmp/puppetlog.log\n echo $log >> /tmp/puppetlog.log\nfi\n\n# print out the key value of \"<chosen log>\":\"all log contents\" in JSON to be\n# read by the Bolt interpreter\necho -e \"{'${PT_log}':'$log'}\"\n```", "```\nlogs\n├── files\n├── manifests\n├── tasks\n│   ├── puppetserver.json\n│   └── puppetserver.sh\n└── templates\n```", "```\n$ bolt task run logs::puppetserver --nodes puppetserver --modulepath .. log=puppetdb --no-host-key-check\n\nStarted on pe-puppet-master.puppet.net...\nFinished on pe-puppet-master.puppet.net:\n {'puppetdb':'2018-09-23T00:20:55.115Z INFO [p.p.command] [8-1537662054876] [212 ms] 'replace facts' command processed for pe-puppet-master\n 2018-09-23T00:21:12.077Z INFO [p.p.command] [9-1537662071679] [370 ms] 'store report' puppet v5.5.2 command processed for pe-puppet-master\n 2018-09-23T00:21:53.936Z INFO [p.p.c.services] Starting sweep of stale nodes (threshold: 7 days)\n ...'}\n {\n }\nSuccessful on 1 node: pe-puppet-master.puppet.net\nRan on 1 node in 0.89 seconds\n```", "```\n# logs/plans/puppetserver.pp\nplan logs::puppetserver (\n  Boolean $enterprise,\n  TargetSpec $servers,\n) {\n\n  run_command('rm -f /tmp/puppetlog.log', $servers)\n  run_task('logs::puppetserver', $servers, log => 'puppetserver', store => true)\n  run_task('logs::puppetserver', $servers, log => 'puppetdb', store => true)\n\n  if $enterprise == true {\n    run_task('logs::puppetserver', $servers, log => 'console', store => true)\n  }\n\n  return run_command('cat /tmp/puppetlog.log', $servers)\n  run_command('rm -f /tmp/puppetlog.log', $servers)\n\n}\n```", "```\nrary at Ryans-MacBook-Pro-3 in ~/workspace/packt/logs\n$ bolt plan run logs::puppetserver --modulepath .. --no-host-key-check enterprise=false servers=root@pe-puppet-master\nStarting: plan logs::puppetserver\nStarting: command 'rm -f /tmp/puppetlog.log' on root@pe-puppet-master\nFinished: command 'rm -f /tmp/puppetlog.log' with 0 failures in 0.38 sec\nStarting: task logs::puppetserver on root@pe-puppet-master\nFinished: task logs::puppetserver with 0 failures in 0.39 sec\nStarting: task logs::puppetserver on root@pe-puppet-master\nFinished: task logs::puppetserver with 0 failures in 0.45 sec\nStarting: command 'cat /tmp/puppetlog.log' on root@pe-puppet-master\nFinished: command 'cat /tmp/puppetlog.log' with 0 failures in 0.15 sec\nFinished: plan logs::puppetserver in 1.39 sec\n[\n {\n \"node\": \"root@pe-puppet-master\",\n \"status\": \"success\",\n \"result\": {\n \"stdout\": \"puppetserver\\n============\\n2018-09-23T00:20:54.905Z INFO [qtp417202273-69] [puppetserver] Puppet 'replace_facts' command for pe-puppet-master submitted to PuppetDB with UUID fc691079-debf-4c99-896b-3244f353a753\\n2018-09-23T00:20:55.268Z ERROR [qtp417202273-69] [puppetserver] Puppet Could not find node statement with name 'default' or 'pe-puppet-master' on node pe-puppet-master\\n ...\",\n \"stderr\": \"\",\n \"exit_code\": 0\n }\n }\n]\n```", "```\n$ rm -f *.log;bolt plan run logs::puppetserver --modulepath .. --no-host-key-check enterprise=false servers=root@pe-puppet-master > compressed.log; head -n 6 compressed.log | tail -n 1 | awk '{gsub(\"\\\\\\\\n\",\"\\n\")};1' > puppetlog.log\n```", "```\nrary at Ryans-MacBook-Pro in ~/workspace\n$ mv ~/Downloads/puppet-discovery /usr/local/bin\n\nrary at Ryans-MacBook-Pro in ~/workspace\n$ chmod a+x /usr/local/bin/puppet-discovery\n\nrary at Ryans-MacBook-Pro in ~/workspace\n$ puppet-discovery\nA discovery application for cloud-native infrastructure\n\n Find more information at https://puppet.com/products/puppet-discovery\n\nUsage:\n puppet-discovery [command]\n\n...\n```", "```\nrary at Ryans-MacBook-Pro in ~\n$ puppet-discovery start\nPlease enter the path to your Puppet Discovery license: Documents/License-puppet-discovery-trial-2018-10-23.puppet_discovery.json\n\nBy continuing with installation, you agree to terms outlined in the Puppet Discovery End User License Agreement located here: /Users/rary/.puppet-discovery/data/puppet-discovery-eula-1537730629.html\n\nDo you agree? [y/n]: y\n\n*************************************************************************\n* NOTE: If you forget your password you lose all of your discovery data *\n*************************************************************************\n\nPassword requirements:\n* Password must have at least 6 characters\n* Password must use at least 3 of the 4 character types: lowercase letters, uppercase letters, numbers, symbols\n* Password cannot be the same as current password\n\nPlease create an admin password: **************\nVerify by entering the same password again: **************\n\nPuppet Discovery: started 15s [====================================================================] 100%\nPuppet Discovery: pulled [8/8] 1m3s [====================================================================] 100%\nOpening Puppet Discovery at https://localhost:8443 ...\n```"]