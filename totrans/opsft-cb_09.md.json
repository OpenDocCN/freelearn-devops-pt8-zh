["```\n$ rhc cartridges | grep node\nnodejs-0.10         Node.js 0.10                            web\nnodejs-0.6          Node.js 0.6                             web\n\n```", "```\n    $ rhc create-app myapp nodejs-0.10\n\n    ```", "```\n    $ cd myapp\n    $ rm -rf deplist.txt index.html node_modules/ package.json server.js\n\n    ```", "```\n    $ touch server.js\n\n    ```", "```\n    var http = require('http');\n    var ip = process.env.OPENSHIFT_NODEJS_IP || '127.0.0.1';\n    var port = process.env.OPENSHIFT_NODEJS_PORT || 3000;\n    var server = http.createServer(function(req,res){\n       res.writeHead(200, {'Content-Type':'text/plain'});\n       res.end('Hello World!!');\n    });\n    server.listen(port,ip);\n    console.log('Server running at http://%s:%d',ip,port);\n    ```", "```\n    $ node server.js\n\n    ```", "```\n    $ git add .\n    $ git commit -am \"Hello World Node.js application\" \n    $ git push\n\n    ```", "```\n$ cd myapp && ls -ap\n.git/      README.md    index.html   package.json\n.openshift/   deplist.txt   node_modules/   server.js\n\n```", "```\n$ npm install\n$ node server.js\n\n```", "```\n\"scripts\":{\"start\":\"node server.js\"}\n```", "```\n$ npm install supervisor -g\n\n```", "```\n$ supervisor --help\n\n```", "```\n    $ rhc create-app myapp nodejs-0.10 --from-code https://github.com/OpenShift-Cookbook/chapter9-recipe1.git\n\n    ```", "```\n    $ cd myapp\n    $ rhc env-set OPENSHIFT_NODEJS_POLL_INTERVAL=60000 OPENSHIFT_NODEJS_WATCH=$OPENSHIFT_REPO_DIR --app myapp\n\n    ```", "```\n    $ rhc ssh --command \"env |grep OPENSHIFT_REPO_DIR\"\n\n    ```", "```\n    $ rhc restart-app --app myapp\n\n    ```", "```\n    $ cd app-root/repo\n\n    ```", "```\n    $ rhc app create myapp nodejs-0.10 --from-code https://github.com/OpenShift-Cookbook/chapter9-recipe1.git\n\n    ```", "```\n    {\n      \"name\": \"myapp\",\n      \"description\": \"My OpenShift Node.js Application\",\n      \"version\": \"0.0.1\"\n    }\n    ```", "```\n    $ npm install express --save\n\n    ```", "```\n    {\n      \"name\": \"myapp\",\n      \"description\": \"My OpenShift Node.js Application\",\n      \"version\": \"0.0.1\",\n      \"dependencies\": {\n        \"express\": \"~4.3.1\"\n      }\n    }\n    ```", "```\n    var express = require('express');\n    var ip = process.env.OPENSHIFT_NODEJS_IP || '127.0.0.1';\n    var port = process.env.OPENSHIFT_NODEJS_PORT || 3000;\n    var app = express();\n    app.get('/',function(req,res){\n       res.send('Hello World!!');\n    });\n    app.listen(port,ip);\n    console.log('Server running at http://%s:%d',ip,port);\n    ```", "```\n    $ echo \"node_modules/\" > .gitignore\n\n    ```", "```\n    $ git add .\n    $ git commit -am \"used express\"\n    $ git push\n\n    ```", "```\nserver.js command:\n```", "```\nremote: npm http GET https://registry.npmjs.org/express\nremote: npm http 200 https://registry.npmjs.org/express\nremote: npm info retry fetch attempt 1 at 12:45:38\nremote: npm http GET https://registry.npmjs.org/express/-/express-4.3.1.tgz\nremote: npm http 200 https://registry.npmjs.org/express/-/express-4.3.1.tgz\nâ€¦\n\n```", "```\n{\n  \"name\": \"myapp\",\n  \"description\": \"My OpenShift Node.js Application\",\n  \"version\": \"0.0.1\",\n  \"dependencies\": {\n    \"express\": \"~4.3.1\"\n  },\n  \"main\":\"app.js\"\n}\n```", "```\n    $ rhc create-app myapp nodejs-0.10 --from-code https://github.com/OpenShift-Cookbook/chapter9-recipe3.git\n\n    ```", "```\n    $ cd myapp\n    $ touch .openshift/markers/use_npm\n\n    ```", "```\n    $ git add .\n    $ git commit -am \"using use_npm marker\"\n    $ git push\n\n    ```", "```\n    remote: *** NodeJS supervisor is disabled due to .openshift/markers/use_npm\n    remote: *** Starting application using: npm start -d\n\n    ```", "```\n{\n  \"name\": \"myapp\",\n  \"description\": \"My OpenShift Node.js Application\",\n  \"version\": \"0.0.1\",\n  \"dependencies\": {\n    \"express\": \"~4.3.1\"\n  }\n}\n```", "```\n\"scripts\": {\"start\": \"node server.js\"}\n```", "```\nremote: *** NodeJS supervisor is disabled due to .openshift/markers/use_npm\nremote: *** Starting application using: npm start -d\nremote: Application 'myapp' failed to start 1\n\n```", "```\n{\n  \"name\": \"myapp\",\n  \"description\": \"My OpenShift Node.js Application\",\n  \"version\": \"0.0.1\",\n  \"dependencies\": {\n    \"express\": \"~4.3.1\"\n  },\n\"scripts\":{\"start\":\"node app.js\"}\n}\n```", "```\n    $ rhc app create myapp nodejs-0.10 --from-code https://github.com/OpenShift-Cookbook/chapter9-recipe3.git\n\n    ```", "```\n    $ cd myapp\n    $ touch .openshift/markers/hot_deploy\n\n    ```", "```\n    $ git commit -am \"enabled hot deployment\"\n    $git push\n\n    ```", "```\n    remote: Not stopping cartridge node.js because hot deploy is enabled\n\n    ```", "```\n    $ rhc create-app jobstore nodejs-0.10 mongodb-2.4\n\n    ```", "```\n    $ cd jobstore\n    $ rm -rf deplist.txt index.html node_modules/ package.json server.js\n\n    ```", "```\n    $ echo \"node_modules/\" > .gitignore\n\n    ```", "```\n    $ npm install -g express-generator\n\n    ```", "```\n    $ express --ejs . --force\n\n    ```", "```\n    $ npm install\n\n    ```", "```\n    $ DEBUG=jobstore ./bin/www\n\n    ```", "```\n    app.use('/', routes);\n    app.use('/users', users);\n    ```", "```\n    var users = require('./routes/users');\n    app.use('/users', users);\n    ```", "```\n    $ touch routes/api.js\n\n    ```", "```\n    $ npm install mongojs --save\n\n    ```", "```\n    var db_name = process.env.OPENSHIFT_APP_NAME || \"jobstore\";\n    var connection_string = '127.0.0.1:27017/' + db_name;\n    // if OPENSHIFT env variables are present, use the available connection info:\n    if (process.env.OPENSHIFT_MONGODB_DB_PASSWORD) {\n        connection_string = process.env.OPENSHIFT_MONGODB_DB_USERNAME + \":\" +\n            process.env.OPENSHIFT_MONGODB_DB_PASSWORD + \"@\" +\n            process.env.OPENSHIFT_MONGODB_DB_HOST + ':' +\n            process.env.OPENSHIFT_MONGODB_DB_PORT + '/' +\n            process.env.OPENSHIFT_APP_NAME;\n    }\n    var mongojs = require(\"mongojs\");\n    var db = mongojs(connection_string, ['jobstore']);\n    var companies = db.collection(\"companies\");\n    ```", "```\n    var api = require('./routes/api');\n    app.get('/api/v1/companies', api.companies);\n    app.post('/api/v1/companies', api.saveCompany);\n    ```", "```\n    exports.companies = function (req, res, next) {\n        companies.find().sort({registeredAt: -1}, function (err, companies) {\n            if (err) {\n                return next(err);\n            }\n            return res.json(companies);\n        });\n    };\n    ```", "```\n    exports.saveCompany = function (req, res, next) {\n        var company = {\n            \"name\": req.body.name,\n            \"description\": req.body.description,\n            \"registeredAt\": new Date(),\n            \"contactEmail\": req.body.contactEmail,\n            \"jobs\": []\n        };\n        companies.save(company, function (err, saved) {\n            if (err) {\n                return next(err);\n            }\n            console.log(saved);\n            res.json(saved);\n        })\n    };\n    ```", "```\n    app.get('/api/v1/companies/:companyId/jobs', api.jobsForCompany);\n    app.post('/api/v1/companies/:companyId/jobs', api.postJobForCompany);\n    ```", "```\n    exports.jobsForCompany = function (req, res, next) {\n        var companyId = req.param('companyId');\n        companies.findOne({\"_id\": mongojs.ObjectId(companyId)}, function (err, company) { \n            if (err) {\n                return next(err);\n            }\n            return res.json(company.jobs);\n        });\n\n    };\n    ```", "```\n    exports.postJobForCompany = function (req, res, next) {\n        var companyId = req.param('companyId');\n        var job = {\n            \"title\": req.body.title,\n            \"description\": req.body.description\n        }\n\n        companies.update({\"_id\": mongojs.ObjectId(companyId)}, {$push: {\"jobs\": job}}, function (err, result) {\n            if (err) {\n                return next(err);\n            }\n            return companies.findOne({\"_id\": mongojs.ObjectId(companyId)}, function (err, company) {\n                if (err) {\n                    return next(err);\n                }\n\n                return res.json(company);\n            })\n        })\n    };\n    ```", "```\n    #!/usr/bin/env node\n    var debug = require('debug')('jobstore');\n    var app = require('../app');\n    var ipaddress = process.env.OPENSHIFT_NODEJS_IP || \"127.0.0.1\";\n    var port = process.env.OPENSHIFT_NODEJS_PORT || 3000;\n    app.set('port', port);\n    app.set('ipaddress', ipaddress);\n    var server = app.listen(app.get('port'), app.get('ipaddress'), function() {\n      debug('JobStore application running at http://%s:%d ',app.get('ipaddress'), app.get('port'));\n    });\n    ```", "```\n    $ echo \"node_modules/\" > .gitignore\n\n    ```", "```\n    \"main\":\"./bin/www\",\n    ```", "```\n    $ git add .\n    $ git commit -am \"jobstore app\"\n    $ git push\n\n    ```", "```\ndestination is not empty, continue?\n\n```", "```\n$ ls -p\napp.js      bin/      package.json   public/      routes/      views/ \n\n```", "```\napp.use(express.static(path.join(__dirname, 'public')));\n```", "```\napp.get('/api/v1/companies', api.companies);\napp.post('/api/v1/companies', api.saveCompany)\napp.get('/api/v1/companies/:companyId/jobs', api.jobsForCompany);\napp.post('/api/v1/companies/:companyId/jobs', api.postJobForCompany);\n```", "```\n    $ rhc create-app reverseecho nodejs-0.10\n\n    ```", "```\n    $ cd reverseecho\n    $ rm -rf deplist.txt index.html node_modules/ package.json server.js\n\n    ```", "```\n    $ echo \"node_modules/\" > .gitignore\n\n    ```", "```\n    {\n      \"name\": \"reverse-echo\",\n      \"version\": \"0.0.1\",\n      \"private\": true,\n      \"main\": \"server.js\"\n    }\n    ```", "```\n    $ npm install express â€“save\n    $ npm install socket.io --save\n\n    ```", "```\n    var express = require(\"express\");\n    var app = express();\n    var server = require('http').createServer(app);\n    var ip = process.env.OPENSHIFT_NODEJS_IP || '127.0.0.1';\n    var port = process.env.OPENSHIFT_NODEJS_PORT || 3000;\n    server.listen(port,ip);\n    var io = require('socket.io').listen(server);\n\n    app.get('/',function(req,res){\n       res.sendfile(__dirname+'/index.html');\n    });\n    console.log('App running at http://%s:%d',ip,port);\n    io.sockets.on('connection', function (socket) {\n\n       // when the client emits 'sendchat', this listens and executes\n       socket.on('message', function (data) {\n          io.sockets.emit('rev-message', data.split(\"\").reverse().join(\"\"));\n       });\n    });\n    ```", "```\n    <html>\n    <head>\n       <title>ReverseEcho</title>\n    application   <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n       <link href=\"//cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/3.1.1/css/bootstrap.css\" rel=\"stylesheet\">\n       <style type=\"text/css\">\n        body {\n          padding-top:60px;\n          padding-bottom: 60px;\n        }\n      </style>\n    </head>\n    <body>\n    <div class=\"container\">\n       <div class=\"row\">\n          <div class=\"col-md-6\">\n             <input type=\"text\" class=\"form-control\" rows=\"3\" id=\"message\" placeholder=\"Write a message\">\n          <input type=\"button\" id=\"echobutton\" value=\"Reverse Echo\" />\n          </div>\n          <div class=\"col-md-6\">\n             <p id=\"result\"></p>\n          </div>\n       </div>\n    </div>\n\n    <script src=\"img/socket.io.js\"></script>\n    <script src=\"img/jquery.min.js\"></script>\n    <script>\n            var wsUrl;\n            if(window.location.host == '127.0.0.1:3000'){\n              wsUrl = window.location.protocol + \"//\" + window.location.host;\n            }else{\n              if (window.location.protocol == 'http:') {\n              wsUrl = 'ws://' + window.location.host + ':8000/';\n            } else {\n              wsUrl = 'wss://' + window.location.host + ':8443/';\n              }  \n            }\n            console.log('WebSockets Url : ' + wsUrl);\n            var socket = io.connect(wsUrl);\n            socket.on('connect', function(){\n              console.log('User connected');\n            });\n            socket.on('rev-message', function (data) {\n                    $('#result').text(data);\n            });\n            $(function(){\n                    $('#echobutton').click( function() {\n                            var message = $('#message').val();\n                            $('#message').val('');\n                            socket.emit('message', message);\n                    });\n            });\n\n    </script>\n    </body>\n    </html>\n    ```", "```\n    $ git add .\n    $ git commit -am \"OpenShift Node Web Socket application\"\n    $ git push\n\n    ```", "```\n    $ rhc create-app myapp nodejs-0.10\n\n    ```", "```\n    $ cd myapp\n    $ rm -rf deplist.txt index.html node_modules/ package.json server.js\n\n    ```", "```\n    $ echo \"node_modules/\" > .gitignore\n\n    ```", "```\n    {\n      \"name\": \"myapp\",\n      \"version\": \"0.0.1\"\n    }\n    ```", "```\n    $ npm install express coffee-script --save\n\n    ```", "```\n    express = require('express')\n    app = express()\n    ip = process.env.OPENSHIFT_NODEJS_IP || '127.0.0.1'\n    port = process.env.OPENSHIFT_NODEJS_PORT || 3000\n    # App Routes\n    app.get '/', (request, response) ->\n      response.send 'Hello World!!'\n\n    # Listen\n    app.listen port,ip\n    console.log \"Express server listening on port http://%s:%d\", ip,port\n    ```", "```\n    $ touch .openshift/markers/use_npm\n\n    ```", "```\n    {\n      \"name\": \"myapp\",\n      \"description\": \"My OpenShift Node.js Application\",\n      \"version\": \"0.0.1\",\n      \"dependencies\": {\n        \"express\": \"~4.3.1\",\n        \"coffee-script\": \"~1.7.1\"\n      },\n      \"scripts\":{\"start\":\"~/app-root/runtime/repo/node_modules/.bin/coffee app.coffee\"}\n    }\n    ```", "```\n    $ git add .\n    $ git commit -am \"OpenShift Node CoffeeScript application\"\n    $ git push\n\n    ```"]