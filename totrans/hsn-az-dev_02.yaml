- en: Azure WebJobs
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Azure WebJobs
- en: Azure WebJobs are one of the underlying features of Azure App Service. They
    allow for the easy running of so-called "jobs" using different intervals, or even
    running them infinitely. They are very flexible and provide a special SDK, so
    users can work with them efficiently and quickly.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: Azure WebJobs 是 Azure App Service 的基础功能之一。它们可以轻松运行所谓的“作业”，并且可以使用不同的时间间隔，甚至可以无限运行。它们非常灵活，并提供了一个特别的
    SDK，使得用户可以高效、快速地与它们进行互动。
- en: 'The following topics will be covered in this chapter:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将涵盖以下主题：
- en: How to create Azure WebJobs
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何创建 Azure WebJobs
- en: Working with different trigger types (continuous and triggered)
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用不同触发类型（持续触发和定时触发）
- en: Using different file types for WebJobs
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用不同的文件类型进行 WebJobs
- en: Technical requirements
  id: totrans-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: 'To perform exercises from this chapter, you will need the following:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 执行本章练习时，你将需要以下内容：
- en: Access to an Azure subscription
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 访问 Azure 订阅
- en: Visual Studio 2017 with Azure development workload installed
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装了 Azure 开发工作负载的 Visual Studio 2017
- en: Creating WebJobs
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建 WebJobs
- en: 'Working with WebJobs is much simpler than working with App Services, as this
    is a much easier service to configure and use. In fact, there are two ways of
    working with them:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 与 WebJobs 一起工作比与 App Services 一起工作要简单得多，因为这是一个更容易配置和使用的服务。事实上，与你一起工作有两种方式：
- en: Using Azure Portal and deploying a job manually
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 Azure Portal 手动部署作业
- en: Using Visual Studio to develop and deploy it manually
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 Visual Studio 开发并手动部署
- en: What is more, you can leverage the WebJobs SDK to prepare an application triggered
    by an external service. This will be covered at the end of this chapter, and will
    be an excellent introduction to Azure Functions, described later in this book.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 更重要的是，你可以利用 WebJobs SDK 来准备一个由外部服务触发的应用程序。这部分内容将在本章末尾介绍，并将是本书后续章节中 Azure Functions
    的优秀入门。
- en: Creating and deploying WebJobs in Azure Portal
  id: totrans-15
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在 Azure Portal 中创建和部署 WebJobs
- en: The easiest and quickest way to start working with WebJobs is to create a custom
    console application, perform an action, and then deploy it using Azure Portal.
    Thanks to this exercise, you will understand the main concepts of jobs hosted
    within App Services.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 开始使用 WebJobs 最简单和最快捷的方式是创建一个自定义控制台应用程序，执行一个操作，然后通过 Azure Portal 部署它。通过这个练习，你将理解托管在
    App Services 中的作业的主要概念。
- en: Creating an application in Visual Studio
  id: totrans-17
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在 Visual Studio 中创建应用程序
- en: 'When you open Visual Studio, go to File | New Project. In the New Projectwindow,
    select Windows Classic Desktopand then Console App (.NET Framework). Give your
    application a name and click on OK:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 打开 Visual Studio 后，进入 文件 | 新建项目。在 新建项目 窗口中，选择 Windows 经典桌面，然后选择 Console App
    (.NET Framework)。为你的应用程序命名，并点击 OK：
- en: '![](img/b8e18e6f-3acd-4a91-8a92-e12e90f67f56.png)'
  id: totrans-19
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b8e18e6f-3acd-4a91-8a92-e12e90f67f56.png)'
- en: After a moment, you will see an empty project, which we can modify. We will
    try to trigger our job in intervals (let's say one minute), so we need to add
    code, which will finish within the given time.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 稍等片刻，你将看到一个空项目，我们可以对其进行修改。我们将尝试以间隔（比如一分钟）触发我们的作业，因此我们需要添加代码，确保作业在给定时间内完成。
- en: 'For the very beginning, let''s just display the current date. In the `Main()`method
    of your application, add the following code:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，让我们仅显示当前日期。在应用程序的`Main()`方法中，添加以下代码：
- en: '[PRE0]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Now save and build your project—we will need the compiled version soon.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 现在保存并构建你的项目——我们很快就需要编译后的版本。
- en: Deploying a WebJob in the Azure Portal
  id: totrans-24
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在 Azure Portal 中部署 WebJob
- en: 'Now, when we have a code of our WebJob, we can try to put in the cloud. To
    do so we need App Service, which will host our code and execute it. You can either
    use one of your current Web Apps or create a new one:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，当我们有了 WebJob 的代码后，我们可以尝试将其上传到云端。为此，我们需要 App Service 来托管并执行我们的代码。你可以使用现有的
    Web 应用程序或创建一个新的应用程序：
- en: 'Go to your App Service and find the WebJobs blade. (If you do not see it, scroll
    down a little bit—it can be found on the left in the Settings section.):'
  id: totrans-26
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 进入你的 App Service，找到 WebJobs 面板。（如果你没有看到它，稍微向下滚动一点——它可以在左侧的设置部分找到）：
- en: '![](img/697e65a2-7f5c-417e-a086-17ff9bf6ec81.png)'
  id: totrans-27
  prefs: []
  type: TYPE_IMG
  zh: '![](img/697e65a2-7f5c-417e-a086-17ff9bf6ec81.png)'
- en: If you do not know how to create App Service or configure it, please take a
    look at [Chapter 1](81d59e59-02b1-4973-95a0-9bf6a998e752.xhtml), *Azure App Service*,
    where I describe the process of working with this Azure service in detail.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你不知道如何创建 App Service 或配置它，请查看 [第1章](81d59e59-02b1-4973-95a0-9bf6a998e752.xhtml)，*Azure
    应用服务*，在其中我详细描述了如何使用这个 Azure 服务的过程。
- en: 'Since you currently do not have any jobs, click on the + Addbutton. You will
    see a new screen, which allows you to configure a new WebJob:'
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 由于你当前没有任何作业，点击+ Add按钮。你将看到一个新屏幕，允许你配置一个新的WebJob：
- en: '![](img/230a58a3-2009-4291-8c70-06e3286018f8.png)'
  id: totrans-30
  prefs: []
  type: TYPE_IMG
  zh: '![](img/230a58a3-2009-4291-8c70-06e3286018f8.png)'
- en: 'Available fields differ a bit depending on the selected Type field value. If
    you have selected Triggered job, you will see the following fields:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 可用的字段根据所选的Type字段值略有不同。如果你选择了Triggered作业，你将看到以下字段：
- en: Triggers**:** If you select Scheduled, one additional field (CRON Expression)
    will appear. The other option is Manual, which ensures that a WebJob can be triggered
    only manually.
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 触发器**:** 如果你选择了Scheduled，一个额外的字段（CRON表达式）将会出现。另一个选项是Manual，这确保WebJob只能手动触发。
- en: CRON Expression: A CRON valid expression, which defines an interval at which
    a job runs.
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: CRON表达式：一个有效的CRON表达式，定义了作业运行的时间间隔。
- en: CRON expressions are a quite complicated topic themselves, and we will not focus
    on them in this book. If you have not heard about them yet, those two links should
    be useful for you to get started: [https://docs.microsoft.com/en-us/azure/azure-functions/functions-bindings-timer](https://docs.microsoft.com/en-us/azure/azure-functions/functions-bindings-timer).
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: CRON表达式本身是一个相当复杂的话题，在本书中我们不会深入讨论。如果你还没听说过它们，以下两个链接将对你入门非常有用：[https://docs.microsoft.com/en-us/azure/azure-functions/functions-bindings-timer](https://docs.microsoft.com/en-us/azure/azure-functions/functions-bindings-timer)。
- en: Another option is to set the Triggered field to Continuous. In that scenario,
    only one extra field is displayed: Scale. Decide whether you want to always have
    a Single Instanceof job or scale it across all instances of your App Service.
    This is helpful if you want, for instance, to implement a singleton pattern and
    never scale out a job. Note that you cannot change this option if you are using
    the Free or Shared tier as they do not support scaling.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 另一种选择是将Triggered字段设置为Continuous。在这种情况下，将只显示一个额外的字段：Scale。决定是否希望始终拥有单一实例的作业，或者将其扩展到所有App
    Service实例。如果你想实现单例模式并且永不扩展作业，这会非常有用。请注意，如果你使用的是Free或Shared层，它们不支持扩展，因此无法更改此选项。
- en: 'For now, we will create a Triggered job to see how App Service executes it.
    Give it a name and attach an executable file of the console application you created
    in the previous section. Here, you can find my configuration:'
  id: totrans-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们将创建一个Triggered作业，看看App Service如何执行它。给它命名，并附加在前一部分中创建的控制台应用程序的可执行文件。在这里，你可以找到我的配置：
- en: '![](img/958d131b-1e92-41c5-8777-68c6144eb8f9.png)'
  id: totrans-37
  prefs: []
  type: TYPE_IMG
  zh: '![](img/958d131b-1e92-41c5-8777-68c6144eb8f9.png)'
- en: 'I have decided to use the `0 */1 * * * *`CRON Expression to run my job each
    minute. Once you are satisfied with your configuration, click OK. After a moment,
    you should see a new WebJob added to App Service and deployed:'
  id: totrans-38
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我决定使用`0 */1 * * * *`的CRON表达式，每分钟运行我的作业。当你对配置满意时，点击OK。片刻后，你应该能看到一个新的WebJob被添加到App
    Service并已部署：
- en: '![](img/ca369b70-1270-4373-befb-64738d893c12.png)'
  id: totrans-39
  prefs: []
  type: TYPE_IMG
  zh: '![](img/ca369b70-1270-4373-befb-64738d893c12.png)'
- en: You do not have to deploy a single file as your WebJob. If your application
    has more files (such as additional dependencies or static files), you can archive
    them in a ZIP package and publish. After deployment, they will be unzipped and
    fully functional.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 你不必将单个文件部署为你的WebJob。如果你的应用程序有多个文件（如额外的依赖项或静态文件），你可以将它们打包成ZIP文件并发布。部署后，它们将被解压并完全可用。
- en: 'Now when you click on a job, new options will be available in the menu above.
    We would like to see the output—for that, please click on Logs. On the new screen,
    you will see the list of jobs available in this particular App Service. Click
    on the one you have just added—a list of recent runs should be displayed, which
    you can analyze. You can click on any of the positions available—you will be able
    to see a full log of the running job:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，当你点击一个作业时，菜单上方将会显示新的选项。我们想查看输出——为此，请点击Logs。在新的屏幕上，你将看到此特定App Service中可用的作业列表。点击你刚刚添加的作业——应显示最近运行的列表，你可以进行分析。你可以点击任何可用的条目——你将能够看到运行作业的完整日志：
- en: '![](img/62f6cbca-dc5d-432a-97c2-984298cc2f51.png)'
  id: totrans-42
  prefs: []
  type: TYPE_IMG
  zh: '![](img/62f6cbca-dc5d-432a-97c2-984298cc2f51.png)'
- en: As you can see, a job was run and it displayed exactly what we have been expecting—the
    current date and time. Congratulations—you have just created and deployed your
    first WebJob!
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所见，作业已运行，并且显示了我们预期的内容——当前的日期和时间。恭喜你——你刚刚创建并部署了你的第一个WebJob！
- en: Remember that running continuous or triggered jobs require at least the Basic App
    Service Plan. If you use the Free or Shared tier, after some time, a WebJob will
    be cancelled and you will need to start it manually.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
- en: In the next section, you will learn how to deploy a WebJob directly from Visual
    Studio.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
- en: Deploying WebJobs from Visual Studio
  id: totrans-46
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In the previous part of this chapter, you saw how to create a simple WebJob and
    publish it from Azure Portal. Sometimes you would prefer not to leave your IDE
    and use it for deployments too. Fortunately, Visual Studio is integrated with
    Azure and makes such actions a piece of cake. Before, we started to create a brand
    new Console Applicationas we did in the beginning—this will be our starting point.
    You can add any code you would like to—I will use the one from the previous exercises,
    which will display the current date and time. Once you are satisfied with the
    provided functionality, right-click on your project icon.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
- en: 'From the context menu, click on Publish as Azure WebJob...:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/e8e9a6a4-52b2-4bea-a7b6-577d8e7f1bb0.png)'
  id: totrans-49
  prefs: []
  type: TYPE_IMG
- en: 'You will see a new screen, where you can select a name for a new WebJob and
    its Run mode. This time, I also decided on a continuous job, so I selected Run
    continuously. When you click OK, this wizard will install missing packages for
    your project and display the Publish screen:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/c8d11873-eab5-4a89-81eb-e378da898c9e.png)'
  id: totrans-51
  prefs: []
  type: TYPE_IMG
- en: 'Here, you can create or import Publish profile, which is needed to deploy WebJob.
    We would like to publish our job to a specific location, and that is why we select Microsoft
    Azure App Service. On the next screen, you can select the appropriate App Service by
    filtering it using subscription and resource group fields. Select the one you
    are interested in and then click OK. Now you will be able to change different
    properties if you want and deploy configuration. I recommend leaving the default
    values for now and clicking on Publish. After several seconds, you should see
    a success message in the output window:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/1b66dbd5-9b3e-40f9-9723-69f0ddf34923.png)'
  id: totrans-53
  prefs: []
  type: TYPE_IMG
- en: 'We can now check whether our job is available in Azure. Go to the WebJobs blade
    in your App Service. You should be able to see your job among others (I used the
    same Web App as in the previous section, that is why I have two WebJobs available):'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/364a3df1-956f-499e-b1d3-599f8c0eb2cf.png)'
  id: totrans-55
  prefs: []
  type: TYPE_IMG
- en: It seems that everything is all right. I am sure you see one flaw of such an
    approach—we can define the Run modeof our job only as Run on demandor Run continuously.
    What we are missing here is running it on a schedule. In the next section, I will
    address this issue as we will start using the WebJobs SDK to have better control
    over our application.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
- en: In fact, it is possible to modify a continuous job to work in intervals. If
    you take a look at your project, you will see that now it contains a file called `webjob-publish-settings.json`.
    Its schema and description can be found here—[http://schemastore.org/schemas/json/webjob-publish-settings.json](http://schemastore.org/schemas/json/webjob-publish-settings.json).
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 实际上，可以将连续作业修改为按间隔工作。如果你查看项目，现在应该包含一个名为 `webjob-publish-settings.json` 的文件。其模式和描述可以在这里找到
    — [http://schemastore.org/schemas/json/webjob-publish-settings.json](http://schemastore.org/schemas/json/webjob-publish-settings.json)。
- en: Working with the WebJobs SDK
  id: totrans-58
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 WebJobs SDK 进行开发
- en: 'To simplify working with WebJobs in Azure and easily access their advanced
    features, you can use a framework called the WebJobs SDK. It is available out
    of the box in Visual Studio when an Azure workload is installed. To start, you
    can create a clean console application, or use the one used for the previous exercises—at
    this moment, it is up to you. You will need one more thing—the `Microsoft.Azure.WebJobs` package,
    which can be installed either using the command line or the NuGet package manager:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 为了简化在 Azure 中使用 WebJobs 并轻松访问其高级功能，可以使用名为 WebJobs SDK 的框架。当安装了 Azure 工作负载的 Visual
    Studio 中已经自带。你可以创建一个干净的控制台应用程序，或者使用之前练习中使用的应用程序 — 在这个时刻，由你决定。你还需要一个东西 — `Microsoft.Azure.WebJobs`
    包，可以通过命令行或 NuGet 包管理器安装：
- en: '![](img/93558c19-5ef8-4ca3-9b00-d8f693c5a5d9.png)'
  id: totrans-60
  prefs: []
  type: TYPE_IMG
  zh: '![](img/93558c19-5ef8-4ca3-9b00-d8f693c5a5d9.png)'
- en: Please note that it is possible to develop .NET Core WebJob using the packages
    version 3.X. However, since they are still in the beta state, I will not cover
    them in this book.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，可以使用版本为 3.X 的包开发 .NET Core WebJob。然而，由于它们仍处于测试阶段，我不会在本书中涵盖它们。
- en: 'When everything is set and ready, we can proceed and try to actually create
    a new application. Writing jobs using the WebJobs SDK is a bit different than
    creating them like we did in the previous exercises, but it gives you some interesting
    benefits:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 当一切准备就绪时，我们可以继续并尝试创建一个新的应用程序。使用 WebJobs SDK 编写作业与之前的练习有所不同，但它确实带来了一些有趣的好处：
- en: You have an available set of triggers integrated with other Azure services such
    as queues
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你可以使用与其他 Azure 服务（如队列）集成的一组可用触发器开始工作。
- en: You have an integrated logging framework, which eases the process of monitoring
    a job
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你有一个集成的日志记录框架，可以简化监视作业的过程。
- en: It is a great start to developing Azure Functions, which will be covered later
    in this book
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 开发 Azure Functions 的绝佳起点，在本书的后续部分将进行详细介绍。
- en: 'To get started you have to start a `JobHost` instance. It is a container for
    all of the jobs you will run within your application. (We can also call them `functions`,
    as described in the documentation.) The boilerplate code looks like this:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 要开始，你必须启动一个 `JobHost` 实例。它是你应用程序内运行所有作业的容器。（我们也可以称它们为 `functions`，正如文档中描述的那样。）样板代码如下：
- en: '[PRE1]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Those three lines are the actual host of your job application, which will handle
    its functionalities.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 这些三行是你的作业应用程序的实际主机，负责处理其功能。
- en: 'Try to compile and run—unfortunately, there is something missing, as you will
    see an exception thrown as follows:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 尝试编译和运行 — 不幸的是，会出现缺少内容的异常，如下所示：
- en: '![](img/2575f617-8143-4409-9510-563998e082f2.png)'
  id: totrans-70
  prefs: []
  type: TYPE_IMG
  zh: '![](img/2575f617-8143-4409-9510-563998e082f2.png)'
- en: 'It tells us that we have a missing Azure Storage account connection string.
    Because we have not covered this topic yet, you will have to perform one more
    exercise before continuing. Go to [Chapter 11](6feb3822-0662-46c8-b889-c038672a1ad1.xhtml), *Using
    Azure Storage - Tables, Queues, Files, and Blobs*,and go through the very first
    section. It will guide you through the process of creating an Azure Storage account
    and tell where you can find the connection string to it. Once you have, we can
    proceed—add it to `App.config` as follows:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 它告诉我们，缺少 Azure 存储账户连接字符串。由于我们尚未涵盖这个主题，你需要在继续之前再完成一个练习。前往 [第 11 章](6feb3822-0662-46c8-b889-c038672a1ad1.xhtml)，*使用
    Azure Storage - Tables, Queues, Files, and Blobs*，并阅读第一节。它将指导你创建 Azure 存储账户，并告诉你在哪里找到其连接字符串。一旦完成，将其添加到
    `App.config` 中如下：
- en: '[PRE2]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'As you can see, I already added two required connection strings—`AzureWebJobsDashboard `and `AzureWebJobsStorage`. Now,
    when you start the host, you should be able to see something similar to the following:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 正如你所见，我已经添加了两个必需的连接字符串 — `AzureWebJobsDashboard` 和 `AzureWebJobsStorage`。现在，当你启动主机时，应该能看到类似以下的内容：
- en: '![](img/b896b350-1e5f-4d82-ac19-c8b9d23bf918.png)'
  id: totrans-74
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b896b350-1e5f-4d82-ac19-c8b9d23bf918.png)'
- en: Since we have no jobs added yet, none is found and enabled. Let's try to add
    one and see how it works.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们还没有添加作业，因此找不到任何作业并启用。让我们尝试添加一个并看看它是如何工作的。
- en: If you want, you can configure connection strings directly in your code by setting
    the `StorageConnectionString `and`DashboardConnectionString` properties of the `JobHostConfiguration `object
    manually.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 如果需要，您可以通过手动设置`JobHostConfiguration`对象的`StorageConnectionString`和`DashboardConnectionString`属性来直接在代码中配置连接字符串。
- en: Calling a job manually
  id: totrans-77
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 手动调用作业
- en: 'If you would like to trigger a job manually, you can use the `[NoAutomaticTrigger]` attribute
    to tell a host that this particular function is not triggered automatically. Here,
    you have an example of the one I created and named `Manual.cs`:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您想手动触发作业，可以使用`[NoAutomaticTrigger]`属性告诉主机这个特定函数不会自动触发。这里有一个我创建并命名为`Manual.cs`的示例：
- en: '[PRE3]'
  id: totrans-79
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Now let''s see what happens if you call it from the main point of your program:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们看看如果您从程序的主要点调用它会发生什么：
- en: '[PRE4]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'You should be able to see the following result:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 您应该能够看到以下结果：
- en: '![](img/fccb9942-d36e-4f1f-9373-c216599e2647.png)'
  id: totrans-83
  prefs: []
  type: TYPE_IMG
  zh: '![](img/fccb9942-d36e-4f1f-9373-c216599e2647.png)'
- en: Automatic triggers in WebJobs
  id: totrans-84
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: WebJobs中的自动触发器
- en: 'By default, the WebJobs SDK provides a limited set of triggers. Currently,
    it supports only the following ones:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，WebJobs SDK提供了有限的触发器集。目前，它仅支持以下触发器：
- en: Blob storage
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Blob存储
- en: Queue storage
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 队列存储
- en: Table storage
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 表存储
- en: 'All of these are connected to Azure Storage and will be covered in the chapter
    describing Azure Functions. Fortunately, we can install additional NuGet packages
    to extend the functionality of our host. For now, add the `Microsoft.Azure.WebJobs.Extensions` package
    so that we will be able to use `TimerTrigger`. When you have it, call the `UseTimers()`method
    on the `JobHostConfiguration `object:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 所有这些都与Azure存储连接，并将在描述Azure Functions的章节中进行介绍。幸运的是，我们可以安装额外的NuGet包来扩展我们主机的功能。现在，添加`Microsoft.Azure.WebJobs.Extensions`包，以便我们可以使用`TimerTrigger`。当您拥有它时，在`JobHostConfiguration`对象上调用`UseTimers()`方法：
- en: '[PRE5]'
  id: totrans-90
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Now we can create a new `Timer.cs`function, which will be triggered on schedule:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们可以创建一个新的`Timer.cs`函数，它将按计划触发：
- en: '[PRE6]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'When you start your project, `TimerFunction` should be discovered and called:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 当您启动项目时，`TimerFunction`应该被发现并调用：
- en: '![](img/de72d02c-2333-441c-b850-83bf863362d6.png)'
  id: totrans-94
  prefs: []
  type: TYPE_IMG
  zh: '![](img/de72d02c-2333-441c-b850-83bf863362d6.png)'
- en: You can install additional packages to leverage other bindings, such as `Http`,
    `Notification Hub`, or `SendGrid`. Search for packages with the `Microsoft.Azure.WebJobs.Extensions`
    prefix.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以安装其他包以利用其他绑定，例如`Http`，`Notification Hub`或`SendGrid`。搜索具有`Microsoft.Azure.WebJobs.Extensions`前缀的包。
- en: Publish a job
  id: totrans-96
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 发布作业
- en: 'Publishing a job, which is written using the WebJobs SDK, is the same as in
    the previous exercises. Right-click on your project and click on Publish as Azure
    WebJob. You will be once more guided through the process of publishing a job package.
    At the end of it, you should be able to see a job available in your App Service:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 发布一个使用WebJobs SDK编写的作业与之前的练习相同。右键单击项目，然后单击发布为Azure WebJob。您将再次被引导完成发布作业包的过程。在结束时，您应该能够在您的App
    Service中看到一个可用的作业：
- en: '![](img/a4332933-8c9e-4f54-a42e-010e632551bb.png)'
  id: totrans-98
  prefs: []
  type: TYPE_IMG
  zh: '![](img/a4332933-8c9e-4f54-a42e-010e632551bb.png)'
- en: If you find that your job has problems running, make sure the required connection
    strings are available in App Service. To do so, go to the Application settingsblade
    and verify the contents of the Connection stringssection. If something is missing,
    add it manually by adding a name and its value and set its type as Custom.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您发现您的作业运行时有问题，请确保所需的连接字符串在App Service中可用。为此，请转到“应用程序设置”选项卡，并验证“连接字符串”部分的内容。如果有遗漏的内容，请手动添加一个名称及其值，并将其类型设置为“自定义”。
- en: Azure WebJobs limitations
  id: totrans-100
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Azure WebJobs的限制
- en: 'As Azure WebJobs are based on Azure App Services and, what is more, there is
    no way to host them individually (you can use an extra App Service Plan to power
    them, but this often means that you pay the double price for your service), you
    may find some of their limitations quite serious in your projects. When using
    this particular service, remember the following things:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 由于Azure WebJobs基于Azure App Services，并且没有办法单独托管它们（您可以使用额外的App Service计划来支持它们，但这通常意味着您为服务支付双倍价格），您可能会发现它们的一些限制在您的项目中相当严重。在使用此特定服务时，请记住以下事项：
- en: When co-hosting Web App and WebJobs, one may interfere with the performance
    of other. In other words, if your WebJob starts to utilize too much CPU/memory,
    it may affect your web application powered by the same App Service Plan.
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当共同托管Web App和WebJobs时，一个可能会影响另一个的性能。换句话说，如果您的WebJob开始利用过多的CPU/内存，可能会影响由相同App
    Service计划支持的Web应用程序的性能。
- en: Azure WebJobs have a limited catalog of bindings that are offered—they are currently
    less popular than Azure Functions and are not so dynamically developed.
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Azure WebJobs提供了一组有限的绑定目录——它们目前比Azure Functions不那么受欢迎，也没有那么动态地发展。
- en: There is no way to utilize the consumption model with Azure WebJobs; hence,
    you have to pay the full price, even if they do nothing 90% of the time.
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 无法使用Azure WebJobs的消耗模型；因此，即使它们90%的时间什么也不做，您也必须支付全价。
- en: Using different file types for WebJobs
  id: totrans-105
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用不同的文件类型进行WebJobs
- en: 'When you are working with WebJobs, you are not limited to using EXE files.
    Currently, this service supports the following applications:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 在处理WebJobs时，您不限于使用EXE文件。目前，此服务支持以下应用程序：
- en: Windows executables (`.exe`, `.bat`, and `.cmd`)
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Windows可执行文件（`.exe`，`.bat`和`.cmd`）
- en: Powershell (`.ps1`)
  id: totrans-108
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Powershell（`.ps1`）
- en: Bash (`.sh`)
  id: totrans-109
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Bash（`.sh`）
- en: Python (`.py`)
  id: totrans-110
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Python（`.py`）
- en: PHP (`.php`)
  id: totrans-111
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: PHP（`.php`）
- en: Node.js (`.js`)
  id: totrans-112
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Node.js（`.js`）
- en: Java (`.jar`)
  id: totrans-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Java（`.jar`）
- en: As you can see, the preceding list is quite similar to the supported languages
    in App Services. This should be understandable now, as you have learned that WebJobs are
    in fact an integral part of Web Apps in Azure. Let's try something practical—we
    will deploy a simple Node.js application, which will publish to Azure as a WebJob.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 正如您所看到的，前面的列表与App Services中支持的语言相似。现在您应该明白，WebJobs实际上是Azure中Web Apps的一个组成部分。让我们尝试一些实际操作——我们将部署一个简单的Node.js应用程序，将其发布到Azure作为WebJob。
- en: Creating and deploying a Node.js application as a WebJob
  id: totrans-115
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建并部署Node.js应用程序作为WebJob
- en: JavaScript is one of the most popular programming languages around the world.
    The strength of Azure lies in the fact that it does not block you from using other,
    non-native to Microsoft technologies. Before we start, you have to remember one
    important piece of information.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: JavaScript是世界上最流行的编程语言之一。Azure的优势在于它不会阻止您使用其他非微软技术。在开始之前，您必须记住一条重要信息。
- en: The way in which the runtime executes WebJobs requires you to follow a specific
    convention. When searching for a job, the runtime will search for a file named `run.{job_type}`,
    where `job_type` is an extension representing a particular programming language
    (such as `.js` and `.py`). If that fails, it will try to find any file with a
    specific extension. If that also fails, a job will be skipped.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 运行时执行WebJobs的方式要求您遵循特定的约定。在搜索作业时，运行时将搜索名为`run.{job_type}`的文件，其中`job_type`是表示特定编程语言的扩展名（例如`.js`和`.py`）。如果失败，它将尝试查找具有特定扩展名的任何文件。如果这也失败，作业将被跳过。
- en: 'Here is a really simple code of my first WebJob written in JavaScript:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 这是我第一个用JavaScript编写的WebJob的非常简单的代码：
- en: '[PRE7]'
  id: totrans-119
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'To create it, you can use any kind of application supporting JavaScript (it
    can be, for instance, notepad or Visual Studio Code). Name your file `run.js`and
    publish it in Azure Portal as described previously. Here you can find the result:'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用支持JavaScript的任何类型的应用程序来创建它（例如，记事本或Visual Studio Code）。将文件命名为`run.js`并按照之前描述的方式在Azure门户中发布。在这里您可以找到结果：
- en: '![](img/0ec0ccac-c3c8-4dbc-b865-ba21548ca1e8.png)'
  id: totrans-121
  prefs: []
  type: TYPE_IMG
  zh: '![](img/0ec0ccac-c3c8-4dbc-b865-ba21548ca1e8.png)'
- en: As you can see, it was discovered automatically—no additional configuration
    was required to run it using Node.js runtime. I strongly encourage you to take
    your time and test this feature a little bit using other file types.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 正如您所看到的，它是自动发现的——不需要任何额外的配置就可以使用Node.js运行时运行它。我强烈建议您花点时间，使用其他文件类型测试一下这个功能。
- en: Remember that if your application needs additional files (such as extra packages
    for a Node.js job), you will have to archive them as a ZIP package and then deploy.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 请记住，如果您的应用程序需要额外的文件（例如Node.js作业的额外包），您必须将它们打包为ZIP包然后部署。
- en: Deploying a Node.js Azure WebJob from Visual Studio Code
  id: totrans-124
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 从Visual Studio Code部署Node.js Azure WebJob
- en: Unfortunately, it is not currently possible to deploy an Azure WebJob directly
    from Visual Studio Code. However, if you have the **Azure App Service **extension
    installed, you can quickly navigate from within the IDE to the portal and upload
    the code manually.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 不幸的是，目前无法直接从Visual Studio Code部署Azure WebJob。但是，如果安装了**Azure App Service**扩展，您可以在IDE内快速导航到门户并手动上传代码。
- en: 'To do so, you have to right-click on the WebJobs section of your Azure App
    Service and select Open in Portal:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 为此，你需要右键点击你的 Azure App Service 中的 WebJobs 部分，并选择“在门户中打开”：
- en: '![](img/b6957682-b8ca-45f5-88d0-21d7adfeda4a.png)'
  id: totrans-127
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b6957682-b8ca-45f5-88d0-21d7adfeda4a.png)'
- en: 'Doing so will route you directly to the instance of Azure App Service, where
    you can add a new WebJob by clicking on the + Addbutton:'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 这样做将直接引导你进入 Azure App Service 的实例，在这里你可以通过点击“+ 添加”按钮来添加新的 WebJob：
- en: '![](img/6485b618-3220-45fb-9ee0-940c9f57a662.png)'
  id: totrans-129
  prefs: []
  type: TYPE_IMG
  zh: '![](img/6485b618-3220-45fb-9ee0-940c9f57a662.png)'
- en: Summary
  id: totrans-130
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: As you have seen, Azure WebJobs are a really helpful and useful feature of App
    Services that let you quickly develop jobs running either continuously or triggered
    on schedule. They start to shine when you have a working web app, which could
    be used to host them and execute many different actions asynchronously (such as
    generating a report or reading a queue, which will feed your application's database
    later). Thanks to the support of different programming languages, you do not have
    to limit yourself to only one particular platform. Last but not least, they are
    a great introduction to Azure Functions, which are one of the most popular services
    in Azure and extend the current possibilities of WebJobs even further. In [Chapter
    3](51d6dd91-dc4f-4c18-af05-e6ddc1b552fc.xhtml), *Deploying Web Applications as
    Containers*, you will learn about deploying Web Apps as containers, what extends
    even more the capabilities of App Service when it comes to hosting web applications.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所见，Azure WebJobs 是 App Services 的一个非常有用和实用的功能，它让你能够快速开发持续运行或按计划触发的作业。当你拥有一个正常运行的
    web 应用时，WebJobs 会展现出其优势，能够托管并异步执行多种不同的操作（例如生成报告或读取队列，之后将数据填充到应用的数据库中）。由于支持多种编程语言，你不必局限于某一特定平台。最后但同样重要的是，WebJobs
    是了解 Azure Functions 的一个绝佳入门，Azure Functions 是 Azure 中最受欢迎的服务之一，进一步扩展了 WebJobs
    的现有功能。在[第 3 章](51d6dd91-dc4f-4c18-af05-e6ddc1b552fc.xhtml)《将 Web 应用程序作为容器部署》中，你将学习如何将
    Web 应用部署为容器，这在托管 web 应用时，进一步扩展了 App Service 的功能。
- en: Questions
  id: totrans-132
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 问题
- en: Can you run WebJobs using the Free or Shared tier?
  id: totrans-133
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你可以在 Free 或 Shared 层运行 WebJobs 吗？
- en: What run modes does WebJobs currently supprt?
  id: totrans-134
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: WebJobs 当前支持哪些运行模式？
- en: Can you run a Java application using WebJobs?
  id: totrans-135
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你可以使用 WebJobs 运行 Java 应用程序吗？
- en: How can you ensure that runtime will find your job starting file?
  id: totrans-136
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如何确保运行时能够找到你的作业启动文件？
- en: Can you publish a WebJob containing more than only one file? If so, how can
    you do that?
  id: totrans-137
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你能发布一个包含多个文件的 WebJob 吗？如果可以，你该如何操作？
- en: How can you ensure that a WebJob will not be scaled out to multiple instances?
  id: totrans-138
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如何确保 WebJob 不会被扩展到多个实例？
- en: Can a WebJob access the application settings of the App Service that hosts it?
  id: totrans-139
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: WebJob 可以访问托管它的 App Service 的应用设置吗？
- en: Further reading
  id: totrans-140
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 进一步阅读
- en: '[https://docs.microsoft.com/en-us/azure/app-service/webjobs-sdk-how-to](https://docs.microsoft.com/en-us/azure/app-service/webjobs-sdk-how-to)'
  id: totrans-141
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://docs.microsoft.com/en-us/azure/app-service/webjobs-sdk-how-to](https://docs.microsoft.com/en-us/azure/app-service/webjobs-sdk-how-to)'
