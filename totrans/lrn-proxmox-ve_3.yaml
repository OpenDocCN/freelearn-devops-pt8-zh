- en: Chapter 3. Creating Containers
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第3章。创建容器
- en: '|   | *"Containers within a single operating system are much more efficient,
    and because of this efficiency, they underpin the future of the cloud infrastructure
    industry in place of VM architecture...Efficiency demands a future of containers
    running bare-metal hardware. Virtual machines have had their decade."* |   |'
  id: totrans-1
  prefs: []
  type: TYPE_TB
  zh: '|   | *“单一操作系统中的容器更为高效，由于这种效率，它们支撑了云基础设施行业的未来，取代了虚拟机架构……效率要求容器直接运行在裸金属硬件上。虚拟机已经度过了它的十年。”*
    |   |'
- en: '|   | -- *Linux Journal, June 7, 2013* |'
  id: totrans-2
  prefs: []
  type: TYPE_TB
  zh: '|   | -- *Linux Journal，2013年6月7日* |'
- en: ([http://www.linuxjournal.com/content/containers%E2%80%94not-virtual-machines%E2%80%94are-future-cloud](http://www.linuxjournal.com/content/containers%E2%80%94not-virtual-machines%E2%80%94are-future-cloud))
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: ([http://www.linuxjournal.com/content/containers%E2%80%94not-virtual-machines%E2%80%94are-future-cloud](http://www.linuxjournal.com/content/containers%E2%80%94not-virtual-machines%E2%80%94are-future-cloud))
- en: '|   | *"Everything at Google runs in a container....we start over 2 billion
    containers per week."* |   |'
  id: totrans-4
  prefs: []
  type: TYPE_TB
  zh: '|   | *“谷歌的一切都在容器中运行……我们每周启动超过20亿个容器。”* |   |'
- en: '|   | -- *Joe Beda, a senior staff software engineer for Google Cloud Platform
    in a talk at Gluecon 2014* |'
  id: totrans-5
  prefs: []
  type: TYPE_TB
  zh: '|   | -- *Joe Beda，Google Cloud Platform高级软件工程师，在2014年Gluecon大会上的演讲* |'
- en: ([http://www.enterprisetech.com/2014/05/28/google-runs-software-containers/](http://www.enterprisetech.com/2014/05/28/google-runs-software-containers/))
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: ([http://www.enterprisetech.com/2014/05/28/google-runs-software-containers/](http://www.enterprisetech.com/2014/05/28/google-runs-software-containers/))
- en: '|   | *"If you''re in data-center or cloud IT circles, you''ve been hearing
    about containers in general and Docker in particular non-stop for over a year
    now. With the release of Docker 1.0 in June, the buzz has become a roar."* |  
    |'
  id: totrans-7
  prefs: []
  type: TYPE_TB
  zh: '|   | *“如果你在数据中心或云计算的IT圈子里，你可能已经听说过容器，尤其是Docker，已经持续了一年多。随着Docker 1.0在6月发布，热潮变成了轰动。”*
    |   |'
- en: '|   | -- *ZDNET, August 4, 2014* |'
  id: totrans-8
  prefs: []
  type: TYPE_TB
  zh: '|   | -- *ZDNET，2014年8月4日* |'
- en: In [Chapter 2](ch02.html "Chapter 2. Installing Proxmox VE"), *Installing Proxmox
    VE*, we walked together through the Proxmox VE installation process.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 在[第2章](ch02.html "第2章。安装Proxmox VE")，*安装Proxmox VE*中，我们一起完成了Proxmox VE的安装过程。
- en: 'This chapter''s focus is creating containers from OS templates or virtual appliance
    templates. By its conclusion, this chapter will have addressed how to obtain templates
    and derive LXC containers from them with Proxmox VE. Along the way, we''ll cover
    the following subjects:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 本章重点讲解如何从操作系统模板或虚拟设备模板创建容器。到本章结束时，我们将介绍如何获取模板并利用Proxmox VE从中派生LXC容器。在此过程中，我们将涵盖以下主题：
- en: The advantages of, and an example use case for, containers
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 容器的优势，以及一个使用场景示例
- en: Logging in to the Proxmox VE web-based management interface
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 登录Proxmox VE基于Web的管理界面
- en: Exploring the OS templates and virtual appliances available directly through
    the management interface
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 探索可以通过管理界面直接使用的操作系统模板和虚拟设备
- en: Creating a container from both the web-based interface and the command line
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过基于Web的界面和命令行创建容器
- en: Starting a new container from the management interface
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从管理界面启动一个新容器
- en: Changing a container's state directly through the PVE console or via the web-based
    administration interface
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过PVE控制台或基于Web的管理界面直接更改容器的状态
- en: Understanding the container advantage
  id: totrans-17
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 了解容器的优势
- en: '[Chapter 1](ch01.html "Chapter 1. Proxmox VE Fundamentals"), *Proxmox VE Fundamentals*,
    introduced GNU/Linux containers generally and worked particularly at distinguishing
    them from virtual machines. This section elaborates some advantages of containers,
    and it imagines a scenario ideal for container deployment.'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '[第1章](ch01.html "第1章。Proxmox VE基础知识")，*Proxmox VE基础知识*，通常介绍了GNU/Linux容器，并特别强调了它们与虚拟机的区别。本节详细阐述了容器的一些优势，并设想了一个理想的容器部署场景。'
- en: Where an administrator could run 10-100 virtual machines on a physical host,
    she/he could run 100-1000 containers on the same host without compromising significantly
    on performance ([http://computerpcdeal.com/servers-dell-poweredge/news_2014-06-17-05-30-07-224.html](http://computerpcdeal.com/servers-dell-poweredge/news_2014-06-17-05-30-07-224.html)).
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 如果管理员可以在物理主机上运行10-100个虚拟机，那么她/他可以在同一主机上运行100-1000个容器，而不会显著影响性能 ([http://computerpcdeal.com/servers-dell-poweredge/news_2014-06-17-05-30-07-224.html](http://computerpcdeal.com/servers-dell-poweredge/news_2014-06-17-05-30-07-224.html))。
- en: Containers may be thought of, initially, as very lightweight virtual machines,
    but with much lower overhead and the added value of simplified deployment.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 容器最初可以被视为非常轻量级的虚拟机，但具有更低的开销，并且提供简化部署的附加价值。
- en: Proxmox VE and the case for LXC
  id: totrans-21
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Proxmox VE 和 LXC 的案例
- en: Containers are the legacy of FreeBSD jails and have enjoyed a kind of renaissance
    that has become an increasingly valuable cultural touchstone among computing professionals,
    particularly since the rise of Docker in June of 2014.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 容器是 FreeBSD 监狱（jails）的遗产，自从 2014 年 6 月 Docker 的崛起以来，容器享受到了复兴的浪潮，成为了计算领域专业人士中一个日益重要的文化标志。
- en: It's important to keep in mind that Docker was originally reliant on LXC, or
    Linux Containers, the same technology that Proxmox VE relies on for its containerization
    layer since the release of 4,0.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 需要牢记的是，Docker 最初依赖于 LXC，或者说 Linux 容器，这正是 Proxmox VE 自 4.0 版本以来用于容器化层的技术。
- en: Previous releases, in fact, relied on OpenVZ, another open source container
    technology. OpenVZ had a reputation for stability and reliability; in stark contrast,
    until very recently, LXC was described as a kind of young upstart, one with so
    much promise, but that was nevertheless still immature.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 之前的版本实际上依赖于 OpenVZ，另一种开源容器技术。OpenVZ 以稳定性和可靠性著称；相比之下，直到最近，LXC 被描述为一种年轻的新兴技术，充满潜力，但仍显得不够成熟。
- en: We see the rapid increase in currency that LXC has enjoyed, which is illustrated
    in the following screenshot of a Google Trends analysis at [https://www.google.com/trends/explore#q=%2Fm%2F0crds9p%2C%20OpenVZ&cmpt=q&tz=Etc%2FGMT%2B5](https://www.google.com/trends/explore#q=%2Fm%2F0crds9p%2C%20OpenVZ&cmpt=q&tz=Etc%2FGMT%2B5).
    As a search term, OpenVZ enjoys a very sharp increase in 2006, and its popularity
    is sustained until about 2009 before it starts to drop off.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以看到 LXC 快速增长的趋势，以下是 Google Trends 分析的截图，展示了 LXC 与 OpenVZ 的趋势对比：[https://www.google.com/trends/explore#q=%2Fm%2F0crds9p%2C%20OpenVZ&cmpt=q&tz=Etc%2FGMT%2B5](https://www.google.com/trends/explore#q=%2Fm%2F0crds9p%2C%20OpenVZ&cmpt=q&tz=Etc%2FGMT%2B5)。作为搜索词，OpenVZ
    在 2006 年迎来急剧增长，并且其热度一直维持到大约 2009 年，然后开始下降。
- en: '![Proxmox VE and the case for LXC](img/image_03_001.png)'
  id: totrans-26
  prefs: []
  type: TYPE_IMG
  zh: '![Proxmox VE 和 LXC 的案例](img/image_03_001.png)'
- en: Interest over time for LXC and OpenVZ from Google Trends
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: LXC 和 OpenVZ 在 Google Trends 上的兴趣变化
- en: Meanwhile, LXC slowly grows in popularity, until 2014—the same year that Docker
    created a bit of a container uproar—LXC surpasses OpenVZ.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 与此同时，LXC 的流行度缓慢增长，直到 2014 年——这一年 Docker 引发了容器界的一场轰动——LXC 超越了 OpenVZ。
- en: With the excitement and anxiety that this container renaissance provoked, it
    makes sense that Proxmox VE turned to LXC for its containerization layer in late
    2015; it was cutting edge, it stabilized, and it had the support of contributors
    from corporations such as IBM and Canonical.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 随着容器复兴所带来的兴奋与焦虑，Proxmox VE 在 2015 年底转向 LXC 作为其容器化层也就不足为奇了；它是前沿技术，逐渐稳定，并得到了 IBM
    和 Canonical 等公司贡献者的支持。
- en: Terms that are very often interchangeable with containerization, in this context,
    include **OS virtualization** and **virtual private servers**.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 在此背景下，常常可以与容器化互换使用的术语包括 **操作系统虚拟化** 和 **虚拟私有服务器**。
- en: For an infographic covering the history of containers—beginning with Unix V7
    and tracing developments through 2014, visit [http://pivotal.io/platform/infographic/moments-in-container-history](http://pivotal.io/platform/infographic/moments-in-container-history).
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 欲了解有关容器历史的图解——从 Unix V7 开始并追溯到 2014 年的相关发展，请访问：[http://pivotal.io/platform/infographic/moments-in-container-history](http://pivotal.io/platform/infographic/moments-in-container-history)。
- en: Do note that Proxmox VE 4.1 ships with tools with which OpenVZ containers can
    be migrated to LXC. To learn more, visit the PVE wiki at [https://pve.proxmox.com/wiki/Convert_OpenVZ_to_LXC](https://pve.proxmox.com/wiki/Convert_OpenVZ_to_LXC).
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，Proxmox VE 4.1 提供了可以将 OpenVZ 容器迁移到 LXC 的工具。欲了解更多信息，请访问 PVE 的 Wiki：[https://pve.proxmox.com/wiki/Convert_OpenVZ_to_LXC](https://pve.proxmox.com/wiki/Convert_OpenVZ_to_LXC)。
- en: Much like a VM, a container is an isolated entity; it can be independently rebooted,
    allowed isolated root access, and have a unique set of users and groups.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 类似于虚拟机（VM），容器是一个隔离的实体；它可以独立重启，允许隔离的 root 访问，并且拥有独立的用户和组。
- en: That same isolation also means, potentially, independent IP addresses, memory,
    processes, libraries, and configuration files.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 同样的隔离性也意味着可能拥有独立的 IP 地址、内存、进程、库和配置文件。
- en: 'LXC''s feature set distinguishes it from full virtualization solutions:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: LXC 的特性集使其与完全虚拟化解决方案有所区别：
- en: CPU resources spent on virtualization by the LXC containerization layer will
    be significantly lower than with full virtualization
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 与完全虚拟化相比，LXC 容器化层所消耗的 CPU 资源将显著更少。
- en: An authorized container user can change any configuration file and install additional
    software within a container without interfering with other containers or the Proxmox
    VE host
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 授权的容器用户可以更改任何配置文件，并在不干扰其他容器或 Proxmox VE 主机的情况下，在容器内安装额外的软件。
- en: While containers are fully isolated from each other, they do share dynamic libraries
    with the host, which greatly saves on RAM
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 尽管容器彼此完全隔离，但它们与宿主机共享动态库，从而大大节省了内存。
- en: Most containers fully boot in seconds, while virtual machines may boot in minutes,
    on the same resources
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 大多数容器在几秒钟内完全启动，而虚拟机可能需要几分钟，在相同资源下。
- en: Because all containers run on the OS kernel of the host system, containers run
    with near-zero overhead
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 因为所有容器都运行在宿主系统的操作系统内核上，所以容器的运行几乎没有开销。
- en: Any container's network traffic is isolated from every other container; traffic
    snooping between containers is impossible
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 每个容器的网络流量与其他容器的流量是隔离的；容器之间无法进行流量窃听。
- en: Firewalling may be used inside a container, as may routing manipulation
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 防火墙可以在容器内部使用，路由操作也可以进行。
- en: In practical terms, these features suggest, for example, that containers can
    be scaled without a restart, and offer improved service efficiency and better
    performance than virtual machines, generally speaking.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 从实际角度来看，这些功能意味着，例如容器可以在不重启的情况下进行扩展，并且通常比虚拟机提供更高的服务效率和更好的性能。
- en: It is absolutely worth noting that cautious pundits now suggest the celebrated
    performance advantage of containers and the decreased resources they demand is
    a diminishing advantage, particularly as more powerful hardware becomes available
    at a lower price. The argument here is that full virtualization still has a place,
    and that the benefit of containers is spectral so long as it argues from the perspective
    that hardware resources are scarce.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 值得注意的是，谨慎的专家现在认为，容器的著名性能优势和它们所需的较少资源正在逐渐减弱，特别是随着更强大的硬件以更低的价格进入市场。这里的论点是，完全虚拟化仍然有其位置，且容器的优势是相对的，前提是从硬件资源稀缺的角度来看待这一问题。
- en: There's truth to this, but it doesn't negate the assertion that in many cases
    containers can be a less costly alternative to virtual machines without compromising
    on the quality of service.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 这一点是有事实依据的，但并不否定容器在许多情况下可以成为虚拟机的低成本替代方案，且不影响服务质量的论断。
- en: Consider that the advantages articulated previously can directly lead to a longer
    lifespan for the physical host, as well as flexibility such that containers can
    be transferred quickly to another physical host to facilitate hardware maintenance;
    security is improved against certain threat types; and finally, LXC enjoys a thriving
    community of developers and users, a great resource for support that's available
    with or without a premium Proxmox VE subscription.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑到之前阐述的优势，可以直接导致物理主机的使用寿命延长，并且具备灵活性，容器可以快速迁移到另一个物理主机，以便进行硬件维护；在某些威胁类型面前，安全性得到了提升；最后，LXC
    拥有一个蓬勃发展的开发者和用户社区，是一个极好的支持资源，无论是否拥有 Proxmox VE 高级订阅。
- en: Tip
  id: totrans-47
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: '**Container security**'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: '**容器安全**'
- en: '[Chapter 7](ch07.html "Chapter 7. Securing Proxmox VE"), *Secure Your Servers*,
    will focus particularly on virtual machine security.'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: '[第7章](ch07.html "第7章：保护 Proxmox VE")，*保护你的服务器*，将特别关注虚拟机的安全性。'
- en: While we're certainly in the thrall of a container revolution, there're still
    outstanding questions about container security and we must be diligent about pursuing
    questions. The LXC documentation at [https://linuxcontainers.org/lxc/security/](https://linuxcontainers.org/lxc/security/)
    offers some insight. More information is available from SANS Institute at [https://www.sans.org/reading-room/whitepapers/linux/securing-linux-containers-36142](https://www.sans.org/reading-room/whitepapers/linux/securing-linux-containers-36142),
    and finally, IBM offers some clear guidance at [http://www.ibm.com/developerworks/library/l-lxc-security/](http://www.ibm.com/developerworks/library/l-lxc-security/).
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然我们无疑处于容器革命的热潮中，但关于容器安全仍然存在一些悬而未决的问题，我们必须认真追问这些问题。LXC 文档在[https://linuxcontainers.org/lxc/security/](https://linuxcontainers.org/lxc/security/)中提供了一些见解。更多信息可以参考
    SANS Institute 的资料，地址为[https://www.sans.org/reading-room/whitepapers/linux/securing-linux-containers-36142](https://www.sans.org/reading-room/whitepapers/linux/securing-linux-containers-36142)，最后，IBM
    提供了一些明确的指导，地址为[http://www.ibm.com/developerworks/library/l-lxc-security/](http://www.ibm.com/developerworks/library/l-lxc-security/)。
- en: Nevertheless, in the domain of full virtualization, there are a variety of documents
    that work toward establishing a security protocol for virtual machines, regardless
    of the vendor. This gives us information to respond to and with which to develop
    a dialog.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，在完全虚拟化领域，已经有各种文件在致力于为虚拟机建立安全协议，无论厂商如何。这为我们提供了回应信息并发展对话的基础。
- en: Regrettably, this revolution is still young, and no such standards for OS-level
    virtualization seem readily available yet.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 遗憾的是，这场革命仍然处于初期阶段，似乎还没有现成的操作系统级虚拟化标准可供使用。
- en: This very distinguished feature-set should provoke us to imagine a representative
    use case for LXC containers immediately; imagine the secondary education institution
    as a whole, then consider its various computing courses. The potential for consolidation
    of hardware resources for the two related scenarios is tremendous.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 这个非常独特的功能集应该激发我们立即为LXC容器设想一个代表性的应用案例；想象一下整个中学教育机构，再考虑它的各种计算机课程。对于这两种相关场景，硬件资源的整合潜力巨大。
- en: Computing and information and communication technology students, for example,
    can each have their own virtual private server with which to experiment and complete
    guided and independent practice. Each have their own virtual private servers with
    which to experiment, find inspiration, complete assessments, and realize their
    innovative visions.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 计算机与信息通信技术专业的学生，例如，每个人都可以拥有自己独立的虚拟专用服务器，用于实验和完成引导性和独立的实践。他们每个人都有自己的虚拟专用服务器，用于实验、寻找灵感、完成评估，并实现他们的创新愿景。
- en: 'Moreover, that same physical hardware could host a container each for relevant
    applications:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，同一台物理硬件还可以为相关应用托管一个容器：
- en: A **learning management system** (**LMS**), such as *Moodle*
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个**学习管理系统**（**LMS**），如*Moodle*。
- en: A contained social network provided by a web application, such as *Elgg* ([https://elgg.org/about.php](https://elgg.org/about.php))
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个由网页应用程序提供的封闭社交网络，如*Elgg*（[https://elgg.org/about.php](https://elgg.org/about.php)）。
- en: A microblogging system, such as *GNU Social* ([http://gnu.io/social/](http://gnu.io/social/))
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个微型博客系统，如*GNU Social*（[http://gnu.io/social/](http://gnu.io/social/)）。
- en: A directory server, such as *openLDAP*, to provide a single sign-on service
    across each platform
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个目录服务器，如*openLDAP*，提供跨平台的单点登录服务。
- en: A portfolio system with *Mahara* ([https://mahara.org/](https://mahara.org/))
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个*Mahara*（[https://mahara.org/](https://mahara.org/)）的作品集系统。
- en: A web filter and firewall solution to protect not only the students, but also
    the integrity of the data, and confidentiality of the stakeholders, and availability
    of services
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个网页过滤器和防火墙解决方案，不仅保护学生，还保护数据的完整性、利益相关者的机密性以及服务的可用性。
- en: A domain controller could be added for additional flexibility and functionality
    ([https://www.turnkeylinux.org/domain-controller](https://www.turnkeylinux.org/domain-controller))
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可以添加一个域控制器以提供更多的灵活性和功能（[https://www.turnkeylinux.org/domain-controller](https://www.turnkeylinux.org/domain-controller)）
- en: There's a hitch to containers; they're not a solution for every problem. For
    example, LXC, the container technology beneath PVE containers, only works with
    GNU/Linux guests.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 容器有一个问题，它们并不是所有问题的解决方案。例如，LXC，PVE容器背后的容器技术，仅支持GNU/Linux客体。
- en: 'Proxmox VE hosts further limit what Linux distributions are supported for containers.
    At present, these are the supported distributions and releases:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: Proxmox VE主机进一步限制了支持的容器Linux发行版。目前，以下是受支持的发行版和版本：
- en: Debain (6, 7 , 8)
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Debain (6, 7, 8)
- en: CentOS 6
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: CentOS 6
- en: Ubuntu (12.04, 14.04, 15.04)
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Ubuntu (12.04, 14.04, 15.04)
- en: Archlinux
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Archlinux
- en: This is mentioned with an absolute acknowledgement that 4.1 is a very recent
    release of PVE, and it's very clear that Proxmox VE will support more distributions
    with every passing month.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 这是在充分确认4.1是PVE的一个非常近期版本的情况下提到的，而且很明显，Proxmox VE将会在未来的每个月支持更多的发行版。
- en: The next section is committed to the very first step required for us to provide
    services with containers hosted on PVE—obtaining container templates.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 下一部分将介绍我们为在PVE上托管容器提供服务所需的第一步——获取容器模板。
- en: We'll close this section as a reminder that Proxmox VE is an enterprise-class
    virtualization platform that supports both containers and full virtualization—precisely
    because both have a role in the infrastructure.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将结束这一部分，并提醒大家，Proxmox VE是一个企业级虚拟化平台，支持容器和完全虚拟化——正是因为两者在基础设施中都有各自的作用。
- en: Container templates
  id: totrans-72
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 容器模板
- en: 'A template is the starting point for an LXC container (abbreviated in Proxmox
    VE as "CT"). There are two sorts of templates: **OS templates** and **appliance
    templates**.'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 模板是 LXC 容器（在 Proxmox VE 中简写为“CT”）的起点。模板有两种类型：**操作系统模板** 和 **设备模板**。
- en: OS templates provide a minimal set of packages from a GNU/Linux distribution,
    as well as system libraries and scripts, to start up and run the container. They're
    designed to benefit fully from the GNU/Linux kernel running on the host.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 操作系统模板提供来自 GNU/Linux 发行版的最小软件包集合，以及系统库和脚本，用于启动和运行容器。它们旨在充分利用主机上运行的 GNU/Linux
    内核。
- en: Aside from basic tools, such as a bash interpreter and utilities, additional
    software, such as a compiler or a DBMS is not usually incorporated into an OS
    template.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 除了基础工具，如 bash 解释器和实用程序外，操作系统模板通常不包含其他软件，如编译器或数据库管理系统（DBMS）。
- en: In contrast to OS templates, virtual appliances are built on top of JeOS (Just
    enough Operating System) to provide a very specific service reliably, securely,
    and with an absolute commitment to efficiency.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 与操作系统模板不同，虚拟设备是在 JeOS（足够操作系统）基础上构建的，旨在可靠、安全并高效地提供非常特定的服务。
- en: Virtual appliances can provide general functionality, such as LAMP stack; or
    a specific application, such as GitLab ([https://about.gitlab.com/](https://about.gitlab.com/));
    a CMS such as WordPress or Drupal; or a web-based network monitoring system such
    as Observium ([http://www.observium.org/](http://www.observium.org/)).
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 虚拟设备可以提供通用功能，例如 LAMP 堆栈；也可以提供特定应用，例如 GitLab（[https://about.gitlab.com/](https://about.gitlab.com/)）；如
    WordPress 或 Drupal 这样的 CMS；或者像 Observium（[http://www.observium.org/](http://www.observium.org/)）这样的基于Web的网络监控系统。
- en: The most compelling aspect of virtual appliances is that they just work with
    minimal configuration or requisite tuning by the user.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 虚拟设备最吸引人的地方在于它们几乎无需配置或调优，用户可以轻松使用。
- en: Both OS templates and virtual appliances are available via the Proxmox VE management
    interface. At this point, all the available appliances are provided by **TurnKeyGNU/Linux**;
    who provide access to over 190 appliances, from web applications to SDKs (software
    development kits), as well as administrative templates for monitoring network
    activity, providing LDAP or a Domain Controller, and many more.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 操作系统模板和虚拟设备都可以通过 Proxmox VE 管理界面获取。目前，所有可用的设备都由**TurnKeyGNU/Linux**提供；该平台提供超过190个设备，从Web应用到SDK（软件开发工具包），以及用于监控网络活动、提供LDAP或域控制器等管理模板，还有更多其他功能。
- en: '![Container templates](img/image_03_002.png)'
  id: totrans-80
  prefs: []
  type: TYPE_IMG
  zh: '![容器模板](img/image_03_002.png)'
- en: Website for the TurnKey GNU/Linux appliance library
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: TurnKey GNU/Linux 设备库的网站
- en: Each of these appliances is built from the same JeOS version of Debian, called
    Turnkey GNU/Linux Core (Debian 8), and features at least shellinabox, OpenSSH
    server, and a customized Webmin.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 每个设备都基于相同版本的 Debian JeOS（称为 Turnkey GNU/Linux Core，Debian 8）构建，至少包括 shellinabox、OpenSSH
    服务器和定制的 Webmin。
- en: Tip
  id: totrans-83
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: '**TurnKey GNU/Linux Core**'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: '**TurnKey GNU/Linux Core**'
- en: See [http://www.turnkeylinux.org/core](http://www.turnkeylinux.org/core) for
    more information on TurnKey GNU/Linux Core.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 有关 TurnKey GNU/Linux Core 的更多信息，请访问 [http://www.turnkeylinux.org/core](http://www.turnkeylinux.org/core)。
- en: Downloading templates
  id: totrans-86
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 下载模板
- en: Templates are available directly through the Proxmox VE management interface,
    which offers both OS templates and virtual appliance templates.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 模板可以通过 Proxmox VE 管理界面直接获取，界面中提供了操作系统模板和虚拟设备模板。
- en: In this section, we'll login to the web-based management interface, navigate
    to storage in the server view, and then browse the list of available templates.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将登录到基于 Web 的管理界面，导航到服务器视图中的存储，并浏览可用模板列表。
- en: Note
  id: totrans-89
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: To follow along, your Proxmox VE host must be capable of accessing the Internet.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 要跟随本教程，您的 Proxmox VE 主机必须能够访问互联网。
- en: Logging in to Proxmox VE's web interface
  id: totrans-91
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 登录 Proxmox VE 的 Web 界面
- en: To get started, login to Proxmox VE from a workstation on the same LAN; point
    a browser to port 8006 of the IP address of your Proxmox VE instance using SSL/TLS.
    The machine configured in this chapter has an address of `192.168.1.80`; to access
    this machine, for example, one can simply navigate to `https://192.168.1.80:8006`
    in a (JavaScript enabled) browser.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 开始之前，请从同一局域网内的工作站登录 Proxmox VE；使用 SSL/TLS 浏览器访问 Proxmox VE 实例的 IP 地址的 8006 端口。本文中的机器地址为
    `192.168.1.80`；例如，要访问此机器，您可以直接在支持 JavaScript 的浏览器中访问 `https://192.168.1.80:8006`。
- en: 'Because PVE has a self-signed certificate, the browser will warn that the connection
    can''t be trusted. Firefox, for example, will present a window like this:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 由于 PVE 使用自签名证书，浏览器会警告连接不可信。例如，Firefox 会显示类似以下窗口：
- en: '![Logging in to Proxmox VE''s web interface](img/image_03_003.png)'
  id: totrans-94
  prefs: []
  type: TYPE_IMG
  zh: '![登录到 Proxmox VE 的 Web 界面](img/image_03_003.png)'
- en: The Insecure Connection dialog (in Firefox)
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 不安全连接对话框（在 Firefox 中）
- en: 'Firefox users can proceed as follows:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: Firefox 用户可以按如下方式继续操作：
- en: To move forward in Firefox, select **Advanced** and click on the **Add Exception...**
    button that is revealed.
  id: totrans-97
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 Firefox 中，选择**高级**，然后点击显示出来的**添加例外...**按钮继续。
- en: 'On the **Add Security Exception** dialog that pops up, click on **Confirm Security
    Exception** while noting that you may choose to store this exception permanently
    by selecting the **Permanently store this exception** check box (this dialog is
    captured in the following screenshot):'
  id: totrans-98
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在弹出的**添加安全例外**对话框中，点击**确认安全例外**，并注意您可以选择通过勾选**永久存储此例外**复选框来永久存储此例外（此对话框在以下截图中显示）：
- en: '![Logging in to Proxmox VE''s web interface](img/image_03_004.png)'
  id: totrans-99
  prefs: []
  type: TYPE_IMG
  zh: '![登录到 Proxmox VE 的 Web 界面](img/image_03_004.png)'
- en: The Add Security Exception dialog (in Firefox)
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 添加安全例外对话框（在 Firefox 中）
- en: 'If you''re using Google Chrome to access the administrative interface, you
    should see a page similar to the following screenshot:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您使用 Google Chrome 访问管理界面，应该看到类似于以下截图的页面：
- en: '![Logging in to Proxmox VE''s web interface](img/image_03_005.png)'
  id: totrans-102
  prefs: []
  type: TYPE_IMG
  zh: '![登录到 Proxmox VE 的 Web 界面](img/image_03_005.png)'
- en: Privacy Error dialog in Google Chrome
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: Google Chrome 中的隐私错误对话框
- en: 'To disregard this (somewhat discomforting) alert:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 要忽略此（稍显不安的）警告：
- en: Scroll to the bottom of the page.
  id: totrans-105
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 滚动到页面底部。
- en: Click on **Advanced.**
  id: totrans-106
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**高级**。
- en: Click on **Proceed to 192.168.1.80.**
  id: totrans-107
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**继续访问 192.168.1.80**。
- en: 'Two things to note about this link: it is appended with "unsafe" as a reminder
    that this can be a security risk and of steps for chrome users.'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 关于此链接，有两点需要注意：它被附加了“unsafe”提醒，表示这可能是一个安全风险，并且包含了针对 Chrome 用户的步骤。
- en: Whichever browser is used, be sure to replace `192.168.1.80` with the IP address
    of your Proxmox VE host.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 无论使用哪种浏览器，都确保将`192.168.1.80`替换为您的 Proxmox VE 主机的 IP 地址。
- en: Note
  id: totrans-110
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: 'For explanations of these browser alerts, see the resources on self-signed
    certificates in relation to TLS/SSL:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 有关这些浏览器警告的解释，请参阅与 TLS/SSL 相关的自签名证书资源：
- en: '[http://en.wikipedia.org/wiki/Self-signed_certificate](http://en.wikipedia.org/wiki/Self-signed_certificate)'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: '[http://en.wikipedia.org/wiki/Self-signed_certificate](http://en.wikipedia.org/wiki/Self-signed_certificate)'
- en: '[http://en.wikipedia.org/wiki/HTTPS](http://en.wikipedia.org/wiki/HTTPS)'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: '[http://en.wikipedia.org/wiki/HTTPS](http://en.wikipedia.org/wiki/HTTPS)'
- en: '[http://security.stackexchange.com/questions/8110/what-are-the-risks-of-self-signing-a-certificate-for-ssl](http://security.stackexchange.com/questions/8110/what-are-the-risks-of-self-signing-a-certificate-for-ssl)'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: '[http://security.stackexchange.com/questions/8110/what-are-the-risks-of-self-signing-a-certificate-for-ssl](http://security.stackexchange.com/questions/8110/what-are-the-risks-of-self-signing-a-certificate-for-ssl)'
- en: When the page loads completely, proceed to login with username `root` and the
    password that you determined during installation in [Chapter 2](ch02.html "Chapter 2. Installing
    Proxmox VE"), *Installing Proxmox VE*.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 当页面完全加载后，使用用户名`root`和在[第 2 章](ch02.html "第 2 章 安装 Proxmox VE")中设置的密码继续登录，*安装
    Proxmox VE*。
- en: Select the **Realm** called **Linux PAM Standard Authentication**. The final
    field determines the language of the web interface. Make the selection of your
    choice and click on **Login** to proceed.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 选择名为**Linux PAM 标准认证**的**领域**。最后一个字段决定了 Web 界面的语言。选择您需要的语言，然后点击**登录**继续。
- en: '![Logging in to Proxmox VE''s web interface](img/image_03_006.png)'
  id: totrans-117
  prefs: []
  type: TYPE_IMG
  zh: '![登录到 Proxmox VE 的 Web 界面](img/image_03_006.png)'
- en: The login dialog for Proxmox VE web-management interface
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: Proxmox VE Web 管理界面的登录对话框
- en: After successfully logging in, you'll have your first view of the Proxmox VE
    administration GUI.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 成功登录后，您将首次看到 Proxmox VE 管理界面。
- en: Browsing available container templates
  id: totrans-120
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 浏览可用的容器模板
- en: 'In the left column, toward the banner, the selected view should already be
    set to **Server View**:'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 在左侧栏中，靠近横幅的地方，选中的视图应该已经设置为**服务器视图**：
- en: Expand the resource tree directly under **Server View** (the Datacenter node).
    At the bottom of the resource tree in the left frame will be storage that's local
    to the physical host and labeled **local** followed by your hostname in parenthesis;
    in the following screenshot, the hostname is `pve4` and the storage node is simply
    labeled local (`pve4`).
  id: totrans-122
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**服务器视图**下方直接展开资源树（数据中心节点）。在左侧框架的资源树底部会显示本地物理主机的存储，标记为**local**，后面跟着你的主机名；在下面的截图中，主机名为
    `pve4`，存储节点仅标记为 local（`pve4`）。
- en: Select the storage node local to your server; in the following screenshot, for
    example, select **local ****(pve4)**:![Browsing available container templates](img/image_03_007.png)
  id: totrans-123
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择与服务器本地的存储节点；例如，在下面的截图中，选择**local (pve4)**：![浏览可用的容器模板](img/image_03_007.png)
- en: Server View and Resource Tree (expanded to reveal local (pve4))
  id: totrans-124
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 服务器视图和资源树（展开显示本地（pve4））
- en: Three tabs will appear in the right frame; **Summary**, **Content**, and **Permissions**.
  id: totrans-125
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 右侧框架将显示三个标签；**摘要**、**内容**和**权限**。
- en: Select the **Content** tab to reveal both a **Templates** button and an **Upload**
    button.
  id: totrans-126
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 选择**内容**标签，以显示**模板**按钮和**上传**按钮。
- en: '![Browsing available container templates](img/image_03_008.png)'
  id: totrans-127
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![浏览可用的容器模板](img/image_03_008.png)'
- en: Local storage for the PVE node called pve4\. Screenshot to visualize locations
    of local (PVE4), as well as the Templates and Upload buttons
  id: totrans-128
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: PVE 节点的本地存储名为 pve4。截图显示本地存储（PVE4）的路径，以及模板和上传按钮的位置。
- en: 'To browse the list or download an OS template and virtual appliance provided
    through the PVE interface, follow these steps:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 要浏览列表或下载通过 PVE 界面提供的操作系统模板和虚拟设备，按照以下步骤操作：
- en: Click on the **Templates** tab.
  id: totrans-130
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**模板**标签。
- en: Scroll through the pop-up browser window until you find a template that suits
    your interests.
  id: totrans-131
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 滚动浏览弹出的窗口，直到找到一个适合你兴趣的模板。
- en: '![Browsing available container templates](img/image_03_010.png)'
  id: totrans-132
  prefs: []
  type: TYPE_IMG
  zh: '![浏览可用的容器模板](img/image_03_010.png)'
- en: A glimpse at a few of the container templates available through the Proxmox
    VE interface
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 看一眼 Proxmox VE 界面中提供的几个容器模板
- en: Tip
  id: totrans-134
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: '**Turnkey GNU/Linux Appliance Library**'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: '**Turnkey GNU/Linux 设备库**'
- en: If you decide you want to know more about a particular Turnkey GNU/Linux appliance,
    point your browser to [http://www.turnkeylinux.org/all](http://www.turnkeylinux.org/all)
    and have a look at the elaborated description and feature lists for each appliance.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你决定想了解更多关于某个 Turnkey GNU/Linux 设备的信息，可以通过浏览器访问 [http://www.turnkeylinux.org/all](http://www.turnkeylinux.org/all)，查看每个设备的详细描述和功能列表。
- en: Downloading a container
  id: totrans-137
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 下载容器
- en: Tip
  id: totrans-138
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: For the remainder of the chapter, I'll be working with the Ubuntu 14.04-standard
    template. While it's recommended that you follow along, there are many exciting
    templates to start from.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章剩余部分，我将使用 Ubuntu 14.04 标准模板。虽然建议你跟着做，但也有许多有趣的模板可以作为起点。
- en: '![Downloading a container](img/image_03_011.png)'
  id: totrans-140
  prefs: []
  type: TYPE_IMG
  zh: '![下载容器](img/image_03_011.png)'
- en: Preparing to create a Ubuntu 14.04.1 container
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 准备创建 Ubuntu 14.04.1 容器
- en: 'Once you''ve selected an OS or appliance template:'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你选择了操作系统或设备模板：
- en: Click to select your choice.
  id: totrans-143
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击选择你的选择。
- en: Click on the **Download** button.
  id: totrans-144
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**下载**按钮。
- en: The template will be saved to PVE's local storage in `/usr/share/vz/cache/templates/`.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 模板将保存在 PVE 的本地存储中，路径为 `/usr/share/vz/cache/templates/`。
- en: Tip
  id: totrans-146
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: If the list of available templates in the web interface seems incomplete, it
    can be refreshed from the command line of the PVE host. Access the command line
    interface by logging on to the host locally, via SSH, or using the noVNC console
    available on the web interface.After authenticating, refresh the list of templates
    by simply entering `pveam` at the prompt.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 如果在 Web 界面中可用的模板列表似乎不完整，可以通过 PVE 主机的命令行刷新它。从本地登录到主机、通过 SSH 或使用 Web 界面提供的 noVNC
    控制台来访问命令行界面。身份验证后，只需在提示符下输入 `pveam` 即可刷新模板列表。
- en: Now that a template is downloaded, a container can be built from it. In the
    next section, we'll configure and create the first template.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 现在模板已下载，可以从中创建容器。在下一节中，我们将配置并创建第一个模板。
- en: From template to container
  id: totrans-149
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 从模板到容器
- en: 'You may have noted that when you''ve highlighted an item in storage—ISO or
    template, the option to **Create CT** (container) or **Create VM** (virtual machine)
    appears at the top of the right-hand frame. To build a container from a template
    with Proxmox VE:'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能注意到，当你在存储中高亮一个项目——ISO 或模板时，右侧框架顶部会出现**创建 CT**（容器）或**创建 VM**（虚拟机）的选项。要从模板创建容器，使用
    Proxmox VE：
- en: 'Have, at least, the following information ready:'
  id: totrans-151
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 至少准备好以下信息：
- en: A password for the root user
  id: totrans-152
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: root用户的密码
- en: A name for the host
  id: totrans-153
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 主机名称
- en: A free IPv4 address for the host
  id: totrans-154
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 主机的空闲IPv4地址
- en: Max amount of RAM
  id: totrans-155
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最大RAM数量
- en: CPU count
  id: totrans-156
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: CPU数量
- en: An idea of the storage space you want for the (virtual) hard drive (in GB)
  id: totrans-157
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 虚拟硬盘（以GB为单位）的存储空间预期大小
- en: The IPv4 address of the internet gateway
  id: totrans-158
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 互联网网关的IPv4地址
- en: The appropriate subnet mask of the network the host is on
  id: totrans-159
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 主机所在网络的适当子网掩码
- en: Once you're certain of this information, select the template in local that you
    want to build a container from.
  id: totrans-160
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦确认了这些信息，从本地选择你要用于创建容器的模板。
- en: Click on the **Create CT** button at the top right (see the following screenshot).![From
    template to container](img/image_03_012.png)
  id: totrans-161
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击右上角的**创建CT**按钮（参见下图）。![从模板到容器](img/image_03_012.png)
- en: Create CT and VM to appear at the top of the right-hand corner
  id: totrans-162
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 创建CT和VM并显示在右上角
- en: Clicking on **Create CT** will start the **Create LXC Container** dialog, which
    provides a GUI for configuring the container.
  id: totrans-163
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**创建CT**将启动**创建LXC容器**对话框，提供配置容器的图形界面。
- en: 'The first tab is **General**:'
  id: totrans-164
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 第一个标签是**常规**：
- en: '![From template to container](img/image_03_013.png)'
  id: totrans-165
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![从模板到容器](img/image_03_013.png)'
- en: The General tab of the container creation dialog
  id: totrans-166
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 容器创建对话框的“常规”标签
- en: 'Use this dialog to define the hostname and confirm the password of the root
    user. The VM ID field auto-populates and auto-increments in the Web interface:
    the first guest created will have a default **VM ID** of `100`, the next `101`,
    and so on.'
  id: totrans-167
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 使用此对话框定义主机名，并确认root用户的密码。VM ID字段将在Web界面中自动填充并自动递增：第一个创建的虚拟机将具有默认**VM ID**为`100`，下一个为`101`，依此类推。
- en: Click on **Next** to proceed to the **Template** tab, illustrated here:![From
    template to container](img/image_03_014.png)
  id: totrans-168
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**下一步**继续到**模板**标签，如下所示：![从模板到容器](img/image_03_014.png)
- en: The Template tab of the container creation dialog
  id: totrans-169
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 容器创建对话框的“模板”标签
- en: To follow this text, choose **Ubuntu-14.04-standard_14.04-1_amd64.tar.gz** from
    the drop-down **Template** menu and click **Next** to continue to the **Root Disk**
    tab.![From template to container](img/image_03_015.png)
  id: totrans-170
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了继续本节内容，从下拉**模板**菜单中选择**Ubuntu-14.04-standard_14.04-1_amd64.tar.gz**并点击**下一步**以继续到**根磁盘**标签。![从模板到容器](img/image_03_015.png)
- en: The Root Disk tab of the container creation dialog
  id: totrans-171
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 容器创建对话框的**根磁盘**标签
- en: At this stage, **Storage** is defined as **local** and there are no alternatives
    available. Define the size of the virtual disk for the container to suit your
    preferences (but work to avoid a **Disk Size** of less than 4 GB).
  id: totrans-172
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在此阶段，**存储**被定义为**本地**，并且没有可用的其他选项。定义容器虚拟磁盘的大小，以满足你的偏好（但请避免设置**磁盘大小**小于4GB）。
- en: Click on **Next** to define a **CPU** limit and units for the container. For
    the purpose of this text, let's leave these settings at the default.![From template
    to container](img/image_03_016.png)
  id: totrans-173
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**Next**来为容器定义**CPU**限制和单位。为了本节内容的方便，我们保持这些设置为默认值。![从模板到容器](img/image_03_016.png)
- en: The CPU tab of the container creation dialog
  id: totrans-174
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 容器创建对话框的**CPU**标签
- en: Click on **Next** to configure **Memory** for the container.![From template
    to container](img/image_03_017.png)
  id: totrans-175
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**下一步**来为容器配置**内存**。![从模板到容器](img/image_03_017.png)
- en: The Memory tab of the container creation dialog
  id: totrans-176
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 容器创建对话框的“内存”标签
- en: 'Once again, the defaults are good for our purposes, so we''ll move forward
    from the **Memory** tab onto the **Network** tab:'
  id: totrans-177
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 再次强调，默认设置对我们来说是合适的，因此我们将从**内存**标签继续前进到**网络**标签：
- en: '![From template to container](img/image_03_018.png)'
  id: totrans-178
  prefs: []
  type: TYPE_IMG
  zh: '![从模板到容器](img/image_03_018.png)'
- en: The Network tab of the container creation dialog
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 容器创建对话框的**网络**标签
- en: The **Network** tab assumes some prior knowledge about the configuration of
    the network the container is joining. Since the PVE host is at `192.168.1.80`
    in this case, this first container will be addressed as `192.168.1.81`, a static
    address I'm confident won't conflict with other devices. Static is selected instead
    of DHCP at the top right of the tab.
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: '**网络**标签假设你对容器所加入网络的配置有一定的了解。由于本例中PVE主机位于`192.168.1.80`，因此这个第一个容器的地址将是`192.168.1.81`，这是一个我确信不会与其他设备冲突的静态地址。右上角选择了静态地址，而非DHCP。'
- en: Be sure to indicate the scope in the **IPv4/CIDR** field. In this case, the
    subnet mask is 255.255.255.0, so the IP address is appended with `/24`. If the
    correct subnet mask for the network included more addresses, as 255.255.0.0 would,
    simply append `/16` instead, for example. For those of us who don't have the CIDR
    notation at the ready, there's a calculator available at [http://www.subnet-calculator.com/cidr.php](http://www.subnet-calculator.com/cidr.php).
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 确保在**IPv4/CIDR**字段中指明范围。在这种情况下，子网掩码是255.255.255.0，因此IP地址后面加上`/24`。如果网络的正确子网掩码包含更多地址，如255.255.0.0，只需替换为`/16`，例如。对于那些没有现成CIDR表示法的人，可以访问[http://www.subnet-calculator.com/cidr.php](http://www.subnet-calculator.com/cidr.php)来使用计算器。
- en: For our purposes, **IPv6** isn't of concern; choose the **DHCP** radio button
    and then check out the left column of the **Network** tab.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 对于我们的目的，**IPv6**并不重要；选择**DHCP**单选按钮，然后查看**网络**选项卡的左列。
- en: '**Name** refers to how the virtual network interface will appear inside the
    container; the default, **eth0**, is precisely what we want.'
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: '**名称**指的是虚拟网络接口在容器内的显示方式；默认的**eth0**正是我们需要的。'
- en: The **Bridge** field asks which bridge on the host to connect the container
    to. In the preceding screenshot, `vmbr0` is the default, and only, choice; the
    machine I'm using has only one NIC, and it is defined in the host as `vmbr0`.
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: '**桥接**字段要求选择主机上的哪个桥接器来连接容器。在上面的截图中，`vmbr0`是默认且唯一的选择；我使用的机器只有一个NIC，并且在主机中定义为`vmbr0`。'
- en: When ready to commit the settings in the **Network** tab, click on **Next**
    to point the container to a DNS server.
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 准备提交**网络**选项卡中的设置时，点击**下一步**以将容器指向DNS服务器。
- en: '![From template to container](img/image_03_019.png)'
  id: totrans-186
  prefs: []
  type: TYPE_IMG
  zh: '![从模板到容器](img/image_03_019.png)'
- en: The DNS tab of the container creation dialog
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 容器创建对话框的DNS选项卡
- en: Again, in the case of my network, the default setting in which the **DNS domain**
    field is set to **use host settings** is a perfect fit. To review and commit the
    configuration, click on **Next**.
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 同样，在我的网络环境下，**DNS域**字段设置为**使用主机设置**的默认设置非常合适。要查看并提交配置，请点击**下一步**。
- en: '![From template to container](img/image_03_020.png)'
  id: totrans-189
  prefs: []
  type: TYPE_IMG
  zh: '![从模板到容器](img/image_03_020.png)'
- en: The Confirm tab in the container creation dialog
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 容器创建对话框中的确认选项卡
- en: The **Confirm** tab offers a configuration summary, as well as an opportunity
    the revisit some configuration decisions. Click on **Back** to make adjustments
    or **Finish** to begin the container creation task.
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: '**确认**选项卡提供了配置摘要，并且可以再次查看一些配置决策。点击**返回**进行调整，或者点击**完成**开始容器创建任务。'
- en: 'As soon as **Finish** is clicked, the configuration dialog closes and a new
    window opens in the browser that offers an opportunity to watch PVE build the
    LXC container from the template based on your configuration:'
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦点击**完成**，配置对话框将关闭，并且浏览器中会弹出一个新窗口，提供观看PVE根据你的配置从模板构建LXC容器的机会：
- en: '![From template to container](img/image_03_021.png)'
  id: totrans-193
  prefs: []
  type: TYPE_IMG
  zh: '![从模板到容器](img/image_03_021.png)'
- en: The output of Task viewer as the container creation completes
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 容器创建完成时，任务查看器的输出
- en: When the **Task viewer** window outputs `TASK OK`, the container is ready to
    use. The **Task viewer** window can be closed.
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 当**任务查看器**窗口输出`TASK OK`时，容器已准备好使用。可以关闭**任务查看器**窗口。
- en: Note
  id: totrans-196
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: 'A container can also be created from a template using a PVE host''s command
    line using the `pct` create command. The following bash script illustrates the
    use of this command to create a container nearly identical to the one created
    through the web-based procedure detailed previously:'
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 也可以通过使用PVE主机的命令行和`pct`创建命令，从模板创建容器。以下bash脚本演示了使用此命令创建一个几乎与通过基于网页的过程创建的容器相同的容器：
- en: '[PRE0]'
  id: totrans-198
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'In most cases, making changes to a container''s configuration and adding virtual
    devices is a simple matter that can be accomplished through the web interface.
    To edit the configuration or add devices:'
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 在大多数情况下，修改容器的配置和添加虚拟设备是通过网页界面轻松完成的。要编辑配置或添加设备：
- en: Select the container in **Server** view in the left frame of the interface.
  id: totrans-200
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在界面左侧框架的**服务器**视图中选择容器。
- en: In the frame on the right, look below the **Start** button for a group of tabs
    (shown in the following screenshot).
  id: totrans-201
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在右侧框架中，查看**开始**按钮下方的一组选项卡（如下面的截图所示）。
- en: Match the task you want to complete to the tab name.
  id: totrans-202
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将你想完成的任务与选项卡名称匹配。
- en: Use the **Add** and **Edit** buttons to make the desired changes.
  id: totrans-203
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用**添加**和**编辑**按钮进行所需的更改。
- en: '![From template to container](img/image_03_022.png)'
  id: totrans-204
  prefs: []
  type: TYPE_IMG
  zh: '![从模板到容器](img/image_03_022.png)'
- en: Most container configuration changes can be made through the PVE Web interface
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
- en: The next section is about controlling the state of any given container; for
    example, how to start it and stop it.
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
- en: Starting and stopping containers
  id: totrans-207
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: To start the container, select it in the left pane; the icon should be black
    and gray, indicating a container that is not running.
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
- en: In the following screenshot, my container is identified with a VM ID of **100**
    and the name **trusty-chapter3**:![Starting and stopping containers](img/image_03_023.png)
  id: totrans-209
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Icon of stopped container
  id: totrans-210
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'In the upper-right corner of the interface, start the container by clicking
    on the **Start** button:'
  id: totrans-211
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Starting and stopping containers](img/image_03_024.png)'
  id: totrans-212
  prefs: []
  type: TYPE_IMG
- en: Container Start button
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
- en: When the container start up process is complete, it is signified in the left
    frame of the interface by a change in the color of the container's icon; it should
    now be green, black, and grey instead of simply black and grey; the green addition
    to the icon is a quick way to visually distinguish a running container from a
    stopped one.
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
- en: '![Starting and stopping containers](img/image_03_025.png)'
  id: totrans-215
  prefs: []
  type: TYPE_IMG
- en: The icon of a running container is green, black, and grey
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
- en: In the resource tree, in the left frame, select the running container.
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
- en: 'On the right side of the screen, several buttons become available:'
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
- en: Clicking on **Shutdown** will shut down the container gracefully
  id: totrans-219
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The **Stop** button, by way of contrast, will halt the container abruptly
  id: totrans-220
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Migrate** allows us to move, even a running container between the Proxmox
    VE cluster nodes without causing any service outages or other downtime'
  id: totrans-221
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The **Remove** button will delete a stopped container. Note that there is no
    recovery option if the container is not backed up.
  id: totrans-222
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: To suspend a container, choose the container's **Backup** tab in the PVE web
    interface. Click on **Backup now**, and in the dialog box that appears, select **Suspend**
    from the **Mode** drop-down menu. Click on the **Backup** button to suspend the
    container and close the dialog.
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
- en: '![Starting and stopping containers](img/image_03_026.png)'
  id: totrans-224
  prefs: []
  type: TYPE_IMG
- en: Containers can be suspended from the PVE Web interface
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
- en: Changing container states with the command line
  id: totrans-226
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: A container's state may also be controlled from a PVE host's command line (whether
    via SSH session, noVNC console, or logged in to the physical host).
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
- en: To start the container described in this chapter and assigned the VM ID of 100,
    enter `pct start 100`. Likewise, the same container can be brought down with `pct
    stop 100`.
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
- en: Templates can be backed up from either the PVE command line or the web interface.
    To learn more about backing up and restoring containers, visit the Proxmox wiki
    at [https://pve.proxmox.com/wiki/Linux_Container#Backup_container](https://pve.proxmox.com/wiki/Linux_Container#Backup_container).
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
- en: Accessing a container
  id: totrans-230
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Most OS templates available through Proxmox VE are initially configured to be
    accessed either through the noVNC console, which can be launched from the management
    web interface, or from the PVE command line interface.
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
- en: That's not to say OpenSSH isn't installed; in fact, I haven't seen a template
    without the OpenSSH server installed. The OS templates simply aren't configured
    at launch so the root user can login with a password. (However, TurnKey Linux's
    appliances can be accessed through SSH by the root account using a password.)
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  id: totrans-233
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The pct enter command makes it a breeze to access a container from the PVE host's
    command line interface. To enter the container developed in this chapter, I could
    access the PVE host via SSH, for example, by logging in as the root user; then,
    I could follow `pct enter` with the VM ID of the container, which in this case
    is `100`. Simply type `pct enter 100` at the prompt and press  **Enter** to drop
    into a shell within the container.
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
- en: To access a running container through the **noVNC** console, select the running
    template in the web interface, and then select **Console** at the top right of
    the browser, and select **noVNC** from the drop-down menu.
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
- en: '![Accessing a container](img/image_03_027.png)'
  id: totrans-236
  prefs: []
  type: TYPE_IMG
- en: When a started container is selected, the Console button appears in the top-right
    corner of the page
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
- en: Alternatively, select the running template as described previously, but instead
    of clicking on the **Console** drop-down menu, choose the **Console** tab for
    the container.
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
- en: If you have access to a terminal via the console, as illustrated in the following
    screenshot, you're all set to create users, install packages, and make other configuration
    changes to make the container your own.
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
- en: '![Accessing a container](img/image_03_028.png)'
  id: totrans-240
  prefs: []
  type: TYPE_IMG
- en: Reconfiguring a Ubuntu container's time-zone data from noVNC console session
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
- en: If the console launches but displays only a black screen and an unresponsive
    cursor, try pressing **Enter** and look for a log in prompt. If that doesn't work,
    consider that some containers have to be restarted once to prompt for credentials;
    restart the container and then once more, launch the noVNC console. If the noVNC
    screen is still dark, press  **Enter** to finesse a prompt from it.
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
- en: Note
  id: totrans-243
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: You'll want to configure locales and the time zone for most containers. `dpkg-reconfigure
    locales` will lead you through a brief dialog to determine which locales are available
    on a Debian or Ubuntu container. `dpkg-reconfigure tzdata` will lead you through
    the necessary steps to setup or reconfigure the time zone data for a Debian or
    Ubuntu container.
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  id: totrans-245
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This chapter detailed the process of developing containers from LXC templates.
    We explored the promise of LXC containers in Proxmox VE, and outlined an example
    use case that could be generalized to other circumstances and that demonstrated
    how the Proxmox VE container's features could add value, flexibility, and extensibility
    to an organization's IT infrastructure.
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
- en: After describing how to derive a container from a template, we explored ways
    to manipulate containers from both the command line and the web interface.
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: 在描述如何从模板派生容器后，我们探索了如何通过命令行和网页界面来操作容器的方法。
- en: In [Chapter 4](ch04.html "Chapter 4. Creating Virtual Machines"), *Creating
    Virtual Machines*, we will identify advantages of virtual machines over containers
    and explore some use cases. At the close of the chapter, we'll have walked through
    the creation of Microsoft Windows and GNU/Linux virtual machines from ISOs.
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: 在[第4章](ch04.html "第4章. 创建虚拟机")，*创建虚拟机*，我们将识别虚拟机相较于容器的优势，并探索一些使用案例。在本章的结尾，我们将演示如何通过ISO创建Microsoft
    Windows和GNU/Linux虚拟机。
- en: With what we know now about containers, it'll be exciting to explore the place
    for virtual machines in a culture whose fascination is fixed on containerization.
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 结合我们目前对容器的了解，探索虚拟机在一个以容器化为核心的文化中所占的位置将是令人兴奋的。
