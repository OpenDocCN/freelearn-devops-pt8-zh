["```\ngit clone https://github.com/PacktPublishing/Hands-on-Serverless-Computing-with-Google-Cloud-Platform.git\ncd ch08\n```", "```\nFROM node:12-slim\nLABEL MAINTAINER Rich Rose\n\n# Create a work directory\nWORKDIR /usr/src/app\n\n# Add packages\nCOPY package.json package*.json ./\nRUN npm install --only=production\n\n# Bundle app source\nCOPY . .\n\n# Export application PORT\nEXPOSE 8080\n```", "```\nFROM node:12-slim\nLABEL MAINTAINER Rich Rose\n\n# Create a work directory\nWORKDIR /usr/src/app\n\n# Add packages\nCOPY package.json package*.json ./\nRUN npm install --only=production\n\n# Bundle app source\nCOPY . .\n\n# Export application PORT\nEXPOSE 8080\n\n# Create start command\nCMD [\"npm\", \"start\"]\n```", "```\nnpm install @google-cloud/functions-framework\nnpm install pug\n```", "```\ngcloud builds submit --tag gcr.io/[PROJECT-ID]/hello-cloudrun:1.0\n```", "```\ngcloud run deploy hello-cloudrun --image gcr.io/$PROJECT_ID//hello-cloudrun:1.0 --platform managed --region us-central1 --allow-unauthenticated\n```", "```\nnpm init --yes\nnpm install express \n```", "```\n...\n\"start\", \"node index.js\",\n...\n```", "```\nconst express = require('express');\nconst app = express();\nconst port = process.env.PORT || 8080;\n\napp.listen(port, () => {\n  console.log('Pet Theory REST API listening on port', port);\n});\napp.get('/books', async (req, res) => {\n  res.json({status: 'running'});\n});\n```", "```\nFROM node:12-slim\nWORKDIR /usr/src/app\nCOPY package.json package*.json ./\nRUN npm install --only=production\nCOPY . .\nCMD [ \"npm\", \"start\" ]\n```", "```\ngcloud builds submit --tag gcr.io/$PROJECT_ID/base-url\n```", "```\ngcloud run deploy base-url --image gcr.io/$PROJECT_ID/base-url --platform managed --region us-central1 --allow-unauthenticated\n```", "```\ncurl [SERVICE_URL]/books\n```", "```\napp.get ('/books/:id', async(req, res) => {\n  res.json({status: 'GET ID'});\n});\n```", "```\napp.post ('/books', async(req, res) => {\n  res.json({status: 'POST'});\n});\n```", "```\napp.delete ('/books', async(req, res) => {\n  res.json({status: 'DELETE'});\n});\n```", "```\napp.delete ('/books/:id', async(req, res) => {\n  res.json({status: 'DELETE ID'});\n});\n```", "```\napp.put ('/books/:id', async(req, res) => {\n  res.json({status: 'PUT'});\n});\n```", "```\ngcloud builds submit --tag gcr.io/$PROJECT_ID/base-url\n```", "```\ngcloud beta run deploy base-url --image gcr.io/$PROJECT_ID/base-url --platform managed --region us-central1 --allow-unauthenticated \n```", "```\nres.status(200).json(\"{status: 'PUT'}\");\n...\nres.status(200).json(\"{status: 'GET'}\");\n...\n```", "```\napp.use (function(req, res) {\n  if (some_server_side_test_fails)\n    res.status(500).send(\"Server Error\");\n  else\n     res.status(404).send(\"Page not found\");\n});\n```", "```\n/v1/books\n```", "```\n(v1/books or /v2/books/1111)\n```", "```\nconst apiBooks_v1 = require(\"./bookapi_v1.js\");\n```", "```\nconst express = require('express');\nconst app = express();\nconst port = process.env.PORT || 8080;\nconst apiBooks_v1 = require(\"./bookapi_v1.js\");\n\napp.listen(port, () => {\n  console.log('Pet Theory REST API listening on port', port);\n});\n\napp.use (function(req, res) {\n  if (some_server_side_test_fails)\n    res.status(500).send(\"Server Error\");\n  else\n     res.status(404).send(\"Page not found\");\n});\n```", "```\nconst express = require ('express');\n\napp.put () {...}\n\napp.delete() {...}\n...\napp.get(){...}\n```", "```\nconst bookapi_v1 = express.Router();\n```", "```\nmodule.exports = bookapi_v1\n```", "```\ncd node-ci\n```", "```\nsteps:\n- name: 'gcr.io/cloud-builders/npm' \n  args: ['install']\n- name: 'gcr.io/cloud-builders/npm' \n  args: ['audit','fix']\n- name: 'gcr.io/cloud-builders/docker' \n  args: ['build', '-t', 'gcr.io/$PROJECT_ID/node-ci:0.1', '.']\nimages:\n- 'gcr.io/$PROJECT_ID/node-ci:0.1'\ntimeout: \"600s\"\n```", "```\ngcloud builds submit --config cloudbuild.yaml .\n```"]