- en: Chapter 10. Using OpenStack Dashboard
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In this chapter, we will cover the following topics:'
  prefs: []
  type: TYPE_NORMAL
- en: Introduction – OpenStack Dashboard
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Using OpenStack Dashboard for key management
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Using OpenStack Dashboard to manage Neutron networks and routers
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Using OpenStack Dashboard for security group management
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Using OpenStack Dashboard to launch instances
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Using OpenStack Dashboard to delete instances
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Using OpenStack Dashboard to add new projects
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Using OpenStack Dashboard for user management
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Using OpenStack Dashboard with LBaaS
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Using OpenStack Dashboard with OpenStack Orchestration
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Introduction – OpenStack Dashboard
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Managing our OpenStack environment through a command-line interface allows us
    to have complete control of our cloud environment, but having a web-based interface
    that operators and administrators can use to manage their environments and instances
    makes this process easier. The OpenStack Dashboard, known as **Horizon**, provides
    a graphical, web-based, user interface. Horizon is a web service that runs from
    an Apache installation, using Python's **Web Service Gateway Interface** (**WSGI**)
    and Django, a rapid development web framework.
  prefs: []
  type: TYPE_NORMAL
- en: With the OpenStack Dashboard installed, we can manage all the core components
    of our OpenStack environment. If you are using OpenStack Ansible playbooks, Horizon
    gets installed using the `os-horizon-install.yml` playbook.
  prefs: []
  type: TYPE_NORMAL
- en: Using OpenStack Dashboard for key management
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: SSH key pairs allow users to connect to their Linux instances without requiring
    passwords, and it is the default access mechanism for almost all Linux images
    that you will use for OpenStack. Users can manage their own key pairs through
    the OpenStack Dashboard. Usually, this is the first task a new user has to do
    when given access to our OpenStack environment.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Load a web browser, point it to our OpenStack Dashboard address at `http://192.168.100.117/`,
    and log in as a user in the `default` domain, such as the `developer` user, created
    in the *Common OpenStack identity tasks* recipe in [Chapter 2](part0024_split_000.html#MSDG1-189e69df43a248268db97cde1b1a8e47
    "Chapter 2. The OpenStack Client"), *The OpenStack Client*, with the `cookbook4`
    password. The URL for our dashboard is same as the public load balancer IP as
    discussed in [Chapter 1](part0014_split_000.html#DB7S2-189e69df43a248268db97cde1b1a8e47
    "Chapter 1. Installing OpenStack with Ansible"), *Installing OpenStack with Ansible*.
    If you need to find out at what URL your Horizon is, use public IP from the OpenStack
    catalog list as described in [Chapter 3](part0035_split_000.html#11C3M1-189e69df43a248268db97cde1b1a8e47
    "Chapter 3. Keystone – OpenStack Identity Service"), *Keystone – OpenStack Identity
    Service*.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it…
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Management of the logged-in user''s key pairs is achieved with the steps discussed
    in the following sections:'
  prefs: []
  type: TYPE_NORMAL
- en: Adding key pairs
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Key pairs can be added by performing the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: A new key pair can be added to our system by clicking on the **Key Pairs** tab
    in the **Project** | **Compute** section:![Adding key pairs](img/00185.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: We will now see a screen allowing key pair management. In the right-hand corner
    of the screen, there is a **Create Key Pair** button. Click on this button to
    create a new key pair:![Adding key pairs](img/00186.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: On the **Create Key Pair** screen, type in a meaningful name (for example, `developer`)
    ensuring that there are no spaces in the name, and then, click on the **Create
    Key Pair** button:![Adding key pairs](img/00187.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Once the new key pair is created, the private key portion of our key pair will
    automatically download. If not, click on the **Regenerate and download Key Pair
    "developer"** button:![Adding key pairs](img/00188.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
- en: A private SSH key cannot be recreated, so keep this safe and store it safely
    and appropriately on the filesystem.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Click on the **Key Pairs** link to return to our list of key pairs. We will
    now see the newly created key pair listed. When launching instances, we can select
    this new key pair and gain access to it only using the private key that we have
    stored locally:![Adding key pairs](img/00189.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Deleting key pairs
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Key pairs can be deleted by performing the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: When key pairs are no longer required, we can delete them from our OpenStack
    environment. To do so, click on the **Key Pairs** tab on the left of our screen.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: We will then be presented with a screen allowing access to key pair management.
    Under **Key Pairs**, there will be a list of key pairs that we can use to access
    our instances. To delete a key pair from our system, click on the **Delete Key
    Pair** button for the key pair that we want to delete:![Deleting key pairs](img/00190.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: We will be presented with a confirmation dialog box:![Deleting key pairs](img/00191.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Once we click on the **Delete Key Pair** button, the key pair will be deleted.
  prefs: []
  type: TYPE_NORMAL
- en: Importing key pairs
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'If you have your own key pairs that you use to access other systems, these
    can be imported into our OpenStack environment so that you can continue to use
    them for accessing instances within our OpenStack Compute environment. To import
    key pairs, perform the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: 'We can import key pairs that have been created in our traditional Linux-based
    environments into our OpenStack setup. If you don''t have one already, run the
    following from your Linux-based or other Unix-based host:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'This will produce the following two files on our client:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '`cookbook.key`'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '`cookbook.key.pub`'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: The `cookbook.key` file is our private key and has to be protected as it is
    the only key that matches the public portion of the `cookbook.key.pub` key pair.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: We can import this public key to use in our OpenStack environment so that when
    an instance is launched, the public key is inserted into our running instance.
    To import the public key, ensure that you're at the **Access & Security** screen,
    and then in **Key pairs**, click on the **Import Key Pair** button:![Importing
    key pairs](img/00192.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: We are presented with a screen that asks us to name our key pair and paste the
    contents of our public key. So name the key pair, and then copy and paste the
    contents of the public key into the space—for example, the contents of `cookbook.key.pub`.
    Once entered, click on the **Import Key Pair** button:![Importing key pairs](img/00193.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Once completed, we see the list of key pairs available for that user, including
    our imported key pair:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Importing key pairs](img/00194.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: How it works…
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Key pair management is important as it provides a consistent and secure approach
    for accessing our running instances. Allowing the user to create, delete, and
    import key pairs to use within their projects enables them to create more secure
    systems.
  prefs: []
  type: TYPE_NORMAL
- en: The OpenStack Dashboard allows a user to create key pairs easily. The user must
    ensure, though, that the private key that they download, is kept secure.
  prefs: []
  type: TYPE_NORMAL
- en: While deleting a key pair is simple, the user must remember that deleting a
    private key that is associated with running instances will remove access to the
    running system. Deleting a key pair from the dashboard will not delete keys from
    instances that are already running. Every key pair created is unique regardless
    of the name. The name is simply a label, but the unique fingerprint of the key
    is required and cannot be recreated.
  prefs: []
  type: TYPE_NORMAL
- en: Importing key pairs has the advantage that we can use our existing secure key
    pairs that we have been using outside of OpenStack, within our new private cloud
    environment. This provides a consistent user experience when moving from one environment
    to another.
  prefs: []
  type: TYPE_NORMAL
- en: Using OpenStack Dashboard to manage Neutron networks and routers
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The OpenStack Dashboard has the ability to view, create, and edit Neutron networks,
    which makes managing complex software-defined networks much easier. Certain functions,
    such as creating shared networks and provider routers, require a user to be logged
    in to the OpenStack Dashboard as a user with admin privileges, but any user can
    create private networks. To help with managing complex software-defined networks,
    the OpenStack Dashboard provides means to graphically view and update the network
    topography.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Load a web browser, point it to our OpenStack Dashboard address at `http://192.168.100.117/`,
    and log in as a user in the `default` domain, such as the `developer` user, created
    in the *Common OpenStack identity tasks* recipe in [Chapter 2](part0024_split_000.html#MSDG1-189e69df43a248268db97cde1b1a8e47
    "Chapter 2. The OpenStack Client"), *The OpenStack Client*, with the `cookbook4`
    password. The URL for our dashboard is same as the public load balancer IP as
    discussed in [Chapter 1](part0014_split_000.html#DB7S2-189e69df43a248268db97cde1b1a8e47
    "Chapter 1. Installing OpenStack with Ansible"), *Installing OpenStack with Ansible*.
    If you need to find out at what URL your Horizon is, use public IP from the OpenStack
    catalog list as described in [Chapter 3](part0035_split_000.html#11C3M1-189e69df43a248268db97cde1b1a8e47
    "Chapter 3. Keystone – OpenStack Identity Service"), *Keystone – OpenStack Identity
    Service*.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'This recipe will walk you through creating and deleting networks using the
    OpenStack Dashboard:'
  prefs: []
  type: TYPE_NORMAL
- en: Creating networks
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'To create a private network for the logged in user, carry out the following
    steps:'
  prefs: []
  type: TYPE_NORMAL
- en: To manage networks within our OpenStack Dashboard, select the **Networks** tab
    as shown in the following screenshot:![Creating networks](img/00195.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: When this has been selected, we will be presented with a list of networks that
    we can assign to our instances:![Creating networks](img/00196.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: To create a new network, click on the **Create Network** button.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: We will be presented with a dialog box that first asks us to name our network:![Creating
    networks](img/00197.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: After choosing a name, and keeping the admin state set to enabled (which means
    our network will be on and available for instances to connect to) we then assign
    a subnet to it by selecting the **Subnet** tab or clicking on the **Next** button:![Creating
    networks](img/00198.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: After filling in details for our subnet, we select the **Subnet Details** tab
    that allows us to configure details such as DHCP range, DNS, and any additional
    routes that we want when a user chooses that network:![Creating networks](img/00199.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: After filling in all the details, clicking on the **Create** button makes this
    network available to the users of our project and takes us back to the list of
    available networks:![Creating networks](img/00200.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Creating routers
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Once a private network is added, it probably needs to connect to the outside
    world. If you have a public network, simply create a router between your private
    network and the public network.
  prefs: []
  type: TYPE_NORMAL
- en: 'To manage routers, execute the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Select the **Routers** tab, as shown in the following screenshot:![Creating
    routers](img/00201.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'This will show you available routers for logged in users:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Creating routers](img/00202.jpeg)'
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: Click on the **Create Router** button to add a new router:![Creating routers](img/00203.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Enter a router name and select external network. In our case, we will select
    the **public** network. Click on the **Create Router** button. A list of available
    routers will be shown, including the newly created router:![Creating routers](img/00204.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on the newly created router's name to view the details:![Creating routers](img/00205.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: This router is still missing an interface. To add the private network as an
    available interface, select the **Interfaces** tab:![Creating routers](img/00206.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on the **Add Interface** button to add the missing interface:![Creating
    routers](img/00207.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select the subnet that needs to be connected to the public network via our router,
    and click on the **Submit** button. Now our router has an additional interface:![Creating
    routers](img/00208.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Viewing networks
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'The OpenStack Dashboard gives users and administrators the ability to view
    the topology of our environment. To view the network topology, carry out the following
    steps:'
  prefs: []
  type: TYPE_NORMAL
- en: To manage networks within our OpenStack Dashboard, select the **Network Topology**
    tab, as shown in the following screenshot:![Viewing networks](img/00209.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Clicking on the **Network Topology** tab gives a rich interface that gives an
    overview of our networks and instances attached to them as follows:![Viewing networks](img/00210.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: From this interface, we can click on various parts of this interface, such as
    the networks (which takes us to the manage network interface) and the instances
    (which takes us to the instances interface), as well as to create new networks,
    routers, and launch new instances.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Deleting routers
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'To delete a private router for a logged in user, carry out the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: To manage routers within our OpenStack Dashboard, select the **Routers** tab,
    as shown in the following screenshot:![Deleting routers](img/00211.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: When this has been selected, we will see all logged in user's the available
    routers:![Deleting routers](img/00212.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: To delete a router, click on the drop-down action menu item next to the **Clear
    Gateway** button and click on the **Delete Router** option:![Deleting routers](img/00213.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Once the router is deleted, you will be presented with a list of available remaining
    routers:![Deleting routers](img/00214.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Deleting networks
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'To delete a private network for a logged in user, carry out the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: To manage networks within our OpenStack Dashboard, select the **Networks** tab,
    as shown in the following screenshot:![Deleting networks](img/00215.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: When this has been selected we will be presented with a list of networks that
    we can assign to our instances:![Deleting networks](img/00216.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: To delete a network, select the checkbox next to the name of the network we
    want to delete, then click on the **Delete Networks** button:![Deleting networks](img/00217.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: We will be presented with a dialog box asking us to confirm the deletion:![Deleting
    networks](img/00218.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Clicking on the **Delete Networks** button will remove that network and return
    us to the list of available networks.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: You can only remove a network that has no instances attached to it. You will
    be warned that this isn't allowed if there are instances still attached to that
    network.
  prefs: []
  type: TYPE_NORMAL
- en: How it works…
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The ability to view and edit Neutron networks is a convenient feature introduced
    in the one of the earlier releases of OpenStack. Managing Neutron networks and
    routers can be quite complicated, but having a visual aid, such as the one provided
    by the OpenStack Dashboard, makes this much easier.
  prefs: []
  type: TYPE_NORMAL
- en: As an administrator (a user with the admin role), you can create shared networks.
    The same process applies for the preceding recipes, but you are presented with
    an extra option to allow any created networks to be seen by all projects.
  prefs: []
  type: TYPE_NORMAL
- en: Using OpenStack Dashboard for security group management
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Security groups are network rules that allow instances in one project to be
    kept separate from other instances in another. Managing security group rules for
    our OpenStack instances is done as simply as possible with OpenStack Dashboard.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Load a web browser, point it to our OpenStack Dashboard address at `http://192.168.100.117/`,
    and log in as a user in the `default` domain, such as the `developer` user, created
    in the *Common OpenStack identity tasks* recipe in [Chapter 2](part0024_split_000.html#MSDG1-189e69df43a248268db97cde1b1a8e47
    "Chapter 2. The OpenStack Client"), *The OpenStack Client*, with the `cookbook4`
    password. The URL for our dashboard is same as the public load balancer IP as
    discussed in [Chapter 1](part0014_split_000.html#DB7S2-189e69df43a248268db97cde1b1a8e47
    "Chapter 1. Installing OpenStack with Ansible"), *Installing OpenStack with Ansible*.
    If you need to find out at what URL your Horizon is, use public IP from the OpenStack
    catalog list as described in [Chapter 3](part0035_split_000.html#11C3M1-189e69df43a248268db97cde1b1a8e47
    "Chapter 3. Keystone – OpenStack Identity Service"), *Keystone – OpenStack Identity
    Service*.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it…
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'To administer security groups under OpenStack Dashboard, carry out the steps
    discussed in the following sections:'
  prefs: []
  type: TYPE_NORMAL
- en: Creating a security group
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'To create a security group, perform the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: A new security group is added to our system using the **Security Groups** tab
    in the **Network** section, so click on it:![Creating a security group](img/00219.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Next, we will see a screen allowing access to security settings and manage key
    pairs. In **Security Groups**, there will be a list of security groups that can
    be used when we launch our instances. To create a new security group, click on
    the **Create Security Group** button:![Creating a security group](img/00220.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: We are asked to name the security group and provide a description. The name
    cannot contain spaces:![Creating a security group](img/00221.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Once a new security group is created, the list of available security groups
    will appear on the screen. From here, we can add new network security rules to
    the new security group:![Creating a security group](img/00222.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Editing security groups to add and remove rules
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'To add and remove rules, security groups can be edited by performing the following
    steps:'
  prefs: []
  type: TYPE_NORMAL
- en: When we have created a new security group, or wish to modify the rules in an
    existing security group, we can click on the **Manage Rules** button for that
    particular security group:![Editing security groups to add and remove rules](img/00223.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: After we click the **Manage Rules** button, we will be taken to a screen that
    lists any existing rules, enabling us to add new rules to this group:![Editing
    security groups to add and remove rules](img/00224.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'To add a rule to our new security group we click on the **Add Rule** button.
    This allows us to create rules based on the different protocol types: **ICMP**,
    **TCP**, and **UDP**. There is also a list of rule templates for commonly added
    services. As an example, we will add in a security group rule that allows **HTTPS**
    access from anywhere. To do this, we choose the following:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Editing security groups to add and remove rules](img/00225.jpeg)'
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: We select the **HTTPS** option from the drop-down menu. This returns us to the
    **Add Rule** menu, where we can specify the source of the network traffic:![Editing
    security groups to add and remove rules](img/00226.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: When we click on the **Add** button, we are redirected to the list of rules
    now associated with our security group. Repeat the previous step until all the
    rules related to our security group have been configured:![Editing security groups
    to add and remove rules](img/00227.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: We can also add custom security rules for services that do not have built-in
    rule templates. After we click on the **Add Rule** button, we will select the
    **Custom TCP Rule** option from the **Rule** drop-down list. Then, we will select
    the **Port Range** option from the **Open Port** drop-down list, which presents
    us with the **From Port** and **To Port** fields. We enter the port range, and
    click on the **Add** button:![Editing security groups to add and remove rules](img/00228.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Note that we can remove rules from here too. Simply select the rule that we
    no longer require and click on the **Delete Rule** button. We will be asked to
    confirm this removal.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Deleting security groups
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Security groups can be deleted by performing the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Security groups are deleted by selecting the security group that we want to
    remove and clicking on the **Delete Security Groups** button:![Deleting security
    groups](img/00229.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: You will be asked to confirm this. Clicking on **Delete Security Groups** removes
    the security group and associated access rules:![Deleting security groups](img/00230.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: You will not be able to remove a security group while an instance with that
    assigned security group is running.
  prefs: []
  type: TYPE_NORMAL
- en: How it works...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Security groups are important to our OpenStack environment, as they provide
    a consistent and secure approach for accessing our running instances. Allowing
    the users to create, delete, and amend security groups to use within their projects
    allows them to create secure environments. Rules within a security group are "deny
    by default," meaning that if there is no rule for that particular protocol, no
    traffic for that protocol can access the running instance with that assigned security
    group.
  prefs: []
  type: TYPE_NORMAL
- en: Security groups are associated with instances on creation; however, they also
    can be added later on to a running instance. For example, suppose an instance
    was launched with only the `default` security group. The `default` security group
    that we have set up only has TCP port `22` accessible and the ability to ping
    the instance. If we require access to TCP port `80`, we either have to add this
    rule to the `default` security group or add a new group to the running instance.
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Modifications to security groups take effect immediately, and any instance assigned
    with that security group will have those new rules associated with it.
  prefs: []
  type: TYPE_NORMAL
- en: Using OpenStack Dashboard to launch instances
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Launching instances is easily done using the OpenStack Dashboard. We will simply
    select our chosen image, choose the size of the instance, and then launch it.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Load a web browser, point it to our OpenStack Dashboard address at `http://192.168.100.117/`,
    and log in as a user in the `default` domain, such as the `developer` user, created
    in the *Common OpenStack identity tasks* recipe in [Chapter 2](part0024_split_000.html#MSDG1-189e69df43a248268db97cde1b1a8e47
    "Chapter 2. The OpenStack Client"), *The OpenStack Client* with the `cookbook4`
    password. The URL for our dashboard is same as the public load balancer IP as
    discussed in [Chapter 1](part0014_split_000.html#DB7S2-189e69df43a248268db97cde1b1a8e47
    "Chapter 1. Installing OpenStack with Ansible"), *Installing OpenStack with Ansible*.
    If you need to find out at what URL your Horizon is, use public IP from the OpenStack
    catalog list as described in [Chapter 3](part0035_split_000.html#11C3M1-189e69df43a248268db97cde1b1a8e47
    "Chapter 3. Keystone – OpenStack Identity Service"), *Keystone – OpenStack Identity
    Service*.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it…
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'To launch an instance using the OpenStack Dashboard interface, carry out the
    following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Navigate to the **Instances** tab in the **Compute** section:![How to do it…](img/00231.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Once there, you will see all the running instances:![How to do it…](img/00232.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: From the **Instances** screen, click on the **Launch Instance** button. This
    will present you with the first tab for instance creation:![How to do it…](img/00233.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Enter instance name, select the availability zone and instance count. Then,
    click on the **Next** button.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Select the source from which your instance should be launched. We are using
    the preloaded `ubuntu-xenial` image for our example. If you need a cinder volume,
    you can specify that on this tab as well. Click on the **Next** button after the
    instance source information is set:![How to do it…](img/00234.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select the flavor for your VM. Flavor determines the size of the VM. Click on
    the **Nex**t button to proceed:![How to do it…](img/00235.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select a network to which your instance should be attached during launch. More
    than one network may be specified. Once the networks are selected, click on the
    **Security Groups** tab on the left:![How to do it…](img/00236.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select security groups that should be attached to your instance. Security groups
    determine network access to newly created VM. Click on the **Next** button to
    proceed:![How to do it…](img/00237.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: On this screen, we have to select the key pair that will be used to access the
    instance after it has booted. After selecting the key pair, you may click on the
    **Launch Instance** button or check out the rest of the screens for additional
    information that might be added to the instance:![How to do it…](img/00238.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: After the VM is launched, a list of existing instances will be displayed. Should
    there be an issue with the newly created VM, it will be displayed so in the **Status**
    column:![How to do it…](img/00239.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: How it works…
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Launching instances from Horizon—the OpenStack Dashboard—is done in several
    stages, all through the guided **Launch Instance** interface. Here are the required
    attributes to launch an instance:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Source**: This can be an image, snapshot, volume, or volume snapshot'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Flavor** or **size**: This is for the compute, **memory**, and **storage**
    capacity of the instance'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Networks**: At least one network interface must be selected for the instance
    to launch'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Security groups**: These are not required to launch an instance; they are
    needed to control the instance''s network access'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Key pair**: This is also optional, but recommended for logging on to instances'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The **Instances** tab shows the running instances under our development project.
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: You can also see an overview of what is running in our environment, by clicking
    on the **Overview** tab.
  prefs: []
  type: TYPE_NORMAL
- en: Using OpenStack Dashboard to delete instances
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Terminating instances is very simple when using the OpenStack Dashboard.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Load a web browser, point it to our OpenStack Dashboard address at `http://192.168.100.117/`,
    and log in as a user in the `default` domain, such as the `developer` user, created
    in the *Common OpenStack identity tasks* recipe in [Chapter 2](part0024_split_000.html#MSDG1-189e69df43a248268db97cde1b1a8e47
    "Chapter 2. The OpenStack Client"), *The OpenStack Client* with the `cookbook4`
    password. The URL for our dashboard is same as the public load balancer IP as
    discussed in [Chapter 1](part0014_split_000.html#DB7S2-189e69df43a248268db97cde1b1a8e47
    "Chapter 1. Installing OpenStack with Ansible"), *Installing OpenStack with Ansible*.
    If you need to find out at what URL your Horizon is, use public IP from the OpenStack
    catalog list as described in [Chapter 3](part0035_split_000.html#11C3M1-189e69df43a248268db97cde1b1a8e47
    "Chapter 3. Keystone – OpenStack Identity Service"), *Keystone – OpenStack Identity
    Service*.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it…
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'To deleting instances using OpenStack Dashboard, carry out the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Select the **Instances** tab and choose the instance to be terminated by selecting
    the checkbox next to the instance name (or names), and then click on the red **Delete
    Instances** button:![How to do it…](img/00240.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: We will be presented with a confirmation screen. Click on the **Delete Instances**
    button to terminate the selected instance:![How to do it…](img/00241.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Now we will be presented with the **Instances** screen with a confirmation that
    the instance has been deleted successfully.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: How it works…
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Deleting instances using OpenStack Dashboard is easy. We will select our running
    instance and click on the **Delete Instances** button, which is highlighted when
    an instance is selected. After clicking on the **Delete Instances** button, we
    will be asked to confirm this action to minimize the risk of accidentally terminating
    an instance.
  prefs: []
  type: TYPE_NORMAL
- en: Using OpenStack Dashboard to add new projects
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: OpenStack Dashboard is a lot more than just an interface to our instances. It
    allows an administrator to configure environments, users, and projects. Adding
    new projects that users can be members of is achieved quite simply in OpenStack
    Dashboard.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Load a web browser, point it to our OpenStack Dashboard address at `http://192.168.100.117/`,
    and log in as a user in the `default` domain, such as the `developer` user, created
    in the *Common OpenStack identity tasks* recipe in [Chapter 2](part0024_split_000.html#MSDG1-189e69df43a248268db97cde1b1a8e47
    "Chapter 2. The OpenStack Client"), *The OpenStack Client* with the `cookbook4`
    password. The URL for our dashboard is same as the public load balancer IP as
    discussed in [Chapter 1](part0014_split_000.html#DB7S2-189e69df43a248268db97cde1b1a8e47
    "Chapter 1. Installing OpenStack with Ansible"), *Installing OpenStack with Ansible*.
    If you need to find out at what URL your Horizon is, use public IP from the OpenStack
    catalog list as described in [Chapter 3](part0035_split_000.html#11C3M1-189e69df43a248268db97cde1b1a8e47
    "Chapter 3. Keystone – OpenStack Identity Service"), *Keystone – OpenStack Identity
    Service*.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it…
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'To add a new project to our OpenStack environment, carry out the following
    steps:'
  prefs: []
  type: TYPE_NORMAL
- en: After we login as a user with admin privileges, we get more menu options under
    the **Identity** tab. One of them is a **Projects** option, as shown in the following
    screenshot:![How to do it…](img/00242.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: To manage projects, we click on the **Projects** option listed under the **Identity**
    tab. This will list the available projects in our environment, as shown in the
    following screenshot:![How to do it…](img/00243.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: To create a new project, click on the **Create Project** button.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Next, we will be presented with a form that asks for the name of the project
    and a description. Enter `horizon` as our project name, and enter a description:![How
    to do it…](img/00244.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: We will enable the project by selecting the **Enabled** checkbox, and then click
    on the **Create Project** button.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: We will be presented with the list of projects that are now available and a
    message saying that the `horizon` project was created successfully.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: How it works…
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: OpenStack Dashboard is a feature-rich interface that complements the command-line
    options available to you when managing our OpenStack environment. This means that
    we can simply create a project to which users can belong using OpenStack Dashboard.
    When creating a new project, we need to be logged in as a user with admin privileges
    to get access to the full project management interface.
  prefs: []
  type: TYPE_NORMAL
- en: Using OpenStack Dashboard for user management
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The OpenStack Dashboard gives us the ability to administer users through the
    web interface. This allows an administrator to easily create and edit users within
    an OpenStack environment. To manage users, you must log in using an account that
    is a member of the admin role.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Load a web browser, point it to our OpenStack Dashboard address at `http://192.168.100.117/`,
    and log in as a user in the `default` domain, such as the `developer` user, created
    in the *Common OpenStack identity tasks* recipe in [Chapter 2](part0024_split_000.html#MSDG1-189e69df43a248268db97cde1b1a8e47
    "Chapter 2. The OpenStack Client"), *The OpenStack Client* with the `cookbook4`
    password. The URL for our dashboard is same as the public load balancer IP as
    discussed in [Chapter 1](part0014_split_000.html#DB7S2-189e69df43a248268db97cde1b1a8e47
    "Chapter 1. Installing OpenStack with Ansible"), *Installing OpenStack with Ansible*.
    If you need to find out at what URL your Horizon is, use public IP from the OpenStack
    catalog list as described in [Chapter 3](part0035_split_000.html#11C3M1-189e69df43a248268db97cde1b1a8e47
    "Chapter 3. Keystone – OpenStack Identity Service"), *Keystone – OpenStack Identity
    Service*.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it…
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: User management under OpenStack Dashboard is achieved by carrying out the steps
    discussed in the following sections.
  prefs: []
  type: TYPE_NORMAL
- en: Adding users
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'To add users, perform the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: In the **Identity** panel, click on the **Users** option to get a list of users
    configured on the system:![Adding users](img/00245.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: This screenshot truncates the available user list for the sake of clarity and
    space.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: To create a new user, click on the **Create User** button.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: We will be presented with a form that asks for username details. Enter the username,
    email, and the password for that user. In the example shown in the following screenshot,
    we create a user named `test`, set a password, and assign that user to the `horizon`
    project with the role of **admin**. Click on the **Create User** button to create
    a new user with all the details specified:![Adding users](img/00246.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: We will be returned to the screen listing the users of our OpenStack environment
    with a message stating that our user creation was successful.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Deleting users
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'To delete users, perform the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: In the **Identity** panel, click on the **Users** option to get a list of users
    on the system.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: We will be presented with a list of users in our OpenStack environment. To delete
    a user, click on the **Edi**t button, which will present a drop-down list with
    the **Delete User** option:![Deleting users](img/00247.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Clicking on the **Delete User** option will bring up a confirmation dialog box.
    Confirm by clicking on the **Delete User** button to remove that user from the
    system:![Deleting users](img/00248.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Updating user details and passwords
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'To update user details and passwords, perform the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: In the **Identity** panel, click on the **Users** option to bring up a list
    of users on the system.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: To change a user's password, email address, or primary project, click on the
    **Edit** button for that user.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: This brings up a dialog box asking for the relevant information. When the information
    has been set as we want it to be, click on the **Update User** button:![Updating
    user details and passwords](img/00249.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Adding users to projects
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'To add users to projects, perform the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: In the **Identity** panel, click on the **Projects** option to bring up a list
    of projects on the system:![Adding users to projects](img/00250.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on the **Manage Members** option to bring up a list of users associated
    with a project as well as a list of users, which we can add to that project:![Adding
    users to projects](img/00251.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: To add a new user to the list, simply click on the **+** (plus sign) button
    next to that user.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: To change the role of the user within that project, select the dropdown next
    to the username and select a new role (or roles):![Adding users to projects](img/00252.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In our example, we have added the `developer` user to the `demo` project and
    have given the `user` `admin` and `_member_` roles.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: After clicking on the **Save** button at the bottom of the dialog box, we will
    see a message saying that our project has been updated. This user can now launch
    instances in different projects when they log on.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Removing users from projects
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'To remove users from projects, perform the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: In the **Identity** panel, click on the **Projects** option to bring up a list
    of projects on the system.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: To remove a user from a project, for example, `demo`; click on the **Manage
    Members** button:![Removing users from projects](img/00253.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: By clicking on the **Manage Members** button, you will get a modal window with
    a list of all users as well as project members, which we can remove from that
    project:![Removing users from projects](img/00254.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: To remove a user from this project, click on the **-** (minus sign) button next
    to that particular user under project members.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: After clicking on the **Save** button at the bottom of the dialog box, we will
    see a message saying that our project has been updated.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: How it works…
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The OpenStack Dashboard makes it easy to create users, modify their membership
    within projects, update passwords, and remove them from the system altogether.
  prefs: []
  type: TYPE_NORMAL
- en: Using OpenStack Dashboard with LBaaS
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The OpenStack Dashboard has the ability to view, create and edit load balancers,
    add **Virtual IPs** (**VIPs**), and add nodes to be behind a load balancer. The
    dashboard also provides an interface for creating the HA Proxy server load balance
    service for our instances. We do this first by creating load balancing pool and
    then adding running instances to those pools.
  prefs: []
  type: TYPE_NORMAL
- en: In this section, we will use two instances running Apache. We will create a
    HTTP load balancing pool, create a VIP, and configure instances to be part of
    the pool. The result will be an ability to use the HTTP load balancer pool address
    to send traffic to two instances running Apache.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Load a web browser, point it to our OpenStack Dashboard address at `http://192.168.100.117/`,
    and log in as a user in the `default` domain, such as the `developer` user, created
    in the *Common OpenStack identity tasks* recipe in [Chapter 2](part0024_split_000.html#MSDG1-189e69df43a248268db97cde1b1a8e47
    "Chapter 2. The OpenStack Client"), *The OpenStack Client* with the `cookbook4`
    password. The URL for our dashboard is same as the public load balancer IP as
    discussed in [Chapter 1](part0014_split_000.html#DB7S2-189e69df43a248268db97cde1b1a8e47
    "Chapter 1. Installing OpenStack with Ansible"), *Installing OpenStack with Ansible*.
    If you need to find out at what URL your Horizon is, use public IP from the OpenStack
    catalog list as described in [Chapter 3](part0035_split_000.html#11C3M1-189e69df43a248268db97cde1b1a8e47
    "Chapter 3. Keystone – OpenStack Identity Service"), *Keystone – OpenStack Identity
    Service*.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it…
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'This recipe will walk you through creating and deleting load balancers using
    the OpenStack Dashboard:'
  prefs: []
  type: TYPE_NORMAL
- en: Creating load balancer
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'To create a load balancer pool for a logged in user, carry out the following
    steps:'
  prefs: []
  type: TYPE_NORMAL
- en: To manage load balancers within our OpenStack Dashboard, select the **Load Balancers**
    tab, as shown in the following screenshot:![Creating load balancer](img/00255.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: This will show available load balancer pools. Since we currently do not have
    any created, click on the **Create Load Balancer** button in the top right corner
    to add a load balancer.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: After clicking on the **Create Load Balancer** button, we will be presented
    with a modal window. Fill out the details to add a new load balancer:![Creating
    load balancer](img/00256.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The IP address is not required; if one is not provided, the system will select
    the next available IP on the subnet selected.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select a subnet for the pool by clicking on the drop-down menu. All of our instances
    are attached to the private network, so we select **private-subnet**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: After clicking on the **Next** button, provide details for the load balancer's
    listener:![Creating load balancer](img/00257.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The `HTTP` and `TCP` protocols are available to us, so we will use `HTTP`. `TERMINATED_HTTPS`
    is available only with a configured key-manager service.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select a port on which the frontend listens. Multiple listeners can be configured
    on one load balancer, but each must have a unique port.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: After clicking on the **Next** button, provide pool details. We will use the
    `ROUND_ROBIN` load balancing method. Other algorithms include `LEAST_CONNECTIONS`
    and `SOURCE_IP`:![Creating load balancer](img/00258.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on the **Next** button to proceed to the **Pool Members** screen. Add
    members to the pool by clicking on the **Add** button next to the available instances:![Creating
    load balancer](img/00259.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
- en: If the instance is not listed under **Available Instances**, click on the **Add
    external member** button.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: After clicking on the **Next** button, we will be presented with the **Monitor
    Details** screen. Here we configure our health checks for pool members. We will
    use `PING` for monitor type. Other options available are `HTTP` and `TCP`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Set health check interval time in seconds, followed by the number of retries
    and the time after which the health check will timeout:![Creating load balancer](img/00260.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
- en: Each pool can have only one health monitor associated with it.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Click on the **Create Load Balancer** button to create the load balancer with
    all the details entered. You will see a newly created load balancer in a list
    of all available load balancers.![Creating load balancer](img/00261.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Deleting load balancer
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: To delete the load balancer, we will first delete attached health monitors,
    listeners and pools. In our example, we will show how to delete one of each, but
    if you have multiple pools, you will need to remove all pools, listeners, and
    health monitors before you are able to delete a load balancer.
  prefs: []
  type: TYPE_NORMAL
- en: Start on a **Load Balancers** page and click on the load balancer name you wish
    to delete. In our example, the name is `web-loadbalancer`:![Deleting load balancer](img/00262.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: From load balancer details page, click on the listener name. In our example,
    the listener is named `test-lb`:![Deleting load balancer](img/00263.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: On the listener details page, click on **Default Pool ID**:![Deleting load balancer](img/00264.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'The default pool ID is right under the admin state, and it is the first of
    the three IDs shown:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Deleting load balancer](img/00265.jpeg)'
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: Clicking on the pool ID brings us to the pool details page. Remove all pool
    members by clicking on the **Add/Remove Pool Members** button:![Deleting load
    balancer](img/00266.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: This brings up a new screen for removing pool members. Remove all pool members
    from the pool by clicking on the **Remove** button next to each member:![Deleting
    load balancer](img/00267.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on the **Add/Remove Pool Members** button to save the changes:![Deleting
    load balancer](img/00268.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: After deleting pool members, we will get back to the pool details page. We need
    to delete all health monitors in order to be able to delete the pool:![Deleting
    load balancer](img/00269.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on the **Health Monitor ID** to access the health monitor details:![Deleting
    load balancer](img/00270.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: From the health monitor details page, click on the drop-down arrow next to the
    **Edit** button to reveal the **Delete Health Monitor** option. Click on the **Delete
    Health Monitor** option to delete the health monitor:![Deleting load balancer](img/00271.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: This will give you a confirmation screen. Click on the **Delete Health Monitor**
    button to confirm:![Deleting load balancer](img/00272.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: After deleting the health monitor, we get back to the pool screen. Click on
    the action arrow next to the **Edit Pool** button to reveal the **Delete Pool**
    option. Click on the **Delete Pool** option:![Deleting load balancer](img/00273.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: You will be presented with a confirmation screen. Click on the **Delete Pool**
    button to confirm pool deletion:![Deleting load balancer](img/00274.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: After deleting the pool, we are back on the listener details page. Click on
    the action arrow next to the **Edit** button to reveal the **Delete Listener**
    option. Click on the **Delete Listener** option to delete the listener:![Deleting
    load balancer](img/00275.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: You will be presented with the confirmation screen; click on the **Delete Listeners**
    button to confirm listener deletion:![Deleting load balancer](img/00276.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: After deleting the listener, we will be back on the load balancer details page.
    Click on the action arrow next to the **Edit** button to reveal the **Delete Load
    Balancer** option. Click on the **Delete Load Balancer** option to delete the
    load balancer:![Deleting load balancer](img/00277.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: You will be presented with the confirmation screen. Click on the **Delete Load
    Balancers** button to delete the load balancer:![Deleting load balancer](img/00278.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: How it works…
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'We created a load balancer pool with a health monitor and added two instances
    to it. To do this, we executed the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Creating a load balancer from the load balancer page.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Selecting subnet to which all the nodes are attached when creating listener.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Adding members to the listener.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Adding a health monitor.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'All the load balancer details can be edited after creation. Deleting a load
    balancer requires deletion of all the assets that were created: pool, listener,
    and health monitor.'
  prefs: []
  type: TYPE_NORMAL
- en: Using OpenStack Dashboard with OpenStack Orchestration
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Heat is the OpenStack Orchestration engine that enables users to quickly spin
    up whole environments using templates. Heat templates, known as **HOT** (**Heat
    Orchestration Templates**) are **YAML** (**Yet Another Markup Language**) based
    files. The files describe the resources being used, and the type and size of the
    instances, and the network an instance will be attached to, among other pieces
    of information required to run that environment.
  prefs: []
  type: TYPE_NORMAL
- en: In [Chapter 9](part0113_split_000.html#3BOFI1-189e69df43a248268db97cde1b1a8e47
    "Chapter 9. OpenStack Orchestration Using Heat and Ansible"), *OpenStack Orchestration
    Using Heat and Ansible*, we showed you how to use the Heat command-line client.
    In this section, we will show how to use an existing Heat template file in OpenStack
    Dashboard to spin up two web servers running Apache, connected to a third instance
    running HA Proxy.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Load a web browser, point it to our OpenStack Dashboard address at `http://192.168.100.117/`,
    and log in as a user in the `default` domain, such as the `developer` user, created
    in the *Common OpenStack identity tasks* recipe in [Chapter 2](part0024_split_000.html#MSDG1-189e69df43a248268db97cde1b1a8e47
    "Chapter 2. The OpenStack Client"), *The OpenStack Client*, with the `cookbook4`
    password. The URL for our dashboard is same as the public load balancer IP as
    discussed in [Chapter 1](part0014_split_000.html#DB7S2-189e69df43a248268db97cde1b1a8e47
    "Chapter 1. Installing OpenStack with Ansible"), *Installing OpenStack with Ansible*.
    If you need to find out at what URL your Horizon is, use public IP from the OpenStack
    catalog list as described in [Chapter 3](part0035_split_000.html#11C3M1-189e69df43a248268db97cde1b1a8e47
    "Chapter 3. Keystone – OpenStack Identity Service"), *Keystone – OpenStack Identity
    Service*.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it…
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: This recipe will walk you through the launching and deleting of orchestration
    stacks using the OpenStack Dashboard.
  prefs: []
  type: TYPE_NORMAL
- en: Launching stacks
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'To launch a Heat stack for a logged in user, carry out the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: To view available Heat stacks within our OpenStack Dashboard, select the **Stacks**
    tab from the **Orchestration** menu, as shown in the following screenshot:![Launching
    stacks](img/00279.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: After clicking on the **Stacks** tab, you will see all running stacks in your
    environment. In our case, our list is empty, as shown here:![Launching stacks](img/00280.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on the **Launch Stack** button to create a new stack. You will see the
    following window:![Launching stacks](img/00281.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'There are several ways to specify what **Template Source** to use in a stack:
    **File**, **Direct Input**, or **URL**. Choose which option is the most convenient
    for you. For our example, you can either use the URL directly, or upload a file.
    A template file can be downloaded from here: [https://raw.githubusercontent.com/OpenStackCookbook/OpenStackCookbook/master/cookbook.yaml](https://raw.githubusercontent.com/OpenStackCookbook/OpenStackCookbook/master/cookbook.yaml).
    We will use the **URL** option and use the link directly in the template.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Just like the template source file can be uploaded, we can also upload the
    **Environment Source** file. In this case, we do not have to use environment source,
    but it makes the process convenient. The environment file stores the values we
    would have to enter into the browser manually, but instead loads the values for
    us on the **Launch Stack** screen, as shown in step 8\. In our example, we are
    using an environment file that can be downloaded from here: [https://raw.githubusercontent.com/OpenStackCookbook/OpenStackCookbook/master/cookbook-env.yaml](https://raw.githubusercontent.com/OpenStackCookbook/OpenStackCookbook/master/cookbook-env.yaml).
    Update the `public_net_id`, `private_net_id`, and `private_subnet_id` fields to
    match your environment.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
- en: If you are not sure where to find network information, refer to the *Using OpenStack
    Dashboard to manage Neutron networks and routers* recipe.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: After selecting the **Template Source** and **Environment Source** files, click
    on **Next**:![Launching stacks](img/00282.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Our sample environment file contains the following:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Clicking on **Next** will give you a **Launch Stack** window with all the inputs:![Launching
    stacks](img/00283.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Note that most of the inputs in our template are now populated. If you did not
    specify an environment source file in the previous step, you will need to enter
    the `key_name`, `image`, `flavor`, `public_net_id`, `private_net_id`, and `private_subnet_id`
    fields.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
- en: These fields are specific to each template used. Your templates may have different
    fields.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Enter stack name and user password for your user. If you are logged in as admin
    or demo, the password is `openstack`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on **Launch** to start stack creation. If all inputs were correct, you
    should see your stack being created, similar to the following example:![Launching
    stacks](img/00284.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: After the stack finishes creating and if there were no errors during creation,
    you will see your stack's status updated to **Create Complete**:![Launching stacks](img/00285.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Viewing stack details
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: After launching a stack, there is a lot of information associated with each,
    including inputs, outputs, and in case of errors, information of why stack creation
    failed.
  prefs: []
  type: TYPE_NORMAL
- en: To view the details of the stack, click on the stack name from the stacks list.
    The first available view is **Topology**:![Viewing stack details](img/00286.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Explore the topology by clicking on the nodes. If the graph does not fully fit
    or you would like a different perspective, you can drag the graph around the window.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: The next tab is **Overview**, it will provide all of the information that was
    used in creating the stack:![Viewing stack details](img/00287.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Stack information available in the **Overview** tab is as follows:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Info
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Status
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Outputs
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Stack parameters
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Launch parameters
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: The **Resources** tab will show all the HEAT resources that were created during
    stack launch:![Viewing stack details](img/00288.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: If there were any errors during stack launch, check this page to see which component's
    creation failed.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: The **Events** tab shows all the events that occurred when the stack was created.
    This page can also be very helpful in troubleshooting Heat templates.![Viewing
    stack details](img/00289.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The **Template** tab will show the template that was used to create the stack.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: While your Heat stack is running, you can also see how many instances it created
    in the **Instance** option of the **Compute** tab. This is what our instances
    look like on the **Instances** page:![Viewing stack details](img/00290.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Deleting stacks
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Stack deletion is simple, however note that, when deleting, it will delete all
    resources that were created during stack launch.
  prefs: []
  type: TYPE_NORMAL
- en: To delete a stack, first view available stacks on the Stacks page:![Deleting
    stacks](img/00291.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select the stack to delete and click on the **Delete Stacks** button to delete
    a stack. You will be asked to confirm the deletion:![Deleting stacks](img/00292.jpeg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: After confirming deletion, all resources associated with the stack will be deleted.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: How it works…
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: We used the OpenStack Dashboard to launch, view, and delete Orchestration stacks.
    We first needed to download a sample HAProxy **Heat Orchestration Template** (**HOT**)
    from GitHub. Since we were using an environment file, we also had to modify appropriate
    inputs. Your own templates may have different inputs.
  prefs: []
  type: TYPE_NORMAL
- en: After launching our HAProxy stack, we explored its topology, resources, and
    events. Resources created during stack launch will also be reflected in the rest
    of your environment. If you are launching new instances, all of them will also
    be available on the **Instances** page. Delete and modify resources created during
    the stack launch only through the Orchestration section in OpenStack dashboard
    or on command line. Deleting stacks through the dashboard will delete all associated
    resources.
  prefs: []
  type: TYPE_NORMAL
- en: Another Book You May Enjoy
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'If you enjoyed this book, you may be interested in another book by Packt:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Another Book You May Enjoy](img/00293.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: '**OpenStack for Architects**'
  prefs: []
  type: TYPE_NORMAL
- en: Michael Solberg, Ben Silverman
  prefs: []
  type: TYPE_NORMAL
- en: 'ISBN: 978-1-78439-510-0'
  prefs: []
  type: TYPE_NORMAL
- en: Familiarize yourself with the components of OpenStack
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Build an increasingly complex OpenStack lab deployment
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Write compelling documentation for the architecture teams within your organization
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Apply Agile configuration management techniques to deploy OpenStack
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Integrate OpenStack with your organization's identity management, provisioning,
    and billing systems
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Configure a robust virtual environment for users to interact with
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Use enterprise security guidelines for your OpenStack deployment
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Create a product roadmap that delivers functionality quickly to the users of
    your platform
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Leave a review – let other readers know what you think
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Please share your thoughts on this book with others by leaving a review on the
    site that you bought it from. If you purchased the book from Amazon, please leave
    us an honest review on this book's Amazon page. This is vital so that other potential
    readers can see and use your unbiased opinion to make purchasing decisions, we
    can understand what our customers think about our products, and our authors can
    see your feedback on the title that they have worked with Packt to create. It
    will only take a few minutes of your time, but is valuable to other potential
    customers, our authors, and Packt. Thank you!
  prefs: []
  type: TYPE_NORMAL
