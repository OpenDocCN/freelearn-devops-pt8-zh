["```\n    t@ckbk:~ puppet --version 3.7.2\n\n    ```", "```\n      package {'git':\n        ensure => installed }\n    ```", "```\n    group { 'git': gid => 1111, }\n    user {'git': uid => 1111, gid => 1111, comment => 'Git User', home => '/home/git', require => Group['git'], }\n    file {'/home/git': ensure => 'directory', owner => 1111, group => 1111, require => User['git'], }\n    file {'/home/git/repos': ensure => 'directory', owner => 1111, group => 1111, require => File['/home/git'] }\n    ```", "```\n    # sudo -iu git git@git $ cd repos git@git $ git init --bare puppet.git Initialized empty Git repository in /home/git/repos/puppet.git/\n\n    ```", "```\n    [root@git ~]# passwd git\n    Changing password for user git.\n    New password: \n    Retype new password: \n    passwd: all authentication tokens updated successfully.\n\n    ```", "```\n    t@mylaptop ~ $ cd .ssh\n    t@mylaptop ~/.ssh $ ssh-keygen -b 4096 -f git_rsa\n    Generating public/private rsa key pair.\n    Enter passphrase (empty for no passphrase): \n    Enter same passphrase again: \n    Your identification has been saved in git_rsa.\n    Your public key has been saved in git_rsa.pub.\n    The key fingerprint is:\n    87:35:0e:4e:d2:96:5f:e4:ce:64:4a:d5:76:c8:2b:e4 thomas@mylaptop\n    ```", "```\n    t@mylaptop ~/.ssh $ ssh-copy-id -i git_rsa git@git.example.com\n    git@git.example.com's password: \n    Number of key(s) added: 1\n    ```", "```\n    Host git git.example.com\n     User git\n     IdentityFile /home/thomas/.ssh/git_rsa\n\n    ```", "```\n    t@mylaptop ~$ git clone git@git.example.com:repos/puppet.git\n    Cloning into 'puppet'...\n    warning: You appear to have cloned an empty repository.\n    Checking connectivity... done.\n    ```", "```\n    t@mylaptop puppet$ git config --global user.email\"thomas@narrabilis.com\"\n    t@mylaptop puppet$ git config --global user.name \"ThomasUphill\"\n\n    ```", "```\n    t@mylaptop ~$ git config --global --list\n    user.name=Thomas Uphill\n    user.email=thomas@narrabilis.com\n    core.editor=vim\n    merge.tool=vimdiff\n    color.ui=true\n    push.default=simple\n\n    ```", "```\n    t@mylaptop ~$ cd puppet\n    t@mylaptop puppet$ mkdir manifests\n    t@mylaptop puppet$ vim manifests/site.pp\n    node default {\n     include base\n    }\n\n    ```", "```\n    t@mylaptop puppet$ mkdir modules\n    t@mylaptop puppet$ cd modules\n    t@mylaptop modules$ puppet module generate thomas-base\n    Notice: Generating module at /home/tuphill/puppet/modules/thomas-base\n    thomas-base\n    thomas-base/Modulefile\n    thomas-base/README\n    thomas-base/manifests\n    thomas-base/manifests/init.pp\n    thomas-base/spec\n    thomas-base/spec/spec_helper.rb\n    thomas-base/tests\n    thomas-base/tests/init.pp\n    t@mylaptop modules$ ln -s thomas-base base\n\n    ```", "```\n    class base {\n     file {'/etc/motd':\n     content => \"${::fqdn}\\nManaged by puppet ${::puppetversion}\\n\"\n     }\n    }\n\n    ```", "```\n    t@mylaptop modules$ cd ..\n    t@mylaptop puppet$ git add modules manifests\n    t@mylaptop puppet$ git status\n    On branch master\n    Initial commit\n    Changes to be committed:\n     (use \"git rm --cached <file>...\" to unstage)\n    new file:   manifests/site.pp\n    new file:   modules/base\n    new file:   modules/thomas-base/Modulefile\n    new file:   modules/thomas-base/README\n    new file:   modules/thomas-base/manifests/init.pp\n    new file:   modules/thomas-base/spec/spec_helper.rb\n    new file:   modules/thomas-base/tests/init.pp\n    t@mylaptop puppet$ git commit -m \"Initial commit with simple base module\"\n    [master (root-commit) 3e1f837] Initial commit with simple base module\n     7 files changed, 102 insertions(+)\n     create mode 100644 manifests/site.pp\n     create mode 120000 modules/base\n     create mode 100644 modules/thomas-base/Modulefile\n     create mode 100644 modules/thomas-base/README\n     create mode 100644 modules/thomas-base/manifests/init.pp\n     create mode 100644 modules/thomas-base/spec/spec_helper.rb\n     create mode 100644 modules/thomas-base/tests/init.pp\n\n    ```", "```\n    t@mylaptop puppet$ git push origin master\n    Counting objects: 15, done.\n    Delta compression using up to 4 threads.\n    Compressing objects: 100% (9/9), done.\n    Writing objects: 100% (15/15), 2.15 KiB | 0 bytes/s, done.\n    Total 15 (delta 0), reused 0 (delta 0)\n    To git@git.example.com:repos/puppet.git\n     * [new branch]      master -> master\n\n    ```", "```\n    package {'git':\n      ensure => 'installed'\n    }\n    ```", "```\n    File {\n      owner => 'puppet',\n      group => 'puppet',\n    }\n    file {'/var/lib/puppet/.ssh':\n      ensure => 'directory',\n    }\n    file {'/var/lib/puppet/.ssh/id_rsa':\n      content => \"\n    -----BEGIN RSA PRIVATE KEY-----\n    â€¦\n    NIjTXmZUlOKefh4MBilqUU3KQG8GBHjzYl2TkFVGLNYGNA0U8VG8SUJq\n    -----END RSA PRIVATE KEY-----\n    \",\n      mode    => 0600,\n      require => File['/var/lib/puppet/.ssh']\n    }\n    ```", "```\n    exec {'download git.example.com host key': \n      command => 'sudo -u puppet ssh-keyscan git.example.com >> /var/lib/puppet/.ssh/known_hosts',\n      path    => '/usr/bin:/usr/sbin:/bin:/sbin',\n      unless  => 'grep git.example.com /var/lib/puppet/.ssh/known_hosts',\n      require => File['/var/lib/puppet/.ssh'],\n    }\n    ```", "```\n    file {'/etc/puppet/cookbook':\n      ensure => 'directory',\n    }\n    ```", "```\n    exec {'create cookbook':\n      command => 'sudo -u puppet git clone git@git.example.com:repos/puppet.git /etc/puppet/cookbook',\n      path    => '/usr/bin:/usr/sbin:/bin:/sbin',\n      require => [Package['git'],File['/var/lib/puppet/.ssh/id_rsa'],Exec['download git.example.com host key']],\n      unless  => 'test -f /etc/puppet/cookbook/.git/config',\n    }\n    ```", "```\n    root@testnode /tmp# puppet apply bootstrap.pp \n    Notice: Compiled catalog for testnode.example.com in environment production in 0.40 seconds\n    Notice: /Stage[main]/Main/File[/etc/puppet/cookbook]/ensure: created\n    Notice: /Stage[main]/Main/File[/var/lib/puppet/.ssh]/ensure: created\n    Notice: /Stage[main]/Main/Exec[download git.example.com host key]/returns: executed successfully\n    Notice: /Stage[main]/Main/File[/var/lib/puppet/.ssh/id_rsa]/ensure: defined content as '{md5}da61ce6ccc79bc6937bd98c798bc9fd3'\n    Notice: /Stage[main]/Main/Exec[create cookbook]/returns: executed successfully\n    Notice: Finished catalog run in 0.82 seconds\n\n    ```", "```\n    root@testnode ~# puppet apply --modulepath=/etc/puppet/cookbook/modules /etc/puppet/cookbook/manifests/site.pp \n    Notice: Compiled catalog for testnode.example.com in environment production in 0.12 seconds\n    Notice: /Stage[main]/Base/File[/etc/motd]/content: content changed '{md5}86d28ff83a8d49d349ba56b5c64b79ee' to '{md5}4c4c3ab7591d940318279d78b9c51d4f'\n    Notice: Finished catalog run in 0.11 seconds\n    root@testnode /tmp# cat /etc/motd\n    testnode.example.com\n    Managed by puppet 3.6.2\n\n    ```", "```\n    t@mylaptop ~$ cd puppet/modules\n    t@mylaptop modules$ mkdir -p puppet/{manifests,files}\n\n    ```", "```\n    #!/bin/sh sudo puppet apply /etc/puppet/cookbook/manifests/site.pp \\--modulepath=/etc/puppet/cookbook/modules $*\n    ```", "```\n    class puppet {\n      file { '/usr/local/bin/papply':\n        source => 'puppet:///modules/puppet/papply.sh',\n        mode   => '0755',\n      }\n    }\n    ```", "```\n    node default {\n      include base\n      include puppet\n    }\n    ```", "```\n    t@mylaptop puppet$ git add manifests/site.pp modules/puppet\n    t@mylaptop puppet$ git status\n    On branch master\n    Your branch is up-to-date with 'origin/master'.\n    Changes to be committed:\n     (use \"git reset HEAD <file>...\" to unstage)\n    modified:   manifests/site.pp\n    new file:   modules/puppet/files/papply.sh\n    new file:   modules/puppet/manifests/init.pp\n    t@mylaptop puppet$ git commit -m \"adding puppet module to include papply\"\n    [master 7c2e3d5] adding puppet module to include papply\n     3 files changed, 11 insertions(+)\n     create mode 100644 modules/puppet/files/papply.sh\n     create mode 100644 modules/puppet/manifests/init.pp\n\n    ```", "```\n    t@mylaptop puppet$ git push origin master Counting objects: 14, done. Delta compression using up to 4 threads. Compressing objects: 100% (7/7), done. Writing objects: 100% (10/10), 894 bytes | 0 bytes/s, done. Total 10 (delta 0), reused 0 (delta 0) To git@git.example.com:repos/puppet.git 23e887c..7c2e3d5  master -> master\n\n    ```", "```\n    root@testnode ~# sudo -iu puppet\n    puppet@testnode ~$ cd /etc/puppet/cookbook/puppet@testnode /etc/puppet/cookbook$ git pull origin master remote: Counting objects: 14, done. remote: Compressing objects: 100% (7/7), done. remote: Total 10 (delta 0), reused 0 (delta 0) Unpacking objects: 100% (10/10), done. From git.example.com:repos/puppet * branch            master     -> FETCH_HEAD Updating 23e887c..7c2e3d5 Fast-forward manifests/site.pp                |    1 + modules/puppet/files/papply.sh   |    4 ++++ modules/puppet/manifests/init.pp |    6 ++++++ 3 files changed, 11 insertions(+), 0 deletions(-) create mode 100644 modules/puppet/files/papply.sh create mode 100644 modules/puppet/manifests/init.pp\n\n    ```", "```\n    root@testnode ~# puppet apply /etc/puppet/cookbook/manifests/site.pp --modulepath /etc/puppet/cookbook/modules\n    Notice: Compiled catalog for testnode.example.com in environment production in 0.13 seconds\n    Notice: /Stage[main]/Puppet/File[/usr/local/bin/papply]/ensure: defined content as '{md5}d5c2cdd359306dd6e6441e6fb96e5ef7'\n    Notice: Finished catalog run in 0.13 seconds\n\n    ```", "```\n    root@testnode ~# papply\n    Notice: Compiled catalog for testnode.example.com in environment production in 0.13 seconds\n    Notice: Finished catalog run in 0.09 seconds\n\n    ```", "```\npuppet apply manifests/site.pp\n\n```", "```\npuppet apply manifests/nodes.pp \\--modulepath=/home/ubuntu/puppet/modules\n```", "```\nsudo puppet apply manifests/nodes.pp \\--modulepath=/home/ubuntu/puppet/modules\n```", "```\nsudo puppet apply manifests/nodes.pp \\--modulepath=/home/ubuntu/puppet/modules $*\n```", "```\nfile { '/usr/local/bin/papply': source => 'puppet:///modules/puppet/papply.sh', mode   => '0755',}\n```", "```\nnode default {\n  include base\n  include puppet\n}\n```", "```\n    #!/bin/sh\n    cd /etc/puppet/cookbook\n    sudo â€“u puppet git pull && /usr/local/bin/papply\n    ```", "```\n    file { '/usr/local/bin/pull-updates':\n      source => 'puppet:///modules/puppet/pull-updates.sh',\n      mode   => '0755',\n    }\n    cron { 'run-puppet':\n      ensure  => 'present',\n      user    => 'puppet',\n      command => '/usr/local/bin/pull-updates',\n      minute  => '*/10',\n      hour    => '*',\n    }\n    ```", "```\n    t@mylaptop puppet$ git add modules/puppet\n    t@mylaptop puppet$ git commit -m \"adding pull-updates\"\n    [master 7e9bac3] adding pull-updates\n     2 files changed, 14 insertions(+)\n     create mode 100644 modules/puppet/files/pull-updates.sh\n    t@mylaptop puppet$ git push\n    Counting objects: 14, done.\n    Delta compression using up to 4 threads.\n    Compressing objects: 100% (7/7), done.\n    Writing objects: 100% (8/8), 839 bytes | 0 bytes/s, done.\n    Total 8 (delta 0), reused 0 (delta 0)\n    To git@git.example.com:repos/puppet.git\n       7c2e3d5..7e9bac3  master -> master\n\n    ```", "```\n    root@testnode ~# cd /etc/puppet/cookbook/\n    root@testnode /etc/puppet/cookbook# sudo â€“u puppet git pull\n    remote: Counting objects: 14, done.\n    remote: Compressing objects: 100% (7/7), done.\n    remote: Total 8 (delta 0), reused 0 (delta 0)\n    Unpacking objects: 100% (8/8), done.\n    From git.example.com:repos/puppet\n     23e887c..7e9bac3  master     -> origin/master\n    Updating 7c2e3d5..7e9bac3\n    Fast-forward\n     modules/puppet/files/pull-updates.sh |    3 +++\n     modules/puppet/manifests/init.pp     |   11 +++++++++++\n     2 files changed, 14 insertions(+), 0 deletions(-)\n     create mode 100644 modules/puppet/files/pull-updates.sh\n\n    ```", "```\n    root@testnode /etc/puppet/cookbook# papply\n    Notice: Compiled catalog for testnode.example.com in environment production in 0.17 seconds\n    Notice: /Stage[main]/Puppet/Cron[run-puppet]/ensure: created\n    Notice: /Stage[main]/Puppet/File[/usr/local/bin/pull-updates]/ensure: defined content as '{md5}04c023feb5d566a417b519ea51586398'\n    Notice: Finished catalog run in 0.16 seconds\n\n    ```", "```\n    root@testnode /etc/puppet/cookbook# pull-updates\n    Already up-to-date.\n    Notice: Compiled catalog for testnode.example.com in environment production in 0.15 seconds\n    Notice: Finished catalog run in 0.14 seconds\n\n    ```", "```\n    root@testnode /etc/puppet/cookbook# crontab -l -u puppet\n    # HEADER: This file was autogenerated at Tue Sep 09 02:31:00 -0400 2014 by puppet.\n    # HEADER: While it can still be managed manually, it is definitely not recommended.\n    # HEADER: Note particularly that the comments starting with 'Puppet Name' should\n    # HEADER: not be deleted, as doing so could cause duplicate cron jobs.\n    # Puppet Name: run-puppet\n    */10 * * * * /usr/local/bin/pull-updates\n\n    ```", "```\n#!/bin/sh\ncd /etc/puppet/cookbook\nsudo â€“u puppet git pull && papply\n```", "```\nfile { '/usr/local/bin/pull-updates':\n  source => 'puppet:///modules/puppet/pull-updates.sh',\n  mode   => '0755',\n}\n```", "```\ncron { 'run-puppet':\n  ensure  => 'present',\n  command => '/usr/local/bin/pull-updates',\n  minute  => '*/10',\n  hour    => '*',\n}\n```", "```\n# cd /var/www/html\n# mkdir bootstrap\n\n```", "```\n    <Location /bootstrap>\n    AuthType basic\n    AuthName \"Bootstrap\"\n    AuthBasicProvider file\n    AuthUserFile /var/www/puppet.passwd\n    Require valid-user\n    </Location>\n    ```", "```\n    [root@bootstrap-test tmp]# curl http://git.example.com/bootstrap/\n    <!DOCTYPE HTML PUBLIC \"-//IETF//DTD HTML 2.0//EN\">\n    <html><head>\n    <title>401 Authorization Required</title>\n    </head><body>\n    <h1>Authorization Required</h1>\n\n    ```", "```\n    root@git# cd /var/www\n    root@git# htpasswd â€“cb puppet.passwd bootstrap cookbook\n    Adding password for user bootstrap \n\n    ```", "```\n    [root@node1 tmp]# curl --user bootstrap:cookbook http://git.example.com/bootstrap/\n    <!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 3.2 Final//EN\">\n    <html>\n     <head>\n     <title>Index of /bootstrap</title>\n\n    ```", "```\n#!/bin/bash\n\n# bootstrap for EL6 distributions\nSERVER=git.example.com\nLOCATION=/bootstrap\nBOOTSTRAP=bootstrap.pp\nUSER=bootstrap\nPASS=cookbook\n\n# install puppet\ncurl http://yum.puppetlabs.com/RPM-GPG-KEY-puppetlabs >/etc/pki/rpm-gpg/RPM-GPG-KEY-puppetlabs\nrpm --import /etc/pki/rpm-gpg/RPM-GPG-KEY-puppetlabs\nyum -y install http://yum.puppetlabs.com/puppetlabs-release-el-6.noarch.rpm\nyum -y install puppet\n# download bootstrap\ncurl --user $USER:$PASS http://$SERVER/$LOCATION/$BOOTSTRAP >/tmp/$BOOTSTRAP\n# apply bootstrap\ncd /tmp\npuppet apply /tmp/$BOOTSTRAP\n# apply puppet\npuppet apply --modulepath /etc/puppet/cookbook/modules /etc/puppet/cookbook/manifests/site.pp\n```", "```\n    # puppet resource package puppetmaster ensure='installed' Notice: /Package[puppetmaster]/ensure: created package { 'puppetmaster': ensure => '3.7.0-1puppetlabs1', }\n\n    ```", "```\n    # puppet resource service puppetmaster ensure=true enable=true service { 'puppetmaster': ensure => 'running', enable => 'true', }\n\n    ```", "```\n    t@ckbk:~$ sudo puppet agent -t\n    Info: Creating a new SSL key for cookbook.example.com\n    Info: Caching certificate for ca\n    Info: Creating a new SSL certificate request for cookbook.example.com\n    Info: Certificate Request fingerprint (SHA256): 06:C6:2B:C4:97:5D:16:F2:73:82:C4:A9:A7:B1:D0:95:AC:69:7B:27:13:A9:1A:4C:98:20:21:C2:50:48:66:A2\n    Info: Caching certificate for ca\n    Exiting; no certificate found and waitforcert is disabled\n\n    ```", "```\n    root@puppet:~# puppet cert list\n    pu  \"cookbook.example.com\" (SHA256) 06:C6:2B:C4:97:5D:16:F2:73:82:C4:A9:A7:B1:D0:95:AC:69:7B:27:13:A9:1A:4C:98:20:21:C2:50:48:66:A2\n    root@puppet:~# puppet cert sign cookbook.example.com\n    Notice: Signed certificate request for cookbook.example.com\n    Notice: Removing file Puppet::SSL::CertificateRequestcookbook.example.com at'/var/lib/puppet/ssl/ca/requests/cookbook.example.com.pem'\n\n    ```", "```\n    t@ckbk:~$ sudo puppet agent â€“vt\n    Info: Caching certificate for cookbook.example.com\n    Info: Caching certificate_revocation_list for ca\n    Info: Caching certificate for cookbook.example.comInfo: Retrieving pluginfacts Info: Retrieving plugin Info: Caching catalog for cookbook Info: Applying configuration version '1410401823' Notice: Finished catalog run in 0.04 seconds\n\n    ```", "```\n    # service puppetmaster stop\n    [ ok ] Stopping puppet master.\n\n    ```", "```\n    # puppet cert clean puppet\n    Notice: Revoked certificate with serial 6\n    Notice: Removing file Puppet::SSL::Certificate puppet at '/var/lib/puppet/ssl/ca/signed/puppet.pem'\n    Notice: Removing file Puppet::SSL::Certificate puppet at '/var/lib/puppet/ssl/certs/puppet.pem'\n    Notice: Removing file Puppet::SSL::Key puppet at '/var/lib/puppet/ssl/private_keys/puppet.pem'\n\n    ```", "```\n    root@puppet:~# puppet certificate generate puppet --dns-alt-names puppet.example.com,puppet.example.org,puppet.example.net --ca-location local\n    Notice: puppet has a waiting certificate request\n    true\n\n    ```", "```\n    root@puppet:~# puppet cert --allow-dns-alt-names sign puppet\n    Notice: Signed certificate request for puppet\n    Notice: Removing file Puppet::SSL::CertificateRequest puppet at '/var/lib/puppet/ssl/ca/requests/puppet.pem'\n\n    ```", "```\n    root@puppet:~# service puppetmaster restart\n    [ ok ] Restarting puppet master.\n\n    ```", "```\n# puppet resource package puppetmaster-passenger ensure=installed\nNotice: /Package[puppetmaster-passenger]/ensure: ensure changed 'purged'\n to 'present'\npackage { 'puppetmaster-passenger':\n ensure => '3.7.0-1puppetlabs1',\n}\n\n```", "```\n    PassengerHighPerformance on\n    PassengerMaxPoolSize 12\n    PassengerPoolIdleTime 1500\n    # PassengerMaxRequests 1000\n    PassengerStatThrottleRate 120\n    RackAutoDetect Off\n    RailsAutoDetect Off\n    Listen 8140\n\n    ```", "```\n    <VirtualHost *:8140>\n     SSLEngine on\n     SSLProtocol             ALL -SSLv2 -SSLv3\n     SSLCertificateFile      /var/lib/puppet/ssl/certs/puppet.pem\n     SSLCertificateKeyFile   /var/lib/puppet/ssl/private_keys/puppet.pem\n     SSLCertificateChainFile /var/lib/puppet/ssl/certs/ca.pem\n     SSLCACertificateFile    /var/lib/puppet/ssl/certs/ca.pem\n     SSLCARevocationFile     /var/lib/puppet/ssl/ca/ca_crl.pem\n     SSLVerifyClient optional\n     SSLVerifyDepth  1\n     SSLOptions +StdEnvVars +ExportCertData\n\n    ```", "```\n    RequestHeader unset X-Forwarded-For\n    RequestHeader set X-SSL-Subject %{SSL_CLIENT_S_DN}e\n    RequestHeader set X-Client-DN %{SSL_CLIENT_S_DN}e\n    RequestHeader set X-Client-Verify %{SSL_CLIENT_VERIFY}e\n\n    ```", "```\n     DocumentRoot /usr/share/puppet/rack/puppetmasterd/public/\n     RackBaseURI /\n\n    ```", "```\n    $0 = \"master\"\n    ARGV << \"--rack\"\n    ARGV << \"--confdir\" << \"/etc/puppet\"\n    ARGV << \"--vardir\"  << \"/var/lib/puppet\"\n    require 'puppet/util/command_line'\n    run Puppet::Util::CommandLine.new.execute\n\n    ```", "```\n    root@puppet:~ # service apache2 start\n    [ ok ] Starting web server: apache2\n    root@puppet:~ # lsof -i :8140\n    COMMAND  PID     USER   FD   TYPE DEVICE SIZE/OFF NODE NAME\n    apache2 9048     root    8u  IPv6  16842      0t0  TCP *:8140 (LISTEN)\n    apache2 9069 www-data    8u  IPv6  16842      0t0  TCP *:8140 (LISTEN)\n    apache2 9070 www-data    8u  IPv6  16842      0t0  TCP *:8140 (LISTEN)\n\n    ```", "```\npuppet master --rack --confdir /etc/puppet --vardir /var/lib/puppet\n\n```", "```\nARGV << \"--debug\"\n```", "```\n[main]\n...\nenvironmentpath=/etc/puppet/environments\n```", "```\n    root@puppet:~# cd /etc/puppet/environments/\n    root@puppet:/etc/puppet/environments# mkdir -p production/{manifests,modules}\n    root@puppet:/etc/puppet/environments# vim production/manifests/site.pp\n    node default {\n     file {'/tmp/production':\n     content => \"Hello World!\\nThis is production\\n\",\n     }\n    }\n\n    ```", "```\n    root@puppet:~# puppet agent -vt\n    Info: Retrieving pluginfacts\n    Info: Retrieving plugin\n    Info: Caching catalog for puppet\n    Info: Applying configuration version '1410415538'\n    Notice: /Stage[main]/Main/Node[default]/File[/tmp/production]/ensure: defined content as '{md5}f7ad9261670b9da33a67a5126933044c'\n    Notice: Finished catalog run in 0.04 seconds\n    # cat /tmp/production\n    Hello World!\n    This is production\n\n    ```", "```\n    root@puppet:/etc/puppet/environments# mkdir -p devel/{manifests,modules}\n    root@puppet:/etc/puppet/environments# vim devel/manifests/site.pp\n    node default {\n     file {'/tmp/devel':\n     content => \"Good-bye! Development\\n\",\n     }\n    }\n\n    ```", "```\n    root@puppet:/etc/puppet/environments# puppet agent -vt --environment devel\n    Info: Retrieving pluginfacts\n    Info: Retrieving plugin\n    Info: Caching catalog for puppet\n    Info: Applying configuration version '1410415890'\n    Notice: /Stage[main]/Main/Node[default]/File[/tmp/devel]/ensure: defined content as '{md5}b6313bb89bc1b7d97eae5aa94588eb68'\n    Notice: Finished catalog run in 0.04 seconds\n    root@puppet:/etc/puppet/environments# cat /tmp/devel\n    Good-bye! Development\n\n    ```", "```\nroot@puppet:~# puppet module install puppetlabs-puppetdb\nNotice: Preparing to install into /etc/puppet/environments/production/modules ...\nNotice: Downloading from https://forgeapi.puppetlabs.com ...\nNotice: Installing -- do not interrupt ...\n/etc/puppet/environments/production/modules\nâ””â”€â”¬ puppetlabs-puppetdb (v3.0.1)\n â”œâ”€â”€ puppetlabs-firewall (v1.1.3)\n â”œâ”€â”€ puppetlabs-inifile (v1.1.3)\n â””â”€â”¬ puppetlabs-postgresql (v3.4.2)\n â”œâ”€â”¬ puppetlabs-apt (v1.6.0)\n â”‚ â””â”€â”€ puppetlabs-stdlib (v4.3.2)\n â””â”€â”€ puppetlabs-concat (v1.1.0)\n\n```", "```\nnode puppet {\n  class { 'puppetdb': }\n  class { 'puppetdb::master::config': \n    puppet_service_name => 'apache2',\n  }\n}\n```", "```\nroot@puppet:~# puppet agent -t\nInfo: Caching catalog for puppet\nInfo: Applying configuration version '1410416952'\n...\nInfo: Class[Puppetdb::Server::Jetty_ini]: Scheduling refresh of Service[puppetdb]\nNotice: Finished catalog run in 160.78 seconds\n\n```", "```\nstoreconfigs = true\nstoreconfigs_backend = puppetdb\n```", "```\nroot@puppet:~# puppet node status puppet\npuppet\nCurrently active\nLast catalog: 2014-09-11T06:45:25.267Z\nLast facts: 2014-09-11T06:45:22.351Z\n\n```", "```\nroot@puppet:~# puppet resource package hiera ensure=installed\npackage { 'hiera':\n ensure => '1.3.4-1puppetlabs1',\n}\n\n```", "```\n    ---\n    :hierarchy:\n     - common\n    :backends:\n     - yaml\n    :yaml:\n     :datadir: '/etc/puppet/hieradata'\n\n    ```", "```\n    root@puppet:/etc/puppet# mkdir hieradata\n    root@puppet:/etc/puppet# vim hieradata/common.yaml\n    ---\n    message: 'Default Message'\n\n    ```", "```\n    node default {\n     $message = hiera('message','unknown')\n     notify {\"Message is $message\":}\n    }\n\n    ```", "```\n    t@ckbk:~$ sudo puppet agent -t\n    Info: Retrieving pluginfacts\n    Info: Retrieving plugin\n    ...\n    Info: Caching catalog for cookbook-test\n    Info: Applying configuration version '1410504848'\n    Notice: Message is Default Message\n    Notice: /Stage[main]/Main/Node[default]/Notify[Message is Default Message]/message: defined 'message' as 'Message is Default Message'\n    Notice: Finished catalog run in 0.06 seconds\n\n    ```", "```\n:hierarchy:\n  - hosts/%{hostname}\n  - os/%{operatingsystem}\n  - network/%{network_eth0}\n  - common\n```", "```\ncookbook::example::publisher: 'PacktPub'\n```", "```\n:hierarchy:\nhosts/%{hostname}\nos/%{operatingsystem}\nenvironment/%{environment}\ncommon\n```", "```\nroot@puppet:/etc/puppet# rm /etc/hiera.yaml \nroot@puppet:/etc/puppet# ln -s /etc/puppet/hiera.yaml /etc/\nroot@puppet:/etc/puppet# hiera message\nDefault Message\n\n```", "```\n    message: 'This is the test node for the cookbook'\n    ```", "```\n    t@ckbk:~$ sudo puppet agent -t\n    Info: Caching catalog for cookbook-test\n    Notice: Message is This is the test node for the cookbook\n    [root@hiera-test ~]# puppet agent -t\n    Info: Caching catalog for hiera-test.example.com\n    Notice: Message is Default Message\n\n    ```", "```\n    root@puppet:~# puppet resource package ruby-dev ensure=installed\n    Notice: /Package[ruby-dev]/ensure: ensure changed 'purged' to 'present'\n    package { 'ruby-dev':\n     ensure => '1:1.9.3',\n    }\n\n    ```", "```\n    root@puppet:~# puppet resource package hiera-gpg ensure=installed provider=gem\n    Notice: /Package[hiera-gpg]/ensure: created\n    package { 'hiera-gpg':\n     ensure => ['1.1.0'],\n    }\n\n    ```", "```\n        :hierarchy:\n            - secret\n            - common\n        :backends:\n            - yaml\n            - gpg\n        :yaml:\n            :datadir: '/etc/puppet/hieradata'\n        :gpg:\n            :datadir: '/etc/puppet/secret'\n    ```", "```\n    top_secret: 'Val Kilmer'\n\n    ```", "```\n    root@puppet:/etc/puppet/secret# gpg -e -o secret.gpg -r puppet@puppet.example.com secret.yaml \n    root@puppet:/etc/puppet/secret# file secret.gpg\n    secret.gpg: GPG encrypted data\n\n    ```", "```\n    root@puppet:/etc/puppet/secret# rm secret.yaml\n\n    ```", "```\n    node default {\n     $message = hiera('top_secret','Deja Vu')\n     notify { \"Message is $message\": }\n    }\n\n    ```", "```\n    [root@hiera-test ~]# puppet agent -t\n    Info: Caching catalog for hiera-test.example.com\n    Info: Applying configuration version '1410508276'\n    Notice: Message is Deja Vu\n    Notice: /Stage[main]/Main/Node[default]/Notify[Message is Deja Vu]/message: defined 'message' as 'Message is Deja Vu'\n    Notice: Finished catalog run in 0.08 seconds\n\n    ```", "```\nt@ckbk:~$ sudo puppet resource package msgpack ensure=installedprovider=gem\nNotice: /Package[msgpack]/ensure: created\npackage { 'msgpack':\n ensure => ['0.5.8'],\n}\n\n```", "```\n[agent]\npreferred_serialization_format=msgpack\n```", "```\nt@ckbk:~$ puppet parser validate bootstrap.pp\nError: Could not parse for environment production: Syntax error at\n 'File'; expected '}' at /home/thomas/bootstrap.pp:3 \n\n```", "```\n    t@mylaptop:~/puppet$ mkdir hooks\n\n    ```", "```\n    #!/bin/sh\n\n    syntax_errors=0\n    error_msg=$(mktemp /tmp/error_msg.XXXXXX)\n\n    if git rev-parse --quiet --verify HEAD > /dev/null\n    then\n        against=HEAD\n    else\n        # Initial commit: diff against an empty tree object\n        against=4b825dc642cb6eb9a060e54bf8d69288fbee4904\n    fi\n\n    # Get list of new/modified manifest and template files\n      to check (in git index)\n    for indexfile in 'git diff-index --diff-filter=AM --\n      name-only --cached $against | egrep '\\.(pp|erb)''\n    do\n        # Don't check empty files\n        if [ 'git cat-file -s :0:$indexfile' -gt 0 ]\n        then\n            case $indexfile in\n                *.pp )\n                    # Check puppet manifest syntax\n                    git cat-file blob :0:$indexfile | \n                      puppet parser validate > $error_msg ;;\n                *.erb )\n                    # Check ERB template syntax\n                    git cat-file blob :0:$indexfile | \n                      erb -x -T - | ruby -c 2> $error_msg >\n                        /dev/null ;;\n            esac\n            if [ \"$?\" -ne 0 ]\n            then\n                echo -n \"$indexfile: \"\n                cat $error_msg\n                syntax_errors='expr $syntax_errors + 1'\n            fi\n        fi\n    done\n\n    rm -f $error_msg\n\n    if [ \"$syntax_errors\" -ne 0 ]\n    then\n        echo \"Error: $syntax_errors syntax errors found,\n          aborting commit.\"\n        exit 1\n    fi\n    ```", "```\n    t@mylaptop:~/puppet$ chmod a+x hooks/check_syntax.sh\n\n    ```", "```\n    t@mylaptop:~/puppet$ ln -s ~/puppet/hooks/check_syntax.sh.git/hooks/pre-commit\n\n    ```", "```\nt@mylaptop:~/puppet$ git commit -m \"test commit\"\nError: Could not parse for environment production: Syntax error at\n '}' at line 3\nError: Try 'puppet help parser validate' for usage\nmanifests/nodes.pp: Error: 1 syntax errors found, aborting commit.\n\n```", "```\n    [git@git ~]$ ssh-keygen -f ~/.ssh/puppet_rsa\n    Generating public/private rsa key pair.\n    Your identification has been saved in /home/git/.ssh/puppet_rsa.\n    Your public key has been saved in /home/git/.ssh/puppet_rsa.pub.\n    Copy the public key into the authorized_keys file of the puppet user on your puppetmaster\n    puppet@puppet:~/.ssh$ cat puppet_rsa.pub >>authorized_keys\n\n    ```", "```\n    root@puppet:~# chsh puppet -s /bin/bash\n\n    ```", "```\n    [git@git ~]$ vim .ssh/config\n    Host puppet.example.com\n     IdentityFile ~/.ssh/puppet_rsa\n\n    ```", "```\n    [git@git puppet.git]$ git remote add puppetmaster puppet@puppet.example.com:/etc/puppet/environments/puppet.git\n\n    ```", "```\n    root@puppet:~# chown -R puppet:puppet /etc/puppet/environments\n    root@puppet:~# sudo -iu puppet\n    puppet@puppet:~$ cd /etc/puppet/environments/\n    puppet@puppet:/etc/puppet/environments$ mv production production.orig\n    puppet@puppet:/etc/puppet/environments$ git clone git@git.example.com:repos/puppet.git\n    Cloning into 'puppet.git'...\n    remote: Counting objects: 63, done.\n    remote: Compressing objects: 100% (52/52), done.\n    remote: Total 63 (delta 10), reused 0 (delta 0)\n    Receiving objects: 100% (63/63), 9.51 KiB, done.\n    Resolving deltas: 100% (10/10), done.\n\n    ```", "```\n    puppet@puppet:/etc/puppet/environments$ git clone puppet.git production\n    Cloning into 'production'...\n    done.\n\n    ```", "```\n    [git@git ~]$ cd repos/puppet.git/\n    [git@git puppet.git]$ git push puppetmaster\n    Everything up-to-date\n\n    ```", "```\n    [git@git puppet.git]$ vim hooks/post-commit\n    #!/bin/sh\n    git push puppetmaster\n    ssh puppet@puppet.example.com \"cd /etc/puppet/environments/production && git pull\"\n    [git@git puppet.git]$ chmod 755 hooks/post-commit\n\n    ```", "```\n    t@mylaptop puppet$ vim README\n    t@mylaptop puppet$ git add README\n    t@mylaptop puppet$ git commit -m \"Adding README\"\n    [master 8148902] Adding README\n     1 file changed, 4 deletions(-)\n    t@mylaptop puppet$ git push\n    X11 forwarding request failed on channel 0\n    Counting objects: 5, done.\n    Delta compression using up to 4 threads.\n    Compressing objects: 100% (3/3), done.\n    Writing objects: 100% (3/3), 371 bytes | 0 bytes/s, done.\n    Total 3 (delta 1), reused 0 (delta 0)\n    remote: To puppet@puppet.example.com:/etc/puppet/environments/puppet.git\n    remote:    377ed44..8148902  master -> master\n    remote: From /etc/puppet/environments/puppet\n    remote:    377ed44..8148902  master     -> origin/master\n    remote: Updating 377ed44..8148902\n    remote: Fast-forward\n    remote:  README |    4 ----\n    remote:  1 file changed, 4 deletions(-)\n    To git@git.example.com:repos/puppet.git\n     377ed44..8148902  master -> master\n\n    ```", "```\npuppet@puppet:/etc/puppet/environments$ mv production production.master\n\n```", "```\n#!/bin/sh\n\nread oldrev newrev refname\nbranch=${refname#*\\/*\\/}\n\ngit push puppetmaster $branch\nssh puppet@puppet.example.com \"if [ ! -d \n/etc/puppet/environments/$branch ]; then git clone\n /etc/puppet/environments/puppet.git\n /etc/puppet/environments/$branch; fi; cd\n /etc/puppet/environments/$branch; git checkout $branch; git pull\"\n\n```", "```\nt@mylaptop puppet$ git add README\nt@mylaptop puppet$ git commit -m \"Adding README\"\n[master 539d9f8] Adding README\n 1 file changed, 1 insertion(+)\nt@mylaptop puppet$ git push\nCounting objects: 5, done.\nDelta compression using up to 4 threads.\nCompressing objects: 100% (3/3), done.\nWriting objects: 100% (3/3), 374 bytes | 0 bytes/s, done.\nTotal 3 (delta 1), reused 0 (delta 0)\nremote: To puppet@puppet.example.com:/etc/puppet/environments/puppet.git\nremote:    0d6b49f..539d9f8  master -> master\nremote: Cloning into '/etc/puppet/environments/master'...\nremote: done.\nremote: Already on 'master'\nremote: Already up-to-date.\nTo git@git.example.com:repos/puppet.git\n 0d6b49f..539d9f8  master -> master\n\n```", "```\n    t@mylaptop puppet$ git branch production\n    t@mylaptop puppet$ git checkout production\n    Switched to branch 'production'\n\n    ```", "```\n    t@mylaptop puppet$ vim README\n    t@mylaptop puppet$ git add README\n    t@mylaptop puppet$ git commit -m \"Production Branch\"\n    t@mylaptop puppet$ git push origin production\n    Counting objects: 7, done.\n    Delta compression using up to 4 threads.\n    Compressing objects: 100% (3/3), done.\n    Writing objects: 100% (3/3), 372 bytes | 0 bytes/s, done.\n    Total 3 (delta 1), reused 0 (delta 0)\n    remote: To puppet@puppet.example.com:/etc/puppet/environments/puppet.git\n    remote:    11db6e5..832f6a9  production -> production\n    remote: Cloning into '/etc/puppet/environments/production'...\n    remote: done.\n    remote: Switched to a new branch 'production'\n    remote: Branch production set up to track remote branch production from origin.\n    remote: Already up-to-date.\n    To git@git.example.com:repos/puppet.git\n     11db6e5..832f6a9  production -> production\n\n    ```"]