["```\n    keytool -genkey -v -keystore upload-keystore.jks -keyalg RSA -keysize 2048 -validity 10000 -alias upload\n    ```", "```\n    keytool -genkey -v -keystore upload-keystore.jks -keyalg RSA -keysize 2048 -validity 10000 -alias upload\n    upload.\n    ```", "```\n    .p8 extension:\n    ```", "```\n    certutil -encode AuthKey_XXXX.p8 tmp.b64 && findstr /v /c:- tmp.b64 > data.b64\n    ```", "```\n        trigger: none\n        pool:\n          vmImage: \"ubuntu-latest\"\n        variables:\n          - group: secrets\n          - name: androidReleaseDir\n            value: $(build.artifactStagingDirectory)/flutter/hello_world/build/app/outputs/flutter-apk\n          - name: apkFile\n            value: $(androidReleaseDir)/app-release.apk\n        ```", "```\n        jobs:\n          - job: android_deployment\n            steps:\n            - task: JavaToolInstaller@0\n              inputs:\n                versionSpec: '11'\n                jdkArchitectureOption: 'x64'\n                jdkSourceOption: 'PreInstalled'\n        ```", "```\n        - task: Hey24sheep.flutter.flutter-install.FlutterInstall@0\n              displayName: 'Flutter Install'\n              inputs:\n                version: custom\n                customVersion: 3.10.6\n        ```", "```\n        - task: Hey24sheep.flutter.flutter-build.FlutterBuild@0\n              displayName: \"Build APK\"\n              inputs:\n                target: apk\n                projectDirectory: \"./flutter/hello_world\"\n                buildNumber: \"\"\n        ```", "```\n        - task: AndroidSigning@3\n              displayName: \"Signing and aligning APK file(s) **/*.apk\"\n              inputs:\n                apkFiles: \"**/*.apk\"\n                apksign: true\n                apksignerKeystoreFile: \"upload-keystore.jks\"\n                apksignerKeystorePassword: \"$(ANDROID_KEYSTORE_PRIVATE_PASSWORD)\"\n                apksignerKeystoreAlias: \"$(ANDROID_KEYSTORE_ALIAS)\"\n                apksignerKeyPassword: \"$(ANDROID_KEYSTORE_PASSWORD)\"\n        ```", "```\n        - task: CopyFiles@2\n              displayName: \"Copy apk to artifact directory\"\n              inputs:\n                contents: \"**/*.apk\"\n                targetFolder: \"$(build.artifactStagingDirectory)\"\n        ```", "```\n        - task: PublishBuildArtifacts@1\n              displayName: \"Publish signed apk as artifact\"\n              inputs:\n                artifactName: \"drop\"\n        ```", "```\n        - task: Bash@3\n              displayName: \"Upload to firebase app distribution\"\n              inputs:\n                targetType: \"inline\"\n                script: |\n                  npm i -g firebase-tools\n                  ls -la $(androidReleaseDir)\n                  firebase appdistribution:distribute \"$(apkFile)\" \\\n                    --app \"$(ANDROID_APP_ID)\" \\\n                    --release-notes \"Build Android From Azure Pipeline\" \\\n                    --groups \"beta-testers\" \\\n                    --token \"$(FIREBASE_TOKEN)\"\n        ```", "```\n        trigger: none\n        pool:\n          vmImage: \"macos-latest\"\n        variables:\n          - group: secrets\n          - name: iosReleaseDir\n            value: $(Build.SourcesDirectory)/flutter/hello_world/build/ios/ipa\n          - name: ipaFile\n            value: $(iosReleaseDir)/hello_world.ipa\n          - name: rootPath\n            value: $(System.DefaultWorkingDirectory)/flutter/hello_world\n        ```", "```\n        jobs:\n          - job: ios_deployment\n            steps:\n            - task: JavaToolInstaller@0\n              inputs:\n                versionSpec: '11'\n                jdkArchitectureOption: 'x64'\n                jdkSourceOption: 'PreInstalled'\n        ```", "```\n        - task: InstallAppleCertificate@2\n              displayName: \"Install Apple cert dist p12\"\n              inputs:\n                certSecureFile: \"Certificates_Distribution.p12\"\n                certPwd: \"$(APPLE_CERTIFICATE_SIGNING_PASSWORD)\"\n                keychain: \"temp\"\n        ```", "```\n            - task: InstallAppleProvisioningProfile@1\n              displayName: \"Install Apple Mobile Provisioning Profile\"\n              inputs:\n                provisioningProfileLocation: \"secureFiles\"\n                provProfileSecureFile: \"Hello_Flutter_AppStore.mobileprovision\"\n        ```", "```\n        - task: Hey24sheep.flutter.flutter-install.FlutterInstall@0\n              displayName: 'Flutter Install'\n              inputs:\n                version: custom\n                customVersion: 3.10.6\n        ```", "```\n            - task: Bash@3\n              displayName: \"Build IPA\"\n              inputs:\n                targetType: \"inline\"\n                script: |\n                  flutter build ipa --export-options-plist=$(rootPath)/ios/Runner/ExportOptions.plist\n                workingDirectory: $(rootPath)\n        ```", "```\n        - task: Bash@3\n              displayName: \"Upload to firebase app distribution\"\n              inputs:\n                targetType: \"inline\"\n                script: |\n                  npm i -g firebase-tools\n                  ls -la $(iosReleaseDir)\n                  firebase appdistribution:distribute \"$(ipaFile)\" \\\n                    --app \"$(IOS_APP_ID)\" \\\n                    --release-notes \"Build iOS From Azure Pipeline\" \\\n                    --groups \"beta-testers\" \\\n                    --token \"$(FIREBASE_TOKEN)\"\n        ```", "```\n        trigger: none\n        pool:\n          vmImage: \"macos-latest\"\n        variables:\n          - group: secrets\n          - name: iosReleaseDir\n            value: $(Build.SourcesDirectory)/flutter/hello_world/build/ios/ipa\n          - name: ipaFile\n            value: $(iosReleaseDir)/hello_world.ipa\n          - name: rootPath\n            value: $(System.DefaultWorkingDirectory)/flutter/hello_world\n        ```", "```\n        jobs:\n          - job: ios_to_apple_store\n            steps:\n            - task: JavaToolInstaller@0\n              inputs:\n                versionSpec: '11'\n                jdkArchitectureOption: 'x64'\n                jdkSourceOption: 'PreInstalled'\n        ```", "```\n            - task: InstallAppleCertificate@2\n              displayName: \"Install Apple cert dist p12\"\n              inputs:\n                certSecureFile: \"Certificates_Distribution.p12\"\n                certPwd: \"$(APPLE_CERTIFICATE_SIGNING_PASSWORD)\"\n                keychain: \"temp\"\n        ```", "```\n            - task: InstallAppleProvisioningProfile@1\n              displayName: \"Install Apple Mobile Provisioning Profile\"\n              inputs:\n                provisioningProfileLocation: \"secureFiles\"\n                provProfileSecureFile: \"Hello_Flutter_AppStore.mobileprovision\"\n        ```", "```\n            - task: Hey24sheep.flutter.flutter-install.FlutterInstall@0\n              displayName: 'Flutter Install'\n              inputs:\n                version: custom\n                customVersion: 3.10.6\n        ```", "```\n        - task: Bash@3\n              displayName: \"Build IPA\"\n              inputs:\n                targetType: \"inline\"\n                script: |\n                  flutter build ipa --export-options-plist=$(rootPath)/ios/Runner/ExportOptions.plist\n                workingDirectory: $(rootPath)\n        ```", "```\n        - task: AppStoreRelease@1\n              displayName: \"Upload to App Store Connect\"\n              inputs:\n                authType: 'ApiKey'\n                apiKeyId: '$(IOS_APP_API_KEY)'\n                apiKeyIssuerId: '$(IOS_APP_API_ISSUER)'\n                apiToken: '$(IOS_AUTH_KEY_P8)'\n                releaseTrack: 'TestFlight'\n                appIdentifier: 'com.company.flutter'\n                appType: 'iOS'\n                ipaPath: $(ipaFile)\n                shouldSkipWaitingForProcessing: true\n                shouldSkipSubmission: true\n                appSpecificId: '$(IOS_APP_ID)'\n        ```", "```\n        trigger: none\n        pool:\n          vmImage: \"ubuntu-latest\"\n        variables:\n          - group: secrets\n          - name: androidReleaseDir\n            value: $(build.artifactStagingDirectory)/flutter/hello_world/build/app/outputs/bundle/release\n          - name: aabFile\n            value: $(androidReleaseDir)/app-release.aab\n        ```", "```\n        jobs:\n          - job: android_to_google_play_store\n            steps:\n            - task: DownloadSecureFile@1\n              displayName: \"Download keystore file\"\n              name: \"KeyStoreFile\"\n              inputs:\n                secureFile: \"upload-keystore.jks\"\n        ```", "```\n            - task: JavaToolInstaller@0\n              inputs:\n                versionSpec: '11'\n                jdkArchitectureOption: 'x64'\n                jdkSourceOption: 'PreInstalled'\n        ```", "```\n            - task: Hey24sheep.flutter.flutter-install.FlutterInstall@0\n              displayName: 'Flutter Install'\n              inputs:\n                version: custom\n                customVersion: 3.10.6\n        ```", "```\n            - task: Hey24sheep.flutter.flutter-build.FlutterBuild@0\n              displayName: \"Build AAB\"\n              inputs:\n                target: aab\n                projectDirectory: \"./flutter/hello_world\"\n                buildNumber: \"\"\n        ```", "```\n            - task: CopyFiles@2\n              displayName: \"Copy aab to artifact directory\"\n              inputs:\n                contents: \"**/*.aab\"\n                targetFolder: \"$(build.artifactStagingDirectory)\"\n        ```", "```\n            - task: PublishBuildArtifacts@1\n              displayName: \"Publish signed AAB as artifact\"\n              inputs:\n                artifactName: \"drop\"\n        ```", "```\n            - task: GooglePlayRelease@4\n              displayName: \"Upload to Google Play Store\"\n              inputs:\n                serviceConnection: 'GooglePlayConsole'\n                applicationId: 'com.company.flutter'\n                action: 'SingleBundle'\n                bundleFile: '$(aabFile)'\n                track: 'internal'\n                isDraftRelease: true\n        ```"]