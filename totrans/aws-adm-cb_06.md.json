["```\n      VPCId: \n        Type: AWS::EC2::VPC::Id \n        Description: VPC where DB will launch \n      SubnetIds: \n        Type: List<AWS::EC2::Subnet::Id> \n        Description: Subnets where the DB will launch (pick at least 2) \n      SecurityGroupAllowCidr: \n        Type: String \n        Description: Allow this CIDR block to access the DB \n        Default: \"172.30.0.0/16\"\n\n```", "```\n      DBUsername: \n        Type: String \n        Description: Username to access the database \n        MinLength: 1 \n        AllowedPattern: \"[a-zA-Z][a-zA-Z0-9]*\" \n        ConstraintDescription: must start with a letter, must\n          be alphanumeric \n      DBPassword: \n        Type: String \n        Description: Password to access the database \n        MinLength: 1 \n        AllowedPattern: \"[a-zA-Z0-9]*\" \n        NoEcho: true \n        ConstraintDescription: must be alphanumeric\n\n```", "```\n      DBInstanceClass: \n        Type: String \n        Description: The instance type to use for this database \n        Default: db.t2.micro \n      DBStorageAmount: \n        Type: Number \n        Description: Amount of storage to allocate (in GB) \nDefault: 10 \n      DBStorageType: \n        Type: String \n        Description: Type of storage volume to use\n          (standard [magnetic] or gp2) \n        Default: standard \n        AllowedValues: \n          - standard \n          - gp2\n\n```", "```\n      DBEngineVersion: \n        Type: String \n        Description: DB engine version \n        Default: \"5.7.11\" \n      DBPort: \n        Type: Number \n        Description: Port number to allocate \n        Default: 3306 \n        MinValue: 1150 \n        MaxValue: 65535\n\n```", "```\n      DBMultiAZ: \n        Type: String \n        Description: Should this DB be deployed in Multi-AZ configuration? \n        Default: true \n        AllowedValues: \n          - true \n          - false \n      DBBackupRetentionPeriod: \n        Type: Number \n        Description: How many days to keep backups (0 disables backups) \n        Default: 1 \n        MinValue: 0 \n        MaxValue: 35\n\n```", "```\n      ExampleDBSecurityGroup: \n        Type: AWS::EC2::SecurityGroup \n        Properties: \n          GroupDescription: Example security group for inbound access to DB \n          SecurityGroupIngress: \n            - IpProtocol: tcp \n              CidrIp: !Ref SecurityGroupAllowCidr \n              FromPort: !Ref DBPort \n              ToPort: !Ref DBPort \n          VpcId: !Ref VPCId\n\n```", "```\n      ExampleDBSubnetGroup: \n        Type: AWS::RDS::DBSubnetGroup \n        Properties: \n          DBSubnetGroupDescription: Example subnet group for example DB \n          SubnetIds: \n            - Fn::Select: [ 0, Ref: SubnetIds ] \n            - Fn::Select: [ 1, Ref: SubnetIds ]\n\n```", "```\n      ExampleDBInstance: \n        Type: AWS::RDS::DBInstance \n        Properties: \n          AllocatedStorage: !Ref DBStorageAmount \n          BackupRetentionPeriod: !Ref DBBackupRetentionPeriod \n          DBInstanceClass: !Ref DBInstanceClass \n          DBSubnetGroupName: !Ref ExampleDBSubnetGroup \n          Engine: mysql \n          EngineVersion: !Ref DBEngineVersion \n          MasterUsername: !Ref DBUsername \n          MasterUserPassword: !Ref DBPassword \n          MultiAZ: !Ref DBMultiAZ \n          StorageType: !Ref DBStorageType \n          VPCSecurityGroups: \n            - !GetAtt ExampleDBSecurityGroup.GroupId\n\n```", "```\n      Outputs: \n        ExampleDbHostname: \n          Value: !GetAtt ExampleDBInstance.Endpoint.Address\n\n```", "```\n      aws cloudformation create-stack \\ \n        --stack-name rds1 \\ \n        --template-body \\\n        file://06-create-database-with-automatic-failover.yaml \\ \n        --parameters \\ \n        ParameterKey=DBUsername,ParameterValue=<username> \\ \n        ParameterKey=DBPassword,ParameterValue=<password>  \\\n        ParameterKey=SubnetIds,\"ParameterValue='<subnet-id-a>, \\\n        <subnet-id-b>'\" \\ \n        ParameterKey=VPCId,ParameterValue=<vpc-id>\n\n```", "```\n      AWSTemplateFormatVersion: \"2010-09-09\" \n      Description: Create NAT Gateway and associated route.\n\n```", "```\n      Parameters: \n        PublicSubnetId: \n          Description: Public Subnet ID to add the NAT Gateway to \n          Type: AWS::EC2::Subnet::Id \n        RouteTableId: \n          Description: The private subnet route table to add the NAT\n            Gateway route to \n          Type: String\n\n```", "```\n      Resources: \n        EIP: \n          Type: AWS::EC2::EIP \n          Properties: \n            Domain: vpc\n\n```", "```\n        NatGateway: \n          Type: AWS::EC2::NatGateway \n          Properties: \n            AllocationId: !GetAtt EIP.AllocationId \n            SubnetId: !Ref PublicSubnetId\n\n```", "```\n      Route: \n        Type: AWS::EC2::Route \n        Properties: \n          RouteTableId: !Ref RouteTableId \n          DestinationCidrBlock: 0.0.0.0/0 \n          NatGatewayId: !Ref NatGateway\n\n```", "```\naws rds create-db-instance-read-replica \\\n --source-db-instance-identifier <source-db-identifier> \\\n --db-instance-identifier <unique-identifier-for-replica>\n\n```", "```\naws rds modify-db-instance \\\n --db-instance-identifier <identifier-for-read-replica> \\\n --backup-retention-period <days-to-keep-backups-for> \\\n --apply-immediately\n\n```", "```\n aws rds promote-read-replica \\\n --db-instance-identifier <identifier-for-read-replica>\n\n```", "```\n aws rds modify-db-instance \\\n --db-instance-identifier <identifier-for-new-primary> \\\n --multi-az \\\n --apply-immediately\n\n```", "```\naws rds create-db-snapshot \\\n --db-instance-identifier <primary-rds-id> \\\n --db-snapshot-identifier <unique-id-for-snapshot>\n\n```", "```\n aws rds restore-db-instance-from-db-snapshot \\\n --db-snapshot-identifier <name-of-snapshot-to-restore > \\\n --db-instance-identifier <name-for-new-db> \\\n --db-subnet-group-name <your-db-subnet-group> \\\n --multi-az\n\n```", "```\n aws rds modify-db-instance \\\n --db-instance-identifier <name-of-newly-restored-db> \\\n --vpc-security-group-ids <id-of-security-group>\n\n```"]