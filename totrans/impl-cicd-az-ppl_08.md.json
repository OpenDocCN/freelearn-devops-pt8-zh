["```\nPS C:\\Users\\user> az version\n{\n  \"azure-cli\": \"2.48.1\",\n  \"azure-cli-core\": \"2.48.1\",\n  \"azure-cli-telemetry\": \"1.0.8\",\n  \"extensions\": {}\n}\n```", "```\nPS C:\\Users\\user> aws --version\naws-cli/2.11.18 Python/3.11.3 Windows/10 exe/AMD64 prompt/off\n```", "```\nPS C:\\Users\\user> terraform version\nTerraform v1.4.6\non windows_amd64\n```", "```\n{\n  \"$schema\": \"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#\",\n  \"contentVersion\": \"\",\n  \"apiProfile\": \"\",\n  \"parameters\": {  },\n  \"variables\": {  },\n  \"functions\": [  ],\n  \"resources\": [  ],\n  \"outputs\": {  }\n}\n```", "```\naz ad sp create-for-rbac -n azure-pipelines --role Contributor --scopes /subscriptions/<subscription-id>\n```", "```\n/subscriptions/<subscription-id>/resourceGroups/<name>\n```", "```\n# ARM Template Validation\ntrigger:\n- main\npool:\n  vmImage: ubuntu-latest\nsteps:\n- task: AzureResourceManagerTemplateDeployment@3\n  inputs:\n    deploymentScope: 'Resource Group'\n    azureResourceManagerConnection: 'azure-packt-rg'\n    subscriptionId: $(AzureSubscriptionId)\n    action: 'Create Or Update Resource Group'\n    resourceGroupName: 'packt'\n    location: 'East US'\n    templateLocation: 'Linked artifact'\n    csmFile: 'azure/azuredeploy.json'\n    deploymentMode: 'Validation'\n```", "```\n# ARM Template Deployment\ntrigger:\n- main\npool:\n  vmImage: ubuntu-latest\nsteps:\n- task: AzureResourceManagerTemplateDeployment@3\n  inputs:\n    deploymentScope: 'Resource Group'\n    azureResourceManagerConnection: 'azure-packt-rg'\n    subscriptionId: $(AzureSubscriptionId)\n    action: 'Create Or Update Resource Group'\n    resourceGroupName: 'packt'\n    location: 'East US'\n    templateLocation: 'Linked artifact'\n    csmFile: 'azure/azuredeploy.json'\n    deploymentMode: 'Incremental'\n```", "```\n{\n  \"AWSTemplateFormatVersion\" : \"version date\",\n  \"Description\" : \"JSON string\",\n  \"Metadata\" : { template metadata },\n  \"Parameters\" : { set of parameters },\n  \"Rules\" : { set of rules },\n  \"Mappings\" : { set of mappings },\n  \"Conditions\" : { set of conditions },\n  \"Transform\" : { set of transforms },\n  \"Resources\" : { set of resources },\n  \"Outputs\" : { set of outputs }\n}\n```", "```\naws iam create-group --group-name resources-admin\naws iam attach-group-policy --group-name resources-admin --policy-arn arn:aws:iam::aws:policy/AdministratorAccess\naws iam create-user --user-name azure-pipelines\naws iam add-user-to-group --group-name resources-admin --user-name azure-pipelines\naws iam create-access-key --user-name azure-pipelines\n```", "```\n# AWS Cloud Formation Validation\ntrigger:\n- main\npool:\n  vmImage: ubuntu-latest\nsteps:\n- task: AWSCLI@1\n  inputs:\n    awsCredentials: 'aws-packt'\n    regionName: 'us-east-1'\n    awsCommand: 'cloudformation'\n    awsSubCommand: 'validate-template'\n    awsArguments: '--template-body file://template.json'\n```", "```\nAn error occurred (ValidationError) when calling the ValidateTemplate operation: Template format error: Unrecognized resource types: [AWS::EC2::KeyXXXPair]\n```", "```\n    # AWS Cloud Formation Deployment\n    trigger:\n    - main\n    pool:\n      vmImage: ubuntu-latest\n    steps:\n    - task: CloudFormationCreateOrUpdateStack@1\n      inputs:\n        awsCredentials: 'aws-packt'\n        regionName: 'us-east-1'\n        stackName: 'packt'\n        templateSource: 'file'\n        templateFile: 'template.json'\n        capabilityIAM: false\n        capabilityNamedIAM: false\n        onFailure: 'DELETE'\n    ```", "```\naz group create --name tfstate --location eastus\naz storage account create --name tfstate --resource-group tfstate --location eastus --sku Standard_LRS\naz storage container create --name tfstate --account-name tfstate\n```", "```\n# Terraform pipeline\ntrigger:\n- main\npool:\n  vmImage: ubuntu-latest\nsteps:\n- task: TerraformInstaller@0\n  displayName: 'install'\n  inputs:\n    terraformVersion: 'latest'\n- task: TerraformTaskV4@4\n  displayName: 'init'\n  inputs:\n    provider: 'azurerm'\n    command: 'init'\n    backendServiceArm: 'azure-packt-rg'\n    backendAzureRmResourceGroupName: 'tfstate'\n    backendAzureRmStorageAccountName: 'tfstate'\n    backendAzureRmContainerName: 'tfstate'\n    backendAzureRmKey: 'terraform.tfstate'\n- task: TerraformTaskV4@4\n  displayName: 'validate'\n  inputs:\n    provider: 'azurerm'\n    command: 'validate'\n```", "```\n# Terraform pipeline\ntrigger:\n- main\npool:\n  vmImage: ubuntu-latest\nsteps:\n- task: TerraformInstaller@0\n  displayName: 'install'\n  inputs:\n    terraformVersion: 'latest'\n- task: TerraformTaskV4@4\n  displayName: 'init'\n  inputs:\n    provider: 'azurerm'\n    command: 'init'\n    backendServiceArm: 'azure-packt-rg'\n    backendAzureRmResourceGroupName: 'tfstate'\n    backendAzureRmStorageAccountName: 'tfstate'\n    backendAzureRmContainerName: 'tfstate'\n    backendAzureRmKey: 'terraform.tfstate'\n- task: TerraformTaskV4@4\n  displayName: 'plan'\n  inputs:\n    provider: 'azurerm'\n    command: 'plan'\n    environmentServiceNameAzureRM: 'azure-packt-rg'\n- task: TerraformTaskV4@4\n  displayName: 'apply'\n  inputs:\n    provider: 'azurerm'\n    command: 'apply'\n    environmentServiceNameAzureRM: 'azure-packt-rg'\n```"]