["```\n$ git branch staging\n```", "```\n[role_name1]\nHostname01\nHostname02\n…\n[role_name2]\nHostname03\nHostname04\n…\n```", "```\n[service_name:children]\nHostname\n```", "```\n[swift:children]\ncontrol\n```", "```\n[swift-proxy-server:children]\nswift\n[swift-account-server:children]\nobject_storage\n[swift-container-server:children]\nobject_storage\n[swift-object-server:children]\nobject_storage\n```", "```\n[control]\ncc01.os.packtpub\n[mariadb:children]\ncontrol\n[rabbitmq:children]\ncontrol\n[outward-rabbitmq:children]\ncontrol\n[memcached:children]\ncontrol\n```", "```\n…\n[keystone:children]\ncontrol\n[glance:children]\ncontrol\n[nova:children]\ncontrol\n[placement:children]\ncontrol\n[cinder:children]\ncontrol\n[neutron-server:children]\ncontrol\n[horizon:children]\ncontrol\n[swift:children]\ncontrol\n[manila:children]\ncontrol\n[ceilometer:children]\ncontrol\n```", "```\n    ..\n    [glance-api:children]\n    glance\n    ```", "```\n    [nova-api:children]\n    nova\n    [nova-conductor:children]\n    nova\n    [nova-super-conductor:children]\n    nova\n    [nova-novncproxy:children]\n    nova\n    [nova-scheduler:children]\n    nova\n    [nova-spicehtml5proxy:children]\n    nova\n    [nova-compute-ironic:children]\n    nova\n    [nova-serialproxy:children]\n    nova\n    ```", "```\n    [placement-api:children]\n    placement\n    ```", "```\n    [cinder-api:children]\n    cinder\n    [cinder-scheduler:children]\n    cinder\n    ```", "```\n    [swift-proxy-server:children]\n    swift\n    ```", "```\n    [ceilometer-central:children]\n    ceilometer\n    [ceilometer-notification:children]\n    ceilometer\n    ```", "```\n…\n[compute]\ncn01.os.packtpub\n```", "```\n[collectd:children]\ncompute\n[ceilometer-compute:children]\ncompute\n[ceilometer-ipmi:children]\ncompute\n```", "```\n[ovn-controller-compute:children]\ncompute\n[neutron-ovn-agent:children]\ncompute\n```", "```\n[network]\nnet01.os.packtpub\n[neutron:children]\nnetwork\n```", "```\n[neutron-dhcp-agent:children]\nneutron\n[neutron-l3-agent:children]\nneutron\n[neutron-metadata-agent:children]\nneutron\n[neutron-ovn-metadata-agent:children]\nnetwork\n[neutron-bgp-dragent:children]\nneutron\n[neutron-infoblox-ipam-agent:children]\nneutron\n[neutron-metering-agent:children]\nneutron\n[ironic-neutron-agent:children]\nneutron\n[neutron-ovn-agent:children]\nnetwork\n```", "```\n[manila-share:children]\nnetwork\n```", "```\n[ovn-controller:children]\novn-controller-compute\novn-controller-network\n```", "```\n[ovn-controller-network:children]\nnetwork\n```", "```\n[ovn-database:children]\ncontrol\n[ovn-northd:children]\novn-database\n[ovn-nb-db:children]\novn-database\n[ovn-sb-db:children]\novn-database\n```", "```\n[storage]\nstorage01.os.packtpub\n```", "```\n[cinder-volume:children]\nstorage\n```", "```\n[deployment]\nlocalhost       ansible_connection=local\n```", "```\n[common:children]\ncontrol\nnetwork\ncompute\nstorage\n[cron:children]\ncommon\n[fluentd:children]\ncommon\n[kolla-logs:children]\ncommon\n[kolla-toolbox:children]\ncommon\n```", "```\n$ git add multi_packtpub_stg\n$ git commit -m 'Multi Node Inventory - Staging'\n$ git push --set-upstream origin staging\n```", "```\n    kolla_base_distro: \"ubuntu\"\n    ```", "```\n    openstack_release: \"master\"\n    ```", "```\n    kolla_internal_vip_address: \"10.0.0.47\"\n    ```", "```\n    nova_compute_virt_type: \"kvm\"\n    ```", "```\n    neutron_plugin_agent: \"openvswitch\"\n    ```", "```\n    enable_neutron_provider_networks: \"yes\"\n    ```", "```\n    network_interface: \"eth0\"\n    ```", "```\n    neutron_external_interface: \"eth1\"\n    ```", "```\n    docker_registry: \"docker-registry:4000\"\n    ```", "```\n    $ git add multi_packtpub_stg\n    $ git commit -m 'Multi Node Global Configuration - Staging'\n    $ git push staging\n    ```", "```\npipeline {\n  agent any\n  stages {\n    stage('Setup Local Environment') {\n      steps {\n        echo '--RUNNING LOCAL ENVIORNMENT --'\n        sh ''' #!/bin/bash \n        sudo apt-get update\n        sudo apt-get install \\\n        python3-dev libffi-dev gcc libssl-dev docker.io -y\n        sudo apt install python3-pip -y\n        sudo apt install python3.10-venv -y\n        sudo python3 -m venv local\n        source local/bin/activate\n        ''' \n      }\n    }\n    stage('INSTALLING PIP') {\n      steps {\n        echo '--INSTALLING PIP --'\n        sh ''' #!/bin/bash \n        pip install -U pip\n        ''' \n      }\n    }\n    stage('INSTALLING Ansible') {\n      steps {\n        echo '--INSTALLING Ansible --'\n        sh ''' #!/bin/bash \n        pip install 'ansible-core>=2.16,<2.17.99'\n        ''' \n      }\n    }  \n\n    stage('INSTALLING Kolla Ansible') {\n      steps {\n        echo '--INSTALLING Kolla Ansible --'\n        sh '''#!/bin/bash \n        pip install \\\n        git+https://git@ci.os/git/openstack_deploy/openstack_deploy\n        kolla-ansible install-deps\n        ''' \n      }\n    } \n    stage('Preparing Infrastructure') {\n      steps {\n        echo '--Preparing Infrastructure Files Structure --'\n        sh ''' #!/bin/bash \n        sudo mkdir -p /etc/kolla\n        sudo chown $USER:$USER /etc/kolla\n        cp -r /usrlocal/share/kolla-ansible/etc/kolla/* /etc/kolla/ \n        cp -r /usr/local/share/kolla-ansible/ansible/inventory/* \\\n        /etc/kolla/\n        ''' \n      }\n    }\n    stage('Secrets Setup') {\n      steps {\n        echo '--Generating OpenStack Services Secrets --'\n        sh '''#!/bin/bash \n            kolla-genpwd -p /etc/kolla/passwords.yml\n           ''' \n      }\n    }\n    stage('Boostrap Servers') {\n      steps {\n        echo '--Running Ansible Kolla Boostrap Server Script --'\n        sh '''#!/bin/bash \n             kolla-ansible -i /etc/kolla/multi_packtpub_prod \\\n             bootstrap-servers\n           ''' \n      }\n    }\n    stage('Infrastructure Pre-Checks') {\n      steps {\n        echo '--Running Ansible Kolla Prechecks Script --'\n        sh '''#!/bin/bash \n            kolla-ansible -i /etc/kolla/multi_packtpub_prod prechecks\n           ''' \n      }\n    }\n    stage('Deploy Infrastructure') {\n      steps {\n        echo '--Running Ansible Kolla Prechecks Script --'\n        sh '''#!/bin/bash \n        kolla-ansible -i /etc/kolla/multi_packtpub_prod deploy\n        ''' \n      }\n    }\n  }\n}\n```", "```\n$ git add Jenkinsfile\n$ git commit -m 'Jenkins Staging Environment Pipeline'\n$ git push staging\n```"]