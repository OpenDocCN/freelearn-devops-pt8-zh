- en: Chapter 9. Extending and Enhancing Salesforce CRM
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we will look at how to extend and enhance the functionality
    within the Salesforce CRM application and how to move beyond the standard Salesforce
    Apps and features that we have looked at so far.
  prefs: []
  type: TYPE_NORMAL
- en: We will look at how additional functionality can be added to your Salesforce
    environment by using external applications from the **AppExchange Marketplace**
    to extend the capability of the core Salesforce CRM platform.
  prefs: []
  type: TYPE_NORMAL
- en: An overview of the technologies and techniques that allow advanced customization
    will be presented, which will help you gain an understanding of the features and
    considerations required to create web mashups in your Salesforce CRM applications.
  prefs: []
  type: TYPE_NORMAL
- en: You will discover how, with the use of platforms and technologies such as Visualforce,
    you can extend the core functionality of the application and leverage significant
    benefits for your organization, as well as how to enhance the system without the
    need for expensive IT development resources.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following topics will be covered in this chapter:'
  prefs: []
  type: TYPE_NORMAL
- en: Salesforce AppExchange Marketplace
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Enterprise mashups in web applications
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mashups in Salesforce CRM
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Introduction to Visualforce
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Creating an example mashup with Visualforce
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Overview of Visualforce controllers
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Introduction to Apex code and triggers
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Change management overview
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: User adoption
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Salesforce AppExchange Marketplace
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The Salesforce **AppExchange Marketplace** is a website provided by Salesforce.com
    that enables organizations to select additional applications, known as **Apps**,
    to add new features to their Salesforce CRM application
  prefs: []
  type: TYPE_NORMAL
- en: Both the Salesforce CRM application and the AppExchange provide web-delivered
    platforms for using and building applications. This integrated web-delivered approach
    allows for the installation of applications and new functionality from AppExchange
    into Salesforce, which is often far simpler and more cost effective than traditional
    software update mechanisms. The benefits of the AppExchange are that system administrators
    can easily extend the Salesforce CRM application as your company's business requirements
    change.
  prefs: []
  type: TYPE_NORMAL
- en: There is a wealth of solutions available to help achieve most requirements that
    you can access from the Salesforce **AppExchange Marketplace**, and in this section
    we will describe and take you through the process of installing an example app.
  prefs: []
  type: TYPE_NORMAL
- en: The apps and services listed on AppExchange are provided by the Salesforce community
    of third-party developers and system integrators. Many of the apps are also provided
    by Salesforce themselves through their team known as the **Force.com Labs**. The
    apps can range from highly complex multiple screen solutions to simple sets of
    dashboards or reports.
  prefs: []
  type: TYPE_NORMAL
- en: 'Apps can sometimes incur additional costs, but there are many which are provided
    for free or a small fee. In general, apps provided by the Salesforce.com Force.com
    Labs team tend to be free. To access AppExchange, navigate to **Setup |** **AppExchange
    Marketplace**, as shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Salesforce AppExchange Marketplace](img/image_09_001.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'You can also access the **AppExchange Marketplace** website directly by navigating
    to [http://www.appexchange.com/](http://www.appexchange.com/) , as shown in the
    following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Salesforce AppExchange Marketplace](img/image_09_002.jpg)'
  prefs: []
  type: TYPE_IMG
- en: As a directory, Salesforce AppExchange is similar to consumer websites, such
    as the App Store from Apple, in the way that it seeks to provide an open, community-based
    channel for the distribution, retrieval, and installation of applications.
  prefs: []
  type: TYPE_NORMAL
- en: AppExchange differs, however, in that it provides not only the facilities for
    the third-party distribution of apps, but also the listing of services by system
    integrators. This enables the Salesforce community to search for and review both
    apps and services from a central site.
  prefs: []
  type: TYPE_NORMAL
- en: Managed and unmanaged packages
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Salesforce terms the collection of components and applications that are distributed
    through AppExchange as a **package**. There are two main types of packages, namely,
    managed and unmanaged.
  prefs: []
  type: TYPE_NORMAL
- en: Managed packages differ from unmanaged packages by the use of protected components
    that allow the managed packages to be upgraded by the developers, allowing them
    to add new functionality or to refactor in any changes in the Salesforce environment.
    By protecting certain components such as `Apex Code`, managed packages also serve
    to protect the intellectual property of the developer organization.
  prefs: []
  type: TYPE_NORMAL
- en: Unmanaged packages, on the other hand, do not protect components and are therefore
    static within your organization, as they cannot be upgraded by the publishing
    developer. They allow you to access all of the implemented customization or code
    and can be useful if you want to change or extend the functionality yourself.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Users with the permission **Download AppExchange Packages** enabled for their
    profile can install or uninstall the AppExchange packages from the AppExchange
    website.
  prefs: []
  type: TYPE_NORMAL
- en: Sometimes apps are distributed by **Independent Software Vendors** (**ISVs**),
    which use the AppExchange package as a channel to advertise their presence and
    to showcase their range of products.
  prefs: []
  type: TYPE_NORMAL
- en: External and third-party tools
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: By showcasing on the **AppExchange Marketplace** website, ISVs often provide
    free apps, which help drive traffic and interest in their core products that complement
    Salesforce CRM, and they are usually provided as web-based solutions in the same
    way as Salesforce.
  prefs: []
  type: TYPE_NORMAL
- en: These complementary applications are typically deployed alongside Salesforce
    CRM in support of a specific business process or function. For example, **incentive
    and commission management**, **project management**, **product configuration**,
    **expense management**, **address checking**, and so on, are all examples of apps
    for Salesforce that are available from AppExchange.
  prefs: []
  type: TYPE_NORMAL
- en: App security
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Salesforce inspects all registered apps to be sure that they have no obvious
    security risks. However, it is worth noting that since the apps are developed
    by third-party providers, you should also carry out extensive testing and employ
    due diligence to eliminate any risk before installing the app into your production
    instance.
  prefs: []
  type: TYPE_NORMAL
- en: After an app has passed the Salesforce inspection, the core functionality and
    code can no longer be changed. However, custom links and web tabs are allowed
    to be changed because they may need to be altered after installation, for example,
    simple target URLs might need to be changed from one organization to another.
  prefs: []
  type: TYPE_NORMAL
- en: You need to be aware how these links may introduce risks as part of your decision
    whether to trust the source of an app before installing it to production. This
    is described in more detail in the following section.
  prefs: []
  type: TYPE_NORMAL
- en: Before installing an app
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The following steps are recommended to help you understand more about the app
    and to determine any risk or need for further setup in your organization before
    you actually install the app into your production instance:'
  prefs: []
  type: TYPE_NORMAL
- en: Read the specifications and reviews.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Review the screenshots and customization guides.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Take a test drive.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Reading specifications and reviews
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Before installing, read the specification associated with the app, where you
    will see the following details: which Salesforce editions are supported, what
    languages are supported, the components summary, and package details.'
  prefs: []
  type: TYPE_NORMAL
- en: It is often also worth looking at the reviews that have been left by others
    that have attempted to install the app. Although there is no guarantee that the
    review is 100% accurate, and it may be subjective, it can give you an indication
    of the complexity in the use and successful installation of an app by other system
    administrators.
  prefs: []
  type: TYPE_NORMAL
- en: Reviewing screenshots and customization guides
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Most apps that have been listed on the AppExchange website provide screenshots
    and guides for any post-install customization that may be required. These are
    useful and provide a quick indicator of whether the app will be of use to you
    and your organization.
  prefs: []
  type: TYPE_NORMAL
- en: Taking a test drive
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Apps typically offer a test drive option (especially the more complex apps),
    where you are directed to an external Salesforce application where you can use
    the app as a read-only user before installation. A test drive gives you a far
    better way of determining whether the app is suitable for your organization before
    installing.
  prefs: []
  type: TYPE_NORMAL
- en: Within the test drive, you have the opportunity to check the app and its components
    to ensure that they are suitable, and also that they pose no security risks. For
    example, components such as custom links, formula fields, and web tabs can send
    Salesforce session IDs to external web services.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Session IDs are tokens that allow users to access Salesforce CRM without re-entering
    the login name and password.
  prefs: []
  type: TYPE_NORMAL
- en: Salesforce.com recommends checking all links to external services that include
    a `session ID merge` field, because if these `session ID`s are shared with an
    external service, then they can expose your data, potentially leading to a significant
    security risk that we need to be aware of.
  prefs: []
  type: TYPE_NORMAL
- en: Installing an app
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The following steps describe the process of how to install an app into your
    Salesforce CRM application from the **AppExchange Marketplace**:'
  prefs: []
  type: TYPE_NORMAL
- en: Click the **Get It Now** button.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Examine the package.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Review the security.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Install the app.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Perform the post-installation configuration.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The best way to guide you through the use of new technology is by demonstrating
    with an example.
  prefs: []
  type: TYPE_NORMAL
- en: Here, we are going to install an application called **Mass Delete**, which has
    been developed and published by Salesforce.com's Force.com Labs team. This is
    a free app that provides a set of custom buttons that allow users to select any
    number of records and then delete them with a single click.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'The `Mass Delete` app from Salesforce.com''s Force.com Labs is available from
    the **AppExchange Marketplace** directly through the following URL: [http://appexchange.salesforce.com/listingDetail?listingId=a0N300000016YuDEAU](http://appexchange.salesforce.com/listingDetail?listingId=a0N300000016YuDEAU)'
  prefs: []
  type: TYPE_NORMAL
- en: 'The **Mass Delete app** page looks as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Installing an app](img/image_09_003.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Get It Now
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'By clicking on the **Get It Now** button, you will start the process of installing
    the application, where you will be prompted to log in to AppExchange using your
    Salesforce credentials, as shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Get It Now](img/image_09_004.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'You will then be asked to select the location for the installation, where the
    options are to either **Install in production** or to **Install in sandbox,**
    as shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Get It Now](img/image_09_005.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'You will then be presented with details of the app that will be installed (listed
    in the *What you are installing* section) and the Salesforce organization where
    the app will be installed (listed in the *Where you are installing* section),
    as shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Get It Now](img/image_09_006.jpg)'
  prefs: []
  type: TYPE_IMG
- en: This page shows information about the **Package** and **Version,** along with
    the **Subscription**, **Duration**, and **Number of Subscribers** information
    that are a part of the app package.
  prefs: []
  type: TYPE_NORMAL
- en: 'Click on the checkbox labeled **I have read and agree to the terms and conditions**
    to confirm that you agree to proceed with the installation and then click on the
    **Confirm** and **Install**! to continue to the Salesforce login screen, as shown
    in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Get It Now](img/image_09_007.jpg)'
  prefs: []
  type: TYPE_IMG
- en: This screen allows you to log into the Salesforce app. If you wish to install
    the app into your production organization, you would use your production login
    details along with the Salesforce production URL, which may be [https://login.salesforce.com](https://login.salesforce.com)
    . If you want to install it into a sandbox org, you must change the login URL
    to that of the sandbox, which is [https://test.salesforce.com](https://test.salesforce.com)
    , and use your sandbox login details.
  prefs: []
  type: TYPE_NORMAL
- en: 'Now enter your **User Name** and **Password** and then click on **Login** to
    proceed to the next screen:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Get It Now](img/image_09_008.jpg)'
  prefs: []
  type: TYPE_IMG
- en: In this screen you are presented with options of how to handle a situation when
    an existing component's name conflicts with a component being installed. Here,
    the options available are **Do not install and Rename conflicting components in
    package**. You are also presented with options for the users' profile permissions
    that will be applied when the app is installed.
  prefs: []
  type: TYPE_NORMAL
- en: 'Now click on the **Install** button to proceed with the installation, and when
    complete the following confirmation screen appears:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Get It Now](img/image_09_010.jpg)'
  prefs: []
  type: TYPE_IMG
- en: In this final screen you are presented with information about the **App Name**,
    **Publisher, Version Name**, and various other details that make up the app package.
  prefs: []
  type: TYPE_NORMAL
- en: This screen provides confirmation that the app package has been successfully
    installed.
  prefs: []
  type: TYPE_NORMAL
- en: For large and complex apps, you may not see the **Installation Complete Confirmation**
    screen straight away. Instead, a screen is sometimes displayed that shows a message
    that the installation has been scheduled, and you will then later receive an e-mail
    notification when the deployment is complete.
  prefs: []
  type: TYPE_NORMAL
- en: Post-install configuration
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Included in the package components of this **Mass Delete** app is a PDF guide
    describing the post-installation configuration that must be applied to the app
    before the functionality can be used. The guide can be accessed from within the
    **Documents** tab (which is accessible from the main **Documents** tab), as shown
    in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Post-install configuration](img/image_09_011.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'The guide describes how to complete the installation and customization of the
    app:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Post-install configuration](img/image_09_012-2.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Using the guide, we add the **Custom list** button to the Contacts-related
    list within the **Accounts detail** page, as shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Post-install configuration](img/image_09_013.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Finally, to verify the installation and customization, we can navigate to the
    **Accounts detail** page and access the **Contacts related list** section, whereupon
    we can access the **Mass Delete** custom button and associated functionality:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Post-install configuration](img/image_09_014.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In Salesforce CRM Unlimited Edition, you can install an unlimited number of
    apps. In the Enterprise Edition, there is a maximum limit of ten apps.
  prefs: []
  type: TYPE_NORMAL
- en: Uninstalling an app
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You can uninstall an app that has been installed from the AppExchange; however,
    there are some considerations. If you uninstall a package that includes a custom
    object, all components associated with that custom object are deleted, such as
    custom fields, validation rules, workflow rules, approval processes, custom buttons
    and links, and so on.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: You cannot uninstall a package if any component in the package is referenced
    by a component that will not be included in the uninstall, or if a field added
    by the package is being updated by a scheduled job, such as a time-based workflow
    field update (here, you must wait until the background job finishes and retry).
  prefs: []
  type: TYPE_NORMAL
- en: After an uninstall, Salesforce automatically creates an export file containing
    the package data. When the uninstall is complete, Salesforce sends an e-mail containing
    a link to the admin user carrying out the uninstall.
  prefs: []
  type: TYPE_NORMAL
- en: The export files (plus related notes and attachments) are listed below the list
    of installed packages.
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Salesforce recommends backing up and storing the export file elsewhere because
    it will only be available for a limited period after the uninstall.To uninstall
    an AppExchange app, navigate to **Setup** **| Installed Packages**, as shown in
    the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Uninstalling an app](img/image_09_015.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Now select the installed package and either click on the **Uninstall,** or
    click on the package name to review the details of the package, set the uninstall
    confirmation checkbox, and finally click on the **Uninstall** button, as shown
    in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Uninstalling an app](img/image_09_016.jpg)'
  prefs: []
  type: TYPE_IMG
- en: AppExchange best practices
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'The following best practices should be applied when installing apps from the
    **AppExchange Marketplace** website:'
  prefs: []
  type: TYPE_NORMAL
- en: Clarify that the specification for the app meets the requirements and assess
    any reviews and comments
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Take a test drive, if available
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Review all the components that are included in the package and be aware of any
    security issues concerning links and session IDs
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Test the app in a sandbox before deploying into production
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Try to enlist business support to own and validate the app before deploying
    into production
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Consider undertaking a pilot deployment for selected users if the app is particularly
    complex
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Communicate the app to the business prior to deployment and activation in production
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Prepare training material for all affected users if the app is particularly
    complex
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Enterprise mashups in web applications
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: A **mashup** is a general term that is commonly used to describe the merging
    of functionality and content from multiple sources. It is typically applied to
    describe the merging of web applications where the sources may often be using
    different technology to provide the service or application. As part of the distinction
    of a web application mashup, there is a common feature that provides connectivity,
    which is the Internet.
  prefs: []
  type: TYPE_NORMAL
- en: The connections between the various sources may require different levels and
    complexities of integration, depending on whether the associated information or
    content is to be simply viewed or whether it is also to be amended, and therefore
    whether data is to be distributed across various systems. When mashups first started
    appearing on the Web, they were created to enable the viewing of content from
    another web source within an Internet browser, and did not transfer any data or
    functionality between the source systems.
  prefs: []
  type: TYPE_NORMAL
- en: 'An example of such a mashup is a website that displays a *how to find us* type
    of page within one of its web pages, such as the contact page. Within the HTML
    code, there might be an embedded piece of functionality showing a static Google
    Map or a similar web control, as shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Enterprise mashups in web applications](img/image_09_017-2.jpg)'
  prefs: []
  type: TYPE_IMG
- en: This type of mashup is an example of a simple client-side mashup, where the
    connectivity occurs inside the web browser. This coding inside the web page provides
    a way to combine static information from multiple Internet sources and generate
    an elegant visual presentation.
  prefs: []
  type: TYPE_NORMAL
- en: As mashups have evolved, far more complex functionality can now be achieved.
    It is possible to have sophisticated integration between web applications where
    information and functionality are seamlessly shared. As you might expect, this
    requires more complex coding to achieve, and also may require the use of server-side
    infrastructures. We will look at the distinction between client-side and server-side
    mashups shortly.
  prefs: []
  type: TYPE_NORMAL
- en: Mashups in Salesforce CRM
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: It may seem daunting at first, especially if you are less familiar with Internet
    scripting technologies such as HTML, but certain types of mashups can be accomplished
    by most people and do not require professional software developers or an IT team.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: HTML is the main markup language for creating web pages and other information
    that can be displayed in a web browser ([https://en.wikipedia.org/wiki/HTML](https://en.wikipedia.org/wiki/HTML)).
  prefs: []
  type: TYPE_NORMAL
- en: Before starting out, it is always useful to first evaluate how and where the
    mashup needs to be done, and in particular, the type of data and service that
    is to be mashed up. Once this is understood, you can then begin to consider the
    coding effort and plan the resources required to implement them.
  prefs: []
  type: TYPE_NORMAL
- en: 'To understand the flavor of mashups as far as Salesforce CRM is concerned,
    and as suggested, at a high-level, there are two main categories of mashup development,
    and these can be classed as either server-side or client-side, as shown in the
    following diagram:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Mashups in Salesforce CRM](img/image_09_018.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Looking at the previous diagram, we see that the server-side mashup goes through
    the following high-level steps:'
  prefs: []
  type: TYPE_NORMAL
- en: User makes a page request to Salesforce CRM using their web browser.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The web browser calls the Salesforce CRM servers, which invoke custom Apex code.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The custom Apex code in Salesforce CRM calls a function on an external application
    server.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The external application returns the response to Salesforce CRM.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Salesforce CRM processes the response and returns the details to the user's
    web browser.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The user's web browser finally presents the overall response back to the user.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Client-side mashups are far more simple, as they use the browser to link the
    requests and responses required for the mashup, where the following typical high-level
    steps can be considered:'
  prefs: []
  type: TYPE_NORMAL
- en: User makes a page request to Salesforce CRM using their web browser.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The user's web browser requests details from Salesforce CRM.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Salesforce CRM returns the response to the user's web browser.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The user's web browser requests details from the external application.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The external application returns the response to the user's web browser.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The user's web browser finally presents the overall response back to the user.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: As indicated, server-side mashups often require sophisticated coding and require
    external infrastructure, which is generally provided by IT resources. As this
    book does not aim to be a resource for developers, we will look at server-side
    technology at a high level, but we will not go into the details.
  prefs: []
  type: TYPE_NORMAL
- en: We will, however, cover the use cases and provide some step-by-step instructions
    on how you can compose client-side mashups, as well as the tools that are available
    within your Salesforce CRM application.
  prefs: []
  type: TYPE_NORMAL
- en: Server-side mashups
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: By way of introduction, and for the sake of completeness, the following section
    describes the core features of external server-side mashups. We will briefly look
    at, in a little more detail, the capabilities, features, and implications associated
    with the use of server-side mashups.
  prefs: []
  type: TYPE_NORMAL
- en: Server-side mashups are a specific example of an external services mashup. This
    is where external systems may either serve the request for data from Salesforce
    as a client or use data presented by Salesforce and mash the composite data in
    an external system.
  prefs: []
  type: TYPE_NORMAL
- en: These mashups typically use web services, and are most often provided by organizations
    using web APIs, which describe how the service can be accessed by a client application
    over the Internet and which are executed on the remote system that is hosting
    the service.
  prefs: []
  type: TYPE_NORMAL
- en: A more formal definition of a web service is provided by the **World Wide Web
    Consortium** (**W3C)**, which as detailed on their web page ([http://www.w3.org](http://www.w3.org)),
    is an international community where member organizations, a full-time staff, and
    the public work together to develop web standards.
  prefs: []
  type: TYPE_NORMAL
- en: 'The definition of a web service by the W3C is as follows ([http://www.w3.org/TR/ws-gloss/](http://www.w3.org/TR/ws-gloss/)):'
  prefs: []
  type: TYPE_NORMAL
- en: '*A Web service is a software system designed to support interoperable machine-to-machine
    interaction over a network. It has an interface described in a machine-processable
    format (specifically WSDL). Other systems interact with the Web service in a manner
    prescribed by its description using SOAP-messages, typically conveyed using HTTP
    with an XML serialization in conjunction with other Web-related standards*.'
  prefs: []
  type: TYPE_NORMAL
- en: Although the web service definition for the machine-to-machine interaction by
    the W3C refers to machine-to-machine interaction using **Simple Object Access
    Protocol** (**SOAP**), there is another protocol that is becoming increasingly
    popular today, known as **Representational State Transfer** (**REST).** This is
    mentioned for information only, and we will not go into any further detail about
    web services in this book.
  prefs: []
  type: TYPE_NORMAL
- en: Client-side mashups
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Within Salesforce CRM, there are typically two types of client-side mashup,
    namely, client-side services mashups and client-side presentation mashups.
  prefs: []
  type: TYPE_NORMAL
- en: Client-side services mashups
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Similar to server-side mashups, client-side services mashups can also be used
    to call web services or consume websites and feeds. They can be used to invoke
    the Salesforce CRM web services API from within the browser. Client-side services
    mashups require more complex programming than client-side presentation mashups,
    and typically rely on the technologies associated with web services.
  prefs: []
  type: TYPE_NORMAL
- en: Client services mashups and external services mashups are useful to organizations
    that need to access information from various systems that usually serve a business
    data process and interact in real time. Specifying and developing these types
    of mashups needs to be carefully evaluated to determine the required effort and
    resources.
  prefs: []
  type: TYPE_NORMAL
- en: Client-side presentation mashups
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Client-side presentation mashups are the least complex mashups and can be composed
    relatively quickly. Here, live data and functionality from multiple sources are
    embedded on a web page that requires data from the Salesforce platform with which
    to mashup with the non-Salesforce data and functionality.
  prefs: []
  type: TYPE_NORMAL
- en: Client presentation mashups in Salesforce can be composed using Visualforce,
    HTML, and JavaScript, and which can often be copied and pasted by nontechnical
    users, immediately adding value to a web application.
  prefs: []
  type: TYPE_NORMAL
- en: Having briefly outlined the nature of client-side mashups, we are now going
    to look at how they can actually be created in Salesforce CRM. As shown earlier,
    the enabling technology is provided by the Salesforce platform with the use of
    the web page framework known as Visualforce.
  prefs: []
  type: TYPE_NORMAL
- en: The best way to guide you through the use of new technology is by demonstrating
    how to use it with an example. Here, we are going to compose a client-side presentation
    that displays a Google Map widget displaying Google Map location details for a
    given company record in Salesforce.
  prefs: []
  type: TYPE_NORMAL
- en: The Google Map will be presented to the user in Salesforce CRM after selecting
    an appropriate account record, and live Google Map information will be displayed
    right from within the relevant account detail page. The mashup will be composed
    by creating a new Visualforce page with the required Google Map widget and then
    adding a new section to the account detail page where the Visualforce page will
    be included.
  prefs: []
  type: TYPE_NORMAL
- en: Introduction to Visualforce
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Visualforce is the framework in Salesforce CRM that allows you to further customize
    your organization's user interface beyond the standard functionality we have previously
    covered.
  prefs: []
  type: TYPE_NORMAL
- en: 'As described previously, using Visualforce you can combine data from multiple
    objects, create mashups with data from external web services, and even override
    some of the logic and the behavior found within standard Salesforce CRM application
    functions. Visualforce consists of the following three elements:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Visualforce pages: These are used to define the user interface'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Visualforce components: These can be thought of as a library of standard or
    custom-built sections of Visualforce code'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Visualforce page controllers: These are used to control the behavior of Visualforce
    pages, and can either be controlled by standard logic or you can create custom
    logic to change or extend the standard Salesforce CRM behavior'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Visualforce pages
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The Visualforce framework allows for the creation of Visualforce pages. These
    pages are a little like documents that are stored in Salesforce, and they are
    comprised of instructions that specify how the page is to appear and function.
    Similar in nature to HTML, Visualforce pages comprise of a tag-based markup language,
    with each Visualforce tag type corresponding to a particular user interface component.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The maximum size of a Visualforce page cannot be greater than 15 MB.
  prefs: []
  type: TYPE_NORMAL
- en: For the more technical readers, Visualforce performs similar functions as, say,
    Java Server Pages or Active Server Pages and is used to manage the retrieval of
    data from the Salesforce platform and the rendering of results via the Internet
    browser user interface.
  prefs: []
  type: TYPE_NORMAL
- en: Creating a Visualforce page
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Now that you are aware of the basic building blocks provided by Visualforce,
    we will describe the creation of Visualforce pages. This section looks at how
    the creation and modification of pages can be done and shows the following two
    ways of doing so:'
  prefs: []
  type: TYPE_NORMAL
- en: Using the Visualforce pages setup page
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Using development mode
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Visualforce pages setup page
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'To navigate to the setup page for creating Visualforce pages, go to **Setup
    | Develop | Pages.** Now click on the **New** button to create a new Visualforce
    page. Select an existing entry to view the page or click on **Edit** to modify
    it, as shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Visualforce pages setup page](img/image_09_019.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Visualforce development mode
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: We can also use something called Visualforce development mode to initially create
    and edit Visualforce pages. This can be a better choice because it provides several
    useful features that make it easier to build **Visualforce pages**.
  prefs: []
  type: TYPE_NORMAL
- en: 'To start using the development mode, it needs to be activated on your user
    record by navigating to **Your Name** | **Setup** | **My Personal Information**
    | **Personal Information**. Now click on the **Edit** button, select the **Development
    Mode** checkbox (as shown in the following screenshot), and then finally click
    on **Save**:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Visualforce development mode](img/09_20.jpg)'
  prefs: []
  type: TYPE_IMG
- en: When in Visualforce development mode, you can create a new page simply by entering
    a unique URL into the browser's address bar.
  prefs: []
  type: TYPE_NORMAL
- en: Automatic creation of new Visualforce pages can be done by entering a unique
    URL (for a Visualforce page that does not exist) into the browser's address bar.
    For example, typing the URL [https://na10.salesforce.com/apex/GoogleMap](https://na10.salesforce.com/apex/GoogleMap)
    will enable a new page called Google Map to be created.
  prefs: []
  type: TYPE_NORMAL
- en: You need to be careful that you are entering the correct URL text, as it is
    the `/apex/GoogleMap` part in the preceding example that prompts Salesforce CRM
    to check and create a new page if it does not currently exist. It is also important
    that the start of the URL is entered correctly. The [https://na10.salesforce.com](https://na10.salesforce.com)
      part refers to the Salesforce instance for your Salesforce CRM application.
  prefs: []
  type: TYPE_NORMAL
- en: 'When entered correctly, the following screen, which allows you to create the
    Visualforce page, will be presented:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Visualforce development mode](img/image_09_021-2.jpg)'
  prefs: []
  type: TYPE_IMG
- en: This, as you can appreciate, can save a lot of time when creating multiple pages,
    as you do not need to keep navigating to the setup section, saving you a number
    of mouse clicks.
  prefs: []
  type: TYPE_NORMAL
- en: 'The resulting edit page when you click on the **Create Page Google Map** link
    is the same edit page as when accessed through the setup route, as shown in the
    following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Visualforce development mode](img/image_09_022.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'When development mode is enabled, a development section is automatically presented
    below the Visualforce page that you are creating or editing, which displays an
    editor section. To show or hide the development section, click on the following
    icon:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Visualforce development mode](img/image_09_023.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'The editor allows you to write Visualforce component tags directly within the
    browser window and also offers the following features:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Visualforce development mode](img/image_09_024.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'As shown, the seven menu functions are provided for:'
  prefs: []
  type: TYPE_NORMAL
- en: Saving the page
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Searching for text
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Navigating to a specified line in the code
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Undoing changes
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Redoing changes
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Increasing the font size of the text
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Decreasing the font size of the text
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Clicking on the **Component Reference** link will take you to online documentation,
    which provides descriptions as well as example code for all the Visualforce components,
    as shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Visualforce development mode](img/image_09_025-2.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'In addition, the page editor also provides highlighting and an autocomplete
    feature that automatically displays available component markup tags, as shown
    in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Visualforce development mode](img/image_09_026.jpg)'
  prefs: []
  type: TYPE_IMG
- en: The greatest benefit of having development mode enabled when building Visualforce
    pages using the Salesforce CRM platform is that as you add component tags and
    build up the code in the page, you can click on the save icon and view the resulting
    changes immediately.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The Visualforce page must be free from errors before the page can be saved.
  prefs: []
  type: TYPE_NORMAL
- en: Visualforce components
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: We have seen in the previous section that Salesforce provides a set of standard,
    pre-built components, such as `<apex:actionFunction>` and `<apex:actionStatus>`,
    which can be added to Visualforce pages to construct pages of functionality. In
    addition, you can build your own custom components to augment this library of
    components.
  prefs: []
  type: TYPE_NORMAL
- en: Similar to the way functions work in a programming language, a custom Visualforce
    component allows you to construct common code and then re-use that code in one
    or more Visualforce pages.
  prefs: []
  type: TYPE_NORMAL
- en: Custom components allow you to define attributes that can be passed to each
    component. The value of an attribute can then change the way the markup is displayed
    on the final page and the controller-based logic that executes for that instance
    of the component.
  prefs: []
  type: TYPE_NORMAL
- en: Visualforce custom components consist of Visualforce markup tags using the standard
    `<apex:component>` tag, and so rather than repeating the Visualforce markup required
    for every page that you need the common code on, you can define a custom component
    that has certain attributes and then uses those attributes to display the functionality
    on the page. Once defined, every Visualforce page in your organization can leverage
    the custom component in the same way as a page can leverage standard components
    such as `<apex:dataTable>` or `<apex:actionStatus>`.
  prefs: []
  type: TYPE_NORMAL
- en: Creating an example mashup with Visualforce
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'To construct our example mashup we will follow these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Delete the default new Visualforce markup content.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Change the Visualforce Controller to specify an Account Standard Controller.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Copy and paste the Google Map code and add Salesforce-specific merge fields.
  prefs: []
  type: TYPE_NORMAL
- en: Deleting the default new Visualforce markup content
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Delete the existing Visualforce page text (lines 2 to 5 in the following screenshot)
    and leave just the starting and ending tags, `<apex:page> and </apex:page>`, as
    shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Deleting the default new Visualforce markup content](img/image_09_027.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Changing the Visualforce Controller to specify an Account Standard Controller
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'We also need to change the Visualforce page controller so that we can read
    the value of the fields stored on the Account record. Controllers will be looked
    at in more detail later on in this chapter, but for the moment we will change
    the opening tag `<apex:page>` and add the  `standard Controller` attribute, which
    allows the call to the **Account** record, as shown using the code `<apex:page
    standard Controller="account">`:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Changing the Visualforce Controller to specify an Account Standard Controller](img/image_09_028.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Copy and paste the Google Map code and add Salesforce-specific merge fields.
  prefs: []
  type: TYPE_NORMAL
- en: 'We will copy and paste the following code, which contains Salesforce merge
    fields, to render a Google Map on our account records:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'We use Salesforce merge fields for the **Account** record to pass the **Billing
    Address** data to the Google map API, as shown in the following snippet:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'The final code will appear within the Visualforce page, as in the following
    screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Changing the Visualforce Controller to specify an Account Standard Controller](img/image_09_029.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'When saving the Visualforce page, the page is rendered immediately. However,
    at this point, there is no billing address data that can be passed to the Google
    Map widget (this will be rendered properly after we have added the Visualforce
    page to the Account Page Layout), and therefore an error will initially be presented,
    as shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Changing the Visualforce Controller to specify an Account Standard Controller](img/image_09_030.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Notice how with the use of the `<apex:page standardController="account">` tag,
    the **Accounts** tab is now automatically highlighted.
  prefs: []
  type: TYPE_NORMAL
- en: Adding the Visualforce page to the Account page layout
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Now that we have completed and saved the Visualforce page, we can add the **Google
    Map** page to the Account page layout. To add Visualforce pages to Accounts, navigate
    to **Setup |** **Customize** | **Accounts** | **Page Layouts**. Now select the
    appropriate page layout. Here, we are going to add it to the page layout called
    Account Layout by carrying out the steps discussed in the following section.
  prefs: []
  type: TYPE_NORMAL
- en: Adding a new section to the Account page layout
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'The new section has been given the title **Google Map** and has been set to
    **1-Column** width and positioned by dragging and dropping below the **Account
    System and Description Information** section, as shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Adding a new section to the Account page layout](img/image_09_031.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Adding the Visualforce page to the new page layout section
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Now drag and drop the **Google Map Visualforce** page to the **Google Map**
    section on the page layout, as shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Adding the Visualforce page to the new page layout section](img/image_09_032.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Now click on **Save**; we are ready to test by navigating to an account page.
  prefs: []
  type: TYPE_NORMAL
- en: Running the completed Visualforce page
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Navigate to the **Account** tab and select an existing account to verify that
    the mashup is working as expected.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: You will need to ensure a Billing Address is completed for the account record.
    **The Billing Address** composite field is a standard **Account** field in Salesforce
    CRM.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here we have an existing account for Salesforce.com with the **Billing Address**
    populated and which displays a **Google Map** when the account detail page is
    loaded, as shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Running the completed Visualforce page](img/image_09_033.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '*How do I suppress browser security warnings in Internet Explorer?*'
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'By default, Internet Explorer displays the following security warning message
    when a page contains a mixture of secure (HTTPS) and nonsecure (HTTP) content:
    **This page contains both secure and nonsecure items. Do you want to display the
    nonsecure items?** When you create a mashup with a nonsecure URL, users may see
    this warning message depending on their browser security settings. To suppress
    this warning in Internet Explorer, follow these steps: from the Internet Explorer
    tools menu, select **Internet Options**, click on the **Security** tab, click
    on the **Custom Level** button and, finally, in the miscellaneous section, set
    **Display mixed content** to **Enable**, as shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Running the completed Visualforce page](img/image_09_034-1.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Visualforce page controllers
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: As described earlier in this chapter, there are four types of controllers that
    can be used to control the functionality behind a Visualforce page.
  prefs: []
  type: TYPE_NORMAL
- en: Standard controllers
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'A standard controller provides access to standard Salesforce CRM behavior and,
    as shown in our example client-side mashup, can be specified using the following
    tag and attribute as the first line in the Visualforce page:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: Standard controllers are available for standard objects, such as Account, Contact,
    Opportunity, and so on, as well as custom objects, and they provide access to
    standard Salesforce CRM data operations and behavior for actions such as save,
    edit, and delete.
  prefs: []
  type: TYPE_NORMAL
- en: Custom controllers
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Custom controllers are used for fully customized behavior and are implemented
    using the Visualforce tag and attribute as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: Controller extensions
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Controller extensions are used to extend the behavior of standard controllers
    and allow the addition of customized functionality. Controller extensions are
    provided using the Visualforce tag and attribute as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: Standard list controllers
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Salesforce record pages allow users to filter the records displayed on the page
    using list views (covered in [Chapter 3](ch03.html "Chapter 3. Configuring Objects
    and Apps"), *Configuring Objects and Apps*). For example, on the accounts home
    page, users can choose to view a list of only the accounts they own by selecting
    **My Accounts** from the list view drop-down menu.
  prefs: []
  type: TYPE_NORMAL
- en: 'Standard list controllers provide the same list view picklist and are implemented
    using the following tag and attribute as the first line in the Visualforce page:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: Apex code
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The Apex code language in Salesforce CRM is based on Java, which is one of the
    most popular programming languages for Internet and web-based applications, and
    is executed on the Salesforce platform servers.
  prefs: []
  type: TYPE_NORMAL
- en: Although based on Java, the Apex code and the Salesforce CRM platform is not
    a general-purpose computing platform that can be used to run any type of program
    that developers may choose to run. Instead, Apex is kept intentionally controlled
    and limited and is, therefore, designed with the needs of the business and platform
    in mind.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Apex code in Salesforce is not intended to solve every programming problem and
    is instead concerned principally with helping developers gain advantages in development
    time, code conciseness, and reduction in maintenance costs.
  prefs: []
  type: TYPE_NORMAL
- en: Apex is used in Salesforce CRM to develop the code within Custom controllers
    and Controller extensions, as well as Apex triggers, which we will look at shortly.
  prefs: []
  type: TYPE_NORMAL
- en: Apex is specifically designed for building business applications to manage data
    and services, and the language provides a highly productive approach to creating
    applications and business logic. Developers can focus on the functionality required
    to solve the business problem and domain and need not be concerned with building
    the infrastructures, such as database connection, error handling, and so on, which
    is instead managed by the platform.
  prefs: []
  type: TYPE_NORMAL
- en: It should be noted that since the Salesforce CRM platform is a multi-tenant
    platform, there are certain limits as to what and how much processing can be performed
    within certain operations. Such limits are known, such as **Governor Limits**,
    and there are some restrictions and requirements - for example, Apex code must
    be developed in a developer or sandbox organization and must have test methods
    to verify each line of code. Only then is it allowed to be deployed to production.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: For successful deployment to production, Apex code must have associated unit
    test methods that provide at least 75% successful code coverage.
  prefs: []
  type: TYPE_NORMAL
- en: Apex triggers
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Apex triggers are blocks of Apex code that are executed before and/or after
    any record action such as create, update, or delete in the Salesforce CRM application.
  prefs: []
  type: TYPE_NORMAL
- en: Triggers are very powerful and can include complex code for controlling your
    process. They are used for complex business logic automation and where such functionality
    is too complicated to be implemented using validation rules or workflow rules,
    such as field updates. The development of Apex triggers usually requires the resource
    of a software developer, as they have certain restrictions and implications for
    the overall system.
  prefs: []
  type: TYPE_NORMAL
- en: When using multiple triggers, and alongside any existing workflow field updates,
    there needs to be a thorough understanding of any dependencies so as to avoid
    any ripple effect when records are created or updated. As trigger code can make
    changes to the record being updated within its own operation, any likely recursion
    effect needs to be understood and avoided.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Apex triggers offer many benefits to an organization, but they also introduce
    some risks as there needs to be awareness of certain patterns and limits (bulkifying
    triggers, governors, and so on.) imposed by the underlying platform. It is particularly
    important to understand the timing, order of execution, and dependencies of the
    various rules and triggers within an organization.
  prefs: []
  type: TYPE_NORMAL
- en: Change management overview
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: As outlined in the section on installing apps from **AppExchange Marketplace**,
    you should properly evaluate the functionality and results of deploying an app
    within your Salesforce CRM organization. This concept is part of a wider concern,
    which addresses the way changes are applied to the Salesforce CRM application.
  prefs: []
  type: TYPE_NORMAL
- en: With the use of Salesforce sandboxes, you can properly evaluate and perform
    due diligence for new Salesforce functionality before deciding to roll it out
    to your users in the production system. In the case of an AppExchange app, if
    the app proves to be unsuccessful, then it need not be uninstalled.
  prefs: []
  type: TYPE_NORMAL
- en: Salesforce sandboxes
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Sandboxes are separate Salesforce CRM environments that are isolated from your
    Salesforce production organization, so actions that you carry out in your sandboxes
    do not affect your Salesforce production environment, and vice versa.
  prefs: []
  type: TYPE_NORMAL
- en: To view and manage your existing sandboxes or create new ones in Salesforce
    CRM, navigate to **Setup | Sandboxes.**
  prefs: []
  type: TYPE_NORMAL
- en: You can view the list of any existing sandboxes that have been created, and
    clicking on a sandbox name allows you to view details about the sandbox, such
    as when it was created.
  prefs: []
  type: TYPE_NORMAL
- en: 'In the Sandbox List, you can see the **Name**, **Type**, **Status**, **Location**,
    **Current Org Id**, **Completed On**, and **Description** Sandboxes where there
    are the following types: **Developer**, **Developer Pro**, **Partial Data**, and
    **Full,** as shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Salesforce sandboxes](img/image_09_035.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Sandbox availability is dependent on your edition of Salesforce CRM. Some types
    are provided as standard while others are available for additional cost.
  prefs: []
  type: TYPE_NORMAL
- en: Developer sandbox
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: A Developer sandbox is intended to be used for coding and testing and contains
    a copy of all the configuration setup from your production system. It does not,
    however, contain any of the data. There is a maximum of 200 MB of data storage
    and 200 MB of file storage that can be created. The Developer sandbox can be refreshed
    once per day.
  prefs: []
  type: TYPE_NORMAL
- en: Developer Pro sandbox
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: A Developer Pro sandbox is intended to be used for coding, testing, and user
    training and contains a copy of all the configuration setup from your production
    system. It does not, however, contain any of the data. There is a maximum of 1
    GB of data storage and 1 GB of file storage that can be created. The **Developer
    Pro** sandbox can be refreshed once per day.
  prefs: []
  type: TYPE_NORMAL
- en: Partial Copy sandbox
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: A Partial Copy sandbox is intended to be used as a testing environment and contains
    a copy of your production organization's configuration setup. Unlike the **Developer**
    and **Developer Pro** sandboxes, a Partial Copy sandbox permits a sample of your
    production organization's data that you define by using a sandbox template.
  prefs: []
  type: TYPE_NORMAL
- en: To create a Partial Copy sandbox, you must apply a sandbox template at creation
    time, although there is a maximum of 5 GB of data storage and 5 GB of file storage
    that can be stored. For each selected object in the sandbox template, up to 10,000
    records are brought over from the production environment. For example, if you
    have a template that includes only accounts to create a Partial Copy sandbox,
    up to 10,000 Account records will be copied into the new sandbox - no other records.
    Unlike the Developer and Developer Pro sandboxes, the Partial Copy sandbox can
    only be refreshed once every five days.
  prefs: []
  type: TYPE_NORMAL
- en: Full Copy sandbox
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: A **Full Copy sandbox** contains a copy of your entire production setup, including
    all the data. Because the data is also copied over during a refresh, there is
    a limit of refreshing the Full Copy sandbox to once every 29 days. Full Copy sandboxes
    have the same storage limit as the production organization.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The **Full Copy** **sandbox** is generally used for **User Acceptance Testing**
    (**UAT**).
  prefs: []
  type: TYPE_NORMAL
- en: Clicking on the **New Sandbox** button allows you to create a new sandbox.
  prefs: []
  type: TYPE_NORMAL
- en: The **Sandbox Templates** tab is used with **Partial Copy** sandboxes and determines
    the types of record and data that is to be copied over from the production environment.
  prefs: []
  type: TYPE_NORMAL
- en: The **Sandbox History** tab allows you to see the sandbox refresh history, showing
    when sandboxes were created and who created them.
  prefs: []
  type: TYPE_NORMAL
- en: The **Refresh** link allows you to replace an existing sandbox with a new copy.
    The existing copy of the sandbox remains available while the refresh completes
    and until you activate the new copy.
  prefs: []
  type: TYPE_NORMAL
- en: 'When creating or refreshing a **Full** sandbox, you can reduce the time taken
    for the refresh by reducing the amount of data that is copied. The following options
    allow you to reduce the amount of data that is copied:'
  prefs: []
  type: TYPE_NORMAL
- en: The **Case History** option allows you to select the number of days of case
    history from your production organization to copy to your sandbox. You can copy
    from 0 to 180 days in 30-day increments. The default value is 30 days.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The **Opportunity History** option allows you to select the number of days of
    opportunity history from your production organization to copy to your sandbox.
    Here, you can copy from 0 to 180 days in 30-day increments. The default value
    is 0 days.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
- en: By default, **Chatter** data is not copied to your sandbox. **Chatter** data
    includes feeds, messages, and discovery topics. Select the **Copy Chatter Data**
    checkbox if you wish to copy it. Salesforce does not recommend increasing the
    default selections as too much data can cause delays in the time it takes to copy
    or refresh the sandbox. The **Refresh** option is only shown for each sandbox
    that is available for refreshing.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: An **Activate** link allows you to activate a refreshed sandbox, which must
    be done before you can start using the new sandbox.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
- en: The **Activate** option is only displayed for refreshed sandboxes that have
    yet to be activated.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Activating a refreshed sandbox replaces the existing sandbox with the refreshed
    version and permanently deletes the old version and any data in it.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: The **Login** option allows you to log in to a sandbox.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
- en: 'The **Login** button is only displayed for system administrators and may not
    always be available. Users can log in to an active sandbox by using the following
    URL: [https://test.salesforce.com](https://test.salesforce.com)  and entering
    a modified username, which is `<username>` from production, with a suffix for
    the name of the sandbox. So, for a sandbox called **Test**, it would be `martin.brown@widgetsXYZ.com.test`.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Sandboxes that no one has logged in to for 180 days are deleted. Users who have
    created or most recently refreshed any sandbox within your organization will be
    notified that the sandbox is scheduled for deletion. These users will receive
    at least three e-mail notifications over 30 days prior to the deletion.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Salesforce recommends keeping a sandbox active by logging in periodically to
    avoid e-mail notifications.
  prefs: []
  type: TYPE_NORMAL
- en: By using a sandbox, you can ensure that changes are deployed in a structured
    and controlled manner and any change can be undone easily. This is known as change
    management.
  prefs: []
  type: TYPE_NORMAL
- en: 'Effective change management reduces the risk when introducing new areas of
    functionality and when making changes to existing functionality. It obviously
    depends on the amount and complexity of the planned change, but for a risk-free
    and successful implementation of changes in Salesforce CRM, there needs to be
    a change management strategy, which typically covers the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Changing requests.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Configuring, developing, and deploying.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Change requests
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: When working with a change management process in an organization, change requests
    are typically gathered from ideas and requests from management and application
    users.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '**Case management for change requests**'
  prefs: []
  type: TYPE_NORMAL
- en: One method of gathering and storing change requests is by utilizing the case
    management features within Salesforce CRM itself. This feature can be set up to
    enable users to enter their required changes directly. You can even consider building
    an approval process so that the change is approved by the user's manager before
    being considered in any release cycle.
  prefs: []
  type: TYPE_NORMAL
- en: However, before the change requests are captured, you need a process to analyze
    and prioritize the lists of requests and assess the scope of the work required.
    It can be useful to classify the changes that are requested for inclusion in either
    an immediate, minor, or a major release.
  prefs: []
  type: TYPE_NORMAL
- en: Immediate release
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Change items that are suitable for immediate release are very small changes
    that can be quickly implemented; they carry no risk and can be made directly into
    the production environment. Changes such as new dashboards or reports, or modifications
    to existing dashboards and reports, and field positioning on page layouts and
    related lists are considered small changes. This category of release also includes
    simple data changes, such as data imports and exports.
  prefs: []
  type: TYPE_NORMAL
- en: Changes can be configured, tested, and deployed with minimal impact, and therefore
    these changes do not usually need to go through the change control process.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: It is worth considering, however, how the changes are applied in any other sandbox
    such as a developer, user acceptance, or test environment to ensure that all the
    sandbox environments are kept in sync.
  prefs: []
  type: TYPE_NORMAL
- en: Minor release
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Minor releases are for larger changes that can be grouped and scheduled for
    change perhaps every 30 or 60 days. The types of changes that fall into this category
    include new fields, new page layouts, new custom objects, and so on, which are
    more complicated than the immediate release change items.
  prefs: []
  type: TYPE_NORMAL
- en: Minor release change items are medium level changes that can be implemented
    with minor impact to the production environment and typically require less than
    a day of additional training for users and overall less than a week of customization
    or code changes.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: It is worth considering, however, how the changes are applied in any other sandbox
    such as a **Developer**, **User acceptance**, or **Test environment** to ensure
    that all the sandbox environments are kept in sync.
  prefs: []
  type: TYPE_NORMAL
- en: Major release
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Major releases are large changes that will carry risk and have a major impact
    to the business or environment. These changes are the ones that require modification
    to the user interface, to the way data is updated, data migrations, and any integration
    projects. These types of changes include new or modified role hierarchies, profiles,
    page layouts, record types, sales and support processes, workflow and approvals,
    and custom code. These changes can be introduced with the introduction of new
    AppExchange apps, process-impacting configuration changes, data migrations, and
    integration
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Major release change items carry a high level of risk and are obviously more
    complicated than a minor release change. These changes may require additional
    time for training users, and in general require more than a week of customization
    or code changes.
  prefs: []
  type: TYPE_NORMAL
- en: Configuring, developing, and deploying
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Typical compliance requirements for change management are that changes are appropriately
    tested and validated and that only approved changes are deployed into production.
  prefs: []
  type: TYPE_NORMAL
- en: Configuration, development, and testing should always typically be carried out
    using a sandbox environment, and a record should be maintained to record the successful
    testing, validation, and approval of any changes prior to deployment or production.
    Depending upon the scope and scale of the change request, as described previously,
    you may need to consider using a different environment for development and testing.
  prefs: []
  type: TYPE_NORMAL
- en: A complex change often sees the need for a developer sandbox and separate testing
    sandbox. When the changes are finished in the developer sandbox, they are migrated
    to the testing sandbox, and only when approved are they deployed into the production
    environment.
  prefs: []
  type: TYPE_NORMAL
- en: Only after appropriate review and agreement by the approval authority can the
    changes ever be deployed into the production environment.
  prefs: []
  type: TYPE_NORMAL
- en: User adoption
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In [Chapter 8](ch08.html "Chapter 8. Introducing Sales Cloud, Service Cloud,
    and the Collaborative Features of Salesforce CRM"), *Introducing Sales Cloud,
    Service Cloud, and Collaborative Features of Salesforce CRM*, we looked at the
    core functionality that Salesforce CRM provides and also at how the complete sales
    process, from campaign and lead capture right through to customer service and
    support, can be captured. Here, we looked in detail at how Salesforce provides
    the facilities to obtain a full 360-degree view of customer's past, present, and
    future relationships within our organization.
  prefs: []
  type: TYPE_NORMAL
- en: We looked at how this information enables marketing to measure the return on
    investment for marketing campaigns, sales to optimize the sales pipeline and sell
    more to each customer, support to track customer support incidents, and requests
    to ensure that each one is resolved appropriately and in a timely fashion.
  prefs: []
  type: TYPE_NORMAL
- en: Having this process in place is one thing, but to ensure that the information
    is captured to support the process is another issue altogether. After all, processes
    and technologies are only as good as the people who use them. So, it is vital
    that users are regularly logging in, creating, and updating information into Salesforce
    CRM.
  prefs: []
  type: TYPE_NORMAL
- en: CRM technology, therefore, must be easy to use, accessible, and scalable to
    ensure that the efforts of using the system provide significant enhancements in
    productivity, efficiency, and information accessibility. Once the business goals
    have been established and can be measured, organizations generally need to address
    methods of ensuring or increasing user adoption. Here, you can cultivate active
    product advocates or evangelists from within your business to support certain
    initiatives for any relevant areas of the business.
  prefs: []
  type: TYPE_NORMAL
- en: A significant factor for successful adoption is to give users incentives to
    use the system by providing them with functionality that improves the way they
    work and offers valuable information and tools not available elsewhere within
    the organization.
  prefs: []
  type: TYPE_NORMAL
- en: Another important consideration is to encourage feedback from the user community.
    By encouraging feedback and instilling a sense of collaboration, a collective
    ownership for Salesforce CRM can be obtained that will instill trust. Responding
    to good suggestions, customizing, and communicating enhancements to the application
    can lead to better acceptance of changes, and makes people more likely to want
    to spend their time working with the application.
  prefs: []
  type: TYPE_NORMAL
- en: In spite of the positives mentioned, user adoption cannot be assumed or taken
    for granted, and your company might need to consider reinforcing adoption with
    rules as well as rewards.
  prefs: []
  type: TYPE_NORMAL
- en: User adoption seeks to ensure that the business communities, as described previously,
    are effectively using Salesforce CRM and that the features that have been implemented
    are being properly utilized and continue to successfully address the business
    challenges.
  prefs: []
  type: TYPE_NORMAL
- en: 'To enable the monitoring of user adoption, there needs to be effective reports
    and dashboards to capture adoption metrics, where the following areas can be considered
    when building user adoption metrics:'
  prefs: []
  type: TYPE_NORMAL
- en: Usage
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Data quality
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Business performance
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Usage
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The first key requirement for ensuring that Salesforce CRM is being appropriately
    used is by measuring the number and frequency of users logging in to the system.
    You also need to ensure that users are actively and consistently updating data
    and creating new **Leads**, **Contacts**, **Opportunities**, and/or **Cases**
    depending on their roles in the organization.
  prefs: []
  type: TYPE_NORMAL
- en: Having a well implemented business application should help to make business
    processes simple and hide complexity; this all helps to increase user adoption.
    However, making a computer application appear simple often requires a considered
    approach and sometimes takes far more effort than leaving it in its natural complex
    state. Removing obstacles and unnecessary features takes time and effort, but
    it is time and effort well spent and will yield results and hopefully result in
    higher adoption rates.
  prefs: []
  type: TYPE_NORMAL
- en: Simplicity
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: As a platform, Salesforce CRM has proven to be highly successful since its conception
    a decade ago, and the number of organizations and subscriptions to the service
    grows year on year. Much of this success can be attributed to the simplicity,
    ease of use, and focus on user productivity that the platform affords.
  prefs: []
  type: TYPE_NORMAL
- en: While you may feel justified in introducing new mandatory fields and enforcing
    data capture requirements into the application, this can sometimes make the system
    less user-friendly. Sometimes, applications that offer the simplest solution for
    a given problem are more likely to be rewarded with acceptance and adoption by
    your Salesforce community.
  prefs: []
  type: TYPE_NORMAL
- en: Connectivity
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Enabling users to connect information from other tools, such as Microsoft Outlook,
    and fully integrate Salesforce CRM with other such business systems provides a
    mechanism for accessing all the information users need.
  prefs: []
  type: TYPE_NORMAL
- en: Salesforce Mobile
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In the past, mobile devices that were capable of accessing software applications
    were very expensive. Often these devices were regarded as a *nice to have* accessory
    by management and seen as a company perk by field teams. Today, mobile devices
    are far more prevalent within the business environment and organizations are increasingly
    realizing the benefits of using mobile phones and devices to access business applications.
  prefs: []
  type: TYPE_NORMAL
- en: Salesforce.com provides several mobile apps and solutions to keep your users
    connected and productive when using their mobile devices. These solutions are
    covered in detail in the next chapter, [Chapter 10](ch10.html "Chapter 10. Administrating
    the Mobile Features of Salesforce CRM"), *Administrating the Mobile Features of
    Salesforce CRM.*
  prefs: []
  type: TYPE_NORMAL
- en: Communications
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Users are far more likely to adopt Salesforce CRM when they know that their
    peers and colleagues are achieving results from its use. By communicating both
    the business and personal results, for example, an increase in company sales and
    the resulting sales commissions paid to the sales team, you can encourage others
    to adopt the system.
  prefs: []
  type: TYPE_NORMAL
- en: Data quality
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Data quality is a valuable metric for measuring adoption. Although outlined
    previously, it is advisable not to over complicate the entering of information
    with needless validation; it is important that any critical fields are completed.
  prefs: []
  type: TYPE_NORMAL
- en: When certain fields are consistently filled out, user acceptance will increase
    as it provides good data integrity and reliability that translates into higher
    user confidence and higher adoption.
  prefs: []
  type: TYPE_NORMAL
- en: Business performance
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Usage should also reflect business performance and compliance metrics that are
    used to ensure that users are not just using the application, but are using it
    in a way that enhances business effectiveness. Here, metrics can be built that
    will uncover patterns and trends that track performance levels, and can then identify
    areas that need improvement.
  prefs: []
  type: TYPE_NORMAL
- en: This has been a quick overview of areas that can be used to generate metrics
    that you can track and there is an enormous quantity of metrics that can be generated.
  prefs: []
  type: TYPE_NORMAL
- en: There is a balance, however, in getting accurate views without overcomplicating
    and spawning too many metrics. Here, it is often best to create the minimum number
    of metrics that can adequately capture and track the success of the business performance
    objectives.
  prefs: []
  type: TYPE_NORMAL
- en: 'Certain performance indicators can be established to identify the business
    sales revenues, which are listed as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: Compare the current fiscal year against last year's sales by month, say, to
    measure cyclical variances.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Compare sales from existing customers against new customers to measure what
    customer type revenue is coming from and enhance CRM activities accordingly.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Compare won and lost sales ratios to measure the effectiveness of deal closure,
    see why deals are getting lost, and learn from the reasons.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Measure the sales pipeline by sales stage to identify where new opportunities
    are appearing.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Measure key opportunities in the sales pipeline to identify the current key
    opportunities to ensure they get the right attention.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Measure closed sales actuals against quota. Here, you can introduce a closed
    sales leaderboard to identify who your top deal-closers are. This can sometimes
    be seen as a way of shaming bad performers, but sales management can use this
    information positively to get the top performers to share knowledge and best practices
    to help the organization.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'For marketing-specific metrics, the following examples can be performed:'
  prefs: []
  type: TYPE_NORMAL
- en: Measure campaigns by **Return On Investment** (**ROI**), Actual ROI, by campaign
    type, and average opportunity amount per campaign
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Measure lead conversion rates
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'There are many dashboards that you can install from AppExchange that give metrics
    for how Salesforce is being used. The following is called **Salesforce Adoption
    Dashboards**, which is an example from [labs.force.com](http://labs.force.com):'
  prefs: []
  type: TYPE_NORMAL
- en: '![Business performance](img/image_09_036.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'The **Salesforce Adoption Dashboards** app from **Salesforce.com** is available
    from the **AppExchange Marketplace** directly through the following URL: [http://appexchange.salesforce.com/listingDetail?listingId=a0N30000004gHhLEAU](http://appexchange.salesforce.com/listingDetail?listingId=a0N30000004gHhLEAU).'
  prefs: []
  type: TYPE_NORMAL
- en: Questions to test your knowledge
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: You are now presented with questions about the Salesforce AppExchange, which
    has been covered in this chapter. The answers can be found at the end of this
    chapter.
  prefs: []
  type: TYPE_NORMAL
- en: Questions
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: We present two questions to verify your understanding of the Salesforce **AppExchange
    Marketplace**.
  prefs: []
  type: TYPE_NORMAL
- en: Question 1 - Salesforce AppExchange Marketplace
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'What is the purpose of the Salesforce **AppExchange Marketplace**? (Select
    all that apply):'
  prefs: []
  type: TYPE_NORMAL
- en: '**a**) Administrators can download and customize pre-built reports and dashboards.'
  prefs: []
  type: TYPE_NORMAL
- en: '**b**) Sales users can install add-ins to synchronize the Contacts and Calendar
    entries in their desktop e-mail apps with Salesforce.'
  prefs: []
  type: TYPE_NORMAL
- en: '**c**) Partners can share and link opportunities to collaborate on sales deals.'
  prefs: []
  type: TYPE_NORMAL
- en: '**d**) Salesforce customers can share and install apps published by third-party
    developers and system integrators.'
  prefs: []
  type: TYPE_NORMAL
- en: Question 2 - Salesforce AppExchange Package Types
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'What are the package types found in the Salesforce **AppExchange Marketplace**?
    (Select all that apply):'
  prefs: []
  type: TYPE_NORMAL
- en: '**a**) Mass Delete.'
  prefs: []
  type: TYPE_NORMAL
- en: '**b**) Managed.'
  prefs: []
  type: TYPE_NORMAL
- en: '**c**) Sales.'
  prefs: []
  type: TYPE_NORMAL
- en: '**d**) Unmanaged.'
  prefs: []
  type: TYPE_NORMAL
- en: '**e**) Marketing.'
  prefs: []
  type: TYPE_NORMAL
- en: Answers
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Here are the answers to the two questions about the Salesforce **AppExchange
    Marketplace**.
  prefs: []
  type: TYPE_NORMAL
- en: Answer 1 - Salesforce AppExchange Marketplace
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The answer is **a**) Administrators can download and customize pre-built reports
    and dashboards and **d**) Salesforce customers can share and install apps published
    by third-party developers and system integrators.
  prefs: []
  type: TYPE_NORMAL
- en: Answer 2 - Salesforce Appexchange package types
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The answer is **b**) Managed and **d**) Unmanaged. Managed Package Types are
    packages that may continue to be managed by the publishing developers and the
    package contents are not visible or editable. Unmanaged packages are not managed
    by the publishing developers and the package contents are visible and editable.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we looked at the core features of Salesforce CRM that can be
    enhanced by adding additional functionality with external applications from the
    **AppExchange Marketplace**.
  prefs: []
  type: TYPE_NORMAL
- en: We discovered how easy it is to build a mashup in Salesforce CRM using the Visualforce
    technology and looked at how, with the use of Visualforce pages, we can extend
    the standard page functionality of the Salesforce CRM.
  prefs: []
  type: TYPE_NORMAL
- en: We looked at the concept of web mashups from the perspective of both the client-side
    and server-side aspects of web technologies. We also described the difference
    between presentation mashups, which are rendered in an Internet browser, and services
    that require more complex features, such as web services.
  prefs: []
  type: TYPE_NORMAL
- en: We were introduced to the ways in which Visualforce pages can be controlled,
    where we looked at the use of Apex code, which can extend the functionality within
    the Salesforce CRM platform. Apex triggers were briefly covered, where we considered
    the need for careful implementation in order to observe the order of execution
    for workflow rules and triggers to ensure that no unwanted ripple effects were
    introduced.
  prefs: []
  type: TYPE_NORMAL
- en: We looked at the importance for planning and scheduling the release of changes
    into the Salesforce application and provided some best practices relating to change
    management.
  prefs: []
  type: TYPE_NORMAL
- en: We also looked at how to improve user adoption by giving users incentives to
    use the system by providing them with functionality that improves the way they
    work and offering valuable information and tools not available elsewhere within
    the organization.
  prefs: []
  type: TYPE_NORMAL
- en: Finally, we posed questions to help clarify some of the key features of the
    Salesforce **AppExchange Marketplace**.
  prefs: []
  type: TYPE_NORMAL
- en: In the next chapter, we will look at the administration of mobile features within
    Salesforce CRM.
  prefs: []
  type: TYPE_NORMAL
