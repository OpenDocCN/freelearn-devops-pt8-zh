["```\n$ docker run -it --rm ubuntu:16.04 /bin/bash\nroot@d372dba0ab90:/# hostname\nd372dba0ab90\n\n```", "```\n$ docker run --rm -p 80:80 nginx\n\n```", "```\n$ curl -IL http://localhost\nHTTP/1.1 200 OK\nServer: nginx/1.11.5\n[â€¦]\n\n```", "```\n172.17.0.1 - - [21/Nov/2016:21:21:15 +0000] \"HEAD / HTTP/1.1\" 200 0 \"-\" \"curl/7.43.0\" \"-\"\n\n```", "```\n$ docker run --rm -p 80:80 nginx:1.10\n\n```", "```\n$ curl -IL http://localhost\nHTTP/1.1 200 OK\nServer: nginx/1.10.2\n\n```", "```\n<html>\n  <h1>Hello from Docker!</h1>\n</html>\n```", "```\n$ docker run --rm -p 80:80 -v ${PWD}/www:/usr/share/nginx/html nginx:1.10\n\n```", "```\n$ curl -L http://localhost\n<html>\n <h1>Hello from Docker!</h1>\n</html>\n\n```", "```\nFROM ubuntu:16.04\nRUN apt-get -yq update\nRUN apt-get install -yq dnsutils curl netcat\n```", "```\n$ docker build -t utils .\nStep 1 : FROM ubuntu:16.04\n ---> 2fa927b5cdd3\nStep 2 : RUN apt-get update -yq\n ---> Running in 0d8f8e01bde8\n[...]\nStep 3 : RUN apt-get install ruby -yq\n ---> Running in 425bfb1e8ee1\n[...]\nRemoving intermediate container 425bfb1e8ee1\nSuccessfully built c86310e48731\n\n```", "```\n$ docker run -it --rm utils dig +short google.com\n172.217.5.14\n\n```", "```\n$ docker run -it --rm utils curl -I google.com\nHTTP/1.1 302 Found\nCache-Control: private\nContent-Type: text/html; charset=UTF-8\nLocation: http://www.google.ca/?gfe_rd=cr&ei=UgA1VMLPRUvF9gfJ_riACg\nContent-Length: 258\nDate: Wed, 23 Nov 2016 02:34:58 GMT\n\n```", "```\n$ docker run -it --rm -p 80:2015 quay.io/coreos/caddy\nActivating privacy features... done.\nhttp://0.0.0.0:2015\n\n```", "```\nFROM ubuntu:16.04\nENTRYPOINT [\"/bin/bash\"]\n```", "```\nFROM centos:7\nENTRYPOINT [\"/bin/bash\"]\n```", "```\nFROM registry.access.redhat.com/rhel7\nENTRYPOINT [\"/bin/bash\"]\n```", "```\nFROM fedora:latest\nENTRYPOINT [\"/bin/bash\"]\n```", "```\nFROM alpine:3.4\nENTRYPOINT [\"/bin/sh\"]\n```", "```\nFROM debian:jessie\nENTRYPOINT [\"/bin/bash\"]\n```", "```\nFROM node:7\nENTRYPOINT [\"/bin/bash\"]\n```", "```\nFROM golang:1.7\nENTRYPOINT [\"/bin/bash\"]\n```", "```\nFROM ruby:2.3\nENTRYPOINT [\"/bin/bash\"]\n```", "```\nFROM python:3.5\nENTRYPOINT [\"/bin/bash\"]\n```", "```\nFROM openjdk:9\nENTRYPOINT [\"/bin/bash\"]\n```", "```\nFROM php:7\nENTRYPOINT [\"/bin/bash\"]\n```", "```\nFROM ubuntu:16.04\nRUN apt-get update -y\nRUN apt-get install -y apache2\nRUN rm -rf /var/lib/apt\nENTRYPOINT [\"/usr/sbin/apache2ctl\", \"-D\", \"FOREGROUND\"]\n```", "```\nFROM ubuntu:16.04\nRUN apt-get update -y && \\\n    apt-get install -y apache2 && \\\n    rm -rf /var/lib/apt/\nENTRYPOINT [\"/usr/sbin/apache2ctl\", \"-D\", \"FOREGROUND\"]\n```", "```\nFROM debian:stable-slim\nRUN apt-get update -y && \\\n    apt-get install -y apache2 && \\\n    rm -rf /var/lib/apt/\nENTRYPOINT [\"/usr/sbin/apache2ctl\", \"-D\", \"FOREGROUND\"]\n```", "```\nFROM alpine:latest\nENV TERRAFORM_VERSION=0.7.12\nVOLUME [\"/data\"]\nWORKDIR /data\nRUN apk --update --no-cache add ca-certificates openssl && \\\n  wget -O terraform.zip \"https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_linux_amd64.zip\" && \\\n  unzip terraform.zip -d /bin && \\\n  rm -rf terraform.zip /var/cache/apk/*\nENTRYPOINT [\"/bin/terraform\"]\nCMD [ \"--help\" ]\n```", "```\n$ docker build -t terraform:latest -t terraform:stable -t terraform:0.7.12 .\n\n```", "```\n$ docker images terraform\nREPOSITORY          TAG                 IMAGE ID            CREATED              SIZE\nterraform           0.7.12              9d53a0811d63        About a minute ago   83.61 MB\nterraform           latest              9d53a0811d63        About a minute ago   83.61 MB\nterraform           stable              9d53a0811d63        About a minute ago   83.61 MB\n\n```", "```\n$ docker build -t terraform:latest -t terraform:unstable -t terraform:0.8.0-rc1 .\n\n```", "```\n$ docker images terraform\nREPOSITORY          TAG                 IMAGE ID            CREATED             SIZE\nterraform           0.8.0-rc1           44609fa7c016        18 seconds ago      86.77 MB\nterraform           latest              44609fa7c016        18 seconds ago      86.77 MB\nterraform           unstable            44609fa7c016        18 seconds ago      86.77 MB\nterraform           0.7.12              9d53a0811d63        9 minutes ago       83.61 MB\nterraform           stable              9d53a0811d63        9 minutes ago       83.61 MB\n\n```", "```\nFROM ruby:2.3\n```", "```\nRUN curl -sL https://deb.nodesource.com/setup_5.x | bash -\n```", "```\nRUN apt-get install -qy nodejs && \\\n  rm -rf /var/lib/apt/* && \\\n  rm -rf /var/lib/cache/* && \\\n  rm -rf /var/lib/log/* && \\\n  rm -rf /tmp/*\n```", "```\nRUN mkdir -p /usr/src/app\nWORKDIR /usr/src/app\n```", "```\nCOPY Gemfile /usr/src/app/\nCOPY Gemfile.lock /usr/src/app/\nRUN bundle install --without test development --jobs 20 --retry 5\n```", "```\nCOPY . /usr/src/app\n```", "```\nRUN RAILS_ENV=production rake assets:precompile\n```", "```\nCMD [\"bundle\", \"exec\", \"rails\", \"server\", \"-b\", \"0.0.0.0\"]\n```", "```\n$ docker run --rm -v \"${PWD}/src/hello\":/usr/src/hello -w /usr/src/hello golang:1.7 go build -v\n\n```", "```\n$ file src/hello/hello\nsrc/hello/hello: ELF 64-bit LSB executable, x86-64, version 1 (SYSV), statically linked, not stripped\n\n```", "```\n$ docker run --rm -v \"${PWD}/src/hello\":/usr/src/hello -w \n/usr/src/hello -e GOOS=darwin -e GOARCH=amd64 golang:1.7 go build -v\n\n```", "```\n$ file src/hello/hello\nsrc/hello/hello: Mach-O 64-bit executable x86_64\n\n```", "```\nFROM golang:1.7\nCOPY src/hello /go/src/hello\nRUN go install hello\nENTRYPOINT [\"/go/bin/hello\"]\n```", "```\n$ docker build -t hello .\n$ docker run -it --rm hello\n\n```", "```\nFROM scratch\nCOPY src/hello/hello /hello\nENTRYPOINT [\"/hello\"]\n```", "```\nFROM alpine:latest\nRUN apk --update --no-cache add ca-certificates openssl && \\\n    rm -rf /var/cache/apk/*\nCOPY src/hello/hello /bin/hello\nENTRYPOINT [\"/bin/hello\"]\n```", "```\nFROM debian:jessie-slim\nCOPY src/hello/hello /hello\nEXPOSE 8000\nENTRYPOINT [\"/hello\"]\n```", "```\n# curl -I http://172.17.0.2:8000/\nHTTP/1.1 200 OK\n\n```", "```\n$ curl http://localhost:8000\ncurl: (7) Failed to connect to localhost port 8000: Connection refused\n\n```", "```\n$ docker run -ti --rm -P --name hello hello \n\n```", "```\n$ docker port hello\n8000/tcp -> 0.0.0.0:32771\n\n```", "```\n$ curl -I http://localhost:32771/\nHTTP/1.1 200 OK\n\n```", "```\n$ docker network create hello_network\nd01a3784dec1ade72b813d87c1e6fff14dc1b55fdf6067d6ed8dbe42a3af96c2\n\n```", "```\n$ docker network inspect hello_network -f '{{json .IPAM.Config }}'\n[{\"Subnet\":\"172.18.0.0/16\",\"Gateway\":\"172.18.0.1/16\"}]\n\n```", "```\n$ docker run -it --rm --name hello --network hello_network hello\n\n```", "```\n$ docker inspect --format '{{json .NetworkSettings.Networks.hello_network.IPAddress }}' hello\n\"172.18.0.2\"\n\n```", "```\n# curl -I --connect-timeout 5 http://172.18.0.2:8000/\ncurl: (28) Connection timed out after 5003 milliseconds \n\n```", "```\n# curl -I http://hello:8000/\nHTTP/1.1 200 OK\n\n```", "```\n$ docker run -ti --rm --name hello hello\n\n```", "```\n# curl -I http://172.17.0.2:8000/\nHTTP/1.1 200 OK\n\n```", "```\n$ docker network connect hello_network hello\n\n```", "```\n$ docker exec -it hello ip addr\n[...]\n116: eth0@if117: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc noqueue state UP group default\n link/ether 02:42:ac:11:00:02 brd ff:ff:ff:ff:ff:ff\n inet 172.17.0.2/16 scope global eth0\n[...]\n118: eth1@if119: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc noqueue state UP group default\n link/ether 02:42:ac:12:00:02 brd ff:ff:ff:ff:ff:ff\n inet 172.18.0.2/16 scope global eth1\n[...]\n\n```", "```\n$ curl http://hello:8000\nHello world\n\n```", "```\n$ docker network disconnect bridge hello\n\n```", "```\nFROM debian:stable-slim\nRUN apt-get update -y && \\\n    apt-get install -y apache2 && \\\n    rm -rf /var/lib/apt/\nEXPOSE 80\nENTRYPOINT [\"/usr/sbin/apache2ctl\", \"-D\", \"FOREGROUND\"]\n```", "```\n$ docker run -it --rm --entrypoint /bin/sh httpd\n# hostname\n585dff032d21\n\n```", "```\nFROM debian:stable-slim\nRUN apt-get update -y && \\\n    apt-get install -y apache2 && \\\n    rm -rf /var/lib/apt/\nEXPOSE 80\nCMD [\"/usr/sbin/apache2ctl\", \"-D\", \"FOREGROUND\"]\n```", "```\n$ docker run -it --rm httpd /bin/sh\n# hostname\ncb1c6a7083ad\n\n```", "```\nFROM debian:stable-slim\nRUN apt-get update -y && \\\n    apt-get install -y apache2 && \\\n    rm -rf /var/lib/apt/\nEXPOSE 80\nCMD [\"-D\", \"FOREGROUND\"]\nENTRYPOINT [\"/usr/sbin/apache2ctl\"]\n```", "```\n$ docker run -it --rm httpd -v\nServer version: Apache/2.4.10 (Debian)\nServer built:   Sep 15 2016 20:44:43\n\n```", "```\n$ docker run -e USER=john -e PASSWORD=s3cur3 sshd \n\n```", "```\nFROM alpine:latest\nRUN apk add --update openssh-sftp-server openssh-client dropbear &&\\\n    rm -rf /var/cache/apk/*\nRUN mkdir /etc/dropbear && touch /var/log/lastlog\nCOPY entrypoint.sh /\nENTRYPOINT [\"/entrypoint.sh\"]\nCMD [\"dropbear\", \"-RFEmwg\", \"-p\", \"22\"]\n```", "```\n#!/bin/sh\n\n# Checks for USER variable\nif [ -z \"$USER\" ]; then\n  echo >&2 'Please set an USER variable (ie.: -e USER=john).'\n  exit 1\nfi\n\n# Checks for PASSWORD variable\nif [ -z \"$PASSWORD\" ]; then\n  echo >&2 'Please set a PASSWORD variable (ie.: -e PASSWORD=hackme).'\n  exit 1\nfi\n\necho \"Creating user ${USER}\"\nadduser -D ${USER} && echo \"${USER}:${PASSWORD}\" | chpasswd\necho \"Fixing permissions for user ${USER}\"\nchown -R ${USER}:${USER} /home/${USER}\nexec \"$@\"\n```", "```\n$ docker run --rm ssh\nPlease set an USER variable (ie.: -e USER=john).\n\n```", "```\n$ docker run --rm -h ssh-container -e USER=john -e PASSWORD=s3cur3 -p 22:22 ssh\nCreating user john\nPassword for 'john' changed\nFixing permissions for user john\n[1] Nov 29 23:02:02 Not backgrounding\n\n```", "```\n$ ssh john@localhost\n[...]\njohn@localhost's password:\nssh-container:~$ hostname\nssh-container\n\n```", "```\nFROM debian:jessie-slim\nCOPY src/hello/hello /usr/bin/hello\nRUN chmod +x /usr/bin/hello\nEXPOSE 8000\nENTRYPOINT [\"/usr/bin/hello\"]\n```", "```\n$ ps aux\nUSER       PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND\nroot         1  0.6  0.2  36316  4180 ?        Ssl+ 23:30   0:00 /usr/bin/hello\n\n```", "```\nFROM debian:jessie-slim\nCOPY src/hello/hello /usr/bin/hello\nRUN chmod +x /usr/bin/hello\nRUN groupadd -r hello && useradd -r -g hello hello\nUSER hello\nEXPOSE 8000\nENTRYPOINT [\"/usr/bin/hello\"]\n```", "```\n$ ps aux\nUSER       PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND\nhello        1  0.0  0.2  36316  4768 ?        Ssl+ 23:33   0:00 /usr/bin/hello\n\n```", "```\nversion: '2'\n\nservices:\n  wordpress:\n    image: wordpress\n    ports:\n      - 8080:80\n    environment:\n      WORDPRESS_DB_PASSWORD: example\n  mysql:\n    image: mariadb\n    environment:\n      MYSQL_ROOT_PASSWORD: example\n```", "```\n$ docker-compose up\n[...]\nmysql_1      | 2016-12-01 20:51:14 139820361766848 [Note] mysqld (mysqld 10.1.19-MariaDB-1~jessie) starting as process 1 ...\n[...]\nmysql_1      | 2016-12-01 20:51:15 139820361766848 [Note] mysqld: ready for connections.\n[...]\nwordpress_1  | [Thu Dec 01 20:51:17.865932 2016] [mpm_prefork:notice] [pid 1] AH00163: Apache/2.4.10 (Debian) PHP/5.6.28 configured -- resuming normal operations\nwordpress_1  | [Thu Dec 01 20:51:17.865980 2016] [core:notice] [pid 1] AH00094: Command line: 'apache2 -D FOREGROUND'\n\n```", "```\n$ curl -IL http://localhost:8080\nHTTP/1.1 302 Found\n[...]\n\nHTTP/1.1 200 OK\n[...]\n\n```", "```\n$ docker-compose ps\n Name                      Command               State          Ports\n-----------------------------------------------------------------------------------\n1basics_mysql_1       docker-entrypoint.sh mysqld      Up      3306/tcp\n1basics_wordpress_1   docker-entrypoint.sh apach ...   Up      0.0.0.0:8080->80/tcp\n\n```", "```\n$ docker-compose exec mysql /usr/bin/mysql -uroot -pexample\n[...]\n\nMariaDB [(none)]> show databases;\n+--------------------+\n| Database           |\n+--------------------+\n| information_schema |\n| mysql              |\n| performance_schema |\n| wordpress          |\n+--------------------+\n4 rows in set (0.00 sec)\n\n```", "```\n$ docker-compose down\n\n```", "```\nversion: '2'\nservices:\n  wordpress:\n    image: wordpress:4.6\n    environment:\n      WORDPRESS_DB_PASSWORD: s3cur3\n  mysql:\n    environment:\n      MYSQL_ROOT_PASSWORD: s3cur3\n```", "```\n$ docker-compose -f docker-compose.yml -f docker-compose.staging.yml up\n\n```", "```\n$ docker exec -it 1basics_mysql_1 mysql -uroot -ps3cur3\nWelcome to the MariaDB monitor.  Commands end with ; or \\g.\nYour MariaDB connection id is 4\n\n```", "```\n  proxy:\n    image: jwilder/nginx-proxy\n    ports:\n      - \"80:80\"\n    volumes:\n      - /var/run/docker.sock:/tmp/docker.sock:ro\n```", "```\n  wordpress:\n    image: wordpress:4.5\n    environment:\n      WORDPRESS_DB_PASSWORD: sup3rs3cur3\n      VIRTUAL_HOST: localhost\n```", "```\n$ docker-compose -f docker-compose.yml -f docker-compose.production.yml up\n\n```", "```\n$ curl -IL http://localhost/\nHTTP/1.1 302 Found\nServer: nginx/1.11.3\n[...]\nHTTP/1.1 200 OK\nServer: nginx/1.11.3\n\n```", "```\nFROM debian:stable-slim\nRUN apt-get update -y \\\n    && apt-get install -y apache2 \\\n    && rm -rf /var/lib/apt\nENTRYPOINT [\"/usr/sbin/apache2ctl\"]\nCMD [\"-D\", \"FOREGROUND\"]\n```", "```\n$ hadolint Dockerfile\n\n```", "```\n$ docker run --rm -i lukasmartinelli/hadolint < Dockerfile\n\n```", "```\n$ hadolint Dockerfile\nDockerfile DL4000 Specify a maintainer of the Dockerfile\n\n```", "```\n$ hadolint --ignore DL4000 --ignore <another_ID> Dockerfile\n\n```", "```\n$ docker run -it --rm -v $PWD:/root/ projectatomic/dockerfile-lint dockerfile_lint\n\n```", "```\nFROM debian:stable-slim\nLABEL name=\"apache\"\nLABEL maintainer=\"John Doe <john@doe.com>\"\nLABEL version=1.0\nRUN apt-get update -y \\\n    && apt-get install -y --no-install-recommends apache2=2.4.10-10+deb8u7 \\\n    && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/*\nEXPOSE 80\nENTRYPOINT [\"/usr/sbin/apache2ctl\"]\nCMD [\"-D\", \"FOREGROUND\"]\n```", "```\nversion: '2'\n\nservices:\n  registry:\n    image: registry:2\n    ports:\n      - 5000:5000\n    environment:\n      REGISTRY_HTTP_SECRET: s3cr3t\n```", "```\n$ docker-compose up\n\n```", "```\n$ docker tag ubuntu:16.04 localhost:5000/ubuntu\n\n```", "```\n$ docker push localhost:5000/ubuntu\n\n```", "```\n      REGISTRY_STORAGE: s3\n      REGISTRY_STORAGE_S3_REGION: us-east-1\n      REGISTRY_STORAGE_S3_BUCKET: registry-iacbook\n      REGISTRY_STORAGE_S3_ACCESSKEY: AKIAXXXXXXXXX\n      REGISTRY_STORAGE_S3_SECRETKEY: 1234abcde#\n```", "```\n$ docker-compose up\n\n```", "```\n$ docker tag ubuntu:16.04 localhost:5000/ubuntu\n\n```", "```\n$ docker push localhost:5000/ubuntu\n\n```"]