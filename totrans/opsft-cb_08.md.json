["```\n$ rhc cartridges |grep python\npython-2.6          Python 2.6                              web\npython-2.7          Python 2.7                              web\npython-3.3          Python 3.3                              web\n\n```", "```\n    $ rhc create-app myapp python-3.3\n\n    ```", "```\n$ cd myapp && ls -ap\n$ .git/.openshift/ requirements.txt   wsgi.py  setup.py \n\n```", "```\n    Flask==0.10.1\n    Jinja2==2.7.2\n    MarkupSafe==0.21\n    Werkzeug==0.9.4\n    itsdangerous==0.24\n    ```", "```\n    from setuptools import setup\n    setup(name='MyAwesomeApp',\n          version='1.0',\n          description='My Awesome OpenShift Application',\n          author='Shekhar Gulati',\n          author_email='shekhargulati84@gmail.com',\n          url='http://www.python.org/sigs/distutils-sig/',\n          install_requires=['Flask>=0.7.2', 'MarkupSafe'],\n          )\n    ```", "```\n$ rhc ssh --command 'python -V'\nPython 3.3.2\n\n```", "```\n$ rhc env-set OPENSHIFT_PYTHON_WSGI_APPLICATION=wsgi/wsgi.py\n\n```", "```\n    $ rhc create-app myapp python-3.3\n\n    ```", "```\n    $ cd myapp\n    $ rm –f setup.py\n\n    ```", "```\n    $ virtualenv venv --python=python3.3\n\n    ```", "```\n    $ . venv/bin/activate\n\n    ```", "```\n    $ pip install flask\n\n    ```", "```\n    from flask import Flask\n    app = Flask(__name__)\n\n    @app.route('/')\n    def index():\n      return 'Hello World!'\n\n    if __name__ == '__main__':\n      app.run()\n    ```", "```\n    $ python hello.py\n\n    ```", "```\n    $ pip freeze > requirements.txt\n\n    ```", "```\n    Flask==0.10.1\n    Jinja2==2.7.2\n    MarkupSafe==0.23\n    Werkzeug==0.9.4\n    distribute==0.7.3\n    itsdangerous==0.24\n\n    ```", "```\n    #!/usr/bin/env python\n    from hello import app as application\n    ```", "```\n    $ cat .gitignore \n    venv/\n\n    ```", "```\n    $ git add .\n    $ git commit -am \"Hello World Flask application\"\n    $ git push\n\n    ```", "```\n$ git push\nCounting objects: 9, done.\nWriting objects: 100% (6/6), 695 bytes, done.\nTotal 6 (delta 0), reused 0 (delta 0)\nremote: Stopping Python 3.3 cartridge\nremote: Building git ref 'master', commit 128311d\nremote: Activating virtenv\nremote: Checking for pip dependency listed in requirements.txt file..\nremote: Downloading/unpacking Flask==0.10.1 (from -r /var/lib/openshift/536f59b3e0b8cd628600138b/app-root/runtime/repo/requirements.txt (line 1))\nremote: Downloading/unpacking Jinja2==2.7.2 (from -r /var/lib/openshift/536f59b3e0b8cd628600138b/app-root/runtime/repo/requirements.txt (line 2))\n…\nremote: Successfully installed Flask Jinja2 MarkupSafe Werkzeug itsdangerous setuptools distribute\nremote: Cleaning up...\nremote: Starting Python 3.3 cartridge (Apache+mod_wsgi)\nremote: Application directory \"/\" selected as DocumentRoot\nremote: Application \"wsgi.py\" selected as default WSGI entry point\nremote: Deployment completed with status: success \n\n```", "```\nfrom setuptools import setup\n\nsetup(name='MyApp',\n      version='1.0',\n      description='My OpenShift App',\n      author='Shekhar Gulati',\n      author_email='shekhargulati84@gmail.com',\n      url='http://www.python.org/sigs/distutils-sig/',\n     install_requires=['Flask>=0.10.1'],\n     )\n```", "```\n    $ rhc create-app jobstore python-2.7 postgresql-9.2\n\n    ```", "```\n    $ cd jobstore\n    $ rm -f setup.py\n\n    ```", "```\n    venv/\n    *.pyc\n\n    ```", "```\n    $ virtualenv venv --python=python2.7\n    $ . venv/bin/activate\n\n    ```", "```\n    $ pip install flask\n\n    ```", "```\n    from flask import Flask, render_template,jsonify, request, Response\n\n    app = Flask(__name__)\n    app.config['PROPAGATE_EXCEPTIONS'] = True\n\n    @app.route('/')\n    def index():\n      return render_template('index.html')\n\n    if __name__ == '__main__':\n      app.run(debug=True)\n    ```", "```\n    $ mkdir templates\n\n    ```", "```\n    <!DOCTYPE html>\n    <html lang=\"en\">\n    <head>\n    <meta charset=\"UTF-8\">\n    <title>JobStore</title>\n    <link href=\"//cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/3.1.1/css/bootstrap.css\" rel=\"stylesheet\">\n    </head>\n    <body>\n      <div class=\"container\">\n        <div class=\"row\">\n          <h2>JobStore application expose Two REST End Points</h2>\n          <ul>\n            <li>\n              To create a Job, make a HTTP POST request to <code>/api/v1/jobs</code>\n            </li>\n            <li>\n              To view all Jobs, make a HTTP GET request to <code>/api/v1/jobs</code>\n            </li>\n          </ul>\n        </div>\n      </div>\n\n    </body>\n    </html>\n    ```", "```\n    $ python jobstore.py\n\n    ```", "```\n    $ pip install flask-sqlalchemy\n\n    ```", "```\n    from flask.ext.sqlalchemy import SQLAlchemy\n\n    app.config['SQLALCHEMY_DATABASE_URI'] = os.environ['OPENSHIFT_POSTGRESQL_DB_URL']\n    app.config['SQLALCHEMY_COMMIT_ON_TEARDOWN'] = True\n\n    db = SQLAlchemy(app)\n    ```", "```\n    class Job(db.Model):\n      __tablename__ = 'jobs'\n      id = db.Column(db.Integer(), primary_key=True)\n      title = db.Column(db.String(64), index=True, nullable=False)\n      description = db.Column(db.Text())\n      posted_at = db.Column(db.DateTime(), nullable=False, default=datetime.utcnow)\n      company = db.Column(db.String(100), nullable=False)\n\n      def __repr__(self):\n        return 'Job %s' % self.title\n\n      def to_json(self):\n        job_json = {\n          'id' : self.id,\n          'title': self.title,\n          'description' : self.description,\n          'posted_at' : self.posted_at,\n          'company':self.company\n        }\n        return job_json\n\n      @staticmethod\n      def from_json(job_json):\n        title = job_json.get('title')\n        description = job_json.get('description')\n        company = job_json.get('company')\n        return Job(title=title, description=description,company=company)\n    ```", "```\n    @app.route('/api/v1/jobs')\n    def all_jobs():\n      jobs = Job.query.all()\n      return jsonify({'jobs':[job.to_json() for job in jobs]})\n\n    @app.route('/api/v1/jobs', methods=['POST'])\n    def post_job():\n      job = Job.from_json(request.json)\n      db.session.add(job)\n      db.session.commit()\n      return jsonify(job.to_json()) , 201\n    ```", "```\n    #!/usr/bin/python\n    import os\n    virtenv = os.environ['OPENSHIFT_PYTHON_DIR'] + '/virtenv/'\n    virtualenv = os.path.join(virtenv, 'bin/activate_this.py')\n    try:\n        execfile(virtualenv, dict(__file__=virtualenv))\n    except IOError:\n        pass\n    from jobstore import app as application\n    from jobstore import *\n    db.create_all()\n    ```", "```\n    $ pip freeze > requirements.txt\n\n    ```", "```\n    $ git add .\n    $ git commit -am \"jobstore application created\"\n    $ git push\n\n    ```", "```\n    $ curl -i -X POST -H \"Content-Type: application/json\" -H \"Accept: application/json\" -d '{\"title\":\"OpenShift Evangelist\",\"description\":\"OpenShift Evangelist\",\"company\":\"Red Hat\"}' http://jobstore-{domain-name}.rhcloud.com/api/v1/jobs\n\n    ```", "```\n    $ curl http://jobstore-osbook.rhcloud.com/api/v1/jobs\n\n    ```", "```\n$ rhc create-app jobstore python-2.7 postgresql-9.2 --from-code https://github.com/OpenShift-Cookbook/chapter8-jobstore-simple.git \n\n```", "```\n    $ rhc create-app myapp python-3.3 --from-code=https://github.com/OpenShift-Cookbook/chapter8-recipe2.git\n\n    ```", "```\n    $ touch .openshift/markers/hot_deploy\n\n    ```", "```\n    $ git add –A .\n    $ git commit -am \"enabled hot deployment\"\n    $ git push\n\n    ```", "```\n    remote: Not stopping cartridge python because hot deploy is enabled\n\n    ```", "```\n    $ rhc create-app jobstore python-2.7 postgresql-9.2 --from-code https://github.com/OpenShift-Cookbook/chapter8-jobstore-simple.git\n\n    ```", "```\n    $ cd jobstore\n    $ touch .openshift/markers/force_clean_build\n\n    ```", "```\n    $ git add .\n    $ git commit –am \"enabled force_clean_build\"\n    $ git push\n\n    ```", "```\nremote: Force clean build enabled - cleaning dependencies\n\n```", "```\n    $ rhc create-app jobstore python-2.7 postgresql-9.2 --from-code https://github.com/OpenShift-Cookbook/chapter8-jobstore-simple.git\n\n    ```", "```\n    [536fdb88e0b8cd76ee000262]\\> . $VIRTUAL_ENV/bin/activate\n    (virtenv)[536fdb88e0b8cd76ee000262]\\>\n\n    ```", "```\n    (virtenv)[ 536fdb88e0b8cd76ee000262]\\> pip install yolk\n\n    ```", "```\n    (virtenv)[ 536fdb88e0b8cd76ee000262]\\> yolk -l\n    Babel           - 0.9.6        - active development (/opt/rh/python27/root/usr/lib/python2.7/site-packages)\n    Extractor       - 0.6          - active development (/opt/rh/python27/root/usr/lib/python2.7/site-packages)\n    Flask-SQLAlchemy - 1.0          - active development (/var/lib/openshift/536fdb88e0b8cd76ee000262/app-root/runtime/dependencies/python/virtenv/lib/python2.7/site-packages)\n\n    ```", "```\n    $ rhc app create myapp python-2.7\n\n    ```", "```\n    $ cd myapp\n    $ rm –f setup.py\n    $ rm –f wsgi.py\n\n    ```", "```\n    $ virtualenv venv --python=python2.7\n\n    ```", "```\n    $ . venv/bin/activate\n\n    ```", "```\n    $ pip install flask\n\n    ```", "```\n    from flask import Flask\n    app = Flask(__name__)\n    @app.route('/')\n    def index():\n      return 'Hello World!'\n\n    if __name__ == '__main__':\n      app.run()\n    ```", "```\n    $ pip install gevent\n\n    ```", "```\n    import os\n    virtenv = os.environ['OPENSHIFT_PYTHON_DIR'] + '/virtenv/'\n    virtualenv = os.path.join(virtenv, 'bin/activate_this.py')\n    try:\n        execfile(virtualenv, dict(__file__=virtualenv))\n    except IOError:\n        pass\n\n    from gevent.wsgi import WSGIServer\n    from hello import app\n\n    ip   = os.environ['OPENSHIFT_PYTHON_IP']\n    port = int(os.environ['OPENSHIFT_PYTHON_PORT'])\n\n    http_server = WSGIServer((ip, port), app)\n    http_server.serve_forever()\n    ```", "```\n    $ pip freeze > requirements.txt\n\n    ```", "```\n    Flask==0.10.1\n    Jinja2==2.7.2\n    MarkupSafe==0.23\n    Werkzeug==0.9.4\n    gevent==1.0.1\n    greenlet==0.4.2\n    itsdangerous==0.24\n    wsgiref==0.1.2\n\n    ```", "```\n    $ cat .gitignore \n    venv/\n\n    ```", "```\n    $ git add .\n    $ git commit -am \"using Gevent standalone WSGI server\"\n    $ git push\n\n    ```", "```\nremote: Starting Python 2.7 cartridge (app.py server)\n\n```", "```\n$ pip uninstall gevent greenlet\n$ pip install tornado\n\n```", "```\nfrom tornado.wsgi import WSGIContainer\nfrom tornado.httpserver import HTTPServer\nfrom tornado.ioloop import IOLoop\nfrom hello import app\n\nhttp_server = HTTPServer(WSGIContainer(app))\nip   = os.environ['OPENSHIFT_PYTHON_IP']\nport = int(os.environ['OPENSHIFT_PYTHON_PORT'])\n\nhttp_server.listen(port, ip)\nIOLoop.instance().start()\n```", "```\n    $ rhc create-app myapp python-2.7\n\n    ```", "```\n    $ cd myapp\n    $ rm –f setup.py\n\n    ```", "```\n    $ touch .gitignore\n\n    ```", "```\n    venv\n    *.pyc\n\n    ```", "```\n    $ virtualenv venv --python=python2.7\n    $ . venv/bin/activate\n\n    ```", "```\n    $ pip install flask\n\n    ```", "```\n    $ mkdir libs\n\n    ```", "```\n        def hello():\n          return 'Hello World'\n        ```", "```\n    from flask import Flask\n    import msgs.hello as hello\n    app = Flask(__name__)\n    @app.route('/')\n    def index():\n      return hello.hello()\n    if __name__ == '__main__':\n      app.run(debug=True)\n    ```", "```\n    #!/usr/bin/python\n    import os\n    virtenv = os.environ['OPENSHIFT_PYTHON_DIR'] + '/virtenv/'\n    virtualenv = os.path.join(virtenv, 'bin/activate_this.py')\n    try:\n        execfile(virtualenv, dict(__file__=virtualenv))\n    except IOError:\n        pass\n\n    from myapp import app as application \n    ```", "```\n    $ pip freeze > requirements.txt\n\n    ```", "```\n    $ git add .\n    $ git commit -am \"application with custom package\"\n    $ git push\n\n    ```", "```\nimport os,sys\nsys.path.append(os.path.join(os.getenv(\"OPENSHIFT_REPO_DIR\"), \"mydeps\"))  \n```", "```\n    $ rhc create-app myapp python-2.7\n\n    ```", "```\n    $ cd myapp\n    $ touch .htaccess\n    $ touch .htpasswd\n\n    ```", "```\n    AuthType Basic\n    AuthName \"Authentication Required\"\n    AuthUserFile \"$OPENSHIFT_REPO_DIR/.htpasswd\"\n    Require valid-user\n    ```", "```\n    $ rhc ssh --command 'echo $OPENSHIFT_REPO_DIR'\n\n    ```", "```\n    admin:$apr1$EVxfKxv/$2BIOIAPHOZiyx4k52b5jT1ewdfg\n\n    ```", "```\n    $ git add .\n    $ git commit -am \"added .htaccess and .htpasswd\"\n    $ git push\n\n    ```"]