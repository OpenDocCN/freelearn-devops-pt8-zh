["```\nnode -v\n```", "```\nexports.helloWorldLocal = (req, res) => {\n    res.send('Hello, Functions Framework from a local machine');\n};\n```", "```\n{\n    \"name\": \"lab01_FF\",\n    \"version\": \"1.0.0\",\n    \"description\": \"Example use of the Functions Framework (FaaS)\",\n    \"main\": \"index.js\",\n    \"scripts\": {\n    \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\"\n    },\n    \"author\": \"Rich Rose\",\n    \"license\": \"ISC\"\n}\n```", "```\nnpm install @google-cloud/functions-framework\n```", "```\n{\n    \"name\": \"lab01_FF\",\n    \"version\": \"1.0.0\",\n    \"description\": \"Example use of the Functions Framework (FaaS)\",\n    \"main\": \"index.js\",\n    \"scripts\": {\n        \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\"\n    },\n    \"author\": \"Rich Rose\",\n    \"license\": \"ISC\",\n    \"dependencies\": {\n        \"@google-cloud/functions-framework\": \"^1.1.1\"\n    }\n}\n```", "```\n{\n    \"name\": \"lab01_FF\",\n    \"version\": \"1.0.0\",\n    \"description\": \"Example use of the Functions Framework (FaaS)\",\n    \"main\": \"index.js\",\n    \"scripts\": {\n        \"start\": \"functions-framework --target=helloWorldLocal\"\n        \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\"\n    },\n    \"author\": \"Rich Rose\",\n    \"license\": \"ISC\",\n    \"dependencies\": {\n        \"@google-cloud/functions-framework\": \"^1.1.1\"\n    }\n}\n```", "```\nexports.helloWorldCloud = (req, res) => {\n    res.send('Hello, Functions Framework from a Google Cloud project');\n};\n```", "```\ngcloud functions deploy helloWorldCloud --runtime nodejs10 --trigger-http --region us-central1\n```", "```\n1\\. /**\n2\\. * Responds to any HTTP request.\n3\\. *\n4\\. * @param {!express:Request} req HTTP request context.\n5\\. * @param {!express:Response} res HTTP response context.\n6\\. */\n7\\. exports.helloWorld = (req, res) => {\n8\\.     let message = req.query.message || req.body.message || 'Hello World!';\n9\\.     res.status(200).send(message);\n10.};\n```", "```\ndef hello_world(request):\n\"\"\" Responds to any HTTP request.\n    Args:\n        request (flask.Request): HTTP request object.\n        Returns:\n    The response text or any set of values that can be turned into a\n    Response object using\n    `make_response\n    <http://flask.pocoo.org/docs/1.0/api/#flask.Flask.make_response>`.\n\"\"\"\nrequest_json = request.get_json()\nif request.args and 'message' in request.args:\n    return request.args.get('message')\nelif request_json and 'message' in request_json:\n    return request_json['message']\nelse:\n    return f'Hello World!'\n```", "```\n// Package p contains an HTTP Cloud Function.\npackage p\n    import (\n        \"encoding/json\"\n        \"fmt\"\n        \"html\"\n    \"net/http\"\n)\n// HelloWorld prints the JSON encoded \"message\" field in the body\n// of the request or \"Hello, World!\" if there isn't one.\nfunc HelloWorld(w http.ResponseWriter, r *http.Request) {\n    var d struct {\n        Message string 'json:\"message\"'\n    }\n    if err := json.NewDecoder(r.Body).Decode(&d); err != nil {\n        fmt.Fprint(w, \"Hello World!\")\n        return\n    }\n    if d.Message == \"\" {\n        fmt.Fprint(w, \"Hello World!\")\n        return\n    }\n    fmt.Fprint(w, html.EscapeString(d.Message))\n}\n```", "```\nhttps://[REGION]-[PROJECT].cloudfunctions.net/[CLOUD-FUNCTION]\n```", "```\nhttps://[REGION]-[PROJECT].cloudfunctions.net/[CLOUD-FUNCTION]?message=Yo%20Gabba %20Gabba!\n```"]