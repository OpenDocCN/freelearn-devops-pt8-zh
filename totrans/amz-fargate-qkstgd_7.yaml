- en: Using Amazon ECS CLI
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用亚马逊 ECS CLI
- en: Amazon ECS **Command Line Interface** (**CLI**) is a command-line tool used
    to create, update, and monitor ECS clusters and tasks. Amazon ECS CLI supports
    the Fargate launch type. To create a container application with ECS CLI, Docker
    Compose (v1 or v2) is required. In this chapter, we shall use ECS CLI to launch
    an ECS cluster of the Fargate launch type in Windows PowerShell.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 亚马逊 ECS **命令行界面**（**CLI**）是一个命令行工具，用于创建、更新和监控 ECS 集群和任务。亚马逊 ECS CLI 支持 Fargate
    启动类型。要使用 ECS CLI 创建容器应用程序，需要 Docker Compose（v1 或 v2）。在本章中，我们将使用 ECS CLI 在 Windows
    PowerShell 中启动 Fargate 启动类型的 ECS 集群。
- en: 'In this chapter, we will learn about the following:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将学习以下内容：
- en: Setting up the environment
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设置环境
- en: Installing ECS CLI
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装 ECS CLI
- en: Installing AWS Tools for Windows PowerShell
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装 AWS 工具 for Windows PowerShell
- en: Configuring ECS CLI
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置 ECS CLI
- en: Setting up prerequisites for Fargate
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设置 Fargate 的前置条件
- en: Registering the task execution policy
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 注册任务执行策略
- en: Creating an ECS cluster
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建 ECS 集群
- en: Creating a security group
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建安全组
- en: Granting security group ingress
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 授予安全组入站权限
- en: Creating a compose file
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建 Compose 文件
- en: Configuring ECS specific parameters
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置 ECS 特定参数
- en: Deploying the compose file to the cluster
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 部署 Compose 文件到集群
- en: Listing the running containers on the cluster
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 列出集群中正在运行的容器
- en: Listing the container logs
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 列出容器日志
- en: Scaling the tasks on the cluster
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 扩展集群中的任务
- en: Accessing the WordPress service
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 访问 WordPress 服务
- en: Deleting the service and the cluster
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 删除服务和集群
- en: Setting up the environment
  id: totrans-20
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置环境
- en: 'If PowerShell is not already installed, download and install PowerShell 3.0
    or a later version. Windows Management Framework 3.0 includes PowerShell 3.0:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 如果尚未安装 PowerShell，请下载并安装 PowerShell 3.0 或更高版本。Windows 管理框架 3.0 包含 PowerShell
    3.0：
- en: Log in to PowerShell as an Administrator for which right-click on PowerShell
    application, and select Run as administrator
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以管理员身份登录 PowerShell，右键单击 PowerShell 应用程序，选择“以管理员身份运行”
- en: Verify that the version is 3.0 with the `get-host` command
  id: totrans-23
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 `get-host` 命令验证版本是否为 3.0
- en: 'Enable script execution with the following command, which allows all user-created
    scripts to run, and all scripts downloaded from the internet would need to be
    signed:'
  id: totrans-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令启用脚本执行，它允许所有用户创建的脚本运行，且所有从互联网上下载的脚本都需要签名：
- en: '[PRE0]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'We also need to obtain the AWS Security credentials represented with an Access
    Key, which consists of an Access Key ID and Secret Access Key:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还需要获取 AWS 安全凭证，表示为访问密钥，由访问密钥 ID 和秘密访问密钥组成：
- en: To obtain the security credentials, select My Security Credentials from the
    account dropdown.
  id: totrans-27
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要获取安全凭证，请从帐户下拉菜单中选择“我的安全凭证”。
- en: In the confirmation dialog, click on Continue to Security Credentials.
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在确认对话框中，单击“继续到安全凭证”。
- en: The Your Security Credentials page is displayed; select Access keys. Security
    credentials only display the Access Key ID and not the Secret Access Key. Unless
    the Access Key ID and the Secret Access Key were recorded earlier, create a new
    access key with Create New Access Key.
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 显示“您的安全凭证”页面；选择“访问密钥”。安全凭证只显示访问密钥 ID，而不显示秘密访问密钥。除非之前已记录访问密钥 ID 和秘密访问密钥，否则请通过“创建新访问密钥”创建一个新的访问密钥。
- en: A Create Access Key dialog indicates that the access key has been created.
  id: totrans-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: “创建访问密钥”对话框指示访问密钥已创建。
- en: Click on the Show Access Key link.
  id: totrans-31
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击“显示访问密钥”链接。
- en: Copy the Access Key ID and Secret Access Key. Set the environment variables `AWS_ACCESS_KEY_ID`
    and `AWS_SECRET_KEY`.
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 复制访问密钥 ID 和秘密访问密钥。设置环境变量 `AWS_ACCESS_KEY_ID` 和 `AWS_SECRET_KEY`。
- en: Installing ECS CLI
  id: totrans-33
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装 ECS CLI
- en: 'To install ECS CLI on PowerShell, first run PowerShell as an administrator
    by right-clicking on Windows PowerShell and selecting Run as administrator:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 要在 PowerShell 上安装 ECS CLI，首先以管理员身份运行 PowerShell，方法是右键单击 Windows PowerShell，选择“以管理员身份运行”：
- en: 'Subsequently, run the following command to create a new item of type directory
    at the specified path:'
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 随后，运行以下命令以在指定路径创建一个新的目录类型项：
- en: '[PRE1]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Download and install ecs-cli `ecs-cli-windows-amd64-latest.exe` to application
    `ecs-cli.exe` in directory `C:\Program Files\Amazon\ECSCLI\`.
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下载并安装 ecs-cli `ecs-cli-windows-amd64-latest.exe` 到目录 `C:\Program Files\Amazon\ECSCLI\`
    下的应用程序 `ecs-cli.exe`。
- en: '[PRE2]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Add `C:\Program Files\Amazon\ECSCLI` to the `PATH` environment variable. Output
    the `ecs-cli` version:'
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将 `C:\Program Files\Amazon\ECSCLI` 添加到 `PATH` 环境变量中。输出 `ecs-cli` 版本：
- en: '[PRE3]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'The preceding commands run in PowerShell, as shown in the following screenshot:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 上述命令在 PowerShell 中运行，如下所示：
- en: '![](img/c56eaf03-de53-4f44-8bb4-67a778b0f6c8.png)'
  id: totrans-42
  prefs: []
  type: TYPE_IMG
  zh: '![](img/c56eaf03-de53-4f44-8bb4-67a778b0f6c8.png)'
- en: Installing AWS Tools for Windows PowerShell
  id: totrans-43
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装 AWS Tools for Windows PowerShell
- en: 'Next, install AWS Tools for Windows PowerShell, which is used to manage AWS
    services, including ECS from PowerShell:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，安装 AWS Tools for Windows PowerShell，用于管理 AWS 服务，包括通过 PowerShell 管理 ECS：
- en: Download the MSI Installer file (`AWSToolsAndSDKForNet_sdk-3.3.231.0_ps-3.3.225.1_tk-1.14.0.1`)
    for AWS Tools for Windows PowerShell from [https://aws.amazon.com/powershell/](https://aws.amazon.com/powershell/).
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从 [https://aws.amazon.com/powershell/](https://aws.amazon.com/powershell/) 下载
    AWS Tools for Windows PowerShell 的 MSI 安装文件（`AWSToolsAndSDKForNet_sdk-3.3.231.0_ps-3.3.225.1_tk-1.14.0.1`）。
- en: Double-click on the MSI Installer to launch the AWS Tools for Windows Setup
    wizard. Click on Next in the Welcome screen.
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 双击 MSI 安装程序启动 AWS Tools for Windows 安装向导。在欢迎屏幕中点击“下一步”。
- en: In End-User License Agreement, accept the agreement and click on Next.
  id: totrans-47
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在最终用户许可协议中，接受协议并点击“下一步”。
- en: In Custom Setup, select the default installation Location and click on Next.
  id: totrans-48
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在“自定义设置”中，选择默认安装位置并点击“下一步”。
- en: In Read to install AWS Tools for Windows, click on Install. AWS Tools for Windows
    starts to get installed.
  id: totrans-49
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在“准备安装 AWS Tools for Windows”中，点击“安装”。AWS Tools for Windows 开始安装。
- en: When the AWS Tools for Windows installation has completed, click on Finish.
  id: totrans-50
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当 AWS Tools for Windows 安装完成后，点击“完成”。
- en: Configuring ECS CLI
  id: totrans-51
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 配置 ECS CLI
- en: 'Configuring the ECS CLI involves the following two configurations:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 配置 ECS CLI 包括以下两个配置：
- en: Configure an ECS cluster with the Fargate launch type
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置具有 Fargate 启动类型的 ECS 集群
- en: Configure an ECS CLI profile
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置 ECS CLI 配置文件
- en: 'Next, we shall discuss each of these configurations. The syntax to configure
    a cluster is as follows:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将讨论这些配置中的每一个。配置集群的语法如下：
- en: '[PRE4]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'The different command parameters in the `ecs-cli` configure command are discussed
    in this table:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: '`ecs-cli` 配置命令中的不同命令参数在下表中讨论：'
- en: '| **Command parameter** | **Description** | **Value to set** |'
  id: totrans-58
  prefs: []
  type: TYPE_TB
  zh: '| **命令参数** | **描述** | **设置的值** |'
- en: '| `--cluster` | Name of an existing ECS cluster or a new cluster to create
    | `hello-world` |'
  id: totrans-59
  prefs: []
  type: TYPE_TB
  zh: '| `--cluster` | 现有 ECS 集群的名称或要创建的新集群名称 | `hello-world` |'
- en: '| `--region` | AWS region | `us-east-1` |'
  id: totrans-60
  prefs: []
  type: TYPE_TB
  zh: '| `--region` | AWS 区域 | `us-east-1` |'
- en: '| `--default-launch-type` | Launch type | `FARGATE` |'
  id: totrans-61
  prefs: []
  type: TYPE_TB
  zh: '| `--default-launch-type` | 启动类型 | `FARGATE` |'
- en: '| `--config-name` | Configuration name | `hello-world` |'
  id: totrans-62
  prefs: []
  type: TYPE_TB
  zh: '| `--config-name` | 配置名称 | `hello-world` |'
- en: 'Run the following command in PowerShell to configure an ECS cluster:'
  id: totrans-63
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 PowerShell 中运行以下命令以配置 ECS 集群：
- en: '[PRE5]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Create a directory, `C:\PowerShell`, for PowerShell and run the preceding command
    from the directory. As the command output indicates, the ECS CLI cluster configuration
    `hello-world` gets saved:'
  id: totrans-65
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个目录，`C:\PowerShell`，用于 PowerShell，并从该目录运行前面的命令。正如命令输出所示，ECS CLI 集群配置 `hello-world`
    被保存：
- en: '[PRE6]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Setting up a CLI profile
  id: totrans-67
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置 CLI 配置文件
- en: 'The command syntax to configure an ECS CLI profile is as follows:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 配置 ECS CLI 配置文件的命令语法如下：
- en: '[PRE7]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'The different command parameters in the `ecs-cli` configure profile command
    are discussed in this table:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: '`ecs-cli` 配置文件命令中的不同命令参数在下表中讨论：'
- en: '| **Command parameter** | **Description** | **Value to set** |'
  id: totrans-71
  prefs: []
  type: TYPE_TB
  zh: '| **命令参数** | **描述** | **设置的值** |'
- en: '| `--profile` | Name of an existing ECS cluster or a new cluster to create
    | `hello-world` |'
  id: totrans-72
  prefs: []
  type: TYPE_TB
  zh: '| `--profile` | 现有 ECS 集群的名称或要创建的新集群名称 | `hello-world` |'
- en: '| `--access-key` | AWS access key ID | Value would be different for different
    users |'
  id: totrans-73
  prefs: []
  type: TYPE_TB
  zh: '| `--access-key` | AWS 访问密钥 ID | 不同用户的值不同 |'
- en: '| `--secret-key` | Secret access key | Value would be different for different
    users |'
  id: totrans-74
  prefs: []
  type: TYPE_TB
  zh: '| `--secret-key` | 密钥访问密钥 | 不同用户的值不同 |'
- en: 'Create an ECS CLI profile, `hello-world`, in which the variables need to be
    substituted with the `AWS Access Key ID` and `Secret Access Key`, which would
    be different for different users:'
  id: totrans-75
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建 ECS CLI 配置文件 `hello-world`，其中需要用 `AWS 访问密钥 ID` 和 `密钥访问密钥` 替换变量，这些密钥对于不同用户是不同的：
- en: '[PRE8]'
  id: totrans-76
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'As the output from the command indicates, an ECS CLI profile gets saved:'
  id: totrans-77
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 正如命令输出所示，ECS CLI 配置文件被保存：
- en: '[PRE9]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'As an alternative to creating a `hello-world` profile (or some other profile
    name), a default ECS profile may be created using the `-StoreAs` default parameter:'
  id: totrans-79
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 作为创建 `hello-world` 配置文件（或其他配置文件名）的替代，可以使用 `-StoreAs` 默认参数创建一个默认的 ECS 配置文件：
- en: '[PRE10]'
  id: totrans-80
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Setting up prerequisites for Fargate
  id: totrans-81
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置 Fargate 的前置条件
- en: 'In addition to configuring an ECS CLI profile, we need to set up the following
    prerequisites to create an ECS cluster with the FARGATE launch type:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 除了配置 ECS CLI 配置文件外，我们还需要设置以下前置条件，以便使用 FARGATE 启动类型创建 ECS 集群：
- en: Create a task execution role
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建任务执行角色
- en: Register the task execution policy
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 注册任务执行策略
- en: Create the task execution role
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建任务执行角色
- en: 'A task execution role is required to be created for a Fargate task to be able
    to download a Docker image and send and save container logs in CloudWatch. Create
    an IAM policy, `execution-assume-role.json`, in the `C:\PowerShell\` directory,
    and copy and save the following JSON listing to the policy file:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 为了让 Fargate 任务能够下载 Docker 镜像并在 CloudWatch 中发送和保存容器日志，需要创建一个任务执行角色。请在 `C:\PowerShell\`
    目录中创建一个 IAM 策略文件 `execution-assume-role.json`，并将以下 JSON 内容复制并保存到策略文件中：
- en: '[PRE11]'
  id: totrans-87
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Create the task execution role with the following command in PowerShell:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 使用以下命令在 PowerShell 中创建任务执行角色：
- en: '[PRE12]'
  id: totrans-89
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'As the output from the command indicates, a task execution role gets created:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 如命令输出所示，创建了一个任务执行角色：
- en: '[PRE13]'
  id: totrans-91
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Registering the task execution policy
  id: totrans-92
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 注册任务执行策略
- en: 'Next, register the task execution policy with the following command in PowerShell:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，使用以下命令在 PowerShell 中注册任务执行策略：
- en: '[PRE14]'
  id: totrans-94
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: The preceding command does not generate any output, and the task execution policy
    gets registered.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 前面的命令不会产生任何输出，任务执行策略会被注册。
- en: Creating an ECS cluster
  id: totrans-96
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建 ECS 集群
- en: 'Having configured the prerequisites, next we shall create an ECS Fargate cluster.
    Run the following command in PowerShell to create a cluster:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 配置好前提条件后，接下来我们将创建一个 ECS Fargate 集群。在 PowerShell 中运行以下命令以创建集群：
- en: '[PRE15]'
  id: totrans-98
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'As the command output indicates, a cluster gets created using the cluster configuration
    set up earlier. A VPC and two subnets also get created:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 如命令输出所示，使用先前设置的集群配置创建了集群，并创建了一个 VPC 和两个子网：
- en: '[PRE16]'
  id: totrans-100
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'Access the ECS Console in a web browser and the `hello-world` cluster gets
    listed, as shown here:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 在网页浏览器中访问 ECS 控制台，`hello-world` 集群会列出，如下所示：
- en: '![](img/c515467a-8a5e-4310-8a96-3e0d9820aa45.png)'
  id: totrans-102
  prefs: []
  type: TYPE_IMG
  zh: '![](img/c515467a-8a5e-4310-8a96-3e0d9820aa45.png)'
- en: Creating a security group
  id: totrans-103
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建安全组
- en: 'Next, create a Security group using the VPC created in the previous section
    on creating a cluster. The AWS region is required to be specified in the following
    command, if not configured in persisted/shell defaults:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，使用在前一节创建集群时创建的 VPC 来创建一个安全组。如果没有在持久化/外壳默认设置中配置 AWS 区域，则需要在以下命令中指定区域：
- en: '[PRE17]'
  id: totrans-105
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'List the EC2 security group with the following `Get-EC2SecurityGroup` command:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 使用以下 `Get-EC2SecurityGroup` 命令列出 EC2 安全组：
- en: '[PRE18]'
  id: totrans-107
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'The EC2 security group gets listed, as shown here:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: EC2 安全组列出，如下所示：
- en: '![](img/15a18143-b901-4d47-ad26-8b38ae6bce87.png)'
  id: totrans-109
  prefs: []
  type: TYPE_IMG
  zh: '![](img/15a18143-b901-4d47-ad26-8b38ae6bce87.png)'
- en: 'If required, the EC2 security group may be removed with the following command:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 如有需要，可以使用以下命令删除 EC2 安全组：
- en: '[PRE19]'
  id: totrans-111
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: Granting security group Ingress
  id: totrans-112
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 授予安全组 Ingress 权限
- en: 'Next, add a security group rule to allow inbound access on port `80` with the
    `Grant-EC2SecurityGroupIngress` cmdlet, using the following commands run in the
    sequence listed:'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，使用 `Grant-EC2SecurityGroupIngress` cmdlet 添加一个安全组规则，允许端口 `80` 上的入站访问，按照列出的顺序运行以下命令：
- en: '[PRE20]'
  id: totrans-114
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'Subsequently, run the `Get-EC2SecurityGroup` cmdlet again and, as the output
    here indicates, the Ingress permissions get set on the EC2 security group:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 随后，再次运行 `Get-EC2SecurityGroup` cmdlet，如此处的输出所示，Ingress 权限已设置到 EC2 安全组：
- en: '![](img/497f57e0-9984-419c-a153-97895e1aef83.png)'
  id: totrans-116
  prefs: []
  type: TYPE_IMG
  zh: '![](img/497f57e0-9984-419c-a153-97895e1aef83.png)'
- en: 'We shall be creating an ECS task for WordPress only, but if a MySQL database
    is also to be configured in the same task, we would also need to add an ingress
    rule for port `3306`, which is exposed by the MySQL database. Run the following
    commands in the sequence listed to add ingress for port `3306`:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将仅为 WordPress 创建一个 ECS 任务，但如果同一任务中还需要配置 MySQL 数据库，则还需要为 MySQL 数据库暴露的端口 `3306`
    添加一个 Ingress 规则。按以下顺序运行命令，以为端口 `3306` 添加 Ingress：
- en: '[PRE21]'
  id: totrans-118
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'Subsequently, run the `Get-EC2SecurityGroup` command. As the output here shows,
    ingress for port `3306` also gets added:'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 随后，再次运行 `Get-EC2SecurityGroup` 命令。如输出所示，端口 `3306` 的 Ingress 也已添加：
- en: '![](img/4369591a-a470-4e9a-9bd0-9376ba10c7ce.png)'
  id: totrans-120
  prefs: []
  type: TYPE_IMG
  zh: '![](img/4369591a-a470-4e9a-9bd0-9376ba10c7ce.png)'
- en: Creating a compose file
  id: totrans-121
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建 Compose 文件
- en: 'ECS CLI supports Docker compose versions 1 and 2, and we have used version
    2 for the example compose file for WordPress. Create a `docker-compose.yml` file in
    the `C:/PowerShell` directory, and copy the following listing to the file:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: ECS CLI 支持 Docker Compose 版本 1 和 2，在这个 WordPress 示例 Compose 文件中我们使用的是版本 2。在
    `C:/PowerShell` 目录中创建一个 `docker-compose.yml` 文件，并将以下内容复制到该文件中：
- en: '[PRE22]'
  id: totrans-123
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: The Docker compose file specifies a `wordpress` service based on the `wordpress` Docker
    image and exposes port `80`. CloudWatch logging is configured using the `awslogs`
    driver, which is the only supported driver for the Fargate launch type.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: Docker Compose 文件指定了一个基于 `wordpress` Docker 镜像的 `wordpress` 服务，并暴露端口 `80`。CloudWatch
    日志使用 `awslogs` 驱动程序进行配置，这是 Fargate 启动类型唯一支持的驱动程序。
- en: Configuring ECS specific parameters
  id: totrans-125
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 配置 ECS 特定参数
- en: 'We also need to create an **ECS specific parameters** file, `ecs-params.yml`,
    which defines resource (CPU and memory) settings for the task to create in addition
    to setting the Network Mode as `awsvpc`, which is the only supported Network Mode
    for the Fargate launch type. The run parameters include the network configuration
    for subnets, security groups, and setting the `Assign public IP` option for the
    task to `ENABLED`. The subnets are obtained from the output of the `ecs-cli up`
    command. The security group is obtained from the output of the `Get-EC2SecurityGroup
    -Region "us-east-1" -GroupId $groupid` command, as listed earlier:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还需要创建一个 **ECS 特定参数** 文件 `ecs-params.yml`，它定义了任务创建所需的资源（CPU 和内存）设置，并设置网络模式为
    `awsvpc`，这是 Fargate 启动类型唯一支持的网络模式。运行参数包括子网、安全组的网络配置，并将任务的 `Assign public IP` 选项设置为
    `ENABLED`。子网从 `ecs-cli up` 命令的输出中获取。安全组从 `Get-EC2SecurityGroup -Region "us-east-1"
    -GroupId $groupid` 命令的输出中获取，如前所述：
- en: '[PRE23]'
  id: totrans-127
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: Deploying the compose file to the cluster
  id: totrans-128
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将 Compose 文件部署到集群
- en: 'The `ecs-cli compose service up` command deploys a Docker compose file to a
    cluster. The command may optionally be parameterized with the command options
    discussed in this table:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: '`ecs-cli compose service up` 命令将 Docker Compose 文件部署到集群。该命令可以通过本表中讨论的命令选项进行参数化：'
- en: '| **Parameter** | **Description** | **Default value** |'
  id: totrans-130
  prefs: []
  type: TYPE_TB
  zh: '| **参数** | **描述** | **默认值** |'
- en: '| `--project-name` | Project name | The current directory |'
  id: totrans-131
  prefs: []
  type: TYPE_TB
  zh: '| `--project-name` | 项目名称 | 当前目录 |'
- en: '| `--ecs-params` | ECS params file to use | The `ecs-params.yml` in the current
    directory |'
  id: totrans-132
  prefs: []
  type: TYPE_TB
  zh: '| `--ecs-params` | 使用的 ECS 参数文件 | 当前目录中的 `ecs-params.yml` 文件 |'
- en: '| `--create-log-groups` | Creates CloudWatch Log groups for container logs
    |  |'
  id: totrans-133
  prefs: []
  type: TYPE_TB
  zh: '| `--create-log-groups` | 为容器日志创建 CloudWatch 日志组 |  |'
- en: '| `--file` | Docker compose file | The `docker-compose.yml` file in the current
    directory |'
  id: totrans-134
  prefs: []
  type: TYPE_TB
  zh: '| `--file` | Docker Compose 文件 | 当前目录中的 `docker-compose.yml` 文件 |'
- en: 'Run the following command in which the `--project-name` and `--create-log-groups`
    options are used. We don’t need to use the other options, as the required files
    are in the current directory:'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 运行以下命令，其中使用了 `--project-name` 和 `--create-log-groups` 选项。我们不需要使用其他选项，因为所需的文件都在当前目录中：
- en: '[PRE24]'
  id: totrans-136
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'The Docker compose file gets deployed on the `hello-world` cluster. The output
    from the command is shown here:'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: Docker Compose 文件已部署到 `hello-world` 集群。命令的输出如下所示：
- en: '![](img/b6142489-39f8-4469-b257-0c1d7c2bb37d.png)'
  id: totrans-138
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b6142489-39f8-4469-b257-0c1d7c2bb37d.png)'
- en: 'The `hello-world` cluster lists one running task, as shown here:'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: '`hello-world` 集群列出了一个正在运行的任务，如下所示：'
- en: '![](img/aaac7d42-ef41-4d3c-bec3-9a5f8e52e863.png)'
  id: totrans-140
  prefs: []
  type: TYPE_IMG
  zh: '![](img/aaac7d42-ef41-4d3c-bec3-9a5f8e52e863.png)'
- en: 'Click on the `hello-world` cluster link to display its details. The service
    created is listed in the Services tab. Click on the service link as shown here
    to list the details:'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 点击 `hello-world` 集群链接以显示其详细信息。创建的服务会列在“服务”选项卡中。点击服务链接，如下所示，以列出其详细信息：
- en: '![](img/ea9cdc91-87ff-4676-82ce-7ea9e107cffc.png)'
  id: totrans-142
  prefs: []
  type: TYPE_IMG
  zh: '![](img/ea9cdc91-87ff-4676-82ce-7ea9e107cffc.png)'
- en: 'The service Details, which include the name of the Cluster name, Status, Task
    definition, Launch type, Platform version, Desired count, Pending count, and Running
    count get displayed, as shown here:'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 服务详情包括集群名称、状态、任务定义、启动类型、平台版本、期望数量、待处理数量和运行数量，如下所示：
- en: '![](img/3ad86abb-a2f9-429b-9d48-23faa595e7c9.png)'
  id: totrans-144
  prefs: []
  type: TYPE_IMG
  zh: '![](img/3ad86abb-a2f9-429b-9d48-23faa595e7c9.png)'
- en: 'To find the task details, select the Tasks tab and click on the task link as
    shown here:'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 要查找任务的详细信息，选择“任务”选项卡并点击任务链接，如下所示：
- en: '![](img/3bb4f32d-30a1-4b46-aac2-eb383fc490a9.png)'
  id: totrans-146
  prefs: []
  type: TYPE_IMG
  zh: '![](img/3bb4f32d-30a1-4b46-aac2-eb383fc490a9.png)'
- en: 'The task details get displayed, as shown in the following screenshot. The Public
    IP at which the task may be accessed is also listed:'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 任务的详细信息会显示，如下图所示。还列出了任务可访问的公共 IP：
- en: '![](img/b41d6f20-e96c-4347-9e62-0bd36b9c7b69.png)'
  id: totrans-148
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b41d6f20-e96c-4347-9e62-0bd36b9c7b69.png)'
- en: 'Scroll down for the Containers. The `wordpress` container gets listed, as shown
    in the following screenshot:'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 向下滚动以查看容器。`wordpress` 容器会列出，如下图所示：
- en: '![](img/fe723d13-e502-4e92-9a03-31f0609c7c65.png)'
  id: totrans-150
  prefs: []
  type: TYPE_IMG
  zh: '![](img/fe723d13-e502-4e92-9a03-31f0609c7c65.png)'
- en: 'Because we configured logs, Log Configuration is displayed in the container
    details, as shown here:'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们配置了日志，容器详情中显示了日志配置，如下所示：
- en: '![](img/bad4a640-9e11-4f1f-be41-dea8bcd09db0.png)'
  id: totrans-152
  prefs: []
  type: TYPE_IMG
  zh: '![](img/bad4a640-9e11-4f1f-be41-dea8bcd09db0.png)'
- en: 'Click on the View logs in CloudWatch link to display the CloudWatch logs, as
    shown in the following screenshot:'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 点击查看 CloudWatch 日志的链接，以显示 CloudWatch 日志，如下截图所示：
- en: '![](img/4b585343-785d-431b-b66d-257ebf0a51ae.png)'
  id: totrans-154
  prefs: []
  type: TYPE_IMG
  zh: '![](img/4b585343-785d-431b-b66d-257ebf0a51ae.png)'
- en: Listing the running containers on the cluster
  id: totrans-155
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 列出集群中正在运行的容器
- en: 'To list the running containers on the cluster, run the following command:'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 要列出集群中正在运行的容器，请运行以下命令：
- en: '[PRE25]'
  id: totrans-157
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'The one Docker container gets listed as shown in the following screenshot.
    The container''s State, Ports, and Task Definition also get listed:'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 如下截图所示，列出了一个 Docker 容器。容器的状态、端口和任务定义也被列出：
- en: '![](img/ce4c5985-0408-426b-9a13-0f78997e057a.png)'
  id: totrans-159
  prefs: []
  type: TYPE_IMG
  zh: '![](img/ce4c5985-0408-426b-9a13-0f78997e057a.png)'
- en: Listing the container logs
  id: totrans-160
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 列出容器日志
- en: 'To list the container logs, copy the task ID (the task ID is the container
    name `substring` before the `/`) from the container name, and run the following
    command:'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 要列出容器日志，请从容器名称中复制任务 ID（任务 ID 是容器名称中 `/` 前的子字符串），然后运行以下命令：
- en: '[PRE26]'
  id: totrans-162
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'The container logs get displayed as shown in the following screenshot:'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 容器日志将显示，如下截图所示：
- en: '![](img/a8a7e459-fc38-4ccf-aaf1-c2cbdb472190.png)'
  id: totrans-164
  prefs: []
  type: TYPE_IMG
  zh: '![](img/a8a7e459-fc38-4ccf-aaf1-c2cbdb472190.png)'
- en: Scaling the tasks on the cluster
  id: totrans-165
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 扩展集群中的任务
- en: 'To scale the cluster to two tasks, as an example, run the following command:'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 要将集群扩展到两个任务，例如，运行以下命令：
- en: '[PRE27]'
  id: totrans-167
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'As the output here indicates, the `desiredCount` and `runningCount` get set
    to `2`:'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 如输出所示，`desiredCount` 和 `runningCount` 被设置为 `2`：
- en: '![](img/1f876b9b-f14c-4466-9394-b4f9842bf202.png)'
  id: totrans-169
  prefs: []
  type: TYPE_IMG
  zh: '![](img/1f876b9b-f14c-4466-9394-b4f9842bf202.png)'
- en: 'Subsequently, list the running tasks:'
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 随后，列出正在运行的任务：
- en: '[PRE28]'
  id: totrans-171
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'Two tasks get listed, as shown here:'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 如下所示，列出了两个任务：
- en: '![](img/c87aaa2e-d6c8-4468-8315-a5d0874bf336.png)'
  id: totrans-173
  prefs: []
  type: TYPE_IMG
  zh: '![](img/c87aaa2e-d6c8-4468-8315-a5d0874bf336.png)'
- en: 'The Running tasks in the `hello-world` cluster are also listed as 2, as shown
    in the following screenshot. Click on the `hello-world` cluster link:'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 如下截图所示，`hello-world` 集群中的运行任务也列出了 2 个。点击 `hello-world` 集群链接：
- en: '![](img/425c71b8-0787-4812-8a79-33e591f5aec8.png)'
  id: totrans-175
  prefs: []
  type: TYPE_IMG
  zh: '![](img/425c71b8-0787-4812-8a79-33e591f5aec8.png)'
- en: 'Select the Tasks tab and two tasks get listed, as shown in the following screenshot:'
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 选择任务标签，列出了两个任务，如下截图所示：
- en: '![](img/f0940f4a-a263-464b-bf74-3d66958b76e6.png)'
  id: totrans-177
  prefs: []
  type: TYPE_IMG
  zh: '![](img/f0940f4a-a263-464b-bf74-3d66958b76e6.png)'
- en: Accessing the WordPress service
  id: totrans-178
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 访问 WordPress 服务
- en: 'To access the WordPress service, open the public IP of one of the tasks in
    a web browser. Select a language and click on Continue. The welcome page for the
    WordPress application gets displayed as shown in the following screenshot. Click
    on the Let’s go! button:'
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 要访问 WordPress 服务，请在浏览器中打开其中一个任务的公共 IP。选择语言并点击继续。WordPress 应用的欢迎页面将如截图所示显示。点击“Let’s
    go!”按钮：
- en: '![](img/9946534d-7ee8-4480-b98d-526478eae154.png)'
  id: totrans-180
  prefs: []
  type: TYPE_IMG
  zh: '![](img/9946534d-7ee8-4480-b98d-526478eae154.png)'
- en: Specify the database connection details and click on Submit to access the WordPress
    dashboard. The connection details shown below may need to be modified from the
    default settings.
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 指定数据库连接详情并点击提交，访问 WordPress 仪表盘。下面显示的连接详情可能需要从默认设置进行修改。
- en: Deleting the service and the cluster
  id: totrans-182
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 删除服务和集群
- en: 'To delete the service and the associated tasks, run the following command:'
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 要删除服务和相关任务，请运行以下命令：
- en: '[PRE29]'
  id: totrans-184
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'As the output shown here indicates, the running count and desired count for
    the tasks gets set to 0, and the `hello-world` service gets deleted. The service
    has to be scaled down to 0 before deleting the service:'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 如输出所示，任务的运行数量和期望数量被设置为 0，`hello-world` 服务被删除。服务必须先缩减至 0，然后才能删除服务：
- en: '![](img/f0ae1964-d83d-4ec7-977d-ed11bcd95371.png)'
  id: totrans-186
  prefs: []
  type: TYPE_IMG
  zh: '![](img/f0ae1964-d83d-4ec7-977d-ed11bcd95371.png)'
- en: 'Delete the cluster with the following command:'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 使用以下命令删除集群：
- en: '[PRE30]'
  id: totrans-188
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'Select y at the command prompt Are you sure you want to delete your cluster?.
    The `hello-world` cluster and all associated resources get deleted. If the cluster
    does not get deleted due to timeout, or due to some of the resources not getting
    deleted as shown in the following screenshot, run the preceding command again:'
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 在命令提示符下选择 y 确认是否删除集群。`hello-world` 集群及所有相关资源将被删除。如果由于超时或某些资源未被删除，导致集群未能成功删除，请再次运行前述命令：
- en: '![](img/c36c429e-3a31-466f-adef-ac604a1973bf.png)'
  id: totrans-190
  prefs: []
  type: TYPE_IMG
  zh: '![](img/c36c429e-3a31-466f-adef-ac604a1973bf.png)'
- en: 'Alternatively, delete the CloudFormation stack associated with the cluster
    directly by selecting Actions | Delete Stack in the AWS CloudFormation console,
    as shown in the following screenshot:'
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 或者，可以通过在AWS CloudFormation控制台中选择“操作”|“删除堆栈”来直接删除与集群关联的CloudFormation堆栈，如下图所示：
- en: '![](img/8e6777d6-0dc1-484f-bae7-6d0a2fab2c97.png)'
  id: totrans-192
  prefs: []
  type: TYPE_IMG
  zh: '![](img/8e6777d6-0dc1-484f-bae7-6d0a2fab2c97.png)'
- en: 'In the Delete Stack confirmation dialog, select the stack resources not yet
    deleted and click on Yes, Delete, as shown here:'
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 在删除堆栈确认对话框中，选择尚未删除的堆栈资源，然后点击“是，删除”，如图所示：
- en: '![](img/3782e02a-e3e1-4ba9-8a30-c8cb7a2fef1b.png)'
  id: totrans-194
  prefs: []
  type: TYPE_IMG
  zh: '![](img/3782e02a-e3e1-4ba9-8a30-c8cb7a2fef1b.png)'
- en: 'Run the `ecs-cli down -force` command again after deleting the CloudFormation
    stack directly and the cluster should get deleted, as shown here:'
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 在直接删除CloudFormation堆栈后，重新运行`ecs-cli down -force`命令，集群应当会被删除，如图所示：
- en: '![](img/49983bd6-8709-4165-aad0-a251b9561884.png)'
  id: totrans-196
  prefs: []
  type: TYPE_IMG
  zh: '![](img/49983bd6-8709-4165-aad0-a251b9561884.png)'
- en: Summary
  id: totrans-197
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 概述
- en: In this chapter, we discussed using the ECS CLI to create a cluster of the launch
    type Fargate. Subsequently, we deployed a Docker compose file on the cluster to
    run a task for the Docker `wordpress` image. We discussed listing logs and running
    containers, and also demonstrated scaling the service.
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 本章中，我们讨论了如何使用ECS CLI创建Fargate启动类型的集群。随后，我们在集群上部署了一个Docker Compose文件，运行了一个用于Docker
    `wordpress`镜像的任务。我们讨论了日志列出和容器运行，并演示了如何扩展服务。
- en: This chapter brings to a conclusion the Amazon Fargate Quick Start guide. Amazon
    Fargate is a launch type for the Amazon **Elastic Container Service** (**ECS**). At
    the time of writing, there is no native AWS integration between Amazon **Elastic
    Kubernetes Service** (**EKS**) and AWS Fargate.
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 本章总结了Amazon Fargate快速入门指南。Amazon Fargate是Amazon **弹性容器服务**（**ECS**）的一种启动类型。在写作时，Amazon
    **弹性Kubernetes服务**（**EKS**）和AWS Fargate之间没有原生的AWS集成。
