["```\n    $ GITHUB_USER=<your_user>\n    $ git clone https://github.com/PacktPublishing/OpenShift-Multi-Cluster-Management-Handbook.git\n    ```", "```\n    $ cd OpenShift-Multi-Cluster-Management-Handbook/chapter14\n    $ ./change-repo-urls.sh\n    # Go to the Build folder\n    $ cd Build\n    ```", "```\n    $ oc apply -f Pipeline/namespace.yaml\n    $ oc apply -f Pipeline/quarkus-build-pi.yaml\n    ```", "```\n    $ oc create -f PipelineRun/quarkus-build-pr.yaml\n    ```", "```\n$ SECRET_FILE=<secret-file-which-contains-image-registry-credentials>\n$ SECRET_NAME=<secret-name>\n$ oc create -f $SECRET_FILE --namespace=chap14-review-cicd\n$ oc patch serviceaccount pipeline -p '{\"secrets\": [{\"name\": \"$SECRET_NAME\"}]}' --namespace=chap14-review-cicd\n$ oc secrets link default $SECRET_NAME --for=pull -n chap14-review-cicd\n```", "```\n$ oc create -f PipelineRun/quarkus-build-pr.yaml\n```", "```\n$ cd OpenShift-Multi-Cluster-Management-Handbook/chapter14/Deploy\n$ oc apply -f Rolebindings/ # Permission required for Tekton to create an ArgoCD application\n$ oc apply -f Pipeline/quarkus-build-and-deploy-pi.yaml\n$ oc create -f PipelineRun/quarkus-build-and-deploy-pr.yaml\n```", "```\n# Get the ArgoCD URL:\n$ echo \"$(oc get route openshift-gitops-server -n openshift-gitops --template='https://{{.spec.host}}')\"\n# Get the Admin password\n$ oc extract secret/openshift-gitops-cluster -n openshift-gitops --to=-\n```", "```\n    oc create secret generic acs-secret --from-literal=rox_api_token='<token from previous step>' --from-literal=rox_central_endpoint='<host-for-rhacs-central-server>:443' --namespace=chap14-review-cicd\n    ```", "```\n    $ cd OpenShift-Multi-Cluster-Management-Handbook/chapter14/DevSecOps\n    $ oc apply -f Task/ # Create the custom S2I and stackrox-image-check tasks\n    $ oc apply -f Pipeline/quarkus-devsecops-v1-pi.yaml\n    $ oc create -f PipelineRun/quarkus-devsecops-v1-pr.yaml\n    ```", "```\n    - name: build\n      params:\n        - name: IMAGE\n          value: $(params.IMAGE_NAME)\n        - name: CONTEXT\n          value: $(params.PATH_CONTEXT)\n        - name: DOCKERFILE\n          value: src/main/docker/Dockerfile.multistage #[1]\n        - name: TLSVERIFY\n          value: 'false'\n      runAfter:\n        - fetch-repository\n      taskRef:\n        kind: ClusterTask\n        name: buildah #[2]\n      workspaces:\n        - name: source\n          workspace: workspace\n```", "```\n## Stage 1: build with maven builder image with native capabilities\nFROM quay.io/quarkus/ubi-quarkus-native-image:22.2-java17 AS build\n(.. omitted ..)\nRUN ./mvnw package -Pnative\nFROM registry.access.redhat.com/ubi8/ubi-minimal #[1]\nWORKDIR /work/\nCOPY --from=build /code/target/*-runner /work/application\nRUN chmod 775 /work /work/application \\\n  && chown -R 1001 /work \\\n  && chmod -R \"g+rwX\" /work \\\n  && chown -R 1001:root /work \\\n  && microdnf update -y \\ #[2]\n  && rpm -e --nodeps $(rpm -qa '*rpm*' '*dnf*' '*libsolv*' '*hawkey*' 'yum*') #[3]\nEXPOSE 8080\nUSER 1001\nCMD [\"./application\", \"-Dquarkus.http.host=0.0.0.0\"]\n```", "```\n$ oc apply -f Pipeline/quarkus-devsecops-v2-pi.yaml\n$ oc create -f PipelineRun/quarkus-devsecops-v2-pr.yaml\n```", "```\n$ cd OpenShift-Multi-Cluster-Management-Handbook/chapter14/Governance\n$ oc apply -k .\n```", "```\n$ cd OpenShift-Multi-Cluster-Management-Handbook/chapter14/Multicluster-Deployment\n$ oc apply -f GitOpsCluster/\n```", "```\n$ oc apply -f Rolebindings/ # Permissions required for pipeline to be able to create an ApplicationSet\n$ oc apply -f Pipeline/quarkus-multicluster-pi.yaml\n$ oc create -f PipelineRun/quarkus-multicluster-pr.yaml\n```"]