- en: Developing with App Engine
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 App Engine 进行开发
- en: When working on Google Cloud, you will naturally require access to a cloud environment.
    In the upcoming chapters, we will learn how to build App Engine applications that
    reside in Google Cloud.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在使用 Google Cloud 时，你自然需要访问云环境。在接下来的章节中，我们将学习如何构建部署在 Google Cloud 上的 App Engine
    应用。
- en: As we now have a good understanding of the various components that make up a
    **Google App Engine** (**GAE**) environment, in this chapter we will look at how
    to use GAE to engineer applications that meet defined requirements. We will begin
    by building a simple app to demonstrate the process of deploying code on App Engine.
    We will then learn how to perform application updates. Finally, we will explore
    how to use the features of Stackdriver Logging to assist with the analysis of
    defects. All of these lessons will be accompanied by examples and activities so
    that you can apply these GAE concepts and principles on your own.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们对构成**Google App Engine** (**GAE**) 环境的各个组件有了较为深入的了解，在本章中，我们将探讨如何使用 GAE 来开发满足定义要求的应用。我们将从构建一个简单的应用开始，演示在
    App Engine 上部署代码的过程。接着我们将学习如何执行应用更新。最后，我们将探索如何使用 Stackdriver Logging 的功能来帮助分析缺陷。所有这些课程都将附有示例和活动，帮助你独立应用这些
    GAE 的概念和原则。
- en: GAE supports a number of language runtimes; in this chapter, we will utilize
    Python to demonstrate Google Cloud's capabilities. Working with different languages
    can be intimidating; however, the purpose of this chapter is not to teach you
    Python, but rather to explore using GAE in different scenarios.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: GAE 支持多种语言运行时；在本章中，我们将利用 Python 来演示 Google Cloud 的能力。使用不同语言进行开发可能会让人感到畏惧；然而，本章的目的不是教你
    Python，而是探讨在不同场景下使用 GAE。
- en: 'In this chapter, we will cover the following:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涉及以下内容：
- en: Building an application on GAE
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 GAE 上构建应用
- en: Understanding deployment strategies
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 理解部署策略
- en: Troubleshooting App Engine deployments
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 排查 App Engine 部署问题
- en: Building an application on GAE
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在 GAE 上构建应用
- en: To get started, we will consider what tools and assets we need to commence building
    our first GAE example application.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 为了开始，我们将考虑构建第一个 GAE 示例应用所需要的工具和资源。
- en: For this section, we will be taking our source code and deploying it on GAE.
    As part of this process, we will explore the application structure and how this
    relates to the deployed system. While using the code, we will observe what information
    is available and displayed within Google's Cloud Console.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将把源代码部署到 GAE 上。作为这一过程的一部分，我们将探讨应用结构以及它与已部署系统的关系。在使用代码时，我们将观察在 Google
    Cloud Console 中显示和提供的信息。
- en: In addition to this, we will look at deploying the application (to discuss what
    is meant by the default version), how this relates to code, and deploying multiple
    versions. Finally, we will perform a rollback on the system code deployed to illustrate
    accomplishing this task and what it means in terms of available versions. But
    first, let's learn about the Qwiklabs environment that we will be using in this
    chapter.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，我们还将探讨如何部署应用（讨论默认版本的含义）、这与代码的关系，以及如何部署多个版本。最后，我们将对部署到系统中的代码执行回滚操作，演示如何完成这项任务，以及这在可用版本方面的含义。但首先，让我们了解一下我们将在本章中使用的
    Qwiklabs 环境。
- en: Qwiklabs
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Qwiklabs
- en: Qwiklabs ([https://qwiklabs.com](https://qwiklabs.com)) provides a Cloud sandbox
    in which Google Cloud projects can run. The aim of using an environment such as
    Qwiklabs is to give you a close representation of real-world tools and services.
    A transient Google Cloud account, to facilitate this process, assigns a time-restricted
    sandbox environment. Once created, the Google Cloud project will provide you with
    access to all of the relevant access permissions and services that you can expect
    in a project that has been provisioned in a typical manner.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: Qwiklabs ([https://qwiklabs.com](https://qwiklabs.com)) 提供了一个 Cloud 沙盒，Google
    Cloud 项目可以在其中运行。使用像 Qwiklabs 这样的环境的目的是给你提供一个接近真实世界工具和服务的体验。为了方便这一过程，Google Cloud
    提供了一个临时帐户，并分配了一个时间限制的沙盒环境。一旦创建，Google Cloud 项目将为你提供所有相关的访问权限和服务，这些是你在典型方式下创建的项目所应具备的。
- en: Getting started
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 入门指南
- en: We will assume you have either registered on Google Cloud or have a valid Qwiklabs
    account that enables you to access a Google Cloud sandbox environment. Feel free
    to follow along without an account, but it will be more interesting if you can
    join in the exercises as we discuss them.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 我们假设你已经在 Google Cloud 上注册，或者拥有一个有效的 Qwiklabs 账户，能够访问 Google Cloud 沙盒环境。如果没有账户，依然可以跟随操作，但如果能够参与我们讨论中的练习，将会更加有趣。
- en: Our first look at Google's Cloud Console might seem intimidating; however, the
    interface provides an excellent way to navigate the numerous services on offer.
    Launch App Engine from the left-hand navigation menu, and we will take a tour
    of it.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 初次看到 Google 的 Cloud Console 可能会让人感到有些压倒性；然而，界面提供了一个很好的方式来导航众多的服务。在左侧导航菜单中启动
    App Engine，我们将带你进行一场体验之旅。
- en: 'To commence development, let''s use the existing App Engine code provided by
    Google to understand how a basic application should appear. To do this, follow
    these steps:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 为了开始开发，让我们使用 Google 提供的现有 App Engine 代码，理解一个基础应用程序应该是什么样子。按照以下步骤操作：
- en: From your Google Cloud account, select the App Engine menu item to begin creating
    an application.
  id: totrans-18
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从你的 Google Cloud 账户中，选择 App Engine 菜单项开始创建应用程序。
- en: The initial screen will be displayed, called the **Dashboard**, and from here
    you can see an aggregation of all things associated with App Engine; for example,
    services, task queues, and firewall rules.
  id: totrans-19
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 初始屏幕将显示为 **仪表盘**，在这里你可以看到与 App Engine 相关的所有内容的汇总，例如服务、任务队列和防火墙规则。
- en: 'Now select the Create Application button:'
  id: totrans-20
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在选择“创建应用程序”按钮：
- en: '![](img/2627beed-3b60-4665-ba49-8e76d6723789.png)'
  id: totrans-21
  prefs: []
  type: TYPE_IMG
  zh: '![](img/2627beed-3b60-4665-ba49-8e76d6723789.png)'
- en: The next thing we need to decide is which region our application will reside
    in. Let's take a look at how to do this next.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来我们需要决定的是应用程序将在哪个区域运行。让我们看看接下来如何操作。
- en: Selecting a region
  id: totrans-23
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 选择一个区域
- en: 'Looking at the following onscreen list, it is clear that there are many options
    available. Typically considered the standard practice is to select a region as
    close as possible to where the data is to be accessed. In this example, that criterion
    won''t apply for our demonstration, so perform the following steps:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 从下面的屏幕列表中可以看到，有很多选项可供选择。通常，标准做法是选择一个尽可能靠近数据访问位置的区域。在本示例中，这一标准不适用，因此请执行以下步骤：
- en: Choose us-east1 as the region.
  id: totrans-25
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择 us-east1 作为区域。
- en: 'Select the Create app button:'
  id: totrans-26
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择“创建应用程序”按钮：
- en: '![](img/25b7c74a-1a0e-46cb-a47e-99fef39cd38f.png)'
  id: totrans-27
  prefs: []
  type: TYPE_IMG
  zh: '![](img/25b7c74a-1a0e-46cb-a47e-99fef39cd38f.png)'
- en: Now we need to decide which language runtime we are going to use.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们需要决定使用哪种语言运行时。
- en: Selecting a language runtime and environment
  id: totrans-29
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 选择语言运行时和环境
- en: 'For our first simple example, we will use the Python runtime. To do this, perform
    the following steps:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 对于我们的第一个简单示例，我们将使用 Python 运行时。按照以下步骤操作：
- en: Select the Language drop-down list.
  id: totrans-31
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择“语言”下拉列表。
- en: From the various languages that appear, click on Python.
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从出现的各种语言中，点击 Python。
- en: 'From the Environment drop-down list, select Standard (this is the default option,
    but it can also be changed later in the development cycle):'
  id: totrans-33
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从“环境”下拉列表中选择“标准”（这是默认选项，但也可以在开发周期的后期进行更改）：
- en: '![](img/562d78fd-64ec-4357-a6c0-f624550f179d.png)'
  id: totrans-34
  prefs: []
  type: TYPE_IMG
  zh: '![](img/562d78fd-64ec-4357-a6c0-f624550f179d.png)'
- en: 'Be aware that there are multiple language runtimes available. If you are unfamiliar
    with Python, don''t worry: its layout and features are very accessible. In most
    instances, using an alternative language will follow the same process we''ve outlined;
    however, the language specification will be different from that described for
    the Python example.'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，有多种语言运行时可供选择。如果你不熟悉 Python，别担心：它的布局和特性非常易于理解。在大多数情况下，使用其他语言将遵循我们所概述的相同过程；但是，语言规范会与
    Python 示例中描述的有所不同。
- en: Once completed, we can explore using the **Google Cloud SDK** (**GCloud SDK**).
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 完成后，我们可以开始使用 **Google Cloud SDK**（**GCloud SDK**）。
- en: Working with the GCloud SDK
  id: totrans-37
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 GCloud SDK
- en: 'The GCloud SDK provides a simple way to authenticate against Google Cloud.
    Having the SDK available locally (that is, local to your environment) provides
    significant benefits, so it is an excellent option to include if you wish to integrate
    with other Google Cloud services:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: GCloud SDK 提供了一种简单的方式来对 Google Cloud 进行身份验证。将 SDK 安装在本地（即本地环境）提供了显著的好处，因此，如果你希望与其他
    Google Cloud 服务集成，它是一个非常好的选择：
- en: Select the App Engine menu option from the left-hand side of Google's Cloud
    Console.
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从 Google Cloud Console 左侧选择 App Engine 菜单选项。
- en: 'In the following screen, we will need to choose the required resources for
    our project:'
  id: totrans-40
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在接下来的屏幕中，我们需要选择项目所需的资源：
- en: '![](img/881f1335-1f87-4583-96c4-65661ffdfa64.png)'
  id: totrans-41
  prefs: []
  type: TYPE_IMG
  zh: '![](img/881f1335-1f87-4583-96c4-65661ffdfa64.png)'
- en: We will not be needing the Cloud SDK, as we will be using Cloud Shell, which
    includes a preloaded cloud SDK. So skip this screen by selecting the I'LL DO THIS
    LATER option.
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们不需要 Cloud SDK，因为我们将使用包含预加载 Cloud SDK 的 Cloud Shell。所以通过选择 “I'LL DO THIS LATER”
    来跳过这个屏幕。
- en: From the preceding deployment screen, you will also be given a command-line
    prompt to deploy code using `gcloud` commands. Learning how to use the `gcloud
    sdk` command to perform different tasks is highly recommended.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 从前面的部署屏幕中，你还会获得一个命令行提示，使用 `gcloud` 命令部署代码。强烈建议学习如何使用 `gcloud sdk` 命令执行不同的任务。
- en: 'Congratulations! At this point, you have successfully created your first GAE
    application on Google Cloud. As you can see, this process is pretty simple and
    is aimed at ensuring developers minimize the time necessary for infrastructure
    management:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 恭喜！此时，你已经成功在 Google Cloud 上创建了你的第一个 GAE 应用程序。正如你所见，这个过程非常简单，旨在确保开发人员尽量减少基础设施管理所需的时间：
- en: '![](img/c720933f-258d-493f-b73c-b7329abd6f76.png)'
  id: totrans-45
  prefs: []
  type: TYPE_IMG
  zh: '![](img/c720933f-258d-493f-b73c-b7329abd6f76.png)'
- en: Take a moment to remember that, for each application created, a similar process
    to create your infrastructure will be required. As you can see, there is nothing
    complicated about this process; on successful completion, it produces an important
    message that indicates the overall status.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 请花一点时间记住，对于每个创建的应用程序，都需要类似的过程来创建基础设施。正如你所看到的，这个过程并不复杂；成功完成后，它会输出一条重要的消息，指示整体状态。
- en: Building and deploying a sample application
  id: totrans-47
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 构建和部署示例应用程序
- en: In this section, we will deploy a standard `Hello World` application to GAE.
    Luckily, the engineers at Google have our back, and we can use some sample code.
    For the next build and deploy stage in this process, we will examine this sample
    code.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将部署一个标准的 `Hello World` 应用程序到 GAE。幸运的是，Google 的工程师们为我们提供了帮助，我们可以使用一些示例代码。在接下来的构建和部署阶段，我们将研究这些示例代码。
- en: 'To commence the process, follow these steps:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 要开始这个过程，请按照以下步骤操作：
- en: Open a Cloud Shell window in your project and clone the sample code for App
    Engine from the Google Cloud repository.
  id: totrans-50
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在你的项目中打开 Cloud Shell 窗口，并从 Google Cloud 仓库克隆 App Engine 的示例代码。
- en: If you ever need to code an application on Google Cloud, it is more efficient
    to check the Google sample repository first to see whether the sample code exists
    as a template.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你需要在 Google Cloud 上编码一个应用程序，首先查看 Google 的示例仓库，看是否已有现成的示例代码作为模板，这样会更加高效。
- en: 'From the open Cloud Shell window, enter the following on the command line:'
  id: totrans-52
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从打开的 Cloud Shell 窗口中，在命令行输入以下内容：
- en: '[PRE0]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'The code location is in a directory named `hello_world`. So, enter the following
    to move to the correct source directory:'
  id: totrans-54
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 代码位于一个名为 `hello_world` 的目录中。所以，输入以下命令以进入正确的源代码目录：
- en: '[PRE1]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Now that we have some source code available, let''s investigate what is in
    this directory by performing a directory listing from the Cloud Shell prompt:'
  id: totrans-56
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在我们有了一些源代码，接下来让我们通过在 Cloud Shell 提示符下执行目录列表命令来查看该目录中的内容：
- en: '[PRE2]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Notably, there are two Python files and the `app.yaml` file. A structure such
    as this is common, so it''s worth outlining what these files do:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 值得注意的是，这里有两个 Python 文件和一个 `app.yaml` 文件。这样的结构很常见，所以值得概述一下这些文件的作用：
- en: '| **Filename** | **Purpose** | **Description** |'
  id: totrans-59
  prefs: []
  type: TYPE_TB
  zh: '| **文件名** | **用途** | **描述** |'
- en: '| `main.py` | Application | This file, written in Python, represents the source
    code to be run, and outputs a `Hello, World!` message to the user. |'
  id: totrans-60
  prefs: []
  type: TYPE_TB
  zh: '| `main.py` | 应用程序 | 这个用 Python 编写的文件表示要运行的源代码，并向用户输出一条 `Hello, World!` 消息。|'
- en: '| `main_test.py` | Unit testing | This file is a test case for the main source
    file to ensure a managed response is returned as expected. |'
  id: totrans-61
  prefs: []
  type: TYPE_TB
  zh: '| `main_test.py` | 单元测试 | 这个文件是主源文件的测试用例，用于确保返回的响应符合预期。 |'
- en: '| `app.yaml` | Configuration | This file is the configuration file for the
    application. The contents of the data include a reference to the language runtime,
    API version, and URL to be accessed. |'
  id: totrans-62
  prefs: []
  type: TYPE_TB
  zh: '| `app.yaml` | 配置文件 | 这个文件是应用程序的配置文件。数据的内容包括对语言运行时、API 版本和要访问的 URL 的引用。 |'
- en: 'To deploy the source code to GAE, enter the following on the Cloud Shell command
    line to use your code:'
  id: totrans-63
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要将源代码部署到 GAE，请在 Cloud Shell 命令行中输入以下内容来使用你的代码：
- en: '[PRE3]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'As the deployment command processes configuration information, on completion
    it will provide a URL from which you can access the running application:'
  id: totrans-65
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当部署命令处理配置信息时，完成后会提供一个URL，通过该URL可以访问正在运行的应用程序：
- en: '![](img/43286884-5499-4a7c-aef7-82eebb242ba8.png)'
  id: totrans-66
  prefs: []
  type: TYPE_IMG
  zh: '![](img/43286884-5499-4a7c-aef7-82eebb242ba8.png)'
- en: To view the application deployed use `gcloud app browse` from Cloud Shell or
    use the App Engine Dashboard to see the assigned URL.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 要查看已部署的应用程序，可以从Cloud Shell使用`gcloud app browse`，或者使用App Engine仪表板查看分配的URL。
- en: Once App Engine has completed its deployment, the application is accessible
    from the browser. Typically the URL to access your deployed application will be
    in the form `[PROJECT_ID].appspot.com`. If you have used a custom domain, the
    `PROJECT ID` section will be replaced with the custom domain.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦App Engine完成部署，应用程序就可以从浏览器访问。通常，访问已部署应用程序的URL将是`[PROJECT_ID].appspot.com`的形式。如果你使用了自定义域名，则`PROJECT
    ID`部分将被自定义域名替换。
- en: 'Access this URL via the browser; this should display the `Hello, World!` message
    from our application, as shown in the following screenshot:'
  id: totrans-69
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过浏览器访问此URL；这将显示来自我们应用程序的`Hello, World!`消息，如下图所示：
- en: '![](img/2802f45e-f385-4a94-b133-f2d28b472319.png)'
  id: totrans-70
  prefs: []
  type: TYPE_IMG
  zh: '![](img/2802f45e-f385-4a94-b133-f2d28b472319.png)'
- en: 'Now take a look at the updated GAE dashboard to observe what changes are apparent
    once the application is deployed:'
  id: totrans-71
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在看看更新后的GAE仪表板，观察一旦应用程序部署后出现的变化：
- en: '![](img/272a77c6-f9a9-49ff-af2e-b622fa10d617.png)'
  id: totrans-72
  prefs: []
  type: TYPE_IMG
  zh: '![](img/272a77c6-f9a9-49ff-af2e-b622fa10d617.png)'
- en: From the dashboard, we can see all the relevant telemetry for our application.
    We now have an excellent working knowledge of GAE and how to deploy a simple application
    on Google Cloud.
  id: totrans-73
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从仪表板上，我们可以看到应用程序的所有相关遥测数据。我们现在对GAE有了出色的工作知识，并了解如何在Google Cloud上部署一个简单的应用程序。
- en: Great job! We have gone through a lot of information quickly, so let's slow
    down a little and recap what we have learned so far in this chapter.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 干得好！我们已经快速浏览了很多信息，现在让我们慢下来一点，回顾一下本章到目前为止学到的内容。
- en: Wrapping up
  id: totrans-75
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: 'In the `Hello World!` example, we learned about the following aspects of deploying
    code on GAE:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 在`Hello World!`示例中，我们了解了在GAE上部署代码的以下方面：
- en: We looked at how to create a simple GAE application; we did this using the Google
    Cloud console to initiate the build and deploy process.
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们查看了如何创建一个简单的GAE应用程序；我们使用Google Cloud控制台启动构建和部署过程。
- en: We saw there were multiple regions available and where this information can
    be accessed.
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们看到有多个可用区域，并了解了可以访问这些信息的地方。
- en: We selected a GAE Standard environment and the Python language runtime for our
    application, noting that we can also use alternatives if desired.
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们为应用程序选择了GAE标准环境和Python语言运行时，注意到如果需要，我们也可以选择其他替代方案。
- en: We cloned the Google Cloud repository to gain access to some Python-based example
    code.
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们克隆了Google Cloud存储库，以便访问一些基于Python的示例代码。
- en: We explored the system within the catalog and saw that we have three files available,
    taking the time to outline the purpose of each of the source files used.
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们浏览了目录中的系统，看到我们有三个可用的文件，并花时间概述了每个源文件的用途。
- en: Finally, we deployed our code via Cloud Shell and accessed the running application
    via a browser interface from the URL presented on completion of the deployment
    process.
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最后，我们通过Cloud Shell部署了代码，并通过部署过程完成时显示的URL通过浏览器界面访问了正在运行的应用程序。
- en: As you have seen in this first section on App Engine, it is a very straightforward
    process to deploy code. Within this environment, working with GAE provides a level
    of simplicity that developers crave.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 正如你在App Engine的第一部分中看到的，部署代码是一个非常简单的过程。在这个环境中，使用GAE提供了开发人员所渴望的简洁性。
- en: The ability to avoid infrastructure management overhead can significantly improve
    efficiency and lends itself to a greater emphasis on specific development activities.
    Throughout the next section, we will explore how GAE handles various deployment
    strategies.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 避免基础设施管理开销的能力可以显著提高效率，并使我们能够更加专注于特定的开发活动。在接下来的部分中，我们将探索GAE如何处理各种部署策略。
- en: Understanding deployment strategies
  id: totrans-85
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解部署策略
- en: GAE allows new versions to deploy and more besides, performing more complex
    operations such as traffic splitting. As we have already deployed a simple application
    from the command line, let's continue with this code base and look at how to implement
    a new version using the GAE management console.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: GAE 允许部署新版本，并执行更多复杂的操作，例如流量分配。由于我们已经通过命令行部署了一个简单的应用，现在让我们继续使用这个代码库，看看如何通过 GAE
    管理控制台实现新版本。
- en: Understanding the mechanism behind the GAE console used to control the flow
    of code is invaluable. Being able to deploy a new system via a rollout provides
    a good layer of control over the application environment. Taking this to the next
    level, we can also split traffic between versions to perform sophisticated A/B
    testing.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 理解控制代码流动的 GAE 控制台背后的机制是非常宝贵的。能够通过发布操作部署新系统为应用环境提供了良好的控制层级。更进一步，我们还可以在版本之间分配流量，以执行复杂的
    A/B 测试。
- en: Creating a new version
  id: totrans-88
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建新版本
- en: 'Back in the Cloud Shell, still working with our source code, we will edit the
    `main.py` file and change the message to read as follows: `Hello, Serverless World!`.
    These simple changes will represent our new version of the application.'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 回到 Cloud Shell，仍然在处理我们的源代码，我们将编辑`main.py`文件，并将消息修改为：`Hello, Serverless World!`。这些简单的更改将代表我们的新版本应用。
- en: Google Cloud Shell also includes a code editor based on Eclipse Orion to perform
    straightforward file edits. The inclusion of this editor can be tremendously helpful
    for situations where you need to view files within a project. Alternatively, Cloud
    Shell also includes other editors (for example, Vim and Nano), so feel free to
    use something that reflects your personal preference.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: Google Cloud Shell 还包括一个基于 Eclipse Orion 的代码编辑器，用于进行简单的文件编辑。这个编辑器的引入对于需要查看项目中文件的情况非常有帮助。或者，Cloud
    Shell 也包括其他编辑器（例如 Vim 和 Nano），所以你可以根据个人喜好选择使用。
- en: 'In the previous section, you will have noticed that, after editing our source
    file, we then used the GCloud SDK to deploy the code. Now that we have amended
    the source code, follow the same process again:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一节中，你可能注意到，在编辑源文件后，我们使用 GCloud SDK 部署了代码。现在我们已经修改了源代码，请按照相同的流程再次操作：
- en: 'From the Cloud Shell, run the following command:'
  id: totrans-92
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 Cloud Shell 中，运行以下命令：
- en: '[PRE4]'
  id: totrans-93
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: A new application version has been deployed without needing any additional work.
  id: totrans-94
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 新的应用版本已经部署，无需额外的工作。
- en: Look back at the Google Cloud Console and the Versions menu.
  id: totrans-95
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 回到 Google Cloud Console 和版本菜单。
- en: 'We can see that a new version of the application has been deployed and is available
    from the list:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以看到，新的应用版本已经部署，并且可以从列表中获取：
- en: '![](img/f8f5c6ea-dac2-44b8-843e-e63109bf4d5e.png)'
  id: totrans-97
  prefs: []
  type: TYPE_IMG
  zh: '![](img/f8f5c6ea-dac2-44b8-843e-e63109bf4d5e.png)'
- en: Note that, in the preceding output, the traffic allocation has automatically
    switched to the new version. This behavior is acceptable in most situations; however,
    if you don't want the traffic to be automatically promoted to the latest version
    for the deployment of new code, use the `--no-promote` flag option.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，在前面的输出中，流量分配已经自动切换到新版本。这种行为在大多数情况下是可以接受的；然而，如果你不希望流量自动升级到最新版本来部署新代码，请使用`--no-promote`标志选项。
- en: Observe that the version string used represents a timestamp for the application.
    Additionally, both versions of the application remain easily accessible from the
    console—the default version tracks which revision traffic used. If you wish to
    switch to a specific version string, you can specify this as part of the deploy
    process using the `--version` flag option.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，使用的版本字符串代表应用的时间戳。此外，应用的两个版本仍然可以轻松地从控制台访问——默认版本会跟踪流量使用的修订版。如果你希望切换到特定的版本字符串，可以在部署过程中使用`--version`标志选项指定。
- en: At this point, you might want to contrast this simple deployment process with
    a typical infrastructure project where this ease of use is not as apparent. The
    ease with which GAE is deployed is stunningly effortless and exquisitely modeled
    so it only exposes an element of the development that is required.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一点上，你可能想将这个简单的部署过程与典型的基础设施项目进行对比，在这些项目中，易用性并不像这里这么明显。GAE 部署的简便性令人惊叹，其精心设计使得只暴露出开发所需的部分。
- en: Now that we have a deployment, we can look at some of the excellent features
    App Engine provides as standard, starting with traffic management.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经完成部署，可以查看一些 App Engine 默认提供的优秀功能，从流量管理开始。
- en: Traffic splitting
  id: totrans-102
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 流量分配
- en: Now that we have two versions running, wouldn't it be great if we could divide
    the traffic between them? Consider how useful this option is when working with
    an environment such as testing (for example, A/B) or production (for example,
    phased rollout). Again this level of simplicity should not be misunderstood; this
    is an incredibly powerful option and will undoubtedly be one that is used time
    and time again.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们有两个版本在运行，如果我们能将流量在它们之间分配岂不是很棒吗？考虑到这种选项在测试环境（例如A/B测试）或生产环境（例如分阶段发布）中的实用性。再次强调，这种简单性不应被误解；这是一种非常强大的选项，毫无疑问，它将被一次又一次地使用。
- en: 'To split traffic, follow these steps:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 要拆分流量，请按照以下步骤操作：
- en: Go into the GAE Cloud Console and, under the Versions menu, look for the Split
    traffic option for the specific version and select it.
  id: totrans-105
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 进入GAE云控制台，在“版本”菜单下，查找特定版本的“拆分流量”选项并选择它。
- en: 'Now a list of options will be available to split our traffic, as outlined in
    the previous chapter (that is, IP address, Cookie, or Random):'
  id: totrans-106
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，将会提供一系列选项来拆分我们的流量，正如前一章所述（即IP地址、Cookie或随机）：
- en: '![](img/698e50f9-a9fb-459a-ad6d-de3eccc0093d.png)'
  id: totrans-107
  prefs: []
  type: TYPE_IMG
  zh: '![](img/698e50f9-a9fb-459a-ad6d-de3eccc0093d.png)'
- en: 'We can see that our new application version has defaulted to accept 100% of
    the traffic allocation. For demonstration purposes, we would like it to only receive
    25%. To do this, perform the following steps:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以看到我们的新应用版本已默认接受100%的流量分配。为了演示，我们希望它只接收25%的流量。为此，请执行以下步骤：
- en: Select an alternate application version that will consume 75% of traffic by
    clicking on the Add version button. You will see that we still have the original
    version of the deployed application available, so let's divert the traffic to
    that.
  id: totrans-109
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击“添加版本”按钮，选择将消耗75%流量的备用应用版本。你会看到我们仍然有原始版本的已部署应用可用，所以让我们将流量导向它。
- en: 'Now select the remaining percentage from the box next to the versions:'
  id: totrans-110
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在从版本旁边的框中选择剩余的百分比：
- en: '![](img/f059a569-9e8d-4ed9-b35d-7c675b35b498.png)'
  id: totrans-111
  prefs: []
  type: TYPE_IMG
  zh: '![](img/f059a569-9e8d-4ed9-b35d-7c675b35b498.png)'
- en: Once the traffic splitting ratio has been selected, select the Save button and
    GAE will indicate that it is dynamically updating the traffic splitting configuration
    in your project.
  id: totrans-112
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦选择了流量拆分比例，点击保存按钮，GAE会显示它正在动态更新项目中的流量拆分配置。
- en: 'Return to the Versions screen to see the project actually dividing traffic
    between the applications chosen, in the proportions previously selected:'
  id: totrans-113
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 返回到“版本”屏幕，查看项目实际上在已选择的应用程序之间按之前选定的比例划分流量：
- en: '![](img/12211944-846d-4c7a-9c16-070b60584474.png)'
  id: totrans-114
  prefs: []
  type: TYPE_IMG
  zh: '![](img/12211944-846d-4c7a-9c16-070b60584474.png)'
- en: As we expected, the preceding actions, for example, traffic splitting, are also
    achievable using the GCloud SDK. To achieve the same result with the SDK, use
    the `gcloud app set-traffic` option to provide a flexible way to get the desired
    outcome from a script or command-line interface.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们预期的那样，前面的操作，例如流量拆分，也可以通过GCloud SDK来实现。要通过SDK实现相同的结果，请使用`gcloud app set-traffic`选项，以便从脚本或命令行界面获得灵活的方式来实现预期的结果。
- en: Now that we know how to initiate traffic splitting between application versions,
    let's move on how to migrate traffic.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们知道如何在应用版本之间启动流量拆分，接下来我们来看看如何迁移流量。
- en: Migrating traffic
  id: totrans-117
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 迁移流量
- en: Finally, for this section, we want to migrate all traffic back to the original
    deployed version of our application. By now, I suspect that you already have an
    idea of how to achieve this.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，在这一部分，我们希望将所有流量迁移回我们应用的原始已部署版本。到现在为止，我猜你已经有了如何实现这一目标的想法。
- en: 'At the top of the Versions screen, there is a MIGRATE TRAFFIC option. We will
    use this to move all of the existing traffic flow back to the original version,
    as shown in the following screenshot:'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 在“版本”屏幕的顶部，有一个“迁移流量”选项。我们将使用它将所有现有流量流量迁移回原始版本，如下图所示：
- en: '![](img/21482395-fea0-40d1-ab98-5c44e9255a53.png)'
  id: totrans-120
  prefs: []
  type: TYPE_IMG
  zh: '![](img/21482395-fea0-40d1-ab98-5c44e9255a53.png)'
- en: Note that the original application currently accepts 75% of the traffic and
    the new version only accepts 25% of traffic.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，原始应用程序当前接受75%的流量，新版本只接受25%的流量。
- en: 'The migration will ensure traffic is directed to the selected default version.
    In this type of migration, the destination instance can only be a single version:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 迁移将确保流量被定向到选定的默认版本。在这种类型的迁移中，目标实例只能是单一版本：
- en: '![](img/4ba3c6cb-dd8d-49ed-89fd-a35d255c1b1e.png)'
  id: totrans-123
  prefs: []
  type: TYPE_IMG
  zh: '![](img/4ba3c6cb-dd8d-49ed-89fd-a35d255c1b1e.png)'
- en: The migration of traffic between application versions is straightforward using
    GAE. To reinforce what we have learned, we will summarize our understanding next.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 使用GAE进行应用程序版本之间的流量迁移非常简单。为了巩固我们的理解，接下来我们将总结所学内容。
- en: Wrapping up
  id: totrans-125
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: 'In this section, we learned how to control deployment on GAE. We used several
    built-in tools and learned how to use them when working with our application:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们学习了如何在GAE上控制部署。我们使用了几个内置工具，并学习了在处理应用程序时如何使用它们：
- en: We saw how GAE instigates version control on the application.
  id: totrans-127
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们看到了GAE如何对应用程序进行版本控制。
- en: We observed real-time traffic splitting on GAE, accessed at the push of a button.
  id: totrans-128
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们观察了GAE上实时流量分割，只需点击按钮即可访问。
- en: We utilized the migrating traffic option to perform a simplistic application
    rollback.
  id: totrans-129
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们使用迁移流量选项来执行简化的应用程序回滚。
- en: In this section, we explored how traffic splitting can be an invaluable developer
    tool for testing application functionality. In this regard, working with GAE is
    refreshingly simple as it provides a sophisticated means of performing A/B testing
    without any additional setup or requirements.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们探讨了流量分割如何成为一个宝贵的开发者工具，用于测试应用程序功能。在这方面，使用GAE显得格外简单，因为它提供了一种复杂的方式来执行A/B测试，无需任何额外的设置或要求。
- en: Additionally, we performed a version rollback that allowed us to quickly move
    between traffic-serving versions to a designated default version. In this scenario,
    we did not need to think about how to manage the underlying infrastructure; the
    heavy lifting was performed for us by GAE. In the next section, we will look at
    how we can make the build and deploy process more consistent and less error-prone.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，我们执行了版本回滚，允许我们快速在不同的流量服务版本之间切换，并返回到指定的默认版本。在这种情况下，我们无需考虑如何管理底层基础设施；GAE为我们完成了繁重的工作。下一节中，我们将探讨如何让构建和部署过程更加一致，减少出错的可能性。
- en: Troubleshooting App Engine deployments
  id: totrans-132
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 故障排除App Engine部署
- en: In this section, we are going to undertake a more detailed examination of troubleshooting
    an application by using Stackdriver Logging. Stackdriver collates application
    information in a *single pane of glass* to enable data to be analyzed by developers.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将通过使用Stackdriver Logging更详细地检查应用程序故障排除。Stackdriver将应用程序信息汇总到一个*单一视图*中，方便开发者分析数据。
- en: Debugging an application can be time-consuming and requires a great deal of
    skill to establish the signal from the noise. Logs for GAE are fully available
    in Stackdriver, and learning to use this tool can prove to be a valuable aid for
    identifying defects within an application.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 调试应用程序可能非常耗时，需要一定的技能来从噪声中找出有用的信号。GAE的日志在Stackdriver中完全可用，学习如何使用该工具可以为识别应用程序中的缺陷提供宝贵的帮助。
- en: Building and deploying
  id: totrans-135
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 构建与部署
- en: 'Open Stackdriver Logging from Google''s Cloud Console to present the main page
    of information relating to logs collated on Google Cloud. Stackdriver Logging
    has two modes:'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 打开Google Cloud控制台中的Stackdriver Logging，展示与Google Cloud上汇总的日志相关的主要信息页面。Stackdriver
    Logging有两种模式：
- en: Basic mode
  id: totrans-137
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 基本模式
- en: Advanced filter
  id: totrans-138
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 高级筛选器
- en: Basic mode is the default, and, in our example, we will use this to display
    some vital information about the application deployed. The advanced filter provides
    the user with the ability to build bespoke filters for use against logged information.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 基本模式是默认模式，在我们的示例中，我们将使用它来展示部署应用程序的一些关键信息。高级筛选器使用户能够创建自定义筛选器，用于分析日志中的信息。
- en: Basic mode
  id: totrans-140
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 基本模式
- en: 'The first thing we need to do in Stackdriver Logging is filter the information
    and restrict it to the GAE application, so that it relates specifically to the
    part of the system we have an interest in:'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 在Stackdriver Logging中，我们首先需要筛选信息，并将其限制为GAE应用程序相关的数据，这样它就专门与我们关注的系统部分相关：
- en: '![](img/fb50d884-12f0-4e4f-9c6f-c270f7cfb915.png)'
  id: totrans-142
  prefs: []
  type: TYPE_IMG
  zh: '![](img/fb50d884-12f0-4e4f-9c6f-c270f7cfb915.png)'
- en: In the preceding screenshot, the filter amendment includes GAE Application and
    All logs. As is evident from the information displayed, this is a very detailed
    overview of the activities that have occurred on GAE. For example, we can see
    several references to, for example, `CreateApplication`, `CreateVersion`, and
    `UpdateService` activities. Each of these activities has an associated payload
    with more detail, so gleaning further information where necessary is supported.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的截图中，过滤器的修改包括 GAE 应用和所有日志。从显示的信息可以看出，这是对在 GAE 上发生的活动的非常详细的概述。例如，我们可以看到几个与
    `CreateApplication`、`CreateVersion` 和 `UpdateService` 活动相关的条目。每个活动都有一个相关的有效载荷，其中包含更多的详细信息，因此在需要时可以进一步获取信息。
- en: Additionally, the (HTTP) response codes received for the pages are also displayed
    in the logs, meaning a metric to monitor the availability of the application can
    easily be created based on the log information. A metric such as *How many times
    have I received a 404 in the past hour* is quite useful. Aggregating metrics is
    a smart way to perform application analysis, so only the frequency of incident
    occurrence provides the basis for investigation.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，页面接收到的（HTTP）响应代码也会显示在日志中，这意味着可以轻松创建基于日志信息的应用程序可用性监控指标。例如，*过去一小时内收到过多少次 404
    错误* 是一个非常有用的指标。聚合指标是一种智能的应用程序分析方法，因此只有事件发生的频率可以作为调查的基础。
- en: Advanced filter
  id: totrans-145
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 高级过滤器
- en: In some instances, a more bespoke filter is required to investigate an operation
    on GAE. In this instance, use the advanced filter. The advanced log filter is
    accessed via the drop-down filter and presents a more productive interface from
    which you can select information from the logs consumed within Stackdriver.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 在某些情况下，调查 GAE 上的操作时需要一个更定制的过滤器。在这种情况下，使用高级过滤器。通过下拉过滤器访问高级日志过滤器，它提供了一个更高效的界面，您可以在其中选择从
    Stackdriver 中获取的日志信息。
- en: For example, in this mode, selecting the `CreateApplication` item populates
    the advanced filter and enables a more targeted list of entries to be displayed
    based on the criteria submitted by the user.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，在此模式下，选择 `CreateApplication` 项会填充高级过滤器，并根据用户提交的标准显示一个更有针对性的条目列表。
- en: 'Stackdriver is an enormously valuable service when used to manage an application
    proactively:'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: Stackdriver 是一个非常有价值的服务，用于主动管理应用程序：
- en: '**Stackdriver Logging**: Access log information for the analysis of issues'
  id: totrans-149
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Stackdriver Logging**：访问日志信息以进行问题分析'
- en: '**Stackdriver Monitoring**: Access monitoring information for general questions'
  id: totrans-150
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Stackdriver Monitoring**：访问监控信息以解决一般问题'
- en: '**Stackdriver Trace**: Access trace information for latency issues'
  id: totrans-151
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Stackdriver Trace**：访问延迟问题的追踪信息'
- en: '**Stackdriver Debug**: Access application details for defect issues'
  id: totrans-152
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Stackdriver Debug**：访问应用程序详细信息以解决缺陷问题'
- en: The first defense layer involves integrating logging to supply a detailed and
    accurate view of deployed applications. Examples of this include Stackdriver Monitoring,
    Trace, and Debug, which utilize information about the application to assist ongoing
    maintenance activities and enhancements to deployed artifacts.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 第一层防御涉及集成日志记录，以提供已部署应用程序的详细和准确视图。此类示例包括 Stackdriver 监控、追踪和调试，它们利用关于应用程序的信息来帮助进行持续的维护活动和已部署构件的改进。
- en: Wrapping up
  id: totrans-154
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: 'In this section, we highlighted the first steps in using Stackdriver Logging
    in conjunction with GAE. We will be exploring this Stackdriver capability in further
    detail as we move on to more advanced topics:'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们重点介绍了将 Stackdriver Logging 与 GAE 配合使用的第一步。随着我们深入更高级的主题，我们将进一步探讨 Stackdriver
    的这一功能：
- en: We created a *basic* mode filter to see specific GAE information.
  id: totrans-156
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们创建了一个 *基本* 模式过滤器，以查看特定的 GAE 信息。
- en: We switched to an *advanced* filter to take a more granular view of GAE application
    log information.
  id: totrans-157
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们切换到 *高级* 过滤器，以更细粒度地查看 GAE 应用程序日志信息。
- en: We outlined some Stackdriver functionality and discussed at a high level how
    to use the key features.
  id: totrans-158
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们概述了一些 Stackdriver 功能，并在高层次上讨论了如何使用这些关键特性。
- en: Learning how to use Stackdriver on Google Cloud is fundamental to increasing
    developer productivity. The ability to aggregate information from multiple services
    in an easy-to-access dashboard is both compelling and useful as application complexity
    increases over time.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 学会如何在 Google Cloud 上使用 Stackdriver 是提高开发者生产力的基础。随着应用程序复杂性的增加，能够在一个易于访问的仪表盘中聚合来自多个服务的信息，既令人信服又非常有用。
- en: Summary
  id: totrans-160
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 小结
- en: In this chapter, we covered a lot of material in order to work through some
    typical examples of using GAE. By now, you should have a good understanding of
    how the architecture and its associated components interact and can prevent the
    situational reinvention of the wheel.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们涵盖了许多内容，以便处理使用 GAE 的一些典型示例。到现在为止，您应该已经很好地理解了架构及其相关组件如何交互，并能够避免在特定情况下重复造轮子。
- en: We began with a discussion of how to deploy an application within the GAE environment.
    Working with version control and source configuration to support multiple environments
    was also covered. Finally, we looked at different deployment strategies and took
    our first look at Stackdriver Logging.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 我们从讨论如何在 GAE 环境中部署应用程序开始。还涉及了如何使用版本控制和源配置来支持多个环境。最后，我们探讨了不同的部署策略，并首次了解了 Stackdriver
    Logging。
- en: We have seen that GAE is very good at hosting applications that are responsible
    for managing solutions requiring HTTP(s)/API access. Both GAE Standard and Flex
    provide compelling cases for serverless applications in Google Cloud. From a developer
    perspective, there is very little in the way of infrastructure management required.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经看到，GAE 非常适合托管需要 HTTP(s)/API 访问的解决方案的应用程序。无论是 GAE Standard 还是 Flex，都为 Google
    Cloud 中的无服务器应用程序提供了有力的支持。从开发者的角度来看，几乎不需要进行基础设施管理。
- en: In the next chapter, we will expand our view of Google Cloud serverless products
    and start looking at event-based options. When looking at alternatives, it is
    always good to consider how one type of use case is more beneficial than another.
    Now that we have explored applications, we will take a look at more granular requirements
    and introduce event processing via functions.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章，我们将扩展对 Google Cloud 无服务器产品的理解，并开始关注基于事件的选项。在选择替代方案时，考虑某种用例相较于其他用例的优势总是一个好主意。现在我们已经探讨了应用程序，我们将关注更细化的需求，并通过函数引入事件处理。
- en: Questions
  id: totrans-165
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 问题
- en: There are three versions of GAE. True or false?
  id: totrans-166
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: GAE 有三个版本。对还是错？
- en: What traffic splitting options are available with GAE?
  id: totrans-167
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: GAE 提供哪些流量拆分选项？
- en: What filter logging options are present for Stackdriver Logging?
  id: totrans-168
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Stackdriver Logging 提供了哪些过滤日志选项？
- en: When creating an App Engine application, you need to select a Zone. True or
    false
  id: totrans-169
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在创建 App Engine 应用程序时，您需要选择一个区域。对还是错？
- en: Traffic migration offers a simple way to perform an application rollback. True
    or false?
  id: totrans-170
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 流量迁移提供了一种简单的应用程序回滚方法。对还是错？
- en: What is the command to perform a command-line deployment of GAE?
  id: totrans-171
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 执行 GAE 命令行部署的命令是什么？
- en: What common properties does an App Engine deployment contain in its URL?
  id: totrans-172
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: App Engine 部署的 URL 中包含哪些常见属性？
- en: Further reading
  id: totrans-173
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 进一步阅读
- en: '**Google Cloud Shell**: [https://cloud.google.com/shell/docs/launching-cloud-shell](https://cloud.google.com/shell/docs/launching-cloud-shell)'
  id: totrans-174
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Google Cloud Shell**: [https://cloud.google.com/shell/docs/launching-cloud-shell](https://cloud.google.com/shell/docs/launching-cloud-shell)'
- en: '**Google Cloud Shell Editor**: [https://cloud.google.com/blog/products/gcp/introducing-google-cloud-shels-new-code-editor](https://cloud.google.com/blog/products/gcp/introducing-google-cloud-shels-new-code-editor)'
  id: totrans-175
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Google Cloud Shell Editor**: [https://cloud.google.com/blog/products/gcp/introducing-google-cloud-shels-new-code-editor](https://cloud.google.com/blog/products/gcp/introducing-google-cloud-shels-new-code-editor)'
- en: '**Google app services**: [https://cloud.google.com/sdk/gcloud/reference/app/services/](https://cloud.google.com/sdk/gcloud/reference/app/services/)'
  id: totrans-176
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Google 应用服务**: [https://cloud.google.com/sdk/gcloud/reference/app/services/](https://cloud.google.com/sdk/gcloud/reference/app/services/)'
