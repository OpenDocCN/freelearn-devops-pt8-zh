- en: Implementing Azure Load Balancer
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In the previous chapter, we covered the fourth part of the *Deploying and Managing
    Virtual Networks*objective. We've covered **Network Security Groups** (**NSGs**)
    and Azure DNS. You also learned how to create and configure NSGs and how to set
    up and configure Azure DNS.
  prefs: []
  type: TYPE_NORMAL
- en: This chapter covers the fifth and final part of thisobjective, by covering how
    to configure internal and external load balancers using **Azure Load Balancer**.
    In this chapter, we are going to focus on the features and capabilities of Azure
    Load Balancer. You will learn how to configure an internal load balancer and how
    to create health probes and configure load balancing rules. This chapter will
    finish by covering how you can configure a public load balancer.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following topics will be covered in this chapter:'
  prefs: []
  type: TYPE_NORMAL
- en: Azure Load Balancer
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Configuring an internal load balancer
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Creating health probes
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Creating load balancing rules
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Configuring a public load balancer
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Technical requirements
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The source code for this chapter can be downloaded from the GitHub repository
    at [https://github.com/PacktPublishing/Microsoft-Azure-Administrator-Exam-Guide-AZ-103/tree/master/Chapter13](https://github.com/PacktPublishing/Microsoft-Azure-Administrator-Exam-Guide-AZ-103/tree/master/Chapter13).
  prefs: []
  type: TYPE_NORMAL
- en: Azure Load Balancer
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Azure Load Balancer is a load balancer that operates at the transport layer (Layer
    4 in the OSI network reference stack). Azure Load Balancer supports the **Transmission
    Control Protocol** (**TCP**) and **User Datagram Protocol** (**UDP**) and it can
    be used to load-balance traffic to your VMs. It provides high throughput and low
    latency, it can scale up to millions of flows, and it supports various inbound
    and outbound scenarios.
  prefs: []
  type: TYPE_NORMAL
- en: 'Azure Load Balancer can be used for the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Public** **Load Balance**r: Incoming internet traffic is load balanced to
    VMs.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Internal Load Balancer**: Traffic can be load balanced across VMs inside
    a virtual network. You can use it in a hybrid scenario as well, where it reaches
    a Load Balancer inside an on-premises network.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Port forwarding**: You can forward traffic to specific ports on specific
    VMs using inbound **Network Address Translation** (**NAT**) rules.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Outbound connectivity**: You can also provide outbound connectivity for VMs
    inside a virtual network using it on Azure Load Balancer as a public load balancer.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Azure Load Balancer offers the following features and capabilities:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Load balancing**: Traffic can be distributed from a frontend pool to a backend
    pool using rules. Azure Load Balancer uses a five-tuple hash by default, which
    is composed of the source IP address, source port, destination IP address, destination
    ports, and the IP protocol number to map flows to the available servers in the
    backend pool.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Port forwarding**: Inbound NAT rules can be created to forward traffic from
    a specific port of the frontend IP address of the load balancer to a specific
    port of a backend instance inside an Azure Virtual Network. Therefore, the same
    hash-based distribution is used as for load balancing. This can be used for the **Remote
    Desktop Protocol** (**RDP**) and **Secure Shell** (**SSH**) sessions to VMs inside
    the VNet. Multiple internal endpoints can be mapped to various ports on the same
    frontend IP address. The VMs can be remotely administered using the frontend IP
    address. This way, an additional jump box is not needed.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Automatic reconfiguration**: The load balancer will automatically reconfigure
    itself when instances are scaled up or down. There is no need for additional operations
    on the load balancer when VMs are added or removed from the backend pool.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Health probes**: Azure Load Balancer uses health probes to determine the
    health on the VMs in the backend pool. The load balancer will stop sending new
    connections to an instance when a probe fails to respond. There are different
    health probes provided for HTTP, HTTPS, and TCP endpoints.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Outbound connections** (**SNAT**): Outbound connections are automatically
    translated to the public frontend IP address of the load balancer.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Azure Load Balancer comes in two different pricing tiers:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Basic**: The Basic Balancer is free to use. It has the following capabilities:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Backend pool size**: The Basic tier supports up to 100 instances inside a
    backend pool.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Health probes**: TCP and HTTP.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Availability zones**: Not available.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Outbound connections**: A single frontend is supported, which is selected
    at random when multiple frontends are configured. The default **Source** **Network
    Address Translation** (**SNAT**) is used when there is only an internal load balancer
    that is serving a VM, VM scale set, or availability set.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Outbound rules**: Not available.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Diagnostics**: Support for Azure Log Analytics for a public load balancer
    only, backend pool health count, and SNAT exhaustion alert.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**HA Ports**: Not available.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Secure by default**: Open by default; NSGs are optional.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**TCP Reset on Idle**: Not available.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Multiple frontends**: Not available.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Management Operations**: 60-90+ seconds.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**SLA**: Not available.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Standard**: You are charged for using the Standard tier of the Azure Load
    Balancer. The charge is based on the number of rules and the data that is associated
    with the resource and are processed inbound and outbound:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**B****ackend****pool size**: The standard tier supports up to 1,000 instances
    inside a backend pool.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Health probes**: TCP, HTTP, and HTTPS.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Availability Zones**: Support for zone-redundant and zonal frontends for
    inbound and outbound connections and cross-zone load balancing.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Outbound connections**: Multiple frontends can be used per load balancing
    rule opt-out. Pool-based outbound NAT can be explicitly defined using outbound
    rules. Outbound scenarios must be explicitly created to use outbound connectivity
    for the VM, VM scale set, or availability set. Virtual network service endpoints
    can be reached without defining outbound connectivity. Public IP addresses and **Platform
    as a Service** (**PaaS**), that are not available using VNet service endpoints,
    must be reached with outbound connectivity.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Outbound rules**: Outbound NAT configuration needs to be defined using public
    IP addresses, public IP prefixes, or both. You can configure the outbound idle
    timeout as well as custom SNAT port allocation.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Diagnostics**: Azure Load Balancer has support for Azure Monitor, with features
    including health probe status, outbound connection health (SNAT successful and
    failed flows), multi-dimensional metrics, and active data plane measurements.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**HA Ports**: Highly available ports for the internal load balancer only.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Secure by default**: Unless internal load balancers are whitelisted by an
    NSG, the endpoints are closed to inbound flows by default. Public IP addresses
    and load balancer endpoints are secured as well.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**TCP Reset on Idle**: This can be enabled on the idle timeout on any rule.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Multiple frontends**: For inbound and outbound connections.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Management operations**: < 30 seconds for most operations.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**SLA**: 99.99% for a data path with two healthy virtual machines.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Configuring an internal load balancer
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this demonstration, we are going to create and configure a load balancer
    from the Azure portal. We are going to route internal traffic with a basic load
    balancer to spread incoming requests to multiple virtual machines. For this demonstration,
    we are going to create a load balancer, backend servers, and network resources
    at the Basic pricing tier.
  prefs: []
  type: TYPE_NORMAL
- en: Creating the VNet
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'First, we are going to create the VNet, backend servers, and a test VM. To
    do this, take the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Navigate to the Azure portal by opening [https://portal.azure.com/](https://portal.azure.com/).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In the left menu, select Create a resource | Networking, and then select Virtual
    Network.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Add the following values:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Name**: `PacktLBVnet`'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Address space**: `172.16.0.0/16`'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Subscription**: Select a subscription'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Resource group**: Create a new one and call it **PacktLoadBalancer**'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Location**: East US'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Subnet name**: `PacktLBBackendSubnet`'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Subnet address range**: `172.16.0.0/24`'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**DDoS protection**: Basic'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Service endpoints**: Disabled'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Firewall**: Disabled:'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](img/9eb90c4f-2de4-4f01-afa5-005bb2dc4783.png)'
  prefs: []
  type: TYPE_IMG
- en: VNet settings
  prefs: []
  type: TYPE_NORMAL
- en: Click Create.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Creating the VMs
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The next step is to create the VMs that are used inside the backend pool and
    for testing. To do this, take the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: To create the VMs, select **Create a resource** in the left menu, and then select Compute and
    then Windows Server 2016 Datacenter.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'In the Create a virtual machine blade on the Basic tab, fill in the following
    values:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Subscription: Select a subscription'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Resource group: `PacktLoadBalancer` (which is created in the previous step).
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: Virtual machine name: `PacktLBVM1`.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Region: East US.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Availability options: Select Availability **set** and create a new one named `PacktLBAvailabilitySet`.
    Leave the default domain and update the domain settings.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Image: Windows Server 2016 Datacenter.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Size: Standard DS1 v2.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Credentials**: Specify a username and password for the VM.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Public inbound ports: Allow selected ports | select RDP (3389).
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Select the Networking tab and select the virtual network that we created in
    the previous step with the subnet, and fill in the following values:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'NIC network security group: Select **Advanced** and create a new network security
    group. Keep the default name for the new network security group.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Select the **Management** tab. Under **Monitoring**, set **Boot diagnostics** to **Off**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click the Review + create button to create the VM.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Repeat the preceding steps to create a second VM called `PacktLBVM2` and a third
    VM called `PacktLBVMTest` using the same settings, and place them in the same subscription,
    resource group, Availability Set and the same network security group.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Creating the load balancer
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Now we can create the load balancer as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: To create the basic load balancer, in the top menu, select Create a resource | Networking | Load
    Balancer.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Add the following values:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Subscription:** Pick a subscription'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Resource group: `PacktLoadBalancer`.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Name: `PacktLoadBalancer`.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Region: East US.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Type: Internal.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: SKU: Basic.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Virtual Network: Select `PacktLBVNet`.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Subnet: Select `PacktLBBackendSubnet`.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: IP address assignment: Static.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Private IP address: Provide an IP address that is in the address space of your
    virtual network and subnet, such as `172.16.0.7`.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Click Review + Create. Then click Create:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/f8a8a6f7-a348-486e-b1ad-f45dd8151243.png)'
  prefs: []
  type: TYPE_IMG
- en: Creating the load balancer
  prefs: []
  type: TYPE_NORMAL
- en: Creating a backend address pool
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Now, the VMs and the Azure Load Balancer instance have been created and the
    networking is configured, so it is time to create the backend pool, which is used
    by the load balancer to distribute the traffic to the VMs. The backend pool consists
    of the IP addresses of the **Network Interface Cards** (**NICs**).
  prefs: []
  type: TYPE_NORMAL
- en: 'We are going to create a backend pool with `PacktLBVM1` and `PacktLBVM2` in
    it:'
  prefs: []
  type: TYPE_NORMAL
- en: Open the load balancer resource that we created in the previous step inside
    the Azure portal.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Under Settings, select Backend pools, and then click the Add button:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/590a2165-4bb5-4272-82d3-80bdb5dc00d2.png)'
  prefs: []
  type: TYPE_IMG
- en: Creating the backend pool
  prefs: []
  type: TYPE_NORMAL
- en: 'Add the following values:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Name: `PacktLBBackendPool`.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Associated to: Select **Availability set**.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Availability set: Select `PacktLBAvailabilitySet`.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Select Add a target network IP configuration and add `PacktLBVM1` and `PacktLBVM2` to
    the backend pool.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Click OK:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/4c2fa7f4-f2ec-4e8d-a10a-85080520ba88.png)'
  prefs: []
  type: TYPE_IMG
- en: Adding the VMs to the backend pool
  prefs: []
  type: TYPE_NORMAL
- en: Creating health probes
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The next step is to create a health probe for the load balancer. The health
    probe is used for the load balancer to monitor the status of the VM. The probe
    will dynamically add or remove VMs from the load balancer rotation, based on the
    response to the health checks that are performed by the health probe.
  prefs: []
  type: TYPE_NORMAL
- en: 'To create a health probe, take the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Again, open the Load Balancer resource.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Under Settings, select Health probes, and then select Add:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/ca460c19-c5af-480d-a024-c04424ec0401.png)'
  prefs: []
  type: TYPE_IMG
- en: Creating a new health probe
  prefs: []
  type: TYPE_NORMAL
- en: 'Add the following values:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Name: `PacktHealthProbe`.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Protocol: HTTP.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Port: `80`.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Path: `*/*`**.**
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Interval: `15`—this is the number of seconds between probe attempts.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Unhealthy threshold: `2`*—*this value is the number of consecutive probe failures
    that occur before a VM is considered unhealthy.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Click OK:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/1ff08521-5951-400a-a11e-06cf1316e641.png)'
  prefs: []
  type: TYPE_IMG
- en: Health probe settings
  prefs: []
  type: TYPE_NORMAL
- en: Creating load balancing rules
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Load balancing rules define how the traffic is distributed to the VMs inside
    the backend pool. When you create a new rule, you define the frontend IP configuration
    for incoming traffic, the backend IP pool that receives the traffic, and the required
    source and destination ports.
  prefs: []
  type: TYPE_NORMAL
- en: The rule that we are going to create listens to port `80` at the frontend. The
    rule then sends the network traffic to the backend pool, also on port `80`.
  prefs: []
  type: TYPE_NORMAL
- en: 'To create the rule, take the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Again, open the Load Balancer resource.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Under Settings, select Load balancing rules, and then select Add:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/bf27a893-3d2c-416a-b56d-c62f4b92fc71.png)'
  prefs: []
  type: TYPE_IMG
- en: Creating a new rule
  prefs: []
  type: TYPE_NORMAL
- en: 'Add the following values:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Name: `PacktLoadBalancerRule`
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Frontend IP address: `LoadBalancerFrontEnd`
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Protocol: TCP
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Port: `` `80` ``
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Backend port: `80`
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Backend pool: `PacktLBBackendPool`
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Health probe: `PacktHealthProbe`
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Click OK:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/096d4baa-5900-47d8-9d22-a6f9a95f11dd.png)'
  prefs: []
  type: TYPE_IMG
- en: Configuring the rule
  prefs: []
  type: TYPE_NORMAL
- en: Testing the load balancer
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: To test the VMs properly, we are going to install **Internet Information Services**
    (**IIS**) on the `PacktLBVM1` and `PacktLBVM2` VMs using PowerShell. Then, we
    can use the `PacktLBVMTest` VM to test the load balancer by calling its private
    IP address.
  prefs: []
  type: TYPE_NORMAL
- en: 'First, we need to obtain the private IP address of the load balancer. Take
    the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: 'In the Overview page of the load balancer, copy the private IP address as follows:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/3732d015-404a-476a-a495-d62180d9995a.png)'
  prefs: []
  type: TYPE_IMG
- en: Obtaining the private IP address
  prefs: []
  type: TYPE_NORMAL
- en: 'Now, we need to connect to the `PacktLBVM1` and `PacktLBVM2` VM using an RDP session
    and install IIS and a testing web page on it. Connect to both the VMs, open the
    PowerShell console, and provide the following PowerShell script:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'Next, connect to the `PacktLBVMTest` VM using RDP as well, open a browser session,
    and navigate to the private IP address of the load balancer. Refresh the browser
    a couple of times to see the load balancer distributing the requests over the
    two VMs, as the following screenshot shows:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/250069a7-a4b4-4aa6-96e7-980bab339db4.png)'
  prefs: []
  type: TYPE_IMG
- en: Testing the load balancer
  prefs: []
  type: TYPE_NORMAL
- en: Configuring a public load balancer
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this section, we are going to create a public load balancer using the Azure
    CLI. You can copy the code snippets in Azure Cloud Shell, which is accessible
    from the Azure portal.
  prefs: []
  type: TYPE_NORMAL
- en: The full script for creating the public load balancer can be downloaded from
    GitHub as well. Refer to the location specified under the *Technical requirements*
    section at the beginning of this chapter.
  prefs: []
  type: TYPE_NORMAL
- en: Creating the load balancer
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: To create the public load balancer, a series of steps need to be taken. In the
    upcoming sections, we will create the public load balancer with all the necessary
    components.
  prefs: []
  type: TYPE_NORMAL
- en: Creating a resource group
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'We start by creating a resource group for the load balancer and other resources
    as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Creating a public IP address
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Next, we are going to configure a public IP address for the load balancer to
    access it from the internet. A standard load balancer only supports standard public
    IP addresses, as shown in the following code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: Creating the load balancer
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In the following sections, we are going to create the load balancer and will
    create the components, including a frontend IP pool, backend IP pool, a health
    probe, and a load balancer rule.
  prefs: []
  type: TYPE_NORMAL
- en: 'To create the load balancer, add the following code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: Creating the health probe
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: All VM instances are checked by the health probe to define whether they are
    healthy enough to send network traffic to them. Virtual machine instances that
    are unhealthy are removed from the load balancer until the probe check determines
    that they are healthy again.
  prefs: []
  type: TYPE_NORMAL
- en: 'To create the health probe, add the following code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: Creating the load balancer rule
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The load balancer rule defines the frontend IP configuration for the incoming
    traffic and the backend IP pool to receive the traffic, together with the required
    source and destination ports, as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: Creating the virtual network
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'We now need to create the virtual network to deploy the VMs too, with the following
    code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: Creating an NSG
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Next, we will create an NSG. It is a requirement for a standard load balancer
    that the VMs in the backend have NICs that are placed in an NSG. We need to create
    the NSG to define the inbound connections to the virtual network as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: Creating an NSG rule
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'To allow inbound connections through port `80`, create an NSG rule as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: Creating NICs
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'We need to create two network interfaces and associate them with the NSG and
    the public IP address, as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: Creating backend servers
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Next is creating the backend servers. We are going to create two VMs that are
    going to be used as backend servers for the load balancer. We are also going to
    install **NGINX** (which is an open source, high-performance HTTP server, and
    reverse proxy) on it to test the load balancer.
  prefs: []
  type: TYPE_NORMAL
- en: Creating an availability set
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'To create an availability set, add the following piece of code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: Creating two virtual machines
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'We are going to create two VMs with NGINX installed on it. We are also going
    to create a `Hello World` Node.js app on the Linux virtual machines. For this,
    we need to create a file called `cloud-init.txt` and paste the configuration in
    it. The following `cloud-init` configuration installs all the required packages,
    then creates the `Hello World` app, and then starts the app. To create the `cloud-init.txt` file,
    add the following line:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: 'Select an editor and paste in the following configuration. First, add the packages:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: 'Then set up the server:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: 'Next, create the app:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: 'And, finally, run the app:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: 'With the above blocks of code, we now created the cloud-init.txt file for our
    VMs. save the file in the editor and exit it.  Now, we can continue with creating
    the two virtual machines and apply the configuration on it, as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: Testing the load balancer
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'To test the load balancer, we need to obtain the public IP address of it and
    paste this into a browser window. Wait for the VMs to be fully provisioned and
    running. You can check this in the Azure portal. Then, to obtain the public IP
    address, add the following line of code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE17]'
  prefs: []
  type: TYPE_PRE
- en: 'Paste the output of this line of code into your browser window to see the Azure
    Load Balancer in action:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/5932aeb6-6c51-4542-9552-b8fc914a690a.png)'
  prefs: []
  type: TYPE_IMG
- en: Testing the public load balancer
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we covered how to configure internal and external load balancers.
    You also learned how to configure load balancing rules and health probes.
  prefs: []
  type: TYPE_NORMAL
- en: In the next chapter, we will continue with the fifth part of *Deploying and
    Managing Virtual Networks* objective by covering how to integrate an on-premises
    network with an Azure Virtual Network.
  prefs: []
  type: TYPE_NORMAL
- en: Questions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Answer the following questions to test your knowledge of the information in
    this chapter. You can find the answers in the *Assessments* section at the end
    of this book:'
  prefs: []
  type: TYPE_NORMAL
- en: Can a basic load balancer only be created from the Azure portal?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Yes'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'No'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Is it necessary for a standard load balancer that the VMs in the backend have
    NICs that are placed in an NSG?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Yes'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'No'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Does a standard load balancer needs a standard public IP address to function
    properly?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Yes'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'No'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Further reading
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'You can check the following links for more information about the topics that
    are covered in this chapter:'
  prefs: []
  type: TYPE_NORMAL
- en: '*Load Balancer*: [https://docs.microsoft.com/en-us/azure/load-balancer/](https://docs.microsoft.com/en-us/azure/load-balancer/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Quickstart: Create a load balancer to load balance VMs using Azure CLI*: [https://docs.microsoft.com/en-us/azure/load-balancer/quickstart-create-basic-load-balancer-cli](https://docs.microsoft.com/en-us/azure/load-balancer/quickstart-create-basic-load-balancer-cli)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Quickstart: Create a public load balancer using Azure PowerShell*: [https://docs.microsoft.com/en-us/azure/load-balancer/quickstart-create-basic-load-balancer-powershell](https://docs.microsoft.com/en-us/azure/load-balancer/quickstart-create-basic-load-balancer-powershell)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Quickstart: Create a Standard Load Balancer to load balance VMs using the
    Azure portal*: [https://docs.microsoft.com/en-us/azure/load-balancer/quickstart-load-balancer-standard-public-portal](https://docs.microsoft.com/en-us/azure/load-balancer/quickstart-load-balancer-standard-public-portal)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Quickstart: Create a Standard Load Balancer using Azure PowerShell*: [https://docs.microsoft.com/en-us/azure/load-balancer/quickstart-create-standard-load-balancer-powershell](https://docs.microsoft.com/en-us/azure/load-balancer/quickstart-create-standard-load-balancer-powershell)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
