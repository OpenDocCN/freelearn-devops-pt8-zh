["```\n# ssh-keygen \n```", "```\n/home/<USER_NAME>/.ssh/<KEY_NAME> \n```", "```\n# cat /home/<USER_NAME>/.ssh/<KEY_NAME> \n```", "```\n# vi ~/.ssh/config\n##### SUBSTITUTE THE <VALUES> WITH YOUR ACTUAL ONES #####\n    Host git-codecommit.*.amazonaws.com\n      User <SSH_KEY_ID>\n      IdentityFile ~/.ssh/<PRIVATE_KEY_FILENAME>\n\n```", "```\n# chmod 600 config\n```", "```\n# ssh git-codecommit.us-east-1.amazonaws.com\n```", "```\n# git clone https://git-codecommit.us-east-1.amazonaws.com/v1/repos/<YOUR_CODECOMMIT_REPO> \n```", "```\n# git add *\n```", "```\n# git commit -m \"First Commit!!\"\n```", "```\n# git push -u origin master\n```", "```\n# git checkout -b <NEW_BRANCH_NAME>\n```", "```\n# git add *\n```", "```\n# git commit -m \"<SOME_NEW_COMMIT_MESSAGE>\"\n```", "```\n# git push origin <NEW_BRANCH_NAME>\n```", "```\n{ \n    \"Version\": \"2012-10-17\", \n    \"Statement\": [ \n        { \n            \"Action\": [ \n                \"ec2:Describe*\", \n                \"sns:*\", \n                \"codecommit:*\", \n                \"codedeploy:*\", \n                \"codepipeline:*\", \n                \"codecommit:GetBranch\", \n                \"codecommit:GetCommit\", \n                \"codecommit:UploadArchive\", \n                \"codecommit:GetUploadArchiveStatus\", \n                \"codecommit:CancelUploadArchive\", \n                \"s3:*\" \n            ], \n            \"Effect\": \"Allow\", \n            \"Resource\": \"*\" \n        } \n    ] \n}\n```", "```\n{ \n  \"Version\": \"2012-10-17\", \n  \"Statement\": [ \n    { \n      \"Sid\": \"\", \n      \"Effect\": \"Allow\", \n      \"Principal\": { \n        \"Service\": [ \n          \"codecommit.us-east-1.amazonaws.com\", \n          \"ec2.amazonaws.com\", \n          \"codedeploy.us-east-1.amazonaws.com\", \n          \"codepipeline.us-east-1.amazonaws.com\" \n        ] \n      }, \n      \"Action\": \"sts:AssumeRole\" \n    } \n  ] \n} \n```", "```\n#!/bin/bash \nyum -y update \nyum install -y ruby \nyum install -y aws-cli \ncd /home/ec2-user \naws s3 cp s3://aws-codedeploy-us-east-1/latest/install . --region us-east-1 \nchmod +x ./install \n./install auto \n```", "```\nversion: 0.0 \nos: linux \nfiles: \n  - source: / \n    destination: /var/www/html/WordPress \nhooks: \n  BeforeInstall: \n    - location: scripts/install_dependencies.sh \n      timeout: 300 \n      runas: root \n  AfterInstall: \n    - location: scripts/change_permissions.sh \n      timeout: 300 \n      runas: root \n  ApplicationStart: \n    - location: scripts/start_server.sh \n      timeout: 300 \n      runas: root \n  ApplicationStop: \n    - location: scripts/stop_server.sh \n      timeout: 300 \n      runas: root \n```", "```\n# vi appspec.yml \n```", "```\n# mkdir scripts\n```", "```\n# vi scripts/install_dependencies.sh \n#!/bin/bash \nsudo yum install -y httpd mysql mysql-server php \nsudo yum install -y php-mysql \n```", "```\n# vi scripts/change_permissions.sh \n#!/bin/bash \nchmod -R 755 /var/www/html/WordPress \n```", "```\n# vi scripts/start_server.sh \n#!/bin/bash \nservice httpd start \nservice mysqld start \n\n# vi scripts/stop_server.sh \n#!/bin/bash \nisExistApp=`pgrep httpd` \nif [[ -n  $isExistApp ]]; then \n   service httpd stop \nfi \nisExistApp=`pgrep mysqld` \nif [[ -n  $isExistApp ]]; then \n    service mysqld stop \nfi \n```", "```\n# git add * \n# git commit -m \"Added scripts directory with AppSpec file!\" \n# git push -u origin <NEW_BRANCH_NAME>\n```", "```\nhttp:///WordPress/wp-admin/index.php\n```"]