- en: Creating and Configuring Storage Accounts
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In the previous chapter, we covered how to configure **role-based access control**
    (**RBAC**) in Azure, how to create custom roles, and how to implement and assign
    Azure policies.
  prefs: []
  type: TYPE_NORMAL
- en: This chapter will introduce a new objective in terms of implementing and managingstorage*.*
    In this chapter, we are going to cover the different types of storage account,
    and you will learn which types are available for storing your data in Azure. We
    will also cover how to install Azure Storage Explorer, which can be used to manage
    data inside Azure storage accounts. We are going to look at how to secure data
    using **shared access signatures** (**SAS**) and how to implement storage replication
    to keep data safe.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following topics will be covered in this chapter:'
  prefs: []
  type: TYPE_NORMAL
- en: Azure storage accounts
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Creating and configuring a storage account
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Installing and using Azure Storage Explorer
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Configuring network access to the storage account
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Generating and managing SAS
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Implementing Azure storage replication
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Technical requirements
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This chapter will uses Azure PowerShell ([https://docs.microsoft.com/en-us/powershell/azure/install-az-ps?view=azps-1.8.0](https://docs.microsoft.com/en-us/powershell/azure/install-az-ps?view=azps-1.8.0)) for
    examples.
  prefs: []
  type: TYPE_NORMAL
- en: The source code for our sample application can be downloaded from [https://github.com/PacktPublishing/Microsoft-Azure-Administrator-Exam-Guide-AZ-103/tree/master/Chapter04](https://github.com/PacktPublishing/Microsoft-Azure-Administrator-Exam-Guide-AZ-103/tree/master/Chapter04).
  prefs: []
  type: TYPE_NORMAL
- en: Azure storage accounts
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Azure offers a variety of types of storage accounts that can be used to store
    all sorts of files in Azure. You can store files, documents, and datasets, but
    also blobs and **virtual hard disks** (**VHDs**). There is even a type of storage
    account for archiving, specifically. In the next section, we are going to look
    at the different types of storage accounts, and storage account replication types, that
    Azure has to offer.
  prefs: []
  type: TYPE_NORMAL
- en: Storage account types
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Azure storage offers three different account types, which can be used for blob,
    table, file, and queue storage.
  prefs: []
  type: TYPE_NORMAL
- en: General-purpose v1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The **general-purpose v1** (**GPv1**) storage account is the oldest type of
    storage account. It offers storage for page blobs, block blobs, files, queues,
    and tables, but it is not the most cost-effective storage account type. It is
    the only storage account type that can be used for the classic deployment model.
    It doesn't support the latest features, such as access tiers.
  prefs: []
  type: TYPE_NORMAL
- en: Blob storage
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The blob storage account offers all the features of `StorageV2` accounts, except
    that it only supports block blobs (and append blobs). Page blobs are not supported.
    It offers access tiers, which consist of hot, cool, and archive storage, and which
    will be covered later in this chapter.
  prefs: []
  type: TYPE_NORMAL
- en: General-purpose v2 (GPv2)
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '`StorageV2` is the newest type of storage account, and it combines the V1 storage
    with blob storage. It offers all the latest features, such as access tiers for
    blob storage, with a reduction in costs. Microsoft recommends using this account
    type over the V1 and blob storage account types.'
  prefs: []
  type: TYPE_NORMAL
- en: V1 storage accounts can easily be upgraded to V2.
  prefs: []
  type: TYPE_NORMAL
- en: For more information on pricing and billing for these different account types,
    you can refer to the following pricing page: [https://azure.microsoft.com/en-us/pricing/details/storage/](https://azure.microsoft.com/en-us/pricing/details/storage/).
  prefs: []
  type: TYPE_NORMAL
- en: Storage replication types
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Data that is stored in Azure is always replicated to ensure durability and high
    availability. This way, it is protected from unplanned and planned events, such
    as network or power outages, natural disasters, and terrorism. It also ensures
    that, during these types of events, your storage account still meets the SLA.
    Data can be replicated within the same data center, across zonal data centers
    within the same region, and across different regions. These replication types
    are named **locally redundant storage** (**LRS**), **zone redundant storage**
    (**ZRS**), **geo-redundant storage** (**GRS**), and** read-access geo-redundant
    storage** (**RA-GRS**), and they will be covered in more detail in the upcoming
    sections.
  prefs: []
  type: TYPE_NORMAL
- en: You choose a replication type when you create a new storage account. Storage
    accounts can be created inside the Azure portal, as well as from PowerShell or
    the CLI.
  prefs: []
  type: TYPE_NORMAL
- en: LRS
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: LRS is the cheapest option, and replicates the data three times within the same
    data center. When you make a write request to your storage account, it will be
    synchronously written during this request to all three replicas. The request is
    committed when the data is completely replicated. With LRS, the data will be replicated
    across multiple update domains and fault domains within one storage scale unit.
  prefs: []
  type: TYPE_NORMAL
- en: ZRS
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: ZRS is currently in preview, and is only available in US East 2 and US Central.
    It replicates three copies across two or three data centers. The data is written
    synchronously to all three replicas, in one or two regions. It also replicates
    the data three times inside the same data center where the data resided, just
    like LRS.
  prefs: []
  type: TYPE_NORMAL
- en: GRS
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: GRS replicates the data three times within the same region, like ZRS, and also
    replicates three copies to other regions asynchronously.
  prefs: []
  type: TYPE_NORMAL
- en: RA-GRS
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: RA-GRS provides georeplication across two regions, with read-only access to
    the data in the secondary location. This will maximize the availability for your
    storage account. When you enable RA-GRS, your data will be available on a primary
    and a secondary endpoint for your storage account as well. The secondary endpoint
    will be similar to the primary endpoint, but it appends the **secondary **suffixto
    it. The access keys that are generated for your storage account can be used for
    both endpoints.
  prefs: []
  type: TYPE_NORMAL
- en: Now that we have covered the different storage replication types that are set
    when you create a storage account, we can look at the different storage accounts
    that Azure has to offer.
  prefs: []
  type: TYPE_NORMAL
- en: Azure blob storage
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Azure blob storage offers unstructured data storage in the cloud. It can store
    all kinds of data, such as documents, VHDs, images, and audio files. There are
    two types of blobs that you can create. One type is page blobs, which are used
    for the storage of disks. So, when you have a VHD that needs to be stored and
    attached to your VM, you will have to create a page blob. The maximum size of
    a page blob is 1 TB.
  prefs: []
  type: TYPE_NORMAL
- en: The other type is block blobs, which basically cover all the other types of
    data that you can store in Azure, such as files and documents. The maximum size
    of a block blob is 200 GB. However, there is also a third blob type named append
    blob, but this one is used internally by Azure and can't be used in order to store
    actual files. There are a couple of ways that you can copy blobs to your blob
    storage account. You can use the Azure portal (only one at a time) or Azure Storage
    Explorer, or you can copy your files programmatically by using .NET, PowerShell,
    the CLI, or by calling the REST API.
  prefs: []
  type: TYPE_NORMAL
- en: Access tiers
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Blob storage accounts use access tiers to determine how frequently the data
    is accessed. Based on this access tier, you will get billed. Azure offers three
    storage access tiers: hot, cool, and archive.'
  prefs: []
  type: TYPE_NORMAL
- en: Hot
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The hot access tier is most suitable for storing data that's accessed frequently
    and data that is in active use. For instance, you would store images and style
    sheets for a website inside the hot access tier. The storage costs for this tier
    are higher than for the other access tiers, but you pay less for accessing the
    files.
  prefs: []
  type: TYPE_NORMAL
- en: Cool
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The cool access tier is the most suitable for storing data that is not accessed
    frequently (less than once in 30 days). Compared with the hot access tier, the
    cool tier has lower storage costs, but you pay more for accessing the files. This
    tier is suitable for storing backups and older content that is not viewed often.
  prefs: []
  type: TYPE_NORMAL
- en: Archive
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The archive storage tier is set on the blob level and not on the storage level.
    It has the lowest costs for storing data and the highest cost for accessing data
    compared to the hot and cool access tiers. This tier is for data that will remain
    in the archive for at least 180 days, and it will take a couple of hours of latency
    before it can be accessed. This tier is most suitable for long-term backups or
    compliance and archive data. A blob in the archive tier is offline and cannot
    be read (except for the metadata), copied, overwritten, or modified.
  prefs: []
  type: TYPE_NORMAL
- en: Azure file storage
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: With Azure files, you can create file shares in the cloud. You can access your
    files using the **Server Message Block** (**SMB**) protocol, which is an industry
    standard and can be used on Linux, Windows, and macOS devices. Azure files can
    also be mounted as if it is a local drive on these same devices as well, and they
    can be cached for fast access on Windows Server using Azure File Sync.
  prefs: []
  type: TYPE_NORMAL
- en: File shares can be used across multiple machines, which makes them suitable
    for storing files or data that are accessed from multiple machines, such as tools
    for development machines, or configuration files or log data. Azure File Share
    is part of the Azure storage client libraries and offers an Azure storage REST
    API, which can be leveraged by developers in their solutions.
  prefs: []
  type: TYPE_NORMAL
- en: Details on how to configure Azure file storage will be covered in more detail
    in [Chapter 6](6bb56fd5-3785-42d2-b32c-4ba14333dca4.xhtml), *Configuring Azure
    Files and Implementing Azure Backup.*
  prefs: []
  type: TYPE_NORMAL
- en: Azure disk storage
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The disks that are used for virtual machines are stored in Azure blob storage
    as page blobs. Azure stores two disks for each virtual machine: the actual operating
    system (VHD) of the VM, and a temporary disk that is used for short-term storage.
    This data is erased when the VM is turned off or rebooted.'
  prefs: []
  type: TYPE_NORMAL
- en: 'There are two different performance tiers that Azure offers: standard disk
    storage and premium disk storage.'
  prefs: []
  type: TYPE_NORMAL
- en: Standard disk storage
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Standard disk storage offers HDD drives to store the data on, and it is the
    most cost-effective storage tier that you can choose. It can only use LRS or GRS
    in order to support high availability for your data and applications.
  prefs: []
  type: TYPE_NORMAL
- en: Premium disk storage
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: With premium disk storage, your data is stored on SSDs. Not all Azure virtual
    machines series can use this type of storage. It can only be used with DS, DSv2,
    GS, LS, or FS series Azure virtual machines. It offers high-performance and low-latency
    disk support.
  prefs: []
  type: TYPE_NORMAL
- en: Unmanaged versus managed disks
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Managed disks automatically handle the storage account creation for you. With
    unmanaged disks, which are the traditional disks used for VMs, you need to create
    a storage account manually, and then select that storage account when you create
    the VM. With managed disks, this burden is handled for you by Azure. You select
    the disk type and the performance tier (standard or premium), and the managed
    disk is created. It also handles scaling automatically for you.
  prefs: []
  type: TYPE_NORMAL
- en: Managed disks are recommended by Microsoft over unmanaged disks.
  prefs: []
  type: TYPE_NORMAL
- en: Now that we have covered all the background information that you need to know
    about the different storage accounts, we are going to create a new storage account.
  prefs: []
  type: TYPE_NORMAL
- en: Creating and configuring storage accounts
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Before you can upload any data or files to Azure storage, a storage account
    needs to be created. This can be done using the Azure portal, PowerShell, the
    CLI, ARM templates, or Visual Studio.
  prefs: []
  type: TYPE_NORMAL
- en: 'In this demonstration, we are going to create a storage account with PowerShell:'
  prefs: []
  type: TYPE_NORMAL
- en: 'First, we need to log in to the Azure account:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'If necessary, select the right subscription:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Create a resource group:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'Create the storage account:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: In this demonstration, we created a new storage account using PowerShell. If
    you are new to storage accounts, I highly recommend creating a storage account
    from the Azure portal as well. That way, you will see all the available storage
    account types, storage replication types, access tiers that you can choose from,
    the different performance tiers (standard or premium), and how this is all connected
    to each other.
  prefs: []
  type: TYPE_NORMAL
- en: Now that we have created a new storage account, we can install the Azure Storage
    Explorer tool.
  prefs: []
  type: TYPE_NORMAL
- en: Installing and using Azure Storage Explorer
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Azure Storage Explorer is a standalone application that can be used to easily
    work with the different types of data that are stored in an Azure storage account.
    You can upload, download, and manage files, queues, tables, blobs, data lake storage,
    and Cosmos DB entities using Azure Storage Explorer. Aside from that, you can
    also use the application to configure and manage **c****ross-origin resource sharing**
    (**CORS**) rules for your storage accounts. This application can be used on Windows,
    Linux, and macOS devices.
  prefs: []
  type: TYPE_NORMAL
- en: 'To install the application, you have to perform the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Navigate to [https://azure.microsoft.com/en-us/features/storage-explorer/](https://azure.microsoft.com/en-us/features/storage-explorer/) to
    download the application.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Once it has been downloaded, install the application.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'When the application is installed, open the application. You will be prompted
    to connect to your Azure environment. There are a couple of options to choose
    from. You can add an Azure account by connecting to your Azure environment using
    your administrator credentials, use a shared access signature (which will be covered
    later in this chapter), use a storage account name and key, and you can select
    the  Attach to a local emulator option if you so desire. For this demonstration,
    keep the default option selected and click on **Sign in**:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/7cac97f1-6b7f-4293-a818-f0b6b370d15c.png)'
  prefs: []
  type: TYPE_IMG
- en: Connecting to Azure storage
  prefs: []
  type: TYPE_NORMAL
- en: Provide your credentials and log in.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'All of your subscriptions will be added to the left-hand pane. Once this is
    done, click on Apply:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/5db7adf4-c675-43f7-ada8-3502cb5286fd.png)'
  prefs: []
  type: TYPE_IMG
- en: Applying the subscriptions
  prefs: []
  type: TYPE_NORMAL
- en: 'You can now drill down to the subscription and the storage account that we
    created in the first demonstration from the left-hand pane. Select the storage
    account. From there, you can access the blob containers, file shares, queues,
    and tables:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/ed9a9783-5750-4cb0-b342-b5cf8c88ce93.png)'
  prefs: []
  type: TYPE_IMG
- en: Storage account settings
  prefs: []
  type: TYPE_NORMAL
- en: 'To add some files to a blob container, we need to create a blob container in
    the storage account. Therefore, right-click on **Blob Containers** in the left-hand
    menu and select **Create Blob Container. **Call the container `packtblobcontainer`;
    now, you can upload files to that container. Click on the **Upload** button in
    the top menu, click on **Upload** **files**, and select some files from your local
    computer:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/9fd89af7-b6c6-42f6-91af-0328c7fa9452.png)'
  prefs: []
  type: TYPE_IMG
- en: Uploading files to the blob container
  prefs: []
  type: TYPE_NORMAL
- en: You will see that the files will be uploaded to the blob container.
  prefs: []
  type: TYPE_NORMAL
- en: If you navigate to the overview blade of the storage account in the Azure portal,
    you will see a button on the top menu that says **Open in explorer**. This will
    open the Azure Storage Explorer, which can then be used to easily manage all the
    data that resides in the storage account.
  prefs: []
  type: TYPE_NORMAL
- en: Now that we have installed the Azure Storage Explorer tool and uploaded some
    files to a blob container, we can configure the network access to the storage
    account.
  prefs: []
  type: TYPE_NORMAL
- en: Configuring network access to the storage account
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: You can secure your storage account to a specific set of supported networks.
    For this, you have to configure network rules so that only applications that request
    data over the specific set of networks can access the storage account. When these
    network rules are effective, the application needs to use proper authorization
    on the request. This authorization can be provided by Azure Active Directory credentials
    for blobs and queues, with an SAS token or a valid account access key.
  prefs: []
  type: TYPE_NORMAL
- en: 'In the following demonstration, we are going to configure network access to
    the storage account that we created in the previous step. You can manage storage
    accounts through the Azure portal, PowerShell, or CLIv2. We are going to set this
    configuration from the Azure portal. Therefore, we have to perform the following
    steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Navigate to the Azure portal by opening [https://portal.azure.com](https://portal.azure.com).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Go to the storage account that we created in the previous step.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'From the overview blade, in the left-hand menu, select Firewalls and virtual
    networks:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/169ec110-5636-461f-a9cb-482e8defb766.png)'
  prefs: []
  type: TYPE_IMG
- en: Storage account overview blade
  prefs: []
  type: TYPE_NORMAL
- en: 'To grant access to a virtual network with a new network rule, under Virtual
    Networks, there are two options to choose from: All networks, which allows traffic
    from all networks (both virtual and on-premises) and the internet to access the
    data, and Selected networks. If you select this option, you can configure which
    networks are allowed to access the data from the storage account. Select Selected
    networks. Then, you can select whether you want to add an existing virtual network
    or create a new one. For this demonstration, click on + Add new virtual network:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/c795d728-49d3-4a47-9c90-d035f825adde.png)'
  prefs: []
  type: TYPE_IMG
- en: Creating a new network
  prefs: []
  type: TYPE_NORMAL
- en: 'A new blade will open, where you will have to specify the network configuration.
    Specify the configuration that''s shown in the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/df5f1424-0949-471b-b6b7-0f8d149273a4.png)'
  prefs: []
  type: TYPE_IMG
- en: Network configuration settings
  prefs: []
  type: TYPE_NORMAL
- en: Click on **Create**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'The virtual network will be added to the overview blade. This storage account
    is now secure and can be accessed only from applications and other resources that
    use this virtual network. In this same blade, you can also configure the firewall
    and only allow certain IP ranges from the internet or your on-premises environment:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/96f70967-da2a-41d8-af09-2949b10946ed.png)'
  prefs: []
  type: TYPE_IMG
- en: IP ranges
  prefs: []
  type: TYPE_NORMAL
- en: This concludes this demonstration. In the next demonstration, we are going to
    generate and manage SAS.
  prefs: []
  type: TYPE_NORMAL
- en: SAS and access keys
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: By using an SAS, you can provide a way to grant limited access to objects and
    data that are stored inside your storage account to the clients that connect to
    it. Using an SAS, you don't have to expose your access keys to the clients.
  prefs: []
  type: TYPE_NORMAL
- en: When you create a storage account, primary and secondary access keys are created.
    Both of these keys can grant administrative access to your account and all the
    resources within it. Exposing those keys can also open your storage account to
    negligent or malicious use. SAS provides a safe alternative to this that will
    allow clients to read, write, and delete data in your storage account according
    to the permissions you've explicitly granted, and without the need for an account
    key.
  prefs: []
  type: TYPE_NORMAL
- en: In the next section, we're going to look at how to manage our access keys and
    how to generate an SAS for our storage account.
  prefs: []
  type: TYPE_NORMAL
- en: Managing access keys
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'To manage access keys, perform the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Navigate to the Azure portal by opening [https://portal.azure.com](https://portal.azure.com).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Again, go to the storage account that we created in the previous step.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Once the overview blade is open, under **Settings**, select **Access keys**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Here, you can see both of the access keys that were generated for you when
    the storage account was created. The reason that Azure created two access keys
    for you is because if you regenerate a new key, all of the SAS that you created
    for this key will no longer work. You can then let applications access that data
    using the secondary key, and once the key is regenerated, you can share the new
    key with your clients. You can generate new keys by clicking on the buttons next
    to both keys:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/c71c7edc-1345-4c10-881c-285e2dad41be.png)'
  prefs: []
  type: TYPE_IMG
- en: Access keys
  prefs: []
  type: TYPE_NORMAL
- en: There is also a connection string provided for each key which can be used by
    client applications to access the storage account.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In the next section, we're going to generate an SAS for the access keys.
  prefs: []
  type: TYPE_NORMAL
- en: Generating an SAS
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In this demonstration, we are going to generate an SAS for our blob store. To
    generate an SAS, perform the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Navigate to the Azure portal by opening [https://portal.azure.com](https://portal.azure.com).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Again, go to the storage account that we created in the previous step.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Once the overview blade is open, under **Settings**, select **Shared access
    signature**:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/9c46c1d8-06bf-4c1a-82d5-22f89e8c699b.png)'
  prefs: []
  type: TYPE_IMG
- en: Selecting Shared access signature
  prefs: []
  type: TYPE_NORMAL
- en: 'To only allow the blob storage to be accessed, disable the file, queue, and
    table. Keep the default permissions, and then select an expiration date and time.
    You can also set the allowed protocols in here. At the bottom of the screen, you
    can apply these permissions to the different keys. Keep **key1** selected and
    click on **Generate SAS and connection string**:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/c5a90381-5b67-4a60-8629-c0148c185678.png)'
  prefs: []
  type: TYPE_IMG
- en: Generating SAS and connection string
  prefs: []
  type: TYPE_NORMAL
- en: You can now use this token to request the data from the blob storage.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: This concludes this demonstration. In the next section, we are going to look
    at how to implement Azure storage replication.
  prefs: []
  type: TYPE_NORMAL
- en: Implementing Azure storage replication
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The data in Azure is always replicated to ensure durability and high availability. Azure
    storage copies your data so that it is protected from planned and unplanned events,
    including transient hardware failures, network or power outages, and massive natural
    disasters. We have already covered the different replication types that Azure
    offers for your storage accounts.
  prefs: []
  type: TYPE_NORMAL
- en: 'Storage replication can be set during the creation of the storage account.
    You can change the type of replication later as well by using Azure portal, PowerShell,
    or the CLI. To change this in the Azure portal, you have to perform the following
    steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Navigate to Azure portal by opening [https://portal.azure.com](https://portal.azure.com).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Go to the storage account that we created in the previous step.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Under **Settings**, select **Configuration**. In this blade, under **Replication**, you
    can change the type of replication:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/d828e0f4-4e3a-4ffc-8773-3717fdc7735b.png)'
  prefs: []
  type: TYPE_IMG
- en: Changing the type of replication
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we covered the first part of the *Implementing and Managing
    Storage* objective. We covered the different types of storage that are available
    to us in Azure, and when we should use them. We also covered how we can manage
    our data using Azure Storage Explorer, and how we can secure our data using SAS.
    Finally, we covered how to replicate data from storage accounts.
  prefs: []
  type: TYPE_NORMAL
- en: In the next chapter, we'll cover the second part of this exam objective. In
    that chapter, we will cover how to import and export data to Azure.
  prefs: []
  type: TYPE_NORMAL
- en: Questions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Answer the following questions to test your knowledge of the information in
    this chapter. You can find the answers in the *Assessments* section at the end
    of this book:'
  prefs: []
  type: TYPE_NORMAL
- en: Can the Azure Storage Explorer application only be used on Windows devices?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Yes'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'No'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Can you configure storage accounts to be accessed from specific virtual networks,
    and not from on-premises networks?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Yes'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'No'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Can you only set the type of replication for your storage accounts during the
    creation of the storage account?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Yes'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'No'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Further reading
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'You can check out the following links for more information about the topics
    that were covered in this chapter:'
  prefs: []
  type: TYPE_NORMAL
- en: '*Azure Storage Documentation*: [https://docs.microsoft.com/en-us/azure/storage/](https://docs.microsoft.com/en-us/azure/storage/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Get started with Storage Explorer*: [https://docs.microsoft.com/en-us/azure/vs-azure-tools-storage-manage-with-storage-explorer?tabs=windows](https://docs.microsoft.com/en-us/azure/vs-azure-tools-storage-manage-with-storage-explorer?tabs=windows)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Configure Azure Storage firewalls and virtual networks*: [https://docs.microsoft.com/en-us/azure/storage/common/storage-network-security](https://docs.microsoft.com/en-us/azure/storage/common/storage-network-security)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Azure Storage redundancy*: [https://docs.microsoft.com/en-us/azure/storage/common/storage-redundancy](https://docs.microsoft.com/en-us/azure/storage/common/storage-redundancy)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
