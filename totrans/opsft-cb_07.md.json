["```\n    $ rhc create-app jobstore jbosseap-6\n\n    ```", "```\n    $ rhc cartridge-add postgresql-9.2\n\n    ```", "```\n    <maven.compiler.source>1.7</maven.compiler.source>\n    <maven.compiler.target>1.7</maven.compiler.target>\n    ```", "```\n    @Entity\n    public class Job {\n\n    @Id\n    @GeneratedValue(strategy = GenerationType.AUTO)\n    private Long id;\n\n    @NotNull\n    private String title;\n\n    @NotNull\n    @Size(max = 4000)\n    private String description;\n\n    @Column(updatable = false)\n    @Temporal(TemporalType.DATE)\n    @NotNull\n    private Date postedAt = new Date();\n\n    @NotNull\n    private String company;\n\n    //setters and getters removed for brevity\n\n    }\n    ```", "```\n    <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n    <persistence \n    xsi:schemaLocation=\"http://java.sun.com/xml/ns/persistence http://java.sun.com/xml/ns/persistence/persistence_2_0.xsd\"\n    version=\"2.0\">\n\n    <persistence-unit name=\"jobstore\" transaction-type=\"JTA\">\n    <provider>org.hibernate.ejb.HibernatePersistence</provider>\n    <jta-data-source>java:jboss/datasources/PostgreSQLDS</jta-data-source>\n\n    <exclude-unlisted-classes>false</exclude-unlisted-classes>\n\n    <properties>\n    <property name=\"hibernate.show_sql\" value=\"true\" />\n    <property name=\"hibernate.hbm2ddl.auto\"value=\"update\" />\n    </properties>\n    </persistence-unit>\n\n    </persistence>\n    ```", "```\n    @Stateless\n    public class JobService {\n\n    @PersistenceContext(unitName = \"jobstore\")\n    private EntityManager entityManager;\n\n    public Job save(Job job) {\n    entityManager.persist(job);\n    return job;\n    }\n\n    public List<Job> findAll() {\n    return entityManager\n    .createQuery(\"SELECT j from org.osbook.jobstore.domain.Job j order by j.postedAt desc\", Job.class)\n    .getResultList();\n    }\n    }\n    ```", "```\n    <?xml version=\"1.0\"?>\n    <beans \n     xsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee http://jboss.org/schema/cdi/beans_1_0.xsd\"/>\n    ```", "```\n    @ApplicationPath(\"/api/v1\")\n    public class RestConfig extends Application {\n    }\n    ```", "```\n    @Path(\"/jobs\")\n    public class JobResource {\n\n    @Inject\n    private JobService jobService;\n\n    @POST\n    @Consumes(MediaType.APPLICATION_JSON)\n    public Response createNewJob(@Valid Job job) {\n    job = jobService.save(job);\n    return Response.status(Status.CREATED).build();\n    }\n\n    @GET\n    @Produces(MediaType.APPLICATION_JSON)\n    public List<Job> showAll() {\n    return jobService.findAll();\n    }\n    }\n    ```", "```\n    $ git add .\n    $ git commit -am \"jobstore application created\"\n    $ git push\n\n    ```", "```\n    $ curl -i -X POST -H \"Content-Type: application/json\" -H \"Accept: application/json\" -d '{\"title\":\"OpenShift Evangelist\",\"description\":\"OpenShift Evangelist\",\"company\":\"Red Hat\"}'http://jobstore-{domain-name}.rhcloud.com/api/v1/jobs\n\n    ```", "```\n    $ curl http://jobstore-{domain-name}.rhcloud.com/api/v1/jobs\n\n    ```", "```\n$ ls -a\n.git .openshift README.md pom.xml deployments src\n\n```", "```\n    <profiles>\n    <profile>\n    <id>openshift</id>\n    <build>\n    <finalName>jobstore</finalName>\n    <plugins>\n    <plugin>\n    <artifactId>maven-war-plugin</artifactId>\n    <version>2.1.1</version>\n    <configuration>\n    <outputDirectory>deployments</outputDirectory>\n    <warName>ROOT</warName>\n    </configuration>\n    </plugin>\n    </plugins>\n    </build>\n    </profile>\n    </profiles>\n    ```", "```\n    $ git remote show origin\n\n    ```", "```\n<datasource jndi-name=\"java:jboss/datasources/PostgreSQLDS\"\nenabled=\"${postgresql.enabled}\" use-java-context=\"true\" pool-name=\"PostgreSQLDS\"\nuse-ccm=\"true\">\n<connection-url>jdbc:postgresql://${env.OPENSHIFT_POSTGRESQL_DB_HOST}:${env.OPENSHIFT_POSTGRESQL_DB_PORT}/${env.OPENSHIFT_APP_NAME}\n</connection-url>\n<driver>postgresql</driver>\n<security>\n<user-name>${env.OPENSHIFT_POSTGRESQL_DB_USERNAME}</user-name>\n<password>${env.OPENSHIFT_POSTGRESQL_DB_PASSWORD}</password>\n</security>\n<validation>\n<check-valid-connection-sql>SELECT 1</check-valid-connection-sql>\n<background-validation>true</background-validation>\n<background-validation-millis>60000</background-validation-millis>\n<!--<validate-on-match>true</validate-on-match> -->\n</validation>\n<pool>\n<flush-strategy>IdleConnections</flush-strategy>\n<allow-multiple-users />\n</pool>\n</datasource>\n```", "```\n$ rhc create-app jobstore jbosseap postgresql-9.2 --from-code https://github.com/OpenShift-Cookbook/chapter7-jobstore-javaee6-simple.git --timeout 180\n\n```", "```\n<extension module=\"org.jboss.as.security\" />\n```", "```\n    $ rhc create-app jobstore jbosseap postgresql-9.2 --from-code https://github.com/OpenShift-Cookbook/chapter7-jobstore-javaee6-simple.git --timeout 180\n\n    ```", "```\n    $ rhc ssh\n    $ psql\n    jobstore=# CREATE TABLE USERS(email VARCHAR(64) PRIMARY KEY, password VARCHAR(64));\n    jobstore=# CREATE TABLE USER_ROLES(email VARCHAR(64), role VARCHAR(32));\n    jobstore=# INSERT into USERS values('admin@jobstore.com', 'ISMvKXpXpadDiUoOSoAfww==');\n    jobstore=# INSERT into USER_ROLES values('admin@jobstore.com', 'admin');\n\n    ```", "```\n    <security-domain name=\"other\" cache-type=\"default\">\n    <authentication>\n    <login-module code=\"Remoting\" flag=\"optional\">\n    <module-option name=\"password-stacking\"value=\"useFirstPass\" />\n    </login-module>\n    <login-module code=\"Database\" flag=\"required\">\n    <module-option name=\"dsJndiName\"\n    value=\"java:jboss/datasources/PostgreSQLDS\" />\n    <module-option name=\"principalsQuery\"\n    value=\"select password from USERS where email=?\" />\n    <module-option name=\"rolesQuery\"\n    value=\"select role, 'Roles' from USER_ROLES where email=?\" />\n    <module-option name=\"hashAlgorithm\" value=\"MD5\" />\n    <module-option name=\"hashEncoding\" value=\"base64\" />\n    </login-module>\n    </authentication>\n    </security-domain>\n    ```", "```\n    <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n    <web-app version=\"3.0\"\n\n    xsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n\n    <security-constraint>\n    <web-resource-collection>\n    <web-resource-name>WebAuth</web-resource-name>\n    <description>application security constraints\n    </description>\n    <url-pattern>/*</url-pattern>\n    <http-method>GET</http-method>\n    <http-method>POST</http-method>\n    </web-resource-collection>\n    <auth-constraint>\n    <role-name>admin</role-name>\n    </auth-constraint>\n    </security-constraint>\n    <login-config>\n    <auth-method>FORM</auth-method>\n    <realm-name>jdbcRealm</realm-name>\n    <form-login-config>\n    <form-login-page>/login.html</form-login-page>\n    <form-error-page>/error.html</form-error-page>\n    </form-login-config>\n    </login-config>\n    <security-role>\n    <role-name>admin</role-name>\n    </security-role>\n\n    </web-app>\n    ```", "```\n    <!DOCTYPE html>\n    <html>\n    <head>\n    <meta charset=\"UTF-8\">\n    <title>Login</title>\n    <link href=\"//cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/3.1.1/css/bootstrap.css\" rel=\"stylesheet\">\n    </head>\n    <body>\n    <div class=\"container\">\n    <form class=\"form-signin\" role=\"form\" method=\"post\"action=\"j_security_check\">\n    <h2 class=\"form-signin-heading\">Please sign in</h2>\n    <input type=\"text\" id=\"j_username\"name=\"j_username\" class=\"form-control\" placeholder=\"Email address\" required autofocus>\n    <input type=\"password\" id=\"j_password\"name=\"j_password\" class=\"form-control\"placeholder=\"Password\" required>\n    <button class=\"btn btn-lg btn-primary btn-block\"type=\"submit\">Sign in</button>\n    </form>\n    </div>\n    </body>\n    </html>\n    ```", "```\n    <!DOCTYPE html>\n    <html>\n    <head>\n    <meta charset=\"US-ASCII\">\n    <title>Error page</title>\n    </head>\n    <body>\n    <h2>Incorrect username/password</h2>\n    </body>\n    </html>\n    ```", "```\n    $ git add .\n    $ git commit –am \"enabled security\"\n    $ git push\n\n    ```", "```\nimport org.jboss.crypto.CryptoUtil;\n\npublic class PasswordHash {\n\npublic static String getPasswordHash(String password) {\nreturn CryptoUtil.createPasswordHash(\"MD5\", CryptoUtil.BASE64_ENCODING,\nnull, null, password);\n}\n\npublic static void main(String[] args) throws Exception {\nSystem.out.println(getPasswordHash(\"admin\"));\n}\n}\n```", "```\n    $ rhc app-create jobstore jbosseap postgresql-9.2 --from-code https://github.com/OpenShift-Cookbook/chapter5-jobstore-javaee6.git --timeout 180\n\n    ```", "```\n    $ mkdir –p .openshift/config/modules/org/twitter4j/main\n\n    ```", "```\n    <module  name=\"org.twitter4j\">\n    <resources>\n    <resource-root path=\"twitter4j-core-3.0.5.jar\" />\n    </resources>\n    <dependencies>\n    <module name=\"javax.api\"/>\n    </dependencies>\n    </module>\n    ```", "```\n    <dependency>\n    <groupId>org.twitter4j</groupId>\n    <artifactId>twitter4j-core</artifactId>\n    <version>3.0.5</version>\n    <scope>provided</scope>\n    </dependency>\n    ```", "```\n    <plugin>\n    <artifactId>maven-war-plugin</artifactId>\n    <version>2.4</version>\n    <configuration>\n    <archive>\n    <manifestEntries>\n    <Dependencies>org.twitter4j</Dependencies>\n    </manifestEntries>\n    </archive>\n    <outputDirectory>deployments</outputDirectory>\n    <warName>ROOT</warName>\n    <failOnMissingWebXml>false</failOnMissingWebXml>\n    </configuration>\n    </plugin>\n    ```", "```\n$ rhc create-app jobstore jbosseap postgresql-9.2 --env TWITTER_CONSUMER_KEY=$TWITTER_CONSUMER_KEY TWITTER_CONSUMER_SECRET=$TWITTER_CONSUMER_SECRET TWITTER_ACCESS_TOKEN_KEY=$TWITTER_ACCESS_TOKEN_KEY TWITTER_ACCESS_TOKEN_SECRET=$TWITTER_ACCESS_TOKEN_SECRET --from-code https://github.com/OpenShift-Cookbook/chapter7-recipe4.git\n\n```", "```\n    $ rhc port-forward --app myapp\n    To connect to a service running on OpenShift, use the Local address\n\n    Service    Local               OpenShift\n    ---------- -------------- ---- ------------------\n    java       127.0.0.1:3528  =>  127.8.104.129:3528\n    java       127.0.0.1:4447  =>  127.8.104.129:4447\n    java       127.0.0.1:5445  =>  127.8.104.129:5445\n    java       127.0.0.1:8080  =>  127.8.104.129:8080\n    java       127.0.0.1:9990  =>  127.8.104.129:9990\n    java       127.0.0.1:9999  =>  127.8.104.129:9999\n    postgresql 127.0.0.1:5433  =>  127.8.104.130:5432\n\n    Press CTRL-C to terminate port forwarding\n\n    ```", "```\n    $ ~/ jboss-eap-6.2/bin/jboss-cli.sh \n    You are disconnected at the moment. Type 'connect' to connect to the server or 'help' for the list of supported commands.\n    [disconnected /]\n\n    ```", "```\n    [disconnected /] connect \n    [standalone@localhost:9999 /]\n\n    ```", "```\n    [standalone@localhost:9999 /] deploy \n\n    ROOT.war\n\n    ```", "```\n    [standalone@localhost:9999 /] undeploy ROOT.war\n\n    ```", "```\n    [standalone@localhost:9999 /] deploy ~/chapter5/recipe8/jobstore/ROOT.war\n    [standalone@localhost:9999 /]\n\n    ```", "```\n[standalone@localhost:9999 /] \nalias               connection-factory  help                ls       read-operation      version…. \n\n```", "```\n$ rhc cartridges|grep Tomcat\njbossews-1.0        Tomcat 6 (JBoss EWS 1.0)                web\njbossews-2.0        Tomcat 7 (JBoss EWS 2.0)                web\n\n```", "```\n    $ rhc create-appmyapp tomcat-7\n\n    ```", "```\n    <maven.compiler.source>1.7</maven.compiler.source>\n    <maven.compiler.target>1.7</maven.compiler.target>\n    ```", "```\n    <dependency>\n    <groupId>org.springframework</groupId>\n    <artifactId>spring-webmvc</artifactId>\n    <version>4.0.3.RELEASE</version>\n    </dependency>\n    <dependency>\n    <groupId>javax.servlet</groupId>\n    <artifactId>javax.servlet-api</artifactId>\n    <version>3.1.0</version>\n    <scope>provided</scope>\n    </dependency>\n    <dependency>\n    <groupId>com.fasterxml.jackson.core</groupId>\n    <artifactId>jackson-databind</artifactId>\n    <version>2.3.1</version>\n    </dependency>\n    ```", "```\n    @EnableWebMvc\n    @ComponentScan(basePackageClasses = PingResource.class)\n    @Configuration\n    public class WebMvcConfig extends WebMvcConfigurerAdapter {\n\n        @Bean\n        public MappingJackson2JsonView jsonView() {\n            MappingJackson2JsonView jsonView = new MappingJackson2JsonView();\n            jsonView.setPrefixJson(true);\n            return jsonView;\n        }\n    }\n    ```", "```\n    import org.springframework.context.annotation.Configuration;\n\n    @Configuration\n    public class ApplicationConfig {\n    }\n    ```", "```\n    public class JobStoreWebApplicationInitializer implements WebApplicationInitializer {\n        @Override\n        public void onStartup(ServletContext servletContext) throws ServletException {\n            AnnotationConfigWebApplicationContext webApplicationContext = new AnnotationConfigWebApplicationContext();\n            webApplicationContext.register(ApplicationConfig.class, WebMvcConfig.class);\n\n            Dynamic dynamc = servletContext.addServlet(\"dispatcherServlet\", new DispatcherServlet(webApplicationContext));\n            dynamc.addMapping(\"/api/v1/*\");\n            dynamc.setLoadOnStartup(1);\n        }\n\n    }\n    ```", "```\n    @Controller\n    @RequestMapping(\"/ping\")\n    public class PingResource {\n\n    @RequestMapping(method=RequestMethod.GET,produces=MediaType.APPLICATION_JSON_VALUE)\n    public @ResponseBody PingResponse ping(){\n    return new PingResponse(\"It works!!\");\n    }\n    }\n    ```", "```\n    public class PingResponse {\n\n    private String message;\n\n    public PingResponse(String message) {\n    this.message = message;\n    }\n\n    public String getMessage() {\n    return message;\n    }\n    }\n    ```", "```\n    $ git add .\n    $ git commit -am \"Spring 4 application\"\n    $ git push\n\n    ```", "```\n    $ curl http://myapp-osbook.rhcloud.com/api/v1/ping\n\n    {\"message\":\"It works!!\"}\n\n    ```", "```\n$ ls -a\n.git .openshift README.md pom.xml webapps src\n\n```", "```\n$ rhc create-app jobstore tomcat-7 mysql-5.5 --from-code https://github.com/OpenShift-Cookbook/chapter7-spring-recipe.git --timeout 180\n\n```", "```\n    $ rhc threaddump --app jobstore\n\n    ```", "```\n$ rhc tail -f app-root/logs/jbosseap.log -o '-n 250'\n\n```", "```\n$ rhc scp jobstore download ./ app-root/logs/jbosseap.log\n\n```", "```\n    $ rhc ssh --app jobstore\n\n    ```", "```\n    $ jps –l\n\n    ```", "```\n    59850 sun.tools.jps.Jps\n    157027 /var/lib/openshift/541ecec35004466ec000007f/jbosseap/jboss-modules.jar\n\n    ```", "```\n    $ jstack 157027 >> /tmp/threaddump.log\n\n    ```", "```\n$ rhc ssh --app jobstore --command \"java -version\"\n\n```", "```\n    $ rhc create-app myapp jbossas-7\n\n    ```", "```\n    $ rhc ssh --command \"java -version\"\n    java version \"1.7.0_51\"\n    OpenJDK Runtime Environment (rhel-2.4.4.1.el6_5-i386 u51-b02)\n    OpenJDK Server VM (build 24.45-b08, mixed mode)\n\n    ```", "```\n    $ rm –f .openshift/markers/java7\n\n    ```", "```\n    $ git commit –am \"switched to Java 6\"\n    $ git push\n\n    ```", "```\n    $ rhc ssh --command \"java -version\"\n    java version \"1.6.0_30\"\n    OpenJDK Runtime Environment (IcedTea6 1.13.1) (rhel-3.1.13.1.el6_5-i386)\n    OpenJDK Server VM (build 23.25-b01, mixed mode)\n\n    ```", "```\n    $ rhc create-app myapp jbosseap\n\n    ```", "```\n    $ touch .openshift/markers/hot_deploy\n\n    ```", "```\n    $ git add .openshift/markers/hot_deploy\n    $ git commit –am \"enabled hot deployment\"\n    $ git push\n\n    ```", "```\n    remote: Not stopping cartridge jbosseap because hot deploy is enabled\n\n    ```", "```\n<subsystem >\n<deployment-scanner path=\"deployments\" relative-to=\"jboss.server.base.dir\"\nscan-interval=\"5000\" deployment-timeout=\"300\" />\n</subsystem>\n```", "```\n    $ touch .openshift/markers/skip_maven_build\n\n    ```", "```\n    $ git add .openshift/markers/skip_maven_build\n    $ git commit –am \"skipmaven build\"\n    $ git push\n\n    ```", "```\nremote: skip_maven_build marker found; build will be skipped\n\n```", "```\n    $ touch .openshift/markers/force_clean_build\n\n    ```", "```\n    $ git add .openshift/markers/force_clean_build\n    $ git commit –am \"force_clean_buildmarker added\"\n    $ git push\n\n    ```", "```\nremote: Force clean build enabled - cleaning dependencies\n\n```", "```\n    $ rhc env-set MAVEN_ARGS=\"clean install\"\n\n    ```", "```\nremote: Found pom.xml... attempting to build with 'mvn -e clean install'\n\n```", "```\n    #!/bin/bash\n    ```", "```\n    mvn install:install-file -Dfile=$OPENSHIFT_REPO_DIR/lib/simplelogger-0.0.1.jar -DgroupId=org.osbook -DartifactId=simplelogger -Dversion=0.0.1 -Dpackaging=jar\n\n    ```", "```\n    $ chmod +x .openshift/action_hooks/pre_build\n\n    ```", "```\n    <dependency>\n    <groupId>org.osbook</groupId>\n    <artifactId>simplelogger</artifactId>\n    <version>0.0.1</version>\n    </dependency>\n    ```", "```\ngit update-index --chmod=+x .openshift/action_hooks/*\n\n```", "```\n$ tar -xzvf eclipse-jee-kepler-R-*.tar.gz \n\n```", "```\n<h1>\n    Welcome to OpenShift, JBossEAP6.0 Cartridge\n</h1>\n```", "```\n<h1>\nWelcome to JobStore application\n</h1>\n```", "```\nNot stopping cartridge jbosseap because hot deploy is enabled\nNot stopping cartridge postgresql because hot deploy is enabled\n\n```", "```\nJAVA_OPTS=\"-Xdebug -Xrunjdwp:transport=dt_socket,address=${OPENSHIFT_JBOSSEAP_IP}:8787,server=y,suspend=n ${JAVA_OPTS}\"\n```"]