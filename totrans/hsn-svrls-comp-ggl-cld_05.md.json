["```\ngcloud pubsub subscriptions pull cron-sub --limit 10\n```", "```\n/**\n* Responds to any HTTP request.\n*\n* @param {!express:Request} req HTTP request context.\n* @param {!express:Response} res HTTP response context.\n*/\nexports.helloRSS = (req, res) => {\n  console.log('helloRSS - display some info');\n  res.status(200).send('helloRSS');\n};\n```", "```\nnpm install @google-cloud/functions-framework\n```", "```\ngcloud functions deploy tempest --entry-point helloRSS --runtime nodejs8 --trigger-http\n```", "```\nnpm install rss-parser\n```", "```\n{\n  \"name\": \"sample-http\",\n  \"version\": \"0.0.1\",\n  \"dependencies\": {\n    \"@google-cloud/functions-framework\": \"^1.3.2\",\n    \"rss-parser\": \"^3.7.3\"\n  }\n}\n```", "```\nlet Parser = require('rss-parser');\nlet parser = new Parser();\n// New background function - Async\nasync function asyncBBCFeed(req, res) {\n    let feed = await parser.parseURL('http://feeds.bbci.co.uk/news/rss.xml');\n    console.log (feed.title);\n    var testString = '';\n    // Title\n    testString = '<h1>RSS Lab</h1></p>'\n\n    // Loop through the content\n    feed.items.forEach(item => {\n      console.log(item.title + ':' + item.link);\n     // Create a link per title\n     testString = testString + '<a href=\"' + item.link + '\">'+item.title + '</a>' + '</br>';\n    });\n    // Display the feed returned\n    res.status(200).send(testString);\n}\n```", "```\n/**\n* Responds to any HTTP request.*\n* @param {!express:Request} req HTTP request context.\n* @param {!express:Response} res HTTP response context.\n*/\nexports.helloRSS = (req, res) => {\n var testMessage = '';\n console.log('helloRSS - display some info');\n asyncBBCFeed(req, res);\n};\n```", "```\ngcloud functions deploy tempest --entry-point helloRSS --runtime nodejs8 --trigger-http\n```", "```\nnpm install pug\n```", "```\n{\n    \"name\": \"sample-http\",\n    \"version\": \"0.0.1\",\n    \"dependencies\": {\n        \"@google-cloud/functions-framework\": \"^1.1.1\",\n        \"rss-parser\": \"^3.7.2\",\n        \"pug\": \"^2.0.4\"\n    }\n}\n```", "```\nlet pug = require('pug');\n```", "```\nconst pugInputFile = pug.compileFile('index.pug');\n```", "```\nres.status(200).send(pugInputFile({\n    items: feed.items\n}));\n```", "```\nlet Parser = require('rss-parser');\nlet parser = new Parser();\nlet pug = require(â€˜pug');\n\n// New background function - Async\nasync function asyncBBCFeed(req, res) {\n    let feed = await parser.parseURL('http://feeds.bbci.co.uk/news/rss.xml');\n    // Use an external pug file\n    const pugInputFile = pug.compileFile('index.pug');\n    // console.log(feed.items)\n    // Display the feed returned\n    res.status(200).send(pugInputFile({\n        items: feed.items\n    }));\n}\n/**\n* Responds to any HTTP request.\n*\n* @param {!express:Request} req HTTP request context.\n* @param {!express:Response} res HTTP response context.\n*/\nexports.helloRSS = (req, res) => {\n    asyncBBCFeed(req, res);\n};\n```", "```\nhtml\n  head\n    title Template - This is a Pug generated output\n  body\n    header\n      p RSS Lab\n    section\n    each item in items\n      a(href='' + item.link) #{item.title} <br>\n```", "```\ngcloud functions deploy tempest --entry-point helloRSS --runtime nodejs8 --trigger-http\n```"]