- en: Managing EC2 with Systems Manager
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Systems Manager 管理 EC2
- en: EC2 instances have long been a core service provided by AWS and EC2 still continues
    to evolve with newer sets of features and instance types added every year. One
    such really awesome service added during AWS re:Invent 2016 was the EC2 Systems
    Manager!
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: EC2 实例一直是 AWS 提供的核心服务，EC2 也在不断发展，每年都会添加新的功能和实例类型。AWS re:Invent 2016 中新增的一项非常酷的服务就是
    EC2 Systems Manager！
- en: 'In this chapter, we will be learning a lot about the EC2 Systems Manager and
    its associated sub-services; namely:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将深入学习 EC2 Systems Manager 及其相关子服务；具体包括：
- en: '**Run Command**: Service that allows you to execute commands directly on an
    EC2 Systems Manager enabled EC2 instance'
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**运行命令**：允许你直接在启用 EC2 Systems Manager 的 EC2 实例上执行命令的服务'
- en: '**State Manager**: Allows you to specify a desired state for an EC2 Systems
    Manager enabled EC2 instance'
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**状态管理器**：允许你为启用 EC2 Systems Manager 的 EC2 实例指定期望的状态'
- en: '**Patch management**: Provides administrators with the ability to manage the
    deployment of patches over EC2 instances'
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**补丁管理**：为管理员提供管理 EC2 实例上补丁部署的能力'
- en: '**Automations**: Allows administrators to automate the deployment of certain
    tasks'
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**自动化**：允许管理员自动化某些任务的部署'
- en: '**Inventory**: Service that collects and manages a list of software inventory
    from your managed EC2 instances'
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**清单**：从管理的 EC2 实例收集和管理软件清单的服务'
- en: Sound exciting? Then what are we waiting for? Let's get started!
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 听起来很激动人心吧？那我们还在等什么呢？开始吧！
- en: Introducing EC2 Systems Manager
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍 EC2 Systems Manager
- en: As the name suggests, EC2 Systems Manager is a management service that provides
    administrators and end users with the ability to perform a rich set of tasks on
    their EC2 instance fleet such as periodically patching the instances with a predefined
    set of baseline patches, tracking the instances' configurational state, and ensuring
    that the instance stays compliant with a state template, runs scripts and commands
    over your instance fleet with a single utility, and much, much more! The EC2 Systems
    Manager is also specifically designed to help administrators manage hybrid computing
    environments, all from the comfort and ease of the EC2 Systems Manager dashboard.
    This makes it super efficient and cost effective as it doesn't require a specialized
    set of software or third-party services, which cost a fortune, to manage your
    hybrid environments!
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 正如名字所示，EC2 Systems Manager 是一项管理服务，它为管理员和最终用户提供了一套丰富的任务执行功能，涵盖了管理 EC2 实例集群的多个方面，比如定期为实例打补丁、跟踪实例的配置状态、确保实例符合状态模板、通过一个工具执行脚本和命令到你的实例集群，等等！EC2
    Systems Manager 还特别设计用于帮助管理员管理混合计算环境，所有这些都可以通过 EC2 Systems Manager 仪表板进行管理。它高效且具成本效益，因为它不需要专门的软件或第三方服务来管理你的混合环境，这些服务往往昂贵！
- en: But how does AWS achieve all of this in the first place? Well, it all begins
    with the concept of managed instances. A managed instance is a special EC2 instance
    that is governed and managed by the EC2 Systems Manager service. Each managed
    instance contains a **Systems Manager** (**SSM**) agent that is responsible for
    communicating and configuring the instance state back to the Systems Manager utility.
    Windows Server 2003–2012 R2 AMIs, Windows Server 2003–2012 R2 AMIs will automatically
    have the SSM agent installed. For Linux instances, however, the SSM agent is not
    installed by default. Let's quickly look at how to install this agent and set
    up our first Dev instance in AWS as a managed instance.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 那么 AWS 是如何实现这些功能的呢？一切都始于“托管实例”的概念。托管实例是由 EC2 Systems Manager 服务管理和控制的特殊 EC2
    实例。每个托管实例都包含一个 **Systems Manager**（**SSM**）代理，该代理负责与 Systems Manager 工具进行通信并配置实例状态。Windows
    Server 2003–2012 R2 AMI，Windows Server 2003–2012 R2 AMI 将自动安装 SSM 代理。然而，Linux
    实例默认情况下并不安装 SSM 代理。让我们快速看看如何安装该代理，并将我们的第一个开发实例设置为 AWS 中的托管实例。
- en: Getting started with the SSM agent
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 开始使用 SSM 代理
- en: In this section, we are going to install and configure an SSM agent on a new
    Linux instance, which we shall call as a Dev instance, and then verify it's working
    by streaming the agent's log files to Amazon CloudWatch Logs. So let's get busy!
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将安装并配置一个新的 Linux 实例上的 SSM 代理，我们将其称为开发实例，然后通过将代理的日志文件流式传输到 Amazon CloudWatch
    Logs 来验证它的工作情况。让我们开始吧！
- en: Configuring IAM Roles and policies for SSM
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 配置 IAM 角色和策略以支持 SSM
- en: First, we need to create and configure IAM Roles for our EC2 Systems Manager
    to process and execute commands over our EC2 instances. You can either use the
    Systems Manager's managed policies or alternatively create your own custom roles
    with specific permissions. For this part, we will be creating a custom role and
    policy.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们需要为我们的 EC2 系统管理器创建并配置 IAM 角色，以便其处理和执行对 EC2 实例的命令。你可以使用系统管理器提供的托管策略，或者选择创建你自己的自定义角色，并为其分配特定权限。对于这一部分，我们将创建一个自定义角色和策略。
- en: 'To get started, we first create a custom IAM policy for Systems Manager managed
    instances:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 开始时，我们首先为系统管理器托管的实例创建一个自定义 IAM 策略：
- en: Log in to your AWS account and select the IAM option from the main dashboard,
    or alternatively, open the IAM console at [https://console.aws.amazon.com/iam/](https://console.aws.amazon.com/iam/).
  id: totrans-17
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 登录到你的 AWS 账户并选择主仪表盘中的 IAM 选项，或者打开 [https://console.aws.amazon.com/iam/](https://console.aws.amazon.com/iam/)
    以访问 IAM 控制台。
- en: Next, from the navigation pane, select Policies. This will bring up a list of
    existing policies currently provided and supported by AWS out of the box.
  id: totrans-18
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，从导航窗格中选择“策略”。这将显示当前 AWS 默认提供和支持的现有策略列表。
- en: Type `SSM` in the Policy Filter to view the list of policies currently provided
    for SSM.
  id: totrans-19
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在策略筛选器中输入`SSM`，以查看当前为 SSM 提供的策略列表。
- en: 'Select the AmazonEC2RoleforSSM policy and copy its contents to form a new policy
    document. Here is a snippet of the policy document for your reference:'
  id: totrans-20
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择 AmazonEC2RoleforSSM 策略，并复制其内容以形成新的策略文档。以下是该策略文档的一个片段供参考：
- en: '[PRE0]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Once the policy is copied, go back to the Policies dashboard and click on the Create
    policy option. In the Create policy wizard, select the Create Your Own Policy option.
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦策略被复制，返回到策略仪表盘，点击“创建策略”选项。在创建策略向导中，选择“创建您自己的策略”选项。
- en: Provide a suitable Policy Name and paste the copied contents of the AmazonEC2RoleforSSM policy
    into the Policy Document section. You can now tweak the policy as per your requirements,
    but once completed, remember to select the Validate Policy option to ensure the
    policy is semantically correct.
  id: totrans-23
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 提供合适的策略名称，并将复制的 AmazonEC2RoleforSSM 策略内容粘贴到策略文档部分。你现在可以根据自己的需求调整策略，但完成后，记得选择“验证策略”选项，以确保策略在语法上是正确的。
- en: Once completed, select Create Policy to complete the process.
  id: totrans-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 完成后，选择“创建策略”以完成该过程。
- en: With this step completed, you now have a custom IAM policy for System Manager
    managed instances.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 完成此步骤后，你现在拥有一个自定义的 IAM 策略，用于管理系统管理器托管的实例。
- en: 'The next important policy that we need to create is the custom IAM user policy
    for our Systems Manager. This policy will essentially scope out which particular
    user can view the System Manager documents as well as perform actions on the selected
    managed instances using the System Manager''s APIs:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 下一个重要的策略是我们需要为系统管理器创建的自定义 IAM 用户策略。该策略将明确哪些特定用户可以查看系统管理器文档，并使用系统管理器的 API 对选定的受管实例执行操作：
- en: Once again, log in to your AWS IAM dashboard and select the Policies option
    as performed in the earlier steps.
  id: totrans-27
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 再次登录到你的 AWS IAM 仪表盘，选择“策略”选项，正如之前的步骤所做。
- en: 'Type `SSM` again in the Policy Filter and select the AmazonSSMFullAccess policy.
    Copy its contents and create a custom SSM access policy by pasting the following
    snippet in the new policy''s Policy Document section:'
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在策略筛选器中再次输入`SSM`，然后选择 AmazonSSMFullAccess 策略。复制其内容，并将以下代码粘贴到新策略的策略文档部分，以创建一个自定义的
    SSM 访问策略：
- en: '[PRE1]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Remember to *validate* the policy before completing the creation process. You
    should now have two custom policies, as shown in the following screenshot:'
  id: totrans-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在完成创建过程之前，记得*验证*策略。你现在应该有两个自定义策略，如下图所示：
- en: '![](img/8702759c-645f-4e77-ac15-978e6db0705c.png)'
  id: totrans-31
  prefs: []
  type: TYPE_IMG
  zh: '![](img/8702759c-645f-4e77-ac15-978e6db0705c.png)'
- en: 'With the policies created, we now simply create a new instance profile role,
    attach the full access policy to the new role, and finally verify the trust relationship
    between Systems Manager and the newly created role:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 创建好策略后，我们接下来只需要创建一个新的实例配置文件角色，将完全访问策略附加到新角色，并最终验证系统管理器与新创建角色之间的信任关系：
- en: To create a new role, from the IAM management dashboard, select the Roles option
    from the navigation pane.
  id: totrans-33
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要创建一个新角色，从 IAM 管理仪表盘中选择“角色”选项。
- en: 'In the Create Role wizard, select the EC2 option from the AWS service role
    type, as shown in the following screenshot. Next, select the EC2 option as the
    *use case* for this activity and click on the Next: Permissions button to continue:'
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在“创建角色”向导中，从AWS服务角色类型中选择EC2选项，如下图所示。接下来，选择EC2作为本次活动的*使用场景*，然后点击“下一步：权限”按钮继续：
- en: '![](img/032e292e-dc33-46f4-8685-c5c172b2858c.png)'
  id: totrans-35
  prefs: []
  type: TYPE_IMG
  zh: '![](img/032e292e-dc33-46f4-8685-c5c172b2858c.png)'
- en: In the Attach permissions policy page, filter and select the ssm-managedInstances policy
    that we created at the beginning of this exercise. Click on Review once done.
  id: totrans-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在“附加权限策略”页面中，筛选并选择我们在本练习开始时创建的ssm-managedInstances策略。完成后点击“审核”。
- en: Finally, provide a suitable Role name in the Review page and click on Create
    role to complete the procedure!
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，在“审核”页面提供一个合适的角色名称，然后点击“创建角色”以完成整个过程！
- en: 'With the role in place, we now need to verify that the IAM policy for your
    instance profile role includes `ssm.amazonaws.com` as a trusted entity:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 配置好角色后，我们需要验证实例配置文件角色的IAM策略是否包含`ssm.amazonaws.com`作为受信实体：
- en: To verify this, select the newly created role from the IAM Roles page and click
    on the Trust relationships tab.
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了验证这一点，选择IAM角色页面中新创建的角色，然后点击“信任关系”选项卡。
- en: 'Here, choose the Edit Trust Relationship option and paste the following snippet
    in the policy editor, as shown. Remember to add both *EC2 and SSM* as the trusted
    services and not just one of them:'
  id: totrans-40
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在这里，选择“编辑信任关系”选项，并在策略编辑器中粘贴以下代码片段，如所示。记得将*EC2和SSM*都添加为受信服务，而不是仅仅添加其中一个：
- en: '[PRE2]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: With the new trust policy in place, click on Update Trust Policy to complete
    the process. Congratulations!
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 配置好新的信任策略后，点击“更新信任策略”以完成此过程。恭喜！
- en: You are almost done with configuring the Systems Manager! A final step remains,
    where we need to attach the second policy that we created (SSM full access) to
    one of our IAM users. In this case, I've attached the policy to one of my existing
    users in my AWS environment, however, you can always create a completely new user
    dedicated to the Systems Manager and assign it the SSM access policy as well.
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 配置Systems Manager几乎完成！剩下最后一步，我们需要将之前创建的第二个策略（SSM完全访问权限）附加到我们的一个IAM用户上。在这种情况下，我已将该策略附加到我AWS环境中现有的一个用户上，然而，你也可以创建一个完全新的用户，专门用于Systems
    Manager，并将其分配SSM访问策略。
- en: With the policies out of the way, we can now proceed with the installation and
    configuration of the SSM agent on our simple Dev instance.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 策略配置完毕后，我们可以继续在我们的简单开发实例上安装和配置SSM代理。
- en: Installing the SSM agent
  id: totrans-45
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装SSM代理
- en: 'As discussed at the beginning of the chapter, the Systems Manager or the SSM
    agent is a vital piece of software that needs to be installed and configured on
    your EC2 instances in order for Systems Manager to manage it. At the time of writing,
    SSM agent is supported on the following sets of operating systems:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 正如在本章开始时讨论的，Systems Manager或SSM代理是一个至关重要的软件，需要在EC2实例上安装和配置，才能让Systems Manager管理它。写本文时，SSM代理支持以下操作系统：
- en: '**Windows**:'
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Windows**：'
- en: Windows Server 2003 (including R2)
  id: totrans-48
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: Windows Server 2003（包括R2）
- en: Windows Server 2008 (including R2)
  id: totrans-49
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: Windows Server 2008（包括R2）
- en: Windows Server 2012 (including R2)
  id: totrans-50
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: Windows Server 2012（包括R2）
- en: Windows Server 2016
  id: totrans-51
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: Windows Server 2016
- en: '**Linux** (64-bit and 32-bit):'
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Linux**（64位和32位）：'
- en: Amazon Linux 2014.09, 2014.03 or later
  id: totrans-53
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: Amazon Linux 2014.09、2014.03或更高版本
- en: Ubuntu Server 16.04 LTS, 14.04 LTS, or 12.04 LTS
  id: totrans-54
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: Ubuntu Server 16.04 LTS、14.04 LTS或12.04 LTS
- en: Red Hat Enterprise Linux (RHEL) 6.5 or later
  id: totrans-55
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: Red Hat Enterprise Linux（RHEL）6.5或更高版本
- en: CentOS 6.3 or later
  id: totrans-56
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: CentOS 6.3或更高版本
- en: '**Linux** (64-bit only):'
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Linux**（仅限64位）：'
- en: Amazon Linux 2015.09, 2015.03 or later
  id: totrans-58
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: Amazon Linux 2015.09、2015.03或更高版本
- en: Red Hat Enterprise Linux 7.x or later
  id: totrans-59
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: Red Hat Enterprise Linux 7.x或更高版本
- en: CentOS 7.1 or later
  id: totrans-60
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: CentOS 7.1或更高版本
- en: SUSE Linux Enterprise Server 12 or higher
  id: totrans-61
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: SUSE Linux Enterprise Server 12或更高版本
- en: 'To install the agent on a brand new instance, such as the one we will create
    shortly, you simply need to ensure that the instance is provided with the necessary
    SSM IAM role that we created in the previous section, as well as to provide the
    following code snippet in the User data section of your instance''s configuration:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 若要在一个全新的实例上安装代理，例如我们稍后将创建的实例，你只需确保该实例提供了我们在上一节中创建的必要SSM IAM角色，并在实例配置的用户数据部分提供以下代码片段：
- en: '[PRE3]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: The user data script varies from OS to OS. In my case, the script is intended
    to run on an Ubuntu Server 14.04 LTS (HVM) instance. You can check your SSM agent
    install script at [http://docs.aws.amazon.com/systems-manager/latest/userguide/sysman-install-ssm-agent.html#sysman-install-startup-linux](http://docs.aws.amazon.com/systems-manager/latest/userguide/sysman-install-ssm-agent.html#sysman-install-startup-linux).
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 用户数据脚本在不同操作系统之间有所不同。在我的情况下，脚本旨在 Ubuntu Server 14.04 LTS (HVM) 实例上运行。你可以在 [http://docs.aws.amazon.com/systems-manager/latest/userguide/sysman-install-ssm-agent.html#sysman-install-startup-linux](http://docs.aws.amazon.com/systems-manager/latest/userguide/sysman-install-ssm-agent.html#sysman-install-startup-linux)
    检查你的 SSM 代理安装脚本。
- en: 'Once the instance is up and running, SSH into the instance and verify whether
    your SSM agent is up and running or not using the following command. Remember,
    the following command will also vary based on the operating system that you select
    at launch time:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 实例启动并运行后，通过 SSH 登录实例并使用以下命令验证你的 SSM 代理是否正在运行。记住，以下命令会根据你在启动时选择的操作系统有所不同：
- en: '[PRE4]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'You should see the agent running, as shown in the following screenshot:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 你应该能看到代理正在运行，如下图所示：
- en: '![](img/5695ebbb-2bb0-4863-8985-3e426062dc1e.png)'
  id: totrans-68
  prefs: []
  type: TYPE_IMG
  zh: '![](img/5695ebbb-2bb0-4863-8985-3e426062dc1e.png)'
- en: You can, optionally, even install the agent on an existing running EC2 instance
    by completing the following set of commands.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 你还可以选择通过完成以下一组命令，在已运行的 EC2 实例上安装代理。
- en: 'For an instance running on the Ubuntu 16.04 LTS operating system, we first
    create a temporary directory to house the SSM agent installer:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 对于运行 Ubuntu 16.04 LTS 操作系统的实例，我们首先创建一个临时目录，用于存放 SSM 代理安装程序：
- en: '[PRE5]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Next, download the operating-specific SSM agent installer using the `wget` utility:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，使用 `wget` 工具下载特定操作系统的 SSM 代理安装程序：
- en: '[PRE6]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Finally, execute the installer using the following command:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，使用以下命令执行安装程序：
- en: '[PRE7]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'You can additionally verify the agent''s execution by tailing either of these
    log files as well:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 你还可以通过查看以下日志文件之一来验证代理的执行情况：
- en: '[PRE8]'
  id: totrans-77
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Configuring the SSM agent to stream logs to CloudWatch
  id: totrans-78
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 配置 SSM 代理将日志流式传输到 CloudWatch
- en: This is a particularly useful option provided by the SSM agent, especially when
    you don't want to log in to each and every instance and troubleshoot issues. Integrating
    the SSM agent's logs with CloudWatch enables you to have all your logs captured
    and analyzed at one central location, which undoubtedly ends up saving a lot of
    time, but it also brings additional benefits such as the ability to configure
    alarms, view the various metrics using CloudWatch dashboard, and retain the logs
    for a much longer duration.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 这是 SSM 代理提供的一个特别有用的选项，特别是在你不想登录到每个实例并排除故障时。将 SSM 代理的日志与 CloudWatch 集成，使你能够将所有日志捕获并集中分析，这无疑节省了大量时间，而且它还带来额外的好处，例如配置警报、使用
    CloudWatch 仪表盘查看各种指标，并将日志保留更长时间。
- en: 'But before we get to configuring the agent, we first need to create a separate
    log group within CloudWatch that will stream the agent logs from individual instances
    here:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 但是，在我们配置代理之前，我们首先需要在 CloudWatch 中创建一个单独的日志组，用于从各个实例流式传输代理日志：
- en: To do so, from the AWS Management Console, select the CloudWatch option, or
    alternatively, click on the following link to open your CloudWatch dashboard from
    [https://console.aws.amazon.com/cloudwatch/](https://console.aws.amazon.com/cloudwatch/).
  id: totrans-81
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要做到这一点，首先在 AWS 管理控制台中选择 CloudWatch 选项，或者点击以下链接从 [https://console.aws.amazon.com/cloudwatch/](https://console.aws.amazon.com/cloudwatch/)
    打开 CloudWatch 仪表盘。
- en: 'Next, select the Logs option from the navigation pane. Here, click on Create
    log group and provide a suitable name for your log group, as shown in the following
    screenshot:'
  id: totrans-82
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，从导航窗格中选择日志（Logs）选项。在这里，点击创建日志组（Create log group），并为你的日志组提供一个合适的名称，如下图所示：
- en: '![](img/18b6d43f-6531-4631-b3c5-b3055ad2b118.png)'
  id: totrans-83
  prefs: []
  type: TYPE_IMG
  zh: '![](img/18b6d43f-6531-4631-b3c5-b3055ad2b118.png)'
- en: 'Once completed, SSH back into your Dev instance and run the following command:'
  id: totrans-84
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 完成后，使用 SSH 登录回你的开发实例，并运行以下命令：
- en: '[PRE9]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Next, using your favorite editor, open the newly copied file and paste the
    following content in it. Remember to swap out the `<CLOUDWATCH_LOG_GROUP_NAME>`
    field with the name of your own log group:'
  id: totrans-86
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，使用你喜欢的编辑器打开刚刚复制的文件，并将以下内容粘贴到其中。记得将 `<CLOUDWATCH_LOG_GROUP_NAME>` 字段替换为你自己的日志组名称：
- en: '[PRE10]'
  id: totrans-87
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: With the changes made, save and exit the editor. Now have a look at your newly
    created log group using the CloudWatch dashboard; you should see your SSM agent's
    error logs, if any, displayed there for easy troubleshooting.
  id: totrans-88
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 完成更改后，保存并退出编辑器。现在，通过CloudWatch仪表板查看您新创建的日志组；您应该能看到SSM代理的错误日志（如果有的话），以便轻松进行故障排除。
- en: 'With this step completed, we have now successfully installed and configured
    our EC2 instance as a Managed Instance in Systems Manager. To verify whether your
    instance has indeed been added, select the Managed Instance option provided under
    the Systems Manager Shared Resources section from the navigation pane of your
    EC2 dashboard; you should see your instance listed, as shown here:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 完成此步骤后，我们已经成功将EC2实例安装并配置为Systems Manager中的受管实例。要验证您的实例是否已成功添加，请在EC2仪表板的导航窗格中选择“Systems
    Manager共享资源”部分下提供的“受管实例”选项；您应该能看到列出的实例，如下所示：
- en: '![](img/f1c5c597-e96b-4903-bfec-b37f661e9d47.png)'
  id: totrans-90
  prefs: []
  type: TYPE_IMG
  zh: '![](img/f1c5c597-e96b-4903-bfec-b37f661e9d47.png)'
- en: 'In the next section, we will deep dive into the various features provided as
    a part of the Systems Manager, starting off with one of the most widely used:
    Run Command!'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，我们将深入探讨作为Systems Manager一部分提供的各种功能，首先介绍最广泛使用的一个：Run Command！
- en: Introducing Run Command
  id: totrans-92
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍Run Command
- en: Run Command is an awesome feature of Systems Manager, which basically allows
    you to execute remote commands over your managed fleet of EC2 instances. You can
    perform a vast variety of automated administrative tasks, such as installing software
    or patching your operating systems, executing shell commands, managing local groups
    and users, and much more! But that's not all! The best part of using this feature
    is that it allows you to have a seamless experience when executing scripts, even
    over your on-premises Windows and Linux operating systems, whether they be running
    on VMware ESXi, Microsoft Hyper-V, or any other platforms. And the cost of all
    this? Well, it's absolutely free! You only pay for the EC2 instances and other
    AWS resources that you create and nothing more!
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: Run Command是Systems Manager的一个强大功能，基本上允许您在受管理的EC2实例队列中执行远程命令。您可以执行各种自动化管理任务，例如安装软件或修补操作系统、执行Shell命令、管理本地组和用户等！但这还不是全部！使用这个功能的最大优点是，它允许您在执行脚本时拥有无缝体验，即使是在您的本地Windows和Linux操作系统上，无论它们运行在VMware
    ESXi、Microsoft Hyper-V还是其他平台上。而且所有这些功能的成本？完全免费！您只需为创建的EC2实例和其他AWS资源付费，其它费用全免！
- en: 'Here''s a brief list of a few commonly predefined commands provided by Run
    Command along with a short description:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是由Run Command提供的一些常用预定义命令的简要列表，并附有简短描述：
- en: '`AWS-RunShellScript`: Executes shell scripts on remote Linux instances'
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`AWS-RunShellScript`：在远程Linux实例上执行Shell脚本'
- en: '`AWS-UpdateSSMAgent`: Used to update the Amazon SSM agent'
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`AWS-UpdateSSMAgent`：用于更新Amazon SSM代理'
- en: '`AWS-JoinDirectoryServiceDomain`: Used to join an instance to an AWS Directory'
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`AWS-JoinDirectoryServiceDomain`：用于将实例加入AWS目录'
- en: '`AWS-RunPowerShellScript`: Executes PowerShell commands or scripts on Windows
    instances'
  id: totrans-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`AWS-RunPowerShellScript`：在Windows实例上执行PowerShell命令或脚本'
- en: '`AWS-UpdateEC2Config`: Runs an update to the EC2Config service'
  id: totrans-99
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`AWS-UpdateEC2Config`：运行EC2Config服务的更新'
- en: '`AWS-ConfigureWindowsUpdate`: Used to configure Windows Update settings'
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`AWS-ConfigureWindowsUpdate`：用于配置Windows Update设置'
- en: '`AWS-InstallApplication`: Used to install, repair, or uninstall software on
    a Windows instance using an MSI package'
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`AWS-InstallApplication`：用于在Windows实例上使用MSI包安装、修复或卸载软件'
- en: '`AWS-ConfigureCloudWatch`: Configures Amazon CloudWatch Logs to monitor applications
    and systems'
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`AWS-ConfigureCloudWatch`：配置Amazon CloudWatch Logs以监控应用程序和系统'
- en: Before we proceed with the actual execution of the Run Commands, it is important
    to remember that the Run Command requires both the SSM agent as well as the right
    set of permissions and roles to work with. So if you haven't performed the SSM
    agent's installation or the setup of the IAM polices and roles, then now would
    be a good time to revisit this!
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们继续执行Run Command之前，重要的是要记住，Run Command需要SSM代理以及正确的权限和角色集才能正常工作。因此，如果您还没有安装SSM代理或配置IAM策略和角色，现在是重新审视这些步骤的好时机！
- en: 'In this section, let''s look at a simple way of executing a simple set of commands
    for our newly added managed instance:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将看一下如何简单地执行一组命令来管理我们新添加的受管实例：
- en: To begin with, first log in to the AWS Management Console and select the EC2
    service from the main dashboard. Alternatively, you can even launch the EC2 dashboard
    via [https://console.aws.amazon.com/ec2/](https://console.aws.amazon.com/ec2/).
  id: totrans-105
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，登录到AWS管理控制台并从主仪表盘选择EC2服务。或者，你也可以通过[https://console.aws.amazon.com/ec2/](https://console.aws.amazon.com/ec2/)直接进入EC2仪表盘。
- en: Next, from the navigation pane, select the Run Command option from the Systems
    Manager Services section. You will be taken to the Run Command dashboard where
    you will need to select the Run a command option to get started.
  id: totrans-106
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，从导航窗格中选择“运行命令”选项，进入系统管理服务部分。你将被带到“运行命令”仪表盘，在这里你需要选择“运行命令”选项来开始。
- en: In the Run a command page, the first thing we need to do is select a Command
    document that we can work with. A command document is basically a statement or
    set of information about the command you want to run on your managed instances.
    For this scenario, we will select the `AWS-RunShellScript` command document to
    start with.
  id: totrans-107
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在“运行命令”页面，首先需要选择一个我们可以操作的命令文档。命令文档基本上是关于你想在托管实例上运行的命令的声明或信息集。在此场景中，我们将首先选择`AWS-RunShellScript`命令文档。
- en: In the next Select Targets by section, you can optionally choose whether you
    wish to execute your command document manually by selecting individual instances
    or specify a particular group of instances identified by their *tag* name.
  id: totrans-108
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在接下来的“选择目标”部分，你可以选择是否手动执行命令文档，通过选择单个实例，或者指定通过其*标签*名称标识的特定实例组。
- en: The Execute on criteria provides you with the option to select either the Targets or
    Percent of instances you wish to execute the command document on. Selecting Targets allows
    you to specify the exact number of instances that should be allowed to execute
    the command document. The execution occurs on each instance one at a time. Alternatively,
    if you select the Percent option, then you can provide a percentage value of the
    instances that should be allowed to run the command at a single time.
  id: totrans-109
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: “执行条件”选项让你可以选择要在其上执行命令文档的目标实例或实例百分比。选择“目标”允许你指定允许执行命令文档的确切实例数量。执行将在每个实例上依次进行。或者，如果你选择“百分比”选项，则可以提供一个实例的百分比值，指示在单次操作中应允许多少实例执行该命令。
- en: You can optionally set the Stop after x errors to halt the execution of your
    command document in case an instance encounters an error.
  id: totrans-110
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你可以选择设置“在发生x个错误后停止”选项，以便在实例遇到错误时中止命令文档的执行。
- en: 'Finally, you can paste your execution code or shell script in the Commands section
    as shown in the following screenshot. In this case, we are running a simple script
    that will install and configure a Zabbix monitoring agent on our Dev instance
    for easy monitoring of our EC2 resources:'
  id: totrans-111
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，你可以在“命令”部分粘贴你的执行代码或Shell脚本，如下图所示。在这种情况下，我们运行一个简单的脚本，该脚本将安装并配置Zabbix监控代理，以便轻松监控我们的EC2资源：
- en: '![](img/a5246724-04a4-4584-8afd-49c127f8e9e7.png)'
  id: totrans-112
  prefs: []
  type: TYPE_IMG
  zh: '![](img/a5246724-04a4-4584-8afd-49c127f8e9e7.png)'
- en: You can learn more about Zabbix and its features at [https://www.zabbix.com/product](https://www.zabbix.com/product).
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在[https://www.zabbix.com/product](https://www.zabbix.com/product)了解更多关于Zabbix及其功能的信息。
- en: 'Copy and paste the following code snippet or, alternatively, tweak it according
    to the EC2 instance operating system that you may have selected for this exercise:'
  id: totrans-114
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 复制并粘贴以下代码片段，或者根据你为本次操作选择的EC2实例操作系统进行调整：
- en: '[PRE11]'
  id: totrans-115
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: The rest of the options provide other configurational items such as setting
    up an optional *working directory* where the commands get executed on the remote
    managed instances.
  id: totrans-116
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 其余的选项提供了其他配置项，例如设置一个可选的*工作目录*，以便在远程托管实例上执行命令。
- en: 'Additionally, you can even choose to Enable SNS notifications as well as write
    your command output logs to S3 using the Advanced Options sections, as shown here:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，你还可以选择启用SNS通知，以及通过“高级选项”部分将命令输出日志写入S3，如下所示：
- en: '![](img/d89394cd-20bf-4ca9-a585-6acabdcd41cf.png)'
  id: totrans-118
  prefs: []
  type: TYPE_IMG
  zh: '![](img/d89394cd-20bf-4ca9-a585-6acabdcd41cf.png)'
- en: Once the configuration items are filled in, simply select the Run option to
    start the execution of your command document. During this time, Systems Manager
    will invoke the execution of your supplied commands over the list of managed instances
    that you provided. If there is an error during the execution, Systems Manager
    will halt the execution and display the Status of your output as either Success or
    Failed.
  id: totrans-119
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦配置项填写完毕，只需选择“运行”选项，开始执行您的命令文档。在此期间，系统管理器将对您提供的托管实例列表执行您提供的命令。如果执行过程中发生错误，系统管理器会停止执行并显示输出的状态，结果为成功或失败。
- en: Simple isn't it? You can use this same mechanism to manage and execute commands
    remotely over your fleet of EC2 instances with ease and consistency and even leverage
    the AWS CLI to perform the same set of actions we have explored in this section.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 很简单，不是吗？您可以使用相同的机制，轻松且一致地远程管理和执行命令，针对您的 EC2 实例群组，甚至可以利用 AWS CLI 执行我们在本节中探讨的相同操作。
- en: 'In the next section, we will be learning a bit about yet another really useful
    feature provided by Systems Manager: State Manager.'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的章节中，我们将学习系统管理器提供的另一个非常有用的功能：状态管理器。
- en: Working with State Manager
  id: totrans-122
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用状态管理器
- en: '**State Manager** is a powerful tool that helps to govern and manage the configuration
    of a managed system. For example, by using State Manager you can enforce a particular
    firewall rule for your fleet of managed instances and set that as the required
    State that needs to be enforced at all times. If the rules change outside of State
    Manager, it will automatically revert to match the required state''s configuration,
    thus maintaining compliance and enforcing standardization over your environment.'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: '**状态管理器** 是一个强大的工具，帮助管理和治理托管系统的配置。例如，通过使用状态管理器，您可以为托管实例群组强制执行特定的防火墙规则，并将其设置为始终需要强制执行的要求状态。如果规则在状态管理器之外发生变化，它会自动恢复到与要求状态配置匹配的设置，从而维持合规性并在您的环境中执行标准化。'
- en: Working with State Manager is quite simple and straightforward. You start off
    by selecting a state document (JSON based) that specifies the settings you need
    to configure or maintain your EC2 instances. These documents come predefined and
    you can create customized versions of them. With the document created, you can
    then select the individual managed instances, which can be either EC2 instances
    or even on-premises virtual machines, as well as specify a schedule for when and
    how often you wish to apply these states. It's that simple!
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 使用状态管理器非常简单直接。首先，您需要选择一个状态文档（基于 JSON），该文档指定了您需要配置或维护 EC2 实例的设置。这些文档是预定义的，您也可以创建自定义版本。创建文档后，您可以选择个别托管实例，这些实例可以是
    EC2 实例或本地虚拟机，并指定应用这些状态的时间表，甚至可以指定应用的频率。就是这么简单！
- en: But before we go ahead with the invocation of our State Manager, let's first
    understand the concept of state documents a bit better as these documents are
    the foundation on which your Systems Manager works.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 但在继续调用状态管理器之前，让我们先更好地理解一下状态文档的概念，因为这些文档是支撑系统管理器工作的基础。
- en: 'State documents are nothing more than simple JSON-based steps and parameters
    that define certain actions to be performed by Systems Manager. AWS provides dozens
    of such documents out of the box, which can be used to perform a variety of tasks
    such as patching your instances, configuring certain packages, configuring the
    CloudWatch Log agents, and much more! Additionally, you can even create your own
    custom document as well! There are three types of documents that are supported
    by Systems Manager:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 状态文档不过是简单的基于 JSON 的步骤和参数，定义了系统管理器需要执行的某些操作。AWS 提供了几十种这样的文档，可以用来执行各种任务，比如修补实例、配置某些软件包、配置
    CloudWatch 日志代理等等！此外，您还可以创建自己的自定义文档！系统管理器支持三种类型的文档：
- en: '**Command**: Command documents are leveraged by the Run Command to execute
    commands over your managed instances. Alternatively, State Manager uses the command
    documents to apply certain policies as well. These actions can be run on one or
    more targets at any point during the life cycle of an instance.'
  id: totrans-127
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**命令**：命令文档通过运行命令来执行命令，这些命令可以作用于您的托管实例。或者，状态管理器也使用命令文档来应用某些策略。这些操作可以在实例生命周期的任何时刻对一个或多个目标执行。'
- en: '**Policy**: Used by the State Manager, policy documents are used to enforce
    a policy on your managed instances.'
  id: totrans-128
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**策略**：由状态管理器使用，策略文档用于在托管实例上强制执行某个策略。'
- en: '**Automation**: These documents are more often used by the automation service
    within Systems Manager to perform common maintenance and deployment tasks. We
    will be learning more about automation documents a bit later in this chapter.'
  id: totrans-129
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**自动化**: 这些文档更经常被系统管理器内的自动化服务用来执行常见的维护和部署任务。我们将在本章稍后详细了解自动化文档。'
- en: 'To view System Manager''s predefined documents, from the EC2 dashboard navigation
    pane, select the Documents option under the Systems Manager Shared Resources section.
    Here you can use any of the predefined documents as per your requirements for
    State Manager, however let''s quickly create a very simple custom document based
    on the aws:configurePackage definition:'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 要查看系统管理器的预定义文档，请从 EC2 仪表板的导航窗格中选择 Systems Manager 共享资源 部分下的 Documents 选项。在这里，您可以根据需要使用任何预定义文档来配置
    State Manager，不过让我们快速创建一个非常简单的自定义文档，基于 aws:configurePackage 定义：
- en: 'To create your own document, select the Create Document option from the Documents dashboard
    as shown here:'
  id: totrans-131
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要创建您自己的文档，请从 Documents 仪表板中选择 Create Document 选项，如下所示：
- en: '![](img/cec7da8e-5c35-45ff-9503-5e36501d5c67.png)'
  id: totrans-132
  prefs: []
  type: TYPE_IMG
  zh: '![](img/cec7da8e-5c35-45ff-9503-5e36501d5c67.png)'
- en: In the Create Document wizard, start off by providing a suitable Name for your
    document. In this case, I've provided the name `yoyodev-ssm-configure-packages`.
    Do note that the name cannot contain any spaces.
  id: totrans-133
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 Create Document 向导中，首先为您的文档提供一个合适的名称。在本例中，我已提供了名称 `yoyodev-ssm-configure-packages`。请注意，名称不能包含任何空格。
- en: 'Next, from the Document Type dropdown, select Command as the option type and
    paste the following JSON code in the Content section as shown here:'
  id: totrans-134
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，从 Document Type 下拉菜单中选择 Command 作为选项类型，并在 Content 部分粘贴以下 JSON 代码，如下所示：
- en: '[PRE12]'
  id: totrans-135
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: With the document pasted, you can now click on Create Document to complete the
    document creation process.
  id: totrans-136
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 文档粘贴完成后，现在可以点击 Create Document 完成文档创建过程。
- en: 'The document comprises two primary sections: a `parameters` section, which
    contains a list of actions to be performed by the document, followed by a `mainSteps` section
    that specifies the action, which in this case is the `aws:configurePackage` to
    be performed by the document. In this case, the document when invoked will ask
    the user to select either `apache2`, `mysql-server`, or `php` from the dropdown
    list followed by an optional version number of the software you select. You can
    then select whether you wish to install or uninstall this particular package from
    your fleet of managed EC2 instances and simply execute the document when done!'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 该文档包括两个主要部分：一个 `parameters` 部分，其中包含文档要执行的操作列表，然后是一个 `mainSteps` 部分，指定文档要执行的操作，在本例中是执行
    `aws:configurePackage`。在调用文档时，文档将要求用户从下拉列表中选择 `apache2`、`mysql-server` 或 `php`
    中的一个，并选择所选软件的可选版本号。然后，您可以选择是否要在托管的 EC2 实例群中安装或卸载此特定包，并在完成时执行文档！
- en: 'Now that your custom document is created, let''s quickly configure the State
    Manager to invoke it:'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，您的自定义文档已创建，让我们快速配置 State Manager 以调用它：
- en: From the Systems Manager Services section in the EC2 navigation pane, select
    the State Manager. In the State Manager dashboard, select the Create Association option
    to get started with configuring State Manager.
  id: totrans-139
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从 EC2 导航窗格中的 Systems Manager Services 部分，选择 State Manager。在 State Manager 仪表板上，选择
    Create Association 选项开始配置 State Manager。
- en: Provide a suitable Association Name for your association. Note that this is
    an optional field and you can skip it if you want.
  id: totrans-140
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为您的关联提供一个合适的 Association Name。请注意，这是一个可选字段，如果您希望可以跳过它。
- en: Next, from the Select Document section, filter and select the custom document
    that we created in our earlier step. On selection, you will notice the subfields
    change according to what we provided as parameters in the document. Let's quickly
    configure this and create our association.
  id: totrans-141
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，从 Select Document 部分过滤并选择我们在前面步骤中创建的自定义文档。选择后，您将注意到子字段根据我们在文档中提供的参数而变化。让我们快速配置此项并创建我们的关联。
- en: In the Targets section, select your Dev instance or any of your managed instances
    which you wish to associate with this State Manager. Finally, go ahead and configure
    the Schedule that will trigger the association based on either a CRON or a rate
    schedule.
  id: totrans-142
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 Targets 部分，选择您的 Dev 实例或您希望与此 State Manager 关联的任何托管实例。最后，继续配置 Schedule，以基于
    CRON 或速率计划触发关联。
- en: 'Last but not the least, configure the Action and select the appropriate package
    Name from the Parameters section as shown in the following screenshot:'
  id: totrans-143
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后但并非最不重要的是，配置 Action 并从 Parameters 部分选择适当的 Package Name ，如下面的截图所示：
- en: '![](img/34bde6ea-fa5a-40ac-9f33-de2f940a6ee7.png)'
  id: totrans-144
  prefs: []
  type: TYPE_IMG
- en: You can optionally enable the Write to S3 checkbox to log the State Manager's
    execution in your own custom S3 bucket. For this scenario, I have not selected
    this option.
  id: totrans-145
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Finally, complete the State Manager's association process by selecting the Create
    Association option.
  id: totrans-146
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: You can now view and modify your associations using the State Manager dashboard.
    Alternatively, you can even choose to enable your association immediately by selecting
    the Apply Association Now option as well.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
- en: In the next section, we will be looking at yet another simple and easy-to-use
    feature provided by Systems Manager that helps automate simple instance and deployment
    tasks, called System Manager Automation!
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
- en: Simplifying instance maintenance using System Manager Automation
  id: totrans-149
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: System Manager Automation is a managed service that provides a single, centralized
    interface for executing and monitoring commonly occurring instance management
    tasks such as patching, performing backups, executing scripts, and much more.
    Let's first get started by understanding a few necessary prerequisites that are
    required to be configured in order for automation to work in your environments.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
- en: Working with automation documents
  id: totrans-151
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'As discussed briefly during the introduction to the State Manager service,
    automation documents are simple JSON-based documents that are designed to help
    you get started with the automation service quickly and efficiently. You can leverage
    the predefined automation documents or, alternatively, create your own set. In
    this section, we will look at how to leverage an existing automation document
    to patch your Dev EC2 instance and create a new AMI from it:'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
- en: From the EC2 Management Console, select the Documents option from the Systems
    Manager Shared Resources section.
  id: totrans-153
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Using the Documents dashboard, you can filter and view only the documents that
    have Automation set as the Document Type.
  id: totrans-154
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Select AWS-UpdateLinuxAmi and click on the Content tab to view the automation
    document as shown here:'
  id: totrans-155
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/e1d2b27c-c047-4b57-a505-0bdd9ce72e45.png)'
  id: totrans-156
  prefs: []
  type: TYPE_IMG
- en: 'The AWS-UpdateLinuxAmi document comprises five distinctive steps, each explained
    briefly here:'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
- en: '**launchInstance:** This step basically launches a new EC2 instance using your
    Systems Manager IAM instance profile as well as with a user data script that will
    install the latest copy of the SSM agent on this instance. The SSM agent is vital
    as it will enable the next steps to be executed using the Run Command as well
    as State Manger.'
  id: totrans-158
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**updateOSSoftware:** With the instance launched and the SSM agent installed,
    the next step is responsible for updating the packages in your Linux instance.
    This is done by executing an update script that methodologically updates the packages
    and any other software that may be marked for upgrades. You also get the capability
    to include or exclude a particular set of packages from this step using the `IncludePackages` and
    `ExcludePackages` parameters respectively. If no packages are included, the program
    updates all available packages on the instance.'
  id: totrans-159
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**stopInstance:** Once the instance is updated with the latest set of packages,
    the next action simply powers off the instance so that it can be prepped for the
    image creation process.'
  id: totrans-160
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**createImage:** This step creates a new AMI from your updated Linux instance.
    The image contains a descriptive name that links it to the source ID and creation
    time of the image.'
  id: totrans-161
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**terminateInstance**: The final step in the automation document, this step
    essentially cleans up the execution by terminating the running Linux instance.'
  id: totrans-162
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Let's look at few simple steps using which we can invoke this particular automation
    document manually using the automation dashboard.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
- en: Patching instances using automation
  id: totrans-164
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In this section, we will be manually invoking the AWS-UpdateLinuxAmi automation
    document for patching our Linux instance and later creating a new AMI out of it:'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
- en: To do this, first select the Automations option present under the Systems Manager
    Services section.
  id: totrans-166
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: From the Automations dashboard, select the Run automation document option.
  id: totrans-167
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'From the Document name field, select the AWS-UpdateLinuxAmi document and populate
    the required fields in the Input parameters section as described here:'
  id: totrans-168
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '`SourceAmiId`: Provide the source Amazon Machine Image ID from which the new
    instance will be deployed.'
  id: totrans-169
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '`InstanceIamRole`: Provide the IAM role name that enables Systems Manager to
    manage the instance. We created this role earlier during the start of this chapter
    as a part of SSM''s prerequisites.'
  id: totrans-170
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '`AutomationAssumeRole`: Provide the ARN of the IAM role that allows automation
    to perform the actions on your behalf.'
  id: totrans-171
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '`TargetAmiName`: This will be the name of the new AMI created as a part of
    this automation document. The default is a system-generated string including the
    source AMI ID and the creation time and date.'
  id: totrans-172
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '`InstanceType`: Specify the instance type of instance to launch for the AMI
    creation process. By default, the *t2.micro* instance type is selected.'
  id: totrans-173
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '`PreUpdateScript`: You can additionally provide the URL of a script to run
    before any updates are applied. This is an optional field.'
  id: totrans-174
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '`PostUpdateScript`: Provide an optional post update script URL of a script
    to run after package updates are applied.'
  id: totrans-175
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '`IncludePackages`: Include specific packages to be updated. By default, all
    available updates are applied.'
  id: totrans-176
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '`ExcludePackages`: Provide names of specific packages that you wish to exclude
    from the updates list.'
  id: totrans-177
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'With the fields populated, simply select the Run automation option as shown
    in the following screenshot:'
  id: totrans-178
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/4819c1f5-bde9-4057-a149-a11fefa7f420.png)'
  id: totrans-179
  prefs: []
  type: TYPE_IMG
- en: The automation document takes a couple of minutes to completely execute. You
    can verify the output of the execution using the Automations dashboard as well.
  id: totrans-180
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Simply select your automation job Execution ID to view the progress of each
    individual step as shown in the following screenshot. Optionally, you can verify
    the output of each step by selecting the adjoining View Outputs link as well:'
  id: totrans-181
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/5314ef7f-ddf0-417f-b9ad-377db09075b1.png)'
  id: totrans-182
  prefs: []
  type: TYPE_IMG
- en: With this completed, you can now run similar automation tasks by creating your
    own automation documents and executing them using the steps mentioned herein.
    But what if you wanted to trigger these steps based on some events or schedules?
    Well, that's exactly what we will look into in the next section, *Triggering automation
    using CloudWatch schedules and events*.
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
- en: Triggering automation using CloudWatch schedules and events
  id: totrans-184
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Although you can trigger automation documents manually, it's far better to either
    schedule or automate the execution of automation jobs using CloudWatch schedules
    and events.
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
- en: 'Let''s first understand how you can leverage CloudWatch events to trigger simple
    notifications of Systems Manager Automation events. These events can be used to
    notify you of whether your automation task succeeded, failed, or simply timed
    out:'
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
- en: First, log in to the CloudWatch dashboard. Alternatively, you can open CloudWatch
    via [https://console.aws.amazon.com/cloudwatch/](https://console.aws.amazon.com/cloudwatch/).
  id: totrans-187
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Next, from the navigation pane, select the Events option to bring up the Create
    rule page. Here, select Event Pattern from the Event Source section.
  id: totrans-188
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'With this done, we now need to build our event source. To do so, from the Service
    Name drop-down list, search and select the option EC2 Simple Systems Manager (SSM),
    as shown here:'
  id: totrans-189
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/9a11327e-80a5-4ce8-a0eb-867f00653dbb.png)'
  id: totrans-190
  prefs: []
  type: TYPE_IMG
- en: With the service selected, you can now opt to select a corresponding SSM Event
    Type as well, for example in this case I wish to be notified when a particular
    Automation task fails. So in the Event Type drop-down list, I've selected the
    Automation option. You can alternatively select other SSM services as well.
  id: totrans-191
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Next, in the detail type section, I've opted to go for the EC2 Automation Execution
    Status-change Notification option. Correspondingly, I've also selected Failed as
    the Specific status(es) for my event. This means that if and when a failed status
    event is generated as a result of an automation job, it will trigger a corresponding
    action which can be as simple as sending a notification using an SNS service or
    even triggering a corresponding Lambda function to perform some form of remediation
    action.
  id: totrans-192
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Your Event Pattern Preview should resemble something similar to the snippet
    here:'
  id: totrans-193
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE13]'
  id: totrans-194
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Similarly, you can even configure a CRON expression or fixed rate of execution
    of your automation jobs by selecting the Schedule option in the Event Source section:'
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
- en: Provide a suitable Cron expression depending on your requirements, for example,
    I wish to run the AWS-UpdateLinuxAmi automation document every Sunday at 10 P.M.
    UTC. In this case, the CRON expression will become `0,18,?,*,SUN,*`.
  id: totrans-196
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'With the schedule configured, move on to the Targets section and select the
    SSM Automation option from the Targets drop-down list as shown in the following
    screenshot:'
  id: totrans-197
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/423dd317-ec1f-422a-b722-0665683cf405.png)'
  id: totrans-198
  prefs: []
  type: TYPE_IMG
- en: Next, configure the AWS-UpdateLinuxAmi parameters as we discussed earlier, and
    once the desired fields are populated, click on Add target* to complete the configuration.
  id: totrans-199
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: With this step completed, you can now instantaneously trigger your automation
    jobs based on events as well as schedules, all powered by CloudWatch! Amazing
    isn't it?
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
- en: In the next and final section, we will be learning a bit about yet another simple
    and easy to use SSM service that enables you to manage and patch your instances
    with ease.
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
- en: Managing instance patches using patch baseline and compliance
  id: totrans-202
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Regularly patching your instances with the right set of security patches is
    an important activity that can take up a lot of time and effort if performed manually
    on each individual instance. Luckily, AWS provides a really efficient and easy
    way of automating the patching of your managed instances using the concept of
    Patch Manager services, provided as an out-of-the-box capability with SSM.
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
- en: As an administrator, all you need to do is scan your instances for missing patches
    and leverage Patch Manager to automatically remediate the issues by installing
    the required set of patches. You can, alternatively, even schedule the patching
    of your managed instance or group of instances with the help of SSM's maintenance
    window tasks.
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
- en: In this section, we will explore a quick and easy way of creating a unique patch
    baseline for our Dev instances and later create and associate a maintenance window
    for this, all using the EC2 Management dashboard. So let's get started with this
    right away!
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
- en: 'First up, you will need to ensure that your instance has the required set of
    IAM Roles as well as the SSM agent installed and functioning as described at the
    beginning of this chapter. With these basics out of the way, we first need to
    configure the patch baseline with our set of required patches:'
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
- en: To do so, launch your EC2 dashboard and select the Patch Baselines option from
    the Systems Manager Services section. Patch Manager includes a default patch baseline
    for each operating system supported by Patch Manager. This includes Windows Server
    2003 to 2016, Ubuntu, RHEL, CentOS, SUSE, and even Amazon Linux as well. You can
    use these default patch baselines or alternatively you can create one based on
    your requirements. Here, let's quickly create a custom baseline for our Dev instances.
  id: totrans-207
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select the Create Patch Baseline option to bring up the Create Patch Baseline dashboard.
    Here, provide a suitable Name for your custom baseline.
  id: totrans-208
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: From the Operating System, select Ubuntu as the OS choice. You will notice the
    patching rules change accordingly based on the OS type you select.
  id: totrans-209
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Next, in the Approval Rules section, create suitable patch baseline rules depending
    on your requirements. For example, I wish to set the Python packages to an Important priority
    and with a High compliance level as well. Similarly, you can add up to 10 such
    rules for one baseline, as shown in the following screenshot:'
  id: totrans-210
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/2b67929e-a4f1-47cc-bf45-075528e2e889.png)'
  id: totrans-211
  prefs: []
  type: TYPE_IMG
- en: In the final section, Patch Exceptions, you can optionally mention the Approved
    Packages, Rejected Packages, and the Compliance Level for these patches collectively.
    In this case, I've left these values as their defaults and selected the Create
    Patch Baseline option to complete the process.
  id: totrans-212
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: With your new patch baseline created, you now have the option to promote the
    same as the Default Baseline by selecting the new baseline from the Patch Baselines dashboard
    and clicking on the Set Default Patch Baseline option from the Actions tab.
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
- en: 'Moving on to the next part of this walkthrough, we will now go ahead and set
    up the maintenance window for our newly created patch baseline:'
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
- en: To do so, select the Maintenance Windows option from the Systems Manager Shared
    Resources section. Click on Create maintenance window to get started with the
    process.
  id: totrans-215
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In the Create maintenance window page, provide a suitable Name for your window
    as well as an optional Description.
  id: totrans-216
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Next, in the Specify schedule section, you can opt to either use a *CRON scheduler* or
    a *rate expression* to define the schedule for your maintenance window. For this
    scenario, I''ve opted for the Cron schedule builder option and provided a window
    that starts every Sunday at 12:00 UTC:'
  id: totrans-217
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/81b5a47d-f1d1-4fb1-98dd-c782ef4c53a3.png)'
  id: totrans-218
  prefs: []
  type: TYPE_IMG
- en: In the Duration as well as the Stop initiating tasks field, specify the timeline
    in hours that the maintenance window has to last for, as well as the number of
    hours before you want the system to stop initiating new tasks. Once all the required
    fields are populated, click on Create maintenance window to complete the creation
    process.
  id: totrans-219
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'With the maintenance window created, we next need to add some targets for execution.
    Targets are individual EC2 instances or a group of EC2 instances that are identified
    by tags. To configure targets, select your newly created maintenance window then
    from the Actions tab and select the option Register targets:'
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
- en: In the Register targets page, provide a Target Name for your maintenance window's
    target with an optional Description.
  id: totrans-221
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Next, select the target EC2 instances you wish to associate with this target
    by either opting to Specify Tags or even by Manually Selecting Instances as shown
    in the following screenshot. For this scenario, I''ve already provided the tag
    *OS:Linux* to my Dev instances; alternatively, you can manually select your instances
    as well:'
  id: totrans-222
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/c7037cbf-c4e7-498a-ba2f-a310a72dfbc9.png)'
  id: totrans-223
  prefs: []
  type: TYPE_IMG
- en: Once completed, select the Register targets option to complete the process.
  id: totrans-224
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'With the target instances registered with our maintenance window, the final
    step left to take is associate the maintenance window with our patch baseline:'
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
- en: In order to do this, we need to select the newly created *maintenance window*;
    from the Actions tab, select the option Register run command task.
  id: totrans-226
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Here, in the Register run command task page, fill in the required details such
    as a *name* for your new Run Command followed by an optional Description.
  id: totrans-227
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Next, from the Command document section, select the AWS-RunPatchBaseline document.
    You will also see the targeted instance associated with this Run Command already,
    as we configured it in our earlier steps.
  id: totrans-228
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Finally, in the Parameters section, select the appropriate IAM Role, provide
    a suitable count for the *Run Command to stop after* receiving a certain amount
    of errors, and last but not least, don't forget to select whether you wish to
    Install or simply Scan the target instances for the required set of patches.
  id: totrans-229
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: With all the fields completed, click on Register task to complete this configuration.
  id: totrans-230
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Awesome isn't it? With just a few simple clicks you have now set up an effective
    patch management solution for your Dev instances, and without the need for any
    specialized software or expertise! But before we wind up this chapter, let's look
    at one last simple and really useful service provided by Systems Manager, which
    helps collect and inventorize metadata about your AWS as well as on-premises instances.
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
- en: Getting started with Inventory Management
  id: totrans-232
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Inventory Management or just Inventory is yet another managed service provided
    by Systems Manager that is responsible for collecting operating system, application,
    and instance metadata from your AWS instances as well as those present and managed
    by Systems Manager in your on-premises environments. You can use this service
    to query the inventory metadata for mapping, understanding, and remediating EC2
    instances based on certain software or regulatory compliances.
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
- en: 'Let''s look at a very simple example of enabling the inventory service for
    our Dev instance using the AWS Management dashboard:'
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
- en: To begin with, you will require both the SSM agent as well as the required IAM
    Roles configured on your managed instance. Once this is completed, select the
    Managed Instances option from the Systems Manager Shared Resources section.
  id: totrans-235
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Here, select your Dev instance and click on the Setup Inventory option as shown
    in the following screenshot:'
  id: totrans-236
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/d292fb3a-4e42-499f-b72b-fae080576b08.png)'
  id: totrans-237
  prefs: []
  type: TYPE_IMG
- en: On the Setup Inventory page, most of the options will be quite familiar to you
    by now, such as the Targets and Schedule sections, so I'm not going to dwell on
    them here again. The more important section here is the Parameters section, using
    which you can choose to either Enable or Disable different types of inventory
    collections. For example, since we are working with Linux instances, I've chosen
    to disable the *Windows updates* parameters while keeping the rest enabled.
  id: totrans-238
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The final field Write execution history to S3 basically allows you to write
    and store the inventory data centrally in an S3 bucket. This comes in really handy
    when you wish to collate your inventory data from multiple instances at a central
    location and then query this data either using services such as Amazon Athena
    or QuickInsights. Once completed, click on Setup Inventory to complete the inventory
    setup process.
  id: totrans-239
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: You can now view the collected metadata of your EC2 instance by selecting it
    from the Managed Instances page and clicking on the Inventory tab. Here, choose
    between the various Inventory Types drop-down lists to view your instance specific
    metadata. You can toggle between AWS:Application, AWS:AWSComponent, AWS:Network,
    and AWS:InstanceDetailedInformation, just to name a few.
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
- en: With this, we come towards the end of this chapter, but before we move on to
    the next chapter, here are a few key takeaways and points that you ought to try
    out!
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
- en: Planning your next steps
  id: totrans-242
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Well, we have covered a lot of new features and services in this chapter, however,
    there are still a few things that I would recommend you try out on your own. First
    up is the Parameter Store!
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
- en: The Parameter Store is yet another managed service provided by Systems Manager
    and is designed to store your instance's configuration data such as passwords,
    database strings, license codes, and so on, securely. You have the added option
    of storing the data either as plain text, or even in encrypted form, and later
    reference it in your automation documents or policy documents as variables rather
    than complete plain text. But that's not even the best part of it! Using Parameter
    Store, you can also reference your data across other AWS services such as EC2
    Container Service and AWS Lambda, thus making this a centralized store for storing
    all your configurational and secure data.
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
- en: Another important feature that I would recommend using in your environments
    is Resource Data Sync. Resource Data Sync enables you to store your instance's
    metadata collected from different Systems Manager services in a centralized location.
    You can configure it to collect metadata from instance operating systems, applications,
    Microsoft Windows updates, network configurations, and much more! This comes in
    really handy in production environments where you want to analyze the software
    and patch compliances of your instances.
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  id: totrans-246
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Well, it has certainly been a long chapter, but we got to learn a lot and I
    hope that it helps you in your quest towards mastering AWS! Let's quickly recap
    what we have learned so far.
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
- en: We started off with a quick introduction to Systems Manager, followed by an
    in-depth look at how to install, configure and verify the SSM agents on your managed
    EC2 instances. We then gained an understanding of how to leverage the Run Command
    to perform certain types of executions on your managed instances, followed by
    a rundown of maintaining an instance's state configuration using State Manager.
    We also looked at working with automation documents and how you can effectively
    patch your instances using them. Towards the end of the chapter, we learned about
    patching your instances using Patch Manager and also learned how you can effectively
    inventorize your instance metadata using inventory manager.
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
- en: In the next chapter, we will be introducing two new services, which will help
    us to deploy our simple WordPress application to the cloud. So, stay tuned!
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
