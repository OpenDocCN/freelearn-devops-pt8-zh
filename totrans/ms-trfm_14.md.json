["```\nresource \"google_artifact_registry_repository\" \"main\" {\n  project       = google_project.main.project_id\n  location      = var.primary_region\n  repository_id = \"${var.application_name}-${var.environment_name}\"\n  format        = \"DOCKER\"\n}\n```", "```\nresource \"google_service_account\" \"cluster\" {\n  project      = google_project.main.project_id\n  account_id   = \"sa-gke-${var.application_name}-${var.environment_name}-${random_string.project_id.result}\"\n  display_name = \"sa-gke-${var.application_name}-${var.environment_name}-${random_string.project_id.result}\"\n}\n```", "```\nresource \"google_container_cluster\" \"main\" {\n  project  = google_project.main.project_id\n  name     = \"gke-${var.application_name}-${var.environment_name}-${random_string.project_id.result}\"\n  location = var.primary_region\n  remove_default_node_pool = true\n  initial_node_count       = 1\n}\n```", "```\nresource \"google_container_node_pool\" \"primary\" {\n  project    = google_project.main.project_id\n  name       = \"gke-${var.application_name}-${var.environment_name}-${random_string.project_id.result}-primary\"\n  location   = var.primary_region\n  cluster    = google_container_cluster.main.name\n  node_count = var.node_count\n  node_config {\n    ...\n  }\n}\n```", "```\nnode_config {\n  machine_type = var.node_size\n  preemptible  = false\n  spot         = false\n  service_account = google_service_account.cluster.email\n  oauth_scopes = [\n    \"https://www.googleapis.com/auth/cloud-platform\",\n    \"https://www.googleapis.com/auth/logging.write\",\n    \"https://www.googleapis.com/auth/monitoring\"\n  ]\n}\n```", "```\nresource \"google_container_cluster\" \"main\" {\n  ...\n  workload_identity_config {\n    workload_pool = \"${google_project.main.project_id}.svc.id.goog\"\n  }\n}\n```", "```\nnode_config {\n  ...\n  workload_metadata_config {\n    mode = \"GKE_METADATA\"\n  }\n}\n```", "```\ndata \"google_container_cluster\" \"main\" {\n  name     = var.cluster_name\n  location = var.primary_region\n}\n```", "```\nprovider \"kubernetes\" {\n  token                  = data.google_client_config.current.access_token\n  host                   = data.google_container_cluster.main.endpoint\n  client_certificate     = base64decode(data.google_container_cluster.main.master_auth.0.client_certificate)\n  client_key             = base64decode(data.google_container_cluster.main.master_auth.0.client_key)\n  cluster_ca_certificate = base64decode(data.google_container_cluster.main.master_auth.0.cluster_ca_certificate)\n}\n```", "```\nresource \"kubernetes_service_account\" \"main\" {\n  metadata {\n    namespace = var.namespace\n    name      = var.service_account_name\n    annotations = {\n      \"iam.gke.io/gcp-service-account\" = var.service_account_email\n    }\n  }\n  automount_service_account_token = var.service_account_token\n}\n```", "```\n    - name: Login to Google Container Registry\n      uses: docker/login-action@v3\n      with:\n        registry: ${{ needs.terraform-apply.outputs.container_registry_endpoint }}\n        username: _json_key\n        password: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}\n```"]