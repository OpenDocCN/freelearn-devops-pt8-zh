["```\n$ docker swarm init\nSwarm initialized: current node (s3jekhby2s0vn1qmbhm3ulxzh) is now a manager.\n```", "```\n     docker swarm join --token SWMTKN-1-17o42n70mys1l3qklmew87n82lrgymtrr65exmaga9jp57831g-4g2kzh4eoec2973l7hc561bte 192.168.65.4:2377\n```", "```\n$ docker service create --name webserver nginx:alpine\nk40w64wkmr5v582m4whfplca5\noverall progress: 1 out of 1 tasks\n1/1: running   [==================================================>]\nverify: Service converged\n```", "```\n$ docker service ls\nID             NAME        MODE         REPLICAS   IMAGE          PORTS\nk40w64wkmr5v   webserver   replicated   1/1        nginx:alpine\n```", "```\n$ docker node ps\nID             NAME          IMAGE          NODE             DESIRED STATE   CURRENT STATE           ERROR     PORTS\nog3zh7h7ht9q   webserver.1   nginx:alpine   docker-desktop   Running         Running 7 minutes ago\n```", "```\n$ docker service create --detach \\\n--name global-webserver --mode global \\\n--constraint node.labels.web==\"true\" nginx:alpine\nn9e24dh4s5731q37oboo8i7ig\n```", "```\n$ docker service ls\nID             NAME               MODE         REPLICAS   IMAGE          PORTS\nn9e24dh4s573   global-webserver   global       0/0        nginx:alpine\nk40w64wkmr5v   webserver          replicated   1/1        nginx:alpine\n```", "```\n$ docker node update --label-add web=\"true\" docker-desktop\ndocker-desktop\n$ docker node inspect docker-desktop \\\n--format=\"{{.Spec.Labels}}\"\nmap[web:true]\n```", "```\n$ docker service ls\nID             NAME               MODE         REPLICAS   IMAGE          PORTS\nn9e24dh4s573   global-webserver   global       1/1        nginx:alpine\nk40w64wkmr5v   webserver          replicated   1/1        nginx:alpine\n```", "```\n    $ docker service inspect global-webserver \\\n    --format=\"{{.Spec.TaskTemplate.Placement}}\"\n    --placement-pref: Sometimes, we are looking for a preferred location, but we need to ensure that the application will execute even if this doesn’t exist. We will use a placement preference in such situations.\n    ```", "```\n$ docker service update webserver --replicas=2\nwebserver\noverall progress: 2 out of 2 tasks\n1/2: running   [==================================================>]\n2/2: running   [==================================================>]\nverify: Service converged\n$ docker service ls\nID             NAME               MODE         REPLICAS   IMAGE          PORTS\nn9e24dh4s573   global-webserver   global       1/1        nginx:alpine\nk40w64wkmr5v   webserver          replicated   2/2        nginx:alpine\n```", "```\n$ docker node ps\nID             NAME                                         IMAGE          NODE             DESIRED STATE   CURRENT STATE           ERROR     PORTS\ng72t1n2myffy   global-webserver.s3jekhby2s0vn1qmbhm3ulxzh   nginx:alpine   docker-desktop   Running         Running 3 hours ago\nog3zh7h7ht9q   webserver.1                                  nginx:alpine   docker-desktop   Running         Running 16 hours ago\nx2u85bbcrxip   webserver.2                                  nginx:alpine   docker-desktop   Running         Running 2 minutes ago\n```", "```\n$ docker ps\nCONTAINER ID   IMAGE          COMMAND                  CREATED         STATUS         PORTS     NAMES\ncfd1b37cca93   nginx:alpine   \"/docker-entrypoint.…\"   9 minutes ago   Up 9 minutes   80/tcp    webserver.2.x2u85bbcrxiplsvtmj08x69z5\n9bc7a5df593e   nginx:alpine   \"/docker-entrypoint.…\"   3 hours ago     Up 3 hours     80/tcp    global-webserver.s3jekhby2s0vn1qmbhm3ulxzh.g72t1n2myffy0abl1bj57m6es\n3d784315a0af   nginx:alpine   \"/docker-entrypoint.…\"   16 hours ago    Up 16 hours    80/tcp    webserver.1.og3zh7h7ht9qpv1xkip84a9gb\n```", "```\n$ docker kill webserver.2.x2u85bbcrxiplsvtmj08x69z5\nwebserver.2.x2u85bbcrxiplsvtmj08x69z5\n```", "```\n$ docker service ls\nID             NAME               MODE         REPLICAS   IMAGE          PORTS\nn9e24dh4s573   global-webserver   global       1/1        nginx:alpine\nk40w64wkmr5v   webserver          replicated   2/2        nginx:alpine\n```", "```\n$ docker service ps webserver\nID             NAME              IMAGE          NODE             DESIRED STATE   CURRENT STATE           ERROR                         PORTS\nog3zh7h7ht9q   webserver.1       nginx:alpine   docker-desktop   Running         Running 16 hours ago\nx02zcj86krq7   webserver.2       nginx:alpine   docker-desktop   Running         Running 4 minutes ago\nx2u85bbcrxip    \\_ webserver.2   nginx:alpine   docker-desktop   Shutdown        Failed 4 minutes ago    \"task: non-zero exit (137)\"\n```", "```\n$ docker container ls\nCONTAINER ID   IMAGE          COMMAND                  CREATED          STATUS          PORTS     NAMES\n52779dbe389e   nginx:alpine   \"/docker-entrypoint.…\"   13 minutes ago   Up 13 minutes   80/tcp    webserver.2.x02zcj86krq7im2irwivwzvww\n9bc7a5df593e   nginx:alpine   \"/docker-entrypoint.…\"   4 hours ago      Up 4 hours      80/tcp    global-webserver.s3jekhby2s0vn1qmbhm3ulxzh.g72t1n2myffy0abl1bj57m6es\n3d784315a0af   nginx:alpine   \"/docker-entrypoint.…\"   16 hours ago     Up 16 hours     80/tcp    webserver.1.og3zh7h7ht9qpv1xkip84a9gb\n```", "```\n$ docker exec webserver.2.x02zcj86krq7im2irwivwzvww hostname\n52779dbe389e\n$ docker exec webserver.1.og3zh7h7ht9qpv1xkip84a9gb hostname\n3d784315a0af\n```", "```\n$ docker service update --hostname=\"{{.Node.Hostname}}\" webserver\nwebserver\noverall progress: 2 out of 2 tasks\n1/2: running   [==================================================>]\n2/2: running   [==================================================>]\nverify: Service converged\n```", "```\n$ docker stack deploy --compose-file  docker-compose.yaml test\nIgnoring unsupported options: build\nCreating network test_simplestlab\nCreating service test_lb\nCreating service test_db\nCreating service test_app\n```", "```\n$ docker stack ls\nNAME      SERVICES   ORCHESTRATOR\ntest      3          Swarm\n$ docker service ls\nID             NAME               MODE         REPLICAS   IMAGE                                 PORTS\n4qmfnmibqqxf   test_app           replicated   0/1        myregistry/simplest-lab:simplestapp   *:3000->3000/tcp\nasr3kwfd6b8u   test_db            replicated   0/1        myregistry/simplest-lab:simplestdb    *:5432->5432/tcp\njk603a8gmny6   test_lb            replicated   0/1        myregistry/simplest-lab:simplestlb    *:8080->80/tcp\n```", "```\n$ docker service create --name webserver-published \\\n--publish published=1080,target=80,protocol=tcp \\\n--quiet nginx:alpine\ngws9iqphhswujnbqpvncimj5f\n```", "```\n$ docker service ls\nID             NAME                  MODE         REPLICAS   IMAGE                                 PORTS\ngws9iqphhswu   webserver-published   replicated   1/1        nginx:alpine                          *:1080->80/tcp\n```", "```\n$ curl 0.0.0.0:1080 -I\nHTTP/1.1 200 OK\nServer: nginx/1.23.4\nDate: Fri, 12 May 2023 19:05:43 GMT\nContent-Type: text/html\nContent-Length: 615\nLast-Modified: Tue, 28 Mar 2023 17:09:24 GMT\nConnection: keep-alive\nETag: \"64231f44-267\"\nAccept-Ranges: bytes\n```", "```\n    $ docker swarm init\n    docker swarm join-token manager and follow the instructions.\n    ```", "```\n    $ docker node ls\n    ID                            HOSTNAME         STATUS    AVAILABILITY   MANAGER STATUS   ENGINE VERSION\n    pyczfubvyyih2kmeth8xz9yd7 *   docker-desktop   Ready     Active         Leader           20.10.22\n    ```", "```\n    $ docker network ls\n    NETWORK ID     NAME              DRIVER    SCOPE\n    75aa7ed7603b   bridge            bridge    local\n    9f1d6d85cb3c   docker_gwbridge   bridge    local\n    07ed8a3c602e   host              host      local\n    7977xslkr9ps   ingress           overlay   swarm\n    cc46fa305d96   none              null      local\n    ```", "```\n    $ docker node inspect docker-desktop \\\n    --format=\"{{ .Status }}\"\n    {ready  192.168.65.4}\n    $ docker node inspect docker-desktop \\\n    --format=\"{{ .ManagerStatus }}\"\n    {true reachable 192.168.65.4:2377}\n    ```", "```\n    $ docker service create --name webserver nginx:alpine\n    m93gsvuin5vly5bn4ikmi69sq\n    overall progress: 1 out of 1 tasks\n    1/1: running   [==================================================>]\n    docker service ls:\n\n    ```", "```\n    $ docker container ls\n    CONTAINER ID   IMAGE          COMMAND                  CREATED         STATUS         PORTS     NAMES\n    63f1dfa649d8   nginx:alpine   \"/docker-entrypoint.…\"   3 minutes ago   Up 3 minutes   80/tcp    webserver.1.l38u6vpyq5zo9qfyc70g2411x\n    ```", "```\n\n    ```", "```\n    $ docker service update --replicas 3 webserver\n    webserver\n    overall progress: 3 out of 3 tasks\n    1/3: running   [==================================================>]\n    2/3: running   [==================================================>]\n    3/3: running   [==================================================>]\n    docker service ps webserver again:\n\n    ```", "```\n\n    ```", "```\n    $ docker service logs webserver --tail 2\n    webserver.1.l38u6vpyq5zo@docker-desktop    | 2023/05/14 09:06:44 [notice] 1#1: start worker process 31\n    webserver.1.l38u6vpyq5zo@docker-desktop    | 2023/05/14 09:06:44 [notice] 1#1: start worker process 32\n    webserver.2.j0at9tnwc3tx@docker-desktop    | 2023/05/14 09:28:02 [notice] 1#1: start worker process 33\n    webserver.2.j0at9tnwc3tx@docker-desktop    | 2023/05/14 09:28:02 [notice] 1#1: start worker process 34\n    webserver.3.vj6k8cuf0rix@docker-desktop    | 2023/05/14 09:28:02 [notice] 1#1: start worker process 32\n    webserver service:\n\n    ```", "```\n\n    We can review the service’s status again and see that the instances were recreated:\n\n    ```", "```\n    $ docker service ls\n    ID             NAME        MODE         REPLICAS   IMAGE          PORTS\n    curl:\n\n    ```", "```\n\n    ```", "```\n\n    ```", "```\n    $ docker service logs webserver --tail 2\n    ...\n    webserver.2.afp6z72y7y1p@docker-desktop    | 10.0.0.2 - - [14/May/2023:10:36:11 +0000] \"HEAD / HTTP/1.1\" 200 0 \"-\" \"curl/7.81.0\" \"-\"\n    ...\n    webserver.3.ub28rsqbo8zq@docker-desktop    | 10.0.0.2 - - [14/May/2023:10:38:11 +0000] \"HEAD / HTTP/1.1\" 200 0 \"-\" \"curl/7.81.0\" \"-\"\n    ...\n    ```", "```\n    $ docker service rm webserver\n    webserver\n    ```", "```\n    $ echo demo|docker secret create dbpasswd.env -\n    2tmqj06igbkjt4cot95enyj53\n    $ docker secret create dbconfig.json dbconfig.json\n    echo to create the secret and included only the demo string inside the dbpasswd.env secret, while we included a complete JSON file in the dbconfig.json secret. These secret names can be changed because we will use the full format to reference them in the Compose file.\n    ```", "```\n    $ docker config create init-demo.sh init-demo.sh\n    services section will contain all the services to create. First, we have the lb service:\n\n    ```", "```\n\n    After the `lb` service, we have the definition for the database. Each service’s section includes the container image, the environment variables, and the networking features of the service:\n\n    ```", "```\n\n    Notice that this component includes `secrets`, `configs`, and `volumes` sections. They allow us to include data inside the application’s containers. Let’s continue with the `app` service:\n\n    ```", "```\n\n    At the end of the file, we have the definitions for `networks`, `configs`, and `secrets` included in each service definition:\n\n    ```", "```\n\n    You may notice that all secrets and configs are defined as external resources. This allows us to create them outside of the stack. It is not a good idea to include the sensitive content of secrets in cleartext in your Compose YAML files.\n    ```", "```\n    $ docker stack deploy -c docker-compose.yaml chapter7\n    Creating network chapter7_simplestlab\n    Creating service chapter7_db\n    Creating service chapter7_app\n    Creating service chapter7_lb\n    ```", "```\n    $ docker stack ps chapter7\n    ID             NAME             IMAGE                              NODE             DESIRED STATE   CURRENT STATE           ERROR     PORTS\n    zaxo9aprs42w   chapter7_app.1   frjaraur/simplestlab:simplestapp   docker-desktop   Running         Running 2 minutes ago\n    gvjyiqrudi5h   chapter7_db.1    frjaraur/simplestlab:simplestdb    docker-desktop   Running         Running 2 minutes ago\n    tyixkplpfy6x   chapter7_lb.1    frjaraur/simplestlab:simplestlb    docker-desktop   Running         Running 2 minutes ago\n    ```", "```\n    $ docker stack services chapter7\n    ID             NAME           MODE         REPLICAS   IMAGE                              PORTS\n    dmub9x0tis1w   chapter7_app   replicated   1/1        frjaraur/simplestlab:simplestapp\n    g0gha8n57i7n   chapter7_db    replicated   1/1        frjaraur/simplestlab:simplestdb\n    chapter7 application stack using our browser (http://localhost:8080):\n    ```"]