- en: Governing Your Environments Using AWS CloudTrail and AWS Config
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 AWS CloudTrail 和 AWS Config 管理你的环境
- en: In the previous chapter, we learned how to leverage and utilize AWS WAF for
    protecting your web applications against commonly occurring web attacks and exploitations.
    In this chapter, we will be exploring two really useful and must-have security
    and governance services in the form of AWS CloudTrail and AWS Config!
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一章中，我们学习了如何利用 AWS WAF 保护你的 web 应用免受常见的 web 攻击和漏洞利用。在这一章中，我们将探索两个非常有用且必不可少的安全和治理服务，即
    AWS CloudTrail 和 AWS Config！
- en: 'Keeping this in mind, let''s have a quick look at the various topics that we
    will be covering in this chapter:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 记住这一点，让我们快速看一下本章将涵盖的各种主题：
- en: Introducing AWS CloudTrail, its concepts, and how it works
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 介绍 AWS CloudTrail、它的概念以及它是如何工作的
- en: Enabling CloudTrail for your AWS environment by creating your very own Trail
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过创建你自己的 Trail 为你的 AWS 环境启用 CloudTrail
- en: Integrating and managing CloudTrail Logs using Amazon CloudWatch
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 Amazon CloudWatch 集成和管理 CloudTrail 日志
- en: Automating Amazon CloudWatch alarms for CloudTrail using CloudFormation
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 CloudFormation 为 CloudTrail 自动化 Amazon CloudWatch 警报
- en: Viewing CloudTrail Logs using Amazon Elasticsearch
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 Amazon Elasticsearch 查看 CloudTrail 日志
- en: Introducing Amazon Config and how it works
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 介绍 Amazon Config 及其工作原理
- en: There is so much to do, so let's get started right away!
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 有很多事情要做，我们赶紧开始吧！
- en: Introducing AWS CloudTrail
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍 AWS CloudTrail
- en: As we learned in the previous chapter, AWS provides a wide variety of tools
    and managed services which allow you to safeguard your applications running on
    the cloud, such as AWS WAF and AWS Shield. But this, however, just forms one important
    piece in a much larger jigsaw puzzle! What about compliance monitoring, risk auditing,
    and overall governance of your environments? How do you effectively analyze events
    occurring in your environment and mitigate against the same? Well, luckily for
    us, AWS has the answer to our problems in the form of AWS CloudTrail.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们在上一章中了解到的，AWS 提供了多种工具和托管服务，帮助你保护运行在云上的应用，如 AWS WAF 和 AWS Shield。但这仅仅是一个更大拼图中的一个重要部分！那么合规性监控、风险审计以及环境的整体治理呢？你如何有效地分析环境中发生的事件并采取应对措施呢？幸运的是，AWS
    为我们提供了解决问题的方法——AWS CloudTrail。
- en: 'AWS CloudTrail provides you with the ability to log every single action taken
    by a user, service, role, or even API, from within your AWS account. Each action
    recorded is treated as an event which can then be analyzed for enhancing the security
    of your AWS environment. The following are some of the key benefits that you can
    obtain by enabling CloudTrail for your AWS accounts:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: AWS CloudTrail 为你提供记录 AWS 账户内用户、服务、角色甚至 API 所采取的每一个操作的能力。每个记录的操作都被视为一个事件，之后可以分析这些事件来增强你的
    AWS 环境的安全性。以下是启用 CloudTrail 后你可以获得的一些关键好处：
- en: '**In-depth visibility**: Using CloudTrail, you can easily gain better insights
    into your account''s usage by recording each user''s activities, such as which
    user initiated a new resource creation, from which IP address was this request
    initiated, which resources were created and at what time, and much more!'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**深入的可见性**：使用 CloudTrail，你可以轻松获得账户使用情况的更好洞察，通过记录每个用户的活动，比如哪个用户发起了新的资源创建，这个请求是从哪个
    IP 地址发起的，创建了哪些资源以及在何时创建等等！'
- en: '**Easier compliance monitoring**: With CloudTrail, you can easily record and
    log events occurring within your AWS account, whether they may originate from
    the Management Console, or the AWS CLI, or even from other AWS tools and services.
    The best thing about this is that you can integrate CloudTrail with another AWS
    service, such as Amazon CloudWatch, to alert and respond to out-of-compliance
    events.'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**更简单的合规性监控**：通过 CloudTrail，你可以轻松地记录和记录发生在你的 AWS 账户内的事件，无论这些事件是来自管理控制台、AWS
    CLI，还是其他 AWS 工具和服务。最棒的是，你可以将 CloudTrail 与其他 AWS 服务（如 Amazon CloudWatch）集成，来警报和响应不合规事件。'
- en: '**Security automations**: As we saw in the previous chapter, automating responses
    to security threats not only enables you to mitigate the potential threats faster,
    but also provides you with a mechanism to stop all further attacks. The same can
    be applied to AWS CloudTrail as well! With its easy integration with Amazon CloudWatch
    events, you can now create corresponding Lambda functions that trigger automatically
    each time a compliance is not met, all in a matter of seconds!'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**安全自动化**：正如我们在前一章所看到的，自动响应安全威胁不仅能够让你更快地减轻潜在威胁，还提供了一个机制来阻止所有后续攻击。AWS CloudTrail同样适用！通过与Amazon
    CloudWatch事件的简单集成，你现在可以创建相应的Lambda函数，当合规性未达标时，自动触发这些函数，所有这些都可以在几秒钟内完成！'
- en: 'With these key points in mind, let''s have a quick look at some of CloudTrail''s
    essential concepts and terminologies:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 记住这些关键点后，让我们快速浏览一下CloudTrail的一些基本概念和术语：
- en: '**Events**: Events are the basic unit of measurement in CloudTrail. Essentially,
    an event is nothing more than a record of a particular activity either initiated
    by the AWS services, roles, or even an AWS user. These activities are all logged
    as API calls that can originate from the Management Console, the AWS SDK, or even
    the AWS CLI as well. By default, events are stored by CloudTrail with S3 buckets
    for a period of 7 days. You can view, search, and even download these events by
    leveraging the events history feature provided by CloudTrail.'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**事件**：事件是CloudTrail中的基本计量单位。本质上，事件不过是记录某一特定活动的记录，这些活动可以是由AWS服务、角色或甚至AWS用户发起的。这些活动都作为API调用被记录，这些调用可以来自管理控制台、AWS
    SDK，甚至AWS CLI。默认情况下，事件由CloudTrail与S3桶一起存储7天。你可以通过CloudTrail提供的事件历史功能查看、搜索，甚至下载这些事件。'
- en: '**Trails**: Trails are essentially the delivery mechanism, using which events
    are dumped to S3 buckets. You can use these trails to log specific events within
    specific buckets, as well as to filter events and encrypt the transmitted log
    files. By default, you can have a maximum of *five trails* created per AWS region,
    and this limit cannot by increased.'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Trail**：Trail本质上是交付机制，通过它，事件被发送到S3桶中。你可以使用这些Trail记录特定桶中的特定事件，并且能够过滤事件以及加密传输的日志文件。默认情况下，每个AWS区域最多可以创建*五个Trail*，且此限制无法增加。'
- en: '**CloudTrail Logs**: Once your CloudTrail starts capturing events, it sends
    these events to an S3 bucket in the form of a CloudTrail Log file. The log files
    are JSON text files that are compressed using the `.gzip` format. Each file can
    contain one or more events within itself. Here is a simple representation of what
    a CloudTrail Log looks like. In this case, the event was created when I tried
    to add an existing user by the name of `Mike` to an *administrator* group using
    the AWS Management Console:'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**CloudTrail日志**：一旦你的CloudTrail开始捕获事件，它会将这些事件以CloudTrail日志文件的形式发送到S3桶中。日志文件是JSON文本文件，使用`.gzip`格式进行压缩。每个文件可以包含一个或多个事件。以下是CloudTrail日志的简单表示。在这个例子中，事件是我尝试通过AWS管理控制台将一个名为`Mike`的现有用户添加到*管理员*组时创建的：'
- en: '[PRE0]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'You can view your own CloudTrail Log files by visiting the S3 bucket that you
    specify during the trail''s creation. Each log file is named uniquely using the
    following format:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过访问在创建Trail时指定的S3桶来查看你自己的CloudTrail日志文件。每个日志文件都使用以下格式唯一命名：
- en: '[PRE1]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Where:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 其中：
- en: '`AccountID`: Your AWS account ID.'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`AccountID`: 你的AWS账户ID。'
- en: '`RegionName`: AWS region where the event was captured: **us-east-1**, and so
    on.'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`RegionName`: 捕获事件的AWS区域：**us-east-1**，依此类推。'
- en: '`YYYYMMDDTTHHmmz`: Specifies the year, month, day, hour (24 hours), minutes,
    and seconds. The `z` indicates time in UTC.'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`YYYYMMDDTTHHmmz`: 指定年份、月份、日期、小时（24小时制）、分钟和秒数。`z`表示UTC时间。'
- en: '`UniqueString`: A randomly generated 16-character-long string that is simply
    used so that there is no overwriting of the log files.'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`UniqueString`: 一个随机生成的16字符长字符串，简单用于避免日志文件的覆盖。'
- en: With the basics in mind, let's quickly have a look at how you can get started
    with CloudTrail for your own AWS environments!
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 了解了基础知识后，让我们快速看看如何开始在你自己的AWS环境中使用CloudTrail！
- en: Working with AWS CloudTrail
  id: totrans-29
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用AWS CloudTrail
- en: AWS CloudTrail is a fairly simple and easy to use service that you can get started
    with in a couple of minutes. In this section, we will be walking through a simple
    setup of a CloudTrail Trail using the AWS Management Console itself.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: AWS CloudTrail是一个相当简单且易于使用的服务，你可以在几分钟内开始使用。在本节中，我们将通过AWS管理控制台本身简单设置一个CloudTrail
    Trail。
- en: Creating your first CloudTrail Trail
  id: totrans-31
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建你的第一个CloudTrail Trail
- en: 'To get started, log in to your AWS Management Console and filter the CloudTrail
    service from the AWS services filter. On the CloudTrail dashboard, select the
    Create Trail option to get started:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，登录到您的 AWS 管理控制台，并通过 AWS 服务筛选器过滤出 CloudTrail 服务。在 CloudTrail 仪表板上，选择“创建 Trail”选项以开始：
- en: This will bring up the Create Trail wizard. Using this wizard, you can create
    a maximum of five-trails per region. Type a suitable name for the Trail in to
    the Trail name field to begin with.
  id: totrans-33
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这将打开创建 Trail 向导。使用此向导，您可以在每个区域创建最多五个 Trail。首先在 Trail 名称字段中输入一个合适的名称。
- en: 'Next, you can either opt to Apply trail to all regions or only to the region
    out of which you are currently operating. Selecting all regions enables CloudTrail
    to record events from each region and dump the corresponding log files into an
    S3 bucket that you specify. Alternatively, selecting to record out of one region
    will only capture the events that occur from the region out of which you are currently
    operating. In my case, I have opted to enable the Trail only for the region I''m
    currently working out of. In the subsequent sections, we will learn how to change
    this value using the AWS CLI:'
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，您可以选择将 Trail 应用到所有区域，或者仅应用到您当前操作的区域。选择所有区域将使 CloudTrail 记录每个区域的事件，并将相应的日志文件导入您指定的
    S3 存储桶。或者，选择只记录一个区域的事件将仅捕获该区域内的事件。在我的情况下，我选择仅为我当前工作的区域启用 Trail。在接下来的部分中，我们将学习如何使用
    AWS CLI 更改此值：
- en: '![](img/7ae9080d-34d8-4143-8a20-7d9269e5964d.png)'
  id: totrans-35
  prefs: []
  type: TYPE_IMG
  zh: '![](img/7ae9080d-34d8-4143-8a20-7d9269e5964d.png)'
- en: Next, in the Management events section, select the *type* of events you wish
    to capture from your AWS environment. By default, CloudTrail records all management
    events that occur within your AWS account. These events can be API operations,
    such as events caused due to the invocation of an EC2 RunInstances or TerminateInstances operation,
    or even non-API based events, such as a user logging into the AWS Management Console,
    and so on. For this particular use case, I've opted to record All management events.
  id: totrans-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，在管理事件部分，选择您希望捕获的 AWS 环境中的事件类型。默认情况下，CloudTrail 会记录所有在您的 AWS 账户中发生的管理事件。这些事件可以是
    API 操作，例如由于调用 EC2 RunInstances 或 TerminateInstances 操作而引发的事件，或者甚至是非 API 类型的事件，例如用户登录到
    AWS 管理控制台等。对于这个特定的使用案例，我选择记录所有管理事件。
- en: Selecting the Read-only option will capture all the `GET` API operations, whereas
    the `Write-only` option will capture only the `PUT` API operations that occur
    within your AWS environment.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 选择只读选项将捕获所有 `GET` API 操作，而选择写入选项将仅捕获在您的 AWS 环境中发生的 `PUT` API 操作。
- en: 'Moving on, in the Storage location section, provide a suitable name for the
    S3 bucket that will store your CloudTrail Log files. This bucket will store all
    your CloudTrail Log files, irrespective of the regions the logs originated from.
    You can alternatively select an existing bucket from the S3 bucket selection field:'
  id: totrans-38
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，在存储位置部分，提供一个合适的 S3 存储桶名称，用于存储您的 CloudTrail 日志文件。这个存储桶将存储所有您的 CloudTrail
    日志文件，无论日志来自哪个区域。您还可以从 S3 存储桶选择字段中选择一个现有的存储桶：
- en: '![](img/750ce232-581b-493d-9ec6-0bbb676679c8.png)'
  id: totrans-39
  prefs: []
  type: TYPE_IMG
  zh: '![](img/750ce232-581b-493d-9ec6-0bbb676679c8.png)'
- en: Next, from the Advanced section, you can optionally configure a Log file prefix.
    By default, the logs will automatically get stored under a folder-like hierarchy
    that is usually of the form `AWSLogs/ACCOUNT_ID/CloudTrail/REGION`.
  id: totrans-40
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，在高级部分，您可以选择性地配置日志文件前缀。默认情况下，日志将自动存储在类似文件夹的层级结构下，通常形式为 `AWSLogs/ACCOUNT_ID/CloudTrail/REGION`。
- en: You can also opt to Encrypt log files with the help of an AWS KMS key. Enabling
    this feature is highly recommended for production use.
  id: totrans-41
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您还可以选择通过 AWS KMS 密钥加密日志文件。强烈建议在生产环境中启用此功能。
- en: Selecting Yes in the Enable log file validation field enables you to verify
    the integrity of the delivered log files once they are delivered to the S3 bucket.
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在启用日志文件验证字段中选择“是”将启用您验证已交付的日志文件完整性，确保它们在送达 S3 存储桶后没有被篡改。
- en: Finally, you can even enable CloudTrail to send you notifications each time
    a new log file is delivered to your S3 bucket by selecting Yes against the Send
    SNS notification for every log file delivery option. This will provide you with
    an additional option to either select a predefined SNS topic or alternatively
    create a new one specifically for this particular CloudTrail. Once all the required
    fields are filled in, click on Create to continue.
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，您甚至可以启用 CloudTrail，以便每次新的日志文件被送到您的 S3 存储桶时，通过选择“是”来启用“每次日志文件交付时发送 SNS 通知”选项。这将为您提供一个附加选项，可以选择一个预定义的
    SNS 主题，或者为这个特定的 CloudTrail 创建一个新的 SNS 主题。填写所有必填字段后，点击“创建”以继续。
- en: 'With this, you should be able to see the newly created Trail by selecting the
    Trails option from the CloudTrail dashboard''s navigation pane, as shown in the
    following screenshot:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 到这里，您应该能够通过从 CloudTrail 仪表盘的导航窗格中选择“Trail”选项，查看新创建的 Trail，如下图所示：
- en: '![](img/bad61e60-483b-46d2-9928-85247959904d.png)'
  id: totrans-45
  prefs: []
  type: TYPE_IMG
  zh: '![](img/bad61e60-483b-46d2-9928-85247959904d.png)'
- en: Viewing and filtering captured CloudTrail Logs and Events
  id: totrans-46
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 查看和筛选捕获的 CloudTrail 日志和事件
- en: With the Trail created, you can now view the captured events and filter them
    using the *event history* option from the CloudTrail dashboard's navigation pane.
    Here, you can view the last 7 days of captured events, and even filter specific
    ones by using one or more supporting filter attributes.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 创建完 Trail 后，您可以使用 CloudTrail 仪表盘导航窗格中的 *事件历史* 选项查看捕获的事件并进行筛选。在这里，您可以查看过去 7 天内捕获的事件，甚至可以通过使用一个或多个支持的筛选属性来筛选特定的事件。
- en: 'Here''s a quick look at the Filter attributes that you can use in conjunction
    with the Time range to extract the required events and logs:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是您可以与时间范围一起使用的筛选属性的快速查看，以提取所需的事件和日志：
- en: 'Event ID: Each event captured by CloudTrail has a unique ID that you can filter
    and view.'
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 事件 ID：每个由 CloudTrail 捕获的事件都有一个唯一的 ID，您可以通过它进行筛选和查看。
- en: 'Event name: The name of the event. For example, EC2 events RunInstances, DescribeInstances,
    and so on.'
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 事件名称：事件的名称。例如，EC2 事件 RunInstances、DescribeInstances 等。
- en: 'Event source: The AWS service to which the request was made. For example, `iam.amazonaws.com` or
    `ec2.amazonaws.com`.'
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 事件源：请求所针对的 AWS 服务。例如，`iam.amazonaws.com` 或 `ec2.amazonaws.com`。
- en: 'Resource name: The name or ID of the resource referenced by the event. For
    example, a bucket named `useast-prod-wordpress-code` or an instance ID `i-1234567` for
    an EC2 instance.'
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 资源名称：事件引用的资源的名称或 ID。例如，名为 `useast-prod-wordpress-code` 的存储桶，或者 EC2 实例的实例 ID
    `i-1234567`。
- en: 'Resource type: The type of resource referenced by the event. For example, a
    resource type can be a Bucket for S3, an Instance for EC2, and so on.'
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 资源类型：事件引用的资源类型。例如，S3 的资源类型可以是 Bucket，EC2 的资源类型可以是 Instance，等等。
- en: 'User name: The name of the user that created or performed an action on the
    said event. For example, an IAM user logging into the AWS Management Console,
    and so on:'
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用户名：创建或执行该事件操作的用户的名称。例如，一个 IAM 用户登录到 AWS 管理控制台，等等：
- en: '![](img/4b9582c6-4d78-4acc-a302-03dc5a69c827.png)'
  id: totrans-55
  prefs: []
  type: TYPE_IMG
  zh: '![](img/4b9582c6-4d78-4acc-a302-03dc5a69c827.png)'
- en: 'Once you have selected a particular filter and provided its associated attribute
    value, you can use the Time range to narrow your search results based on a predefined
    time window. To analyze further, you can select the View event option present
    in the details pane of an Event as well. Selecting this option will view the event
    in a JSON format, as shown in the following code:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦您选择了特定的筛选器并提供了其相关属性值，您可以使用时间范围来缩小搜索结果，基于预定义的时间窗口进行筛选。为了进一步分析，您还可以选择事件详细信息窗格中的“查看事件”选项。选择此选项将以
    JSON 格式查看事件，如下所示的代码所示：
- en: '[PRE2]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: You can additionally select the Download icon and select whether you wish to
    export all the logs using the Export to CSV or Export to JSON option.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以选择下载图标，并选择是否希望使用“导出为 CSV”或“导出为 JSON”选项导出所有日志。
- en: You can alternatively even download the log files by accessing your CloudTrail
    S3 bucket and downloading the individual compressed JSON files, as per your requirements.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以通过访问 CloudTrail S3 存储桶并根据需求下载各个压缩的 JSON 文件来下载日志文件。
- en: With this, we come towards the end of this section. You can use these same steps
    and create different Trails for capturing data as well as management activities.
    In the next section, we will see how we can leverage the AWS CLI and update our
    newly-created Trail.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 到这里，我们已接近本节的结尾。您可以使用这些相同的步骤，创建不同的 Trail 来捕获数据以及管理活动。在下一节中，我们将看到如何利用 AWS CLI
    来更新我们新创建的 Trail。
- en: Modifying a CloudTrail Trail using the AWS CLI
  id: totrans-61
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 AWS CLI 修改 CloudTrail Trail
- en: With the Trail in place, you can now use either the AWS Management Console or
    the AWS CLI to modify its settings. In this case, we will look at how to perform
    simple changes to the newly created Trail using the AWS CLI itself. Before proceeding
    with this section, however, it is important that you have installed and configured
    the AWS CLI on your desktop/laptop, based on the guides provided at [http://docs.aws.amazon.com/cli/latest/userguide/installing.html](http://docs.aws.amazon.com/cli/latest/userguide/installing.html).
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 设置好 Trail 后，您可以使用 AWS 管理控制台或 AWS CLI 来修改其设置。在此，我们将介绍如何使用 AWS CLI 对新创建的 Trail
    进行简单的更改。在继续此部分之前，您需要确保已根据 [http://docs.aws.amazon.com/cli/latest/userguide/installing.html](http://docs.aws.amazon.com/cli/latest/userguide/installing.html)
    提供的指南在您的桌面/笔记本电脑上安装并配置了 AWS CLI。
- en: 'Once the CLI is installed and configured, we can now run some simple commands
    to verify its validity. To start off, let''s first check the status of our newly-created
    Trail by using the `describe-trails` command, as shown in the following command:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦 CLI 安装并配置完毕，我们现在可以运行一些简单的命令来验证其有效性。首先，让我们使用 `describe-trails` 命令检查新创建的 Trail
    状态，如下所示：
- en: '[PRE3]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '![](img/118d5718-9d27-40eb-aa4b-deb1c50870c7.png)'
  id: totrans-65
  prefs: []
  type: TYPE_IMG
  zh: '![](img/118d5718-9d27-40eb-aa4b-deb1c50870c7.png)'
- en: This will display the essential properties of your CloudTrail Trails, such as
    the `Name`, the `TrailARN`, whether the log file validation is enabled or not,
    and whether the Trail is a multi-regional Trail or it belongs to a single region.
    In this case, the `IsMultiRegionTrail` value is set to `false`, which means that
    the Trail will only record events for its current region, that is, `us-east-1`.
    Let's go ahead and modify this using the AWS CLI.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 这将显示您的 CloudTrail Trails 的基本属性，如 `Name`、`TrailARN`、是否启用了日志文件验证以及该 Trail 是否为多区域
    Trail 或仅属于一个区域。在此，`IsMultiRegionTrail` 的值设置为 `false`，这意味着该 Trail 仅会记录当前区域的事件，即
    `us-east-1`。接下来，让我们使用 AWS CLI 修改这一设置。
- en: 'To do so, we will be using the `update-trail` command:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 为此，我们将使用 `update-trail` 命令：
- en: '[PRE4]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'The following code will simply change the `IsMultiRegionTrail` value from `false` to
    `true`. You can verify the same by using the `describe-trails` command, as performed
    earlier. Similarly, you can use the `update-trail` command to change other settings
    for your CloudTrail Trail, such as enabling the log file validation feature, as
    described in the following command:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码将简单地将 `IsMultiRegionTrail` 值从 `false` 更改为 `true`。您可以通过之前执行的 `describe-trails`
    命令来验证这一点。同样，您也可以使用 `update-trail` 命令来更改 CloudTrail Trail 的其他设置，比如启用日志文件验证功能，如下所示：
- en: '[PRE5]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Finally, you can even use the AWS CLI to check the current status of your Trail
    by executing the `get-trail-status` command, as shown in the following command:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，您甚至可以使用 AWS CLI 执行 `get-trail-status` 命令来检查 Trail 的当前状态，如下所示：
- en: '[PRE6]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '![](img/1f5a6170-3897-4feb-99a2-b17991f79a5c.png)'
  id: totrans-73
  prefs: []
  type: TYPE_IMG
  zh: '![](img/1f5a6170-3897-4feb-99a2-b17991f79a5c.png)'
- en: Apart from these values, the `get-trail-status` command will additionally show
    two more fields (`LatestNotificationError` and `LatestDeliveryError`) in case
    an Amazon SNS subscription fails or if a CloudTrail Trail was unsuccessful at
    writing the events to an S3 bucket.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 除了这些值之外，`get-trail-status` 命令还会额外显示两个字段（`LatestNotificationError` 和 `LatestDeliveryError`），用于显示
    Amazon SNS 订阅失败或 CloudTrail Trail 在将事件写入 S3 存储桶时失败的情况。
- en: With this completed, we will now move on to the next section of this chapter,
    in which we will learn how you can effectively monitor your Trails with the help
    of CloudWatch Logs.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 完成此步骤后，我们将进入本章的下一个部分，在该部分中，我们将学习如何借助 CloudWatch Logs 有效地监控您的 Trails。
- en: Monitoring CloudTrail Logs using CloudWatch
  id: totrans-76
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 CloudWatch 监控 CloudTrail 日志
- en: One of the best features of using CloudTrail is that you can easily integrate
    it with other AWS services for an enhanced security auditing and governance experience.
    One such service that we are going to use and explore here with CloudTrail is
    Amazon CloudWatch.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 CloudTrail 的最佳功能之一是，您可以轻松将其与其他 AWS 服务集成，从而提升安全审计和治理体验。我们将在这里使用并探讨的一个服务是 Amazon
    CloudWatch。
- en: Using CloudWatch, you can easily set up custom metric filters and an array of
    alarms that can send notifications to the right set of people in case a specific
    security or governance issue occurs in your AWS environment. To get started with
    CloudWatch using CloudTrail, you will first need to configure your Trail to send
    the captured log events to CloudWatch Logs. This can be easily configured using
    both the AWS Management Console and the AWS CLI. Next, once this is done, you
    will be required to define custom CloudWatch metric filters to evaluate the log
    events for specific matches. Once a match is made, you can then additionally configure
    CloudWatch to trigger corresponding alarms, send notifications, and even perform
    a remediation action based on the type of alarm generated.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 使用CloudWatch，您可以轻松设置自定义度量过滤器和一系列警报，当您的AWS环境中发生特定的安全或治理问题时，能够将通知发送给相应的人群。要开始使用CloudWatch与CloudTrail，您首先需要配置Trail，将捕获的日志事件发送到CloudWatch
    Logs。这可以通过AWS管理控制台和AWS CLI轻松配置。接下来，一旦完成此步骤，您需要定义自定义CloudWatch度量过滤器，评估日志事件是否与特定模式匹配。一旦匹配，您可以进一步配置CloudWatch触发相应的警报、发送通知，甚至基于生成的警报类型执行补救措施。
- en: 'Here is a diagrammatic representation of CloudTrail''s integration with CloudWatch:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 这是CloudTrail与CloudWatch集成的示意图：
- en: '![](img/441f4deb-1f5f-413e-93f5-5e606816c434.png)'
  id: totrans-80
  prefs: []
  type: TYPE_IMG
  zh: '![](img/441f4deb-1f5f-413e-93f5-5e606816c434.png)'
- en: 'In this section, we will be using the AWS CLI to integrate the Trail''s logs
    with Amazon CloudWatch Logs:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 本节中，我们将使用AWS CLI将Trail的日志与Amazon CloudWatch Logs进行集成：
- en: 'First, we will need to create a new CloudWatch Log Group using the following
    command:'
  id: totrans-82
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，我们需要使用以下命令创建一个新的CloudWatch日志组：
- en: '[PRE7]'
  id: totrans-83
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Next, you will need to extract and maintain the newly created Log Group''s
    ARN for the forthcoming steps. To do so, type in the following command and make
    a note of the Log Group''s ARN, as shown here:'
  id: totrans-84
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，您需要提取并记录新创建的日志组ARN，以便进行后续步骤。为此，输入以下命令，并记录日志组的ARN，如下所示：
- en: '[PRE8]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '![](img/beb84f9e-191b-4c97-9f73-f705188f07f1.png)'
  id: totrans-86
  prefs: []
  type: TYPE_IMG
  zh: '![](img/beb84f9e-191b-4c97-9f73-f705188f07f1.png)'
- en: 'With the Log Group successfully created, we will now need to create a new IAM
    Role that will essentially enable CloudTrail to send its logs over to the CloudWatch
    Log Group. To do so, we first need to create a policy document that assigns the
    `AssumeRole` permission to our CloudTrail Trail. Create a new file and paste the
    following contents into that file. Remember to to create the file with a `.json`
    extension:'
  id: totrans-87
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 成功创建日志组后，我们需要创建一个新的IAM角色，该角色将使CloudTrail能够将其日志发送到CloudWatch日志组。为此，我们首先需要创建一个策略文档，赋予CloudTrail
    Trail`AssumeRole`权限。创建一个新文件，并将以下内容粘贴到该文件中。记得以`.json`扩展名创建该文件：
- en: '[PRE9]'
  id: totrans-88
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'With the file created, use the `create-role` command to create the role with
    the required permissions for CloudTrail:'
  id: totrans-89
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建文件后，使用`create-role`命令为CloudTrail创建具有所需权限的角色：
- en: '[PRE10]'
  id: totrans-90
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Once this command executed, make a note of the newly created role''s ARN. Next,
    copy and paste the following role policy document into a new file. This policy
    document grants CloudTrail the necessary permissions to create a CloudWatch Logs
    log stream in the Log Group that you created a while back, so as to deliver the
    CloudTrail events to that particular log stream:'
  id: totrans-91
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 执行此命令后，请记录下新创建角色的ARN。接下来，将以下角色策略文档复制并粘贴到一个新文件中。此策略文档授予CloudTrail必要的权限，以便在您之前创建的日志组中创建CloudWatch
    Logs日志流，从而将CloudTrail事件传递到该日志流：
- en: '[PRE11]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Next, run the following command to apply the permissions to the role. Remember
    to provide the name of the policy that we created during the earlier steps here:'
  id: totrans-93
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，运行以下命令将权限应用于该角色。记得在这里提供我们在之前步骤中创建的策略名称：
- en: '[PRE12]'
  id: totrans-94
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'The final step is to update the Trail with the Log Group ARN as well as the
    CloudWatch Logs role ARN, using the following command snippet:'
  id: totrans-95
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后一步是使用以下命令片段，更新Trail，添加日志组ARN以及CloudWatch Logs角色ARN：
- en: '[PRE13]'
  id: totrans-96
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: With this you have now integrated your CloudTrail Logs to seamlessly flow into
    the CloudWatch Log Group that we created. You can verify this by viewing the Log
    Groups provided under the CloudWatch Logs section of your CloudWatch dashboard.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 到此为止，您已将CloudTrail日志与我们创建的CloudWatch日志组成功集成。您可以通过查看CloudWatch仪表板中的CloudWatch
    Logs部分下的日志组来验证这一点。
- en: In the next section, we will be leveraging this newly created Log Group and
    assign a custom metric as well as an alarm for monitoring and alerting purposes.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，我们将利用新创建的日志组，为监控和警报目的分配自定义度量和警报。
- en: Creating custom metric filters and alarms for monitoring CloudTrail Logs
  id: totrans-99
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建用于监控CloudTrail日志的自定义度量过滤器和警报
- en: With the Log Group created and integrated with the CloudTrail Trail, we can
    now continue to create and assign custom metric filters as well as alarms. These
    alarms can be leveraged to trigger notifications whenever a particular compliance
    or governance issue is identified by CloudTrail.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 在创建并将日志组与CloudTrail Trail集成后，我们现在可以继续创建并分配自定义度量过滤器和警报。每当CloudTrail识别出特定的合规性或治理问题时，这些警报可以用于触发通知。
- en: 'To begin with, let''s first create a custom metric filter using CloudWatch
    Logs. In this case, we will be creating a simple filter that triggers a CloudWatch
    alarm each time an S3 bucket API call is made. This API call can be either a simple
    PUT or DELETE operation on the bucket''s policies, life cycle, and so on:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，让我们通过CloudWatch日志创建一个自定义度量过滤器。在这个例子中，我们将创建一个简单的过滤器，每当对S3存储桶进行API调用时，就触发一个CloudWatch警报。这个API调用可以是对存储桶策略、生命周期等进行的简单PUT或DELETE操作：
- en: Log in to your Amazon CloudWatch dashboard or, alternatively, select the link
    provided here to get started, at [https://console.aws.amazon.com/cloudwatch/](https://console.aws.amazon.com/cloudwatch/).
  id: totrans-102
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 登录到您的Amazon CloudWatch仪表板，或者，您也可以通过以下链接开始：[https://console.aws.amazon.com/cloudwatch/](https://console.aws.amazon.com/cloudwatch/)。
- en: 'Once logged in, select the Logs option from the navigation pane. Select the
    newly created Log Group that we created a while back, and opt for the Create Metric
    Filter option, as depicted in the following screenshot:'
  id: totrans-103
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 登录后，从导航窗格中选择“日志”选项。选择我们之前创建的新日志组，并选择“创建度量过滤器”选项，如下图所示：
- en: '![](img/c6af2920-4e7e-4486-bdb7-bf7181339a35.png)'
  id: totrans-104
  prefs: []
  type: TYPE_IMG
  zh: '![](img/c6af2920-4e7e-4486-bdb7-bf7181339a35.png)'
- en: 'Here, in the Create Metric Filter and Assign a Metric page, start off by providing
    a suitable Filter Name for the new metric, followed by populating the Filter Pattern option
    with the following snippet:'
  id: totrans-105
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在“创建度量过滤器并分配度量”页面中，首先为新度量提供一个合适的过滤器名称，然后将过滤器模式选项填写为以下片段：
- en: '[PRE14]'
  id: totrans-106
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: Once done, type in a suitable Metric Namespace value followed by a Metric Name as
    well. Leave the rest of the values to their defaults, and select the option Create
    filter to complete the process.
  id: totrans-107
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 完成后，输入一个合适的度量标准命名空间值，并随后输入度量名称。将其余值保持为默认值，选择“创建过滤器”选项以完成该过程。
- en: 'With this step completed, you now have a working CloudWatch filter up and running.
    In order to assign this particular filter an alarm, simply select the Create Alarm option
    adjacent to the filter, as depicted in the following screenshot:'
  id: totrans-108
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 完成这一步后，您现在已经拥有一个正常工作的CloudWatch过滤器。为了为此过滤器分配警报，只需选择过滤器旁边的“创建警报”选项，如下图所示：
- en: '![](img/88608185-edc6-4b7a-92b3-31e0f2db04b7.png)'
  id: totrans-109
  prefs: []
  type: TYPE_IMG
  zh: '![](img/88608185-edc6-4b7a-92b3-31e0f2db04b7.png)'
- en: Creating an alarm is a fairly straightforward and simple process, and I'm sure
    you would be more than qualified enough to set it up. Start off by providing a
    Name and an optional Description to your alarm, followed by configuring the trigger
    by setting the event count as `>= 1` for `1` consecutive period. Consequently,
    also remember to set up the Actions section by selecting an SNS Notification List or,
    alternatively, creating a new one. With all the settings configured, select the
    Create Alarm option to complete the process.
  id: totrans-110
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建警报是一个相当直接且简单的过程，我相信您完全有资格完成这项设置。首先为您的警报提供一个名称和可选的描述，然后通过设置事件计数为`>= 1`，在`1`个连续周期内配置触发器。接下来，记得在“操作”部分设置选择一个SNS通知列表，或者创建一个新的列表。所有设置完成后，选择“创建警报”选项以完成此过程。
- en: With this step completed, the only thing remaining is to give the filter a try!
    Log in to your S3 dashboard and create a new bucket, or alternatively, update
    the bucket policy of an existing one. The CloudTrail Trail will pick up this change
    and send the logs to your CloudWatch Log Group, where our newly created metric
    filter triggers an alarm by notifying the respective cloud administrator! Simply
    awesome isn't it? You can use more custom filters and alarms for configuring CloudWatch's
    notifications, as per your requirements.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 完成这一步后，剩下的唯一任务就是试用过滤器！登录到您的S3仪表板并创建一个新存储桶，或者，您也可以更新现有存储桶的策略。CloudTrail Trail
    会捕捉到这个变化，并将日志发送到您的CloudWatch日志组，在那里我们新创建的度量过滤器会触发一个警报，通知相关的云管理员！是不是很棒？您可以根据需求使用更多自定义过滤器和警报来配置CloudWatch的通知。
- en: In the next section, we will be looking at a fairly simple and automated method
    for creating and deploying multiple CloudWatch alarms using a single CloudFormation
    template.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，我们将讨论一种相当简单且自动化的方法，通过单个 CloudFormation 模板创建和部署多个 CloudWatch 警报。
- en: Automating deployment of CloudWatch alarms for AWS CloudTrail
  id: totrans-113
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 自动化部署 AWS CloudTrail 的 CloudWatch 警报
- en: As discussed in the previous section, you can easily create different CloudWatch
    metrics and alarms for monitoring your CloudTrail Log files. Luckily for us, AWS
    provides a really simple and easy to use CloudFormation template, which allows
    you to get up and running with a few essential alarms in a matter of minutes!
    The best part of this template is that you can extend the same by adding your
    own custom alarms and notifications as well. So without any further ado, let's
    get started with it.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 如前一节所讨论的，你可以轻松地为监控你的 CloudTrail 日志文件创建不同的 CloudWatch 指标和警报。幸运的是，AWS 提供了一个非常简单且易于使用的
    CloudFormation 模板，使你能够在几分钟内通过几个必要的警报快速启动！这个模板的最佳部分是，你可以通过添加自己的自定义警报和通知来扩展它。因此，不再多说，让我们开始吧。
- en: The template itself is fairly simple and easy to work with. You can download
    a version at [https://s3-us-west-2.amazonaws.com/awscloudtrail/cloudwatch-alarms-for-cloudtrail-api-activity/CloudWatch_Alarms_for_CloudTrail_API_Activity.json](https://s3-us-west-2.amazonaws.com/awscloudtrail/cloudwatch-alarms-for-cloudtrail-api-activity/CloudWatch_Alarms_for_CloudTrail_API_Activity.json).
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 该模板本身非常简单且易于使用。你可以在 [https://s3-us-west-2.amazonaws.com/awscloudtrail/cloudwatch-alarms-for-cloudtrail-api-activity/CloudWatch_Alarms_for_CloudTrail_API_Activity.json](https://s3-us-west-2.amazonaws.com/awscloudtrail/cloudwatch-alarms-for-cloudtrail-api-activity/CloudWatch_Alarms_for_CloudTrail_API_Activity.json)
    下载一个版本。
- en: 'At the time of writing this book, this template supports the creation of metric
    filters for the following set of AWS resources:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 在撰写本书时，该模板支持为以下 AWS 资源集创建度量过滤器：
- en: Amazon EC2 instances
  id: totrans-117
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 亚马逊 EC2 实例
- en: IAM policies
  id: totrans-118
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: IAM 策略
- en: Internet gateways
  id: totrans-119
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Internet 网关
- en: Network ACLs
  id: totrans-120
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 网络 ACL
- en: Security groups
  id: totrans-121
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安全组
- en: To create and launch this CloudFormation stack, head over to the CloudFormation
    dashboard by navigating to [https://console.aws.amazon.com/cloudformation](https://console.aws.amazon.com/cloudformation).
  id: totrans-122
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要创建并启动这个 CloudFormation 堆栈，请通过导航到 [https://console.aws.amazon.com/cloudformation](https://console.aws.amazon.com/cloudformation)
    进入 CloudFormation 仪表板。
- en: Next, select the option Create Stack to bring up the CloudFormation template
    selector page. Paste [https://s3-us-west-2.amazonaws.com/awscloudtrail/cloudwatch-alarms-for-cloudtrail-api-activity/CloudWatch_Alarms_for_CloudTrail_API_Activity.json](https://s3-us-west-2.amazonaws.com/awscloudtrail/cloudwatch-alarms-for-cloudtrail-api-activity/CloudWatch_Alarms_for_CloudTrail_API_Activity.json) in
    the Specify an Amazon S3 template URL field, and click on Next to continue.
  id: totrans-123
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，选择“创建堆栈”选项，打开 CloudFormation 模板选择页面。将 [https://s3-us-west-2.amazonaws.com/awscloudtrail/cloudwatch-alarms-for-cloudtrail-api-activity/CloudWatch_Alarms_for_CloudTrail_API_Activity.json](https://s3-us-west-2.amazonaws.com/awscloudtrail/cloudwatch-alarms-for-cloudtrail-api-activity/CloudWatch_Alarms_for_CloudTrail_API_Activity.json)
    粘贴到“指定一个 Amazon S3 模板 URL”字段中，点击“下一步”继续。
- en: 'In the Specify Details page, provide a suitable Stack name and fill out the
    following required parameters:'
  id: totrans-124
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在“指定详细信息”页面，提供一个合适的堆栈名称，并填写以下必填参数：
- en: 'Email: A valid email address that will receive all SNS notifications. You will
    have to confirm this email subscription once the template is successfully deployed.'
  id: totrans-125
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 邮箱：一个有效的电子邮件地址，将接收所有 SNS 通知。模板成功部署后，你必须确认这个电子邮件订阅。
- en: 'LogGroupName: The name of the Log Group that we created earlier in this chapter.'
  id: totrans-126
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: LogGroupName：我们在本章前面创建的日志组的名称。
- en: Once the required values are filled in, click on Next to proceed. Review the
    settings of the template on the Review page and finally select the Create option
    to complete the process.
  id: totrans-127
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 填写完必需的值后，点击“下一步”继续。审查模板设置后，在“审查”页面上选择“创建”选项完成过程。
- en: 'The template takes a few minutes to completely finish the creation and configuration
    of the required alarms. Here is a snapshot of the alarms and metrics that get
    created for your environment:'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 该模板需要几分钟才能完成所需警报的创建和配置。以下是为你的环境创建的警报和指标的快照：
- en: '| **Logical ID of resources created** | **Type of resource** |'
  id: totrans-129
  prefs: []
  type: TYPE_TB
  zh: '| **创建的资源的逻辑 ID** | **资源类型** |'
- en: '| `AlarmNotificationTopic` | `AWS::SNS::Topic` |'
  id: totrans-130
  prefs: []
  type: TYPE_TB
  zh: '| `AlarmNotificationTopic` | `AWS::SNS::Topic` |'
- en: '| `AuthorizationFailuresAlarm` | `AWS::CloudWatch::Alarm` |'
  id: totrans-131
  prefs: []
  type: TYPE_TB
  zh: '| `AuthorizationFailuresAlarm` | `AWS::CloudWatch::Alarm` |'
- en: '| `CloudTrailChangesAlarm` | `AWS::CloudWatch::Alarm` |'
  id: totrans-132
  prefs: []
  type: TYPE_TB
  zh: '| `CloudTrailChangesAlarm` | `AWS::CloudWatch::Alarm` |'
- en: '| `CloudTrailChangesMetricFilter` | `AWS::Logs::MetricFilter` |'
  id: totrans-133
  prefs: []
  type: TYPE_TB
- en: '| `ConsoleSignInFailuresAlarm` | `AWS::CloudWatch::Alarm` |'
  id: totrans-134
  prefs: []
  type: TYPE_TB
- en: '| `ConsoleSignInFailuresMetricFilter` | `AWS::Logs::MetricFilter` |'
  id: totrans-135
  prefs: []
  type: TYPE_TB
- en: '| `EC2InstanceChangesAlarm` | `AWS::CloudWatch::Alarm` |'
  id: totrans-136
  prefs: []
  type: TYPE_TB
- en: '| `EC2InstanceChangesMetricFilter` | `AWS::Logs::MetricFilter` |'
  id: totrans-137
  prefs: []
  type: TYPE_TB
- en: '| `EC2LargeInstanceChangesAlarm` | `AWS::CloudWatch::Alarm` |'
  id: totrans-138
  prefs: []
  type: TYPE_TB
- en: '| `EC2LargeInstanceChangesMetricFilter` | `AWS::Logs::MetricFilter` |'
  id: totrans-139
  prefs: []
  type: TYPE_TB
- en: '| `GatewayChangesAlarm` | `AWS::CloudWatch::Alarm` |'
  id: totrans-140
  prefs: []
  type: TYPE_TB
- en: '| `GatewayChangesMetricFilter` | `AWS::Logs::MetricFilter` |'
  id: totrans-141
  prefs: []
  type: TYPE_TB
- en: '| `IAMPolicyChangesAlarm` | `AWS::CloudWatch::Alarm` |'
  id: totrans-142
  prefs: []
  type: TYPE_TB
- en: '| `IAMPolicyChangesMetricFilter` | `AWS::Logs::MetricFilter` |'
  id: totrans-143
  prefs: []
  type: TYPE_TB
- en: '| `NetworkAclChangesAlarm` | `AWS::CloudWatch::Alarm` |'
  id: totrans-144
  prefs: []
  type: TYPE_TB
- en: '| `NetworkAclChangesMetricFilter` | `AWS::Logs::MetricFilter` |'
  id: totrans-145
  prefs: []
  type: TYPE_TB
- en: '| `SecurityGroupChangesAlarm` | `AWS::CloudWatch::Alarm` |'
  id: totrans-146
  prefs: []
  type: TYPE_TB
- en: '| `SecurityGroupChangesMetricFilter` | `AWS::Logs::MetricFilter` |'
  id: totrans-147
  prefs: []
  type: TYPE_TB
- en: '| `VpcChangesAlarm` | `AWS::CloudWatch::Alarm` |'
  id: totrans-148
  prefs: []
  type: TYPE_TB
- en: '| `VpcChangesMetricFilter` | `AWS::Logs::MetricFilter` |'
  id: totrans-149
  prefs: []
  type: TYPE_TB
- en: So far, we have seen how to integrate CloudTrail's Log files with CloudWatch
    Log Groups for configuring custom metrics as well as alarms for notifications.
    But how do you effectively analyze and manage these logs, especially if you have
    extremely large volumes to deal with? This is exactly what we will be learning
    about in the next section, along with the help of yet another awesome AWS service
    called **Amazon Elasticsearch**!
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
- en: Analyzing CloudTrail Logs using Amazon Elasticsearch
  id: totrans-151
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Log management and analysis for many organizations starts and ends with just
    three letters: *E*, *L*, and *K*, which stands for Elasticsearch, Logstash, and
    Kibana. These three open-sourced products are essentially used together to aggregate,
    parse, search, and visualize logs at an enterprise scale:'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
- en: '**Logstash**: Logstash is primarily used as a log collection tool. It is designed
    to collect, parse, and store logs originating from multiple sources, such as applications,
    infrastructure, operating systems, tools, services, and so on.'
  id: totrans-153
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Elasticsearch**: With all the logs collected in one place, you now need a
    query engine to filter and search through these logs for particular events. That''s
    exactly where Elasticsearch comes into play. Elasticsearch is basically a search
    server based on the popular information retrieval software library, Lucene. It
    provides a distributed, full-text search engine along with a RESTful web interface
    for querying your logs.'
  id: totrans-154
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Kibana**: Kibana is an open source data visualization plugin, used in conjunction
    with Elasticsearch. It provides you with the ability to create and export your
    logs into various visual graphs, such as bar charts, scatter graphs, pie charts,
    and so on.'
  id: totrans-155
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: You can easily download and install each of these components in your AWS environment,
    and get up and running with your very own ELK stack in a matter of hours! Alternatively,
    you can also leverage AWS own Elasticsearch service! Amazon Elasticsearch is a
    managed ELK service that enables you to quickly deploy operate, and scale an ELK
    stack as per your requirements. Using Amazon Elasticsearch, you eliminate the
    need for installing and managing the ELK stack's components on your own, which
    in the long run can be a painful experience.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
- en: 'For this particular use case, we will leverage a simple CloudFormation template
    that will essentially set up an Amazon Elasticsearch domain to filter and visualize
    the captured CloudTrail Log files, as depicted in the following diagram:'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/1f2a768f-400a-4254-87e3-77ab75367cf1.png)'
  id: totrans-158
  prefs: []
  type: TYPE_IMG
- en: To get started, log in to the CloudFormation dashboard, at [https://console.aws.amazon.com/cloudformation](https://console.aws.amazon.com/cloudformation).
  id: totrans-159
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Next, select the option Create Stack to bring up the CloudFormation template
    selector page. Paste [http://s3.amazonaws.com/concurrencylabs-cfn-templates/cloudtrail-es-cluster/cloudtrail-es-cluster.json](http://s3.amazonaws.com/concurrencylabs-cfn-templates/cloudtrail-es-cluster/cloudtrail-es-cluster.json) in,
    the Specify an Amazon S3 template URL field, and click on Next to continue.
  id: totrans-160
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'In the Specify Details page, provide a suitable Stack name and fill out the
    following required parameters:'
  id: totrans-161
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'AllowedIPForEsCluster: Provide the IP address that will have access to the
    nginx proxy and, in turn, have access to your Elasticsearch cluster. In my case,
    I''ve provided my laptop''s IP. Note that you can change this IP at a later stage,
    by visiting the security group of the nginx proxy once it has been created by
    the CloudFormation template.'
  id: totrans-162
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'CloudTrailName: Name of the CloudTrail that we set up at the beginning of this
    chapter.'
  id: totrans-163
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'KeyName: You can select a key-pair for obtaining SSH to your nginx proxy instance:'
  id: totrans-164
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](img/73c6bade-fe86-45b8-861d-af025942fe37.png)'
  id: totrans-165
  prefs: []
  type: TYPE_IMG
- en: 'LogGroupName: The name of the CloudWatch Log Group that will act as the input
    to our Elasticsearch cluster.'
  id: totrans-166
  prefs:
  - PREF_UL
  - PREF_UL
  type: TYPE_NORMAL
- en: 'ProxyInstanceTypeParameter: The EC2 instance type for your proxy instance.
    Since this is a demonstration, I''ve opted for the t2.micro instance type. Alternatively,
    you can select a different instance type as well.'
  id: totrans-167
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Once done, click on Next to continue. Review the settings of your stack and
    hit Create to complete the process.
  id: totrans-168
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The stack takes a good few minutes to deploy as a new Elasticsearch domain is
    created. You can monitor the progress of the deployment by either viewing the
    CloudFormation's Output tab or, alternatively, by viewing the Elasticsearch dashboard.
    Note that, for this deployment, a default **t2.micro.elasticsearch** instance
    type is selected for deploying Elasticsearch. You should change this value to
    a larger instance type before deploying the stack for production use.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
- en: You can view information on Elasticsearch *Supported Instance Types* at [http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/aes-supported-instance-types.html](http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/aes-supported-instance-types.html).
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
- en: 'With the stack deployed successfully, copy the Kibana URL from the CloudFormation
    Output tab:'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  id: totrans-172
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'The Kibana UI may take a few minutes to load. Once it is up and running, you
    will need to configure a few essential parameters before you can actually proceed.
    Select Settings and hit the Indices option. Here, fill in the following details:'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
- en: 'Index contains time-based events: Enable this checkbox to index time-based
    events'
  id: totrans-174
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Use event times to create index names: Enable this checkbox as well'
  id: totrans-175
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Index pattern interval: Set the Index pattern interval to Daily from the drop-down
    list'
  id: totrans-176
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Index name of pattern: Type `[cwl-]YYYY.MM.DD` in to this field'
  id: totrans-177
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Time-field name: Select the @timestamp value from the drop-down list'
  id: totrans-178
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Once completed, hit Create to complete the process. With this, you should now
    start seeing logs populate on to Kibana''s dashboard. Feel free to have a look
    around and try out the various options and filters provided by Kibana:'
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/b9c0ebe5-a974-4ca4-a8bb-e4b2225a3726.png)'
  id: totrans-180
  prefs: []
  type: TYPE_IMG
- en: Phew! That was definitely a lot to cover! But wait, there's more! AWS provides
    yet another extremely useful governance and configuration management service that
    we need to learn about as well, so without any further ado, here's introducing
    AWS Config!
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
- en: Introducing AWS Config
  id: totrans-182
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: AWS Config is yet another managed service, under the security and governance
    wing of services, that provides a detailed view of the configurational settings
    of each of your AWS resources. Configurational settings here can be anything,
    from simple settings made to your EC2 instances or VPC subnets, to how one resource
    is related to another, such as how an EC2 instance is related with an EBS volume,
    an ENI, and so on. Using AWS Config, you can actually view and compare such configurational
    changes that were made to your resource in the past, and take the necessary preventative
    actions if needed.
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
- en: 'Here''s a list of things that you can basically achieve by using AWS Config:'
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
- en: Evaluate your AWS resource configurations against a desired setting
  id: totrans-185
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Retrieve and view historical configurations of one or more resources
  id: totrans-186
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Send notifications whenever a particular resource is created, modified, or deleted
  id: totrans-187
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Obtain a configuration snapshot of your resource that you can later use as a
    blueprint or template
  id: totrans-188
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: View relationships and hierarchies between resources, such as all the instances
    that are part of a particular network subnet, and so on
  id: totrans-189
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Using AWS Config enables you to manage your resources more effectively by setting
    governing policies and standardizing configurations for your resources. Each time
    a configuration change is violated, you can trigger off notifications or even
    perform a remediation against the change. Furthermore, AWS Config also provides
    out-of-the-box integration capabilities with the likes of AWS CloudTrail, as well
    to providing you with a complete end-to-end auditing and compliance monitoring
    solution for your AWS environment.
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
- en: Before we get started by setting up AWS Config for our own scenario, let's first
    take a quick look at some of its important concepts and terminologies.
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
- en: Concepts and terminologies
  id: totrans-192
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The following are some of the key concepts and terminologies that you ought
    to keep in mind when working with AWS Config:'
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
- en: '**Config rules**: Config rules form the heart of operations at AWS Config.
    These are essentially rules that represent the desired configuration settings
    for a particular AWS resource. While the service monitors your resources for any
    changes, these changes get mapped to one or more set of config rules, that in
    turn flag the resource against any non-compliances. AWS Config provides you with
    some rules out of the box that you can use as-is or even customize as per your
    requirements. Alternatively, you can also create custom rules completely from
    scratch.'
  id: totrans-194
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Configuration items**: Configuration items are basically a point-in-time
    representation of a particular AWS resource''s configuration. The item can include
    various metadata about your resource, such as its current configuration attributes,
    and its relationships with other AWS resources, if any, its events, such as when
    it was created, last updated, and so on. Configuration items are created by AWS
    Config automatically each time it detects a change in a particular resource''s
    configuration.'
  id: totrans-195
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Configuration history**: A collection of configuration items of a resource
    over a particular period of time is called its **configuration history**. You
    can use this feature to compare the changes that a resource may undergo overtime,
    and then decide to take necessary actions. Configuration history is stored in
    an Amazon S3 bucket that you specify.'
  id: totrans-196
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Configuration snapshot**: A configuration snapshot is also a collection of
    configuration items of a particular resource over time. This snapshot acts as
    a template or benchmark that can then be used to compare and validate your resource''s
    current configurational settings.'
  id: totrans-197
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: With this in mind, let's look at some simple steps which allow you to get started
    with your own AWS Config setup in a matter of minutes!
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
- en: Getting started with AWS Config
  id: totrans-199
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Getting started with AWS Config is a very simple process, and it usually takes
    about a minute or two to complete. Overall, you start off by specifying the resources
    that you want AWS Config to record, configure an Amazon SNS topic, and Amazon
    S3 bucket for notifications and storing the configuration history, and, finally,
    add some config rules to evaluate your resources:'
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
- en: To begin, access the AWS Config dashboard by filtering the service from the
    AWS Management Console or by navigating to [https://console.aws.amazon.com/config/](https://console.aws.amazon.com/config/).
  id: totrans-201
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Since this is our first time configuring this, select the Get Started option
    to commence the Config's creation process.
  id: totrans-202
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'In the Resource types to record section, select the type of AWS resource that
    you wish config to monitor. By default, config will record the activities of all
    supported AWS resources. You can optionally specify only the services which you
    want to monitor by typing in the Specific types field, as shown in the following
    screenshot. In this case, I''ve opted to go for the default values: Record all
    resources supported in this region and Include global resources:'
  id: totrans-203
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/147cf7af-b5b3-4370-a03b-02ce74d85ecd.png)'
  id: totrans-204
  prefs: []
  type: TYPE_IMG
- en: Next, select a location to store your configuration history as well as your
    configuration snapshots. In this case, I've opted to create a new S3 bucket for
    AWS Config by providing a unique Bucket name.
  id: totrans-205
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Moving on, in the Amazon SNS topic section, you can choose to create a new SNS
    topic that will send email notifications to your specified mailbox, or choose
    a pre-existing topic from your account.
  id: totrans-206
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Finally, you will need to provide config with a Read-only access role so that
    it can record the particular configuration information as well as send that over
    to S3 and SNS. Based on your requirements, you can either Create a role or, alternatively,
    Choose a role from your account. Click Save to complete the basic configuration
    for your AWS Config.
  id: totrans-207
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: With this step completed, we can now go ahead and add Config rules to our setup.
    To do so, from the AWS Config dashboard's navigation pane, select the Rules and
    click on the Add rule option.
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
- en: 'In the AWS Config rules page, you can filter and view predefined rules using
    the *filter* provided. For this particular scenario, let''s go ahead and add two
    rules for checking whether any of the account''s S3 buckets have either public
    read prohibited or public write prohibited on them or not. To do so, simply type
    in `S3-bucket` in the filter and select either of the two config rules, as shown
    in the following screenshot:'
  id: totrans-209
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/e9b363ad-c911-4320-958d-32cb259ed266.png)'
  id: totrans-210
  prefs: []
  type: TYPE_IMG
- en: '**Resources**: When any resource that matches the evaluation criteria is either
    created, modified, or deleted'
  id: totrans-211
  prefs:
  - PREF_UL
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Tags**: When any resource with the specified tag is created, modified, or
    deleted'
  id: totrans-212
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**All changes**: When any resource recorded by AWS Config is created, modified,
    or deleted'
  id: totrans-213
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Selecting a particular rule will pop up that rule's configuration page, where
    you can define the rule's trigger as well as its scope. Let's pick the s3-bucket-public-read-prohibited rule
    for starters and work with that.
  id: totrans-214
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In the Configure rule page, provide a suitable Name and Description for your
    new rule. Now, since this is a managed rule, you will not be provided with an
    option to change the Trigger type; however, when you create your own custom rules,
    you can specify whether you wish to trigger the rule based on a Configuration
    change event or using a Periodic check approach that uses a time frequency that
    you specify to evaluate the rules.
  id: totrans-215
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Next, you can also specify when you want the rule''s evaluations to occur by
    selecting the appropriate options provided under the Scope of changes section.
    In this case, I''ve opted for the Resources scope and selected S3: Bucket as the
    resource, as depicted in the following screenshot:'
  id: totrans-216
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/eea146c0-7703-4a23-be63-d30f118f1398.png)'
  id: totrans-217
  prefs: []
  type: TYPE_IMG
- en: Optionally, you can also provide the ARN of the resource that you wish config
    to monitor using the Resource identifier field. Click on Save once done.
  id: totrans-218
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Similarly, using the aforementioned steps, create another managed config rule
    called s3-bucket-public-write-prohibited.
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
- en: With the rules in place, select the Resources option from the config's navigation
    pane to view the current set of resources that have been evaluated against the
    set compliance.
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
- en: 'In my case, I have two S3 buckets present in my AWS environment: one that has
    public read enabled on it while the other doesn''t. Here''s what the Resources
    evaluated dashboard should look like for you:'
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/0b219e69-55ca-482c-ae19-af13efc85665.png)'
  id: totrans-222
  prefs: []
  type: TYPE_IMG
- en: 'Here, you can view the evaluated resources against a Config timeline by simply
    selecting the name of the resource from the column with the same name. This will
    bring up a time series of your particular resource''s configuration state. You
    can choose between the different time series options to view the state changes,
    as well as toggle between the time periods using the Calendar icon. The best part
    of using this feature of config is that you can simultaneously change your resource''s
    configuration by selecting the Manage resource option. Doing so will automatically
    open the S3 buckets configuration page, as in this case. You can alternatively
    select the Dashboard option from AWS Config navigation pane and obtain a visual
    summary of the current status of your overall compliance, as depicted in the following
    screenshot:'
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/f9acb8f3-15c7-40c7-8a03-b91629f860c1.png)'
  id: totrans-224
  prefs: []
  type: TYPE_IMG
- en: You can use the same concepts to create more such managed config rules for a
    variety of other AWS services, including EC2, EBS, Auto Scaling, DynamoDB, RDS,
    Redshift, CloudWatch, IAM, and much more! For a complete list of managed rules,
    check out [http://docs.aws.amazon.com/config/latest/developerguide/managed-rules-by-aws-config.html](http://docs.aws.amazon.com/config/latest/developerguide/managed-rules-by-aws-config.html).
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
- en: With the managed config rules done, the last thing left to do is create a customized
    config rule, which is exactly what we will be covering in the next section.
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
- en: Creating custom config rules
  id: totrans-227
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The process for creating a custom config rule remains more or less similar
    to the earlier process, apart from a few changes here and there. In this section,
    we will be exploring how to create a simple compliance rule that will essentially
    trigger a config compliance alert if a user launches an EC2 instance other than
    the **t2.micro** instance type:'
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
- en: To get started, select the Rules option from the AWS Config navigation pane,
    then select the Add custom rule button present on the Add rule page. The creation
    of the custom rule starts off like any other, by providing a suitable Name and
    Description for the rule. Now, here's where the actual change occurs. Custom config
    rules rely on AWS Lambda to monitor and trigger the compliance checks. And this
    is actually perfect, as Lambda functions are event driven and perfect for hosting
    the business logic for our custom rules.
  id: totrans-229
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Select the Create AWS Lambda function to get things started. Here, I''m going
    to make use of a pre-defined Lambda blueprint that was essentially created to
    work in conjunction with AWS Config. Alternatively, you can create your config
    rule''s business logic from scratch, and deploy the same in a fresh function.
    For now, type in the following text in the Blueprints filter, as shown in the
    following screenshot (config-rule-change-triggered):'
  id: totrans-230
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/7236e020-beff-4303-8a83-a996832d35e6.png)'
  id: totrans-231
  prefs: []
  type: TYPE_IMG
- en: Ensure that the blueprint is selected, and click on Next to continue.
  id: totrans-232
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In the function's Basic Information page, provide a Name for your function followed
    by selecting the Create new role from template(s) option from the Role drop-down
    list. The role will essentially provide the Lambda function with the necessary
    permissions to read from EC2 and write the output back to AWS Config as well as
    to Amazon CloudWatch.
  id: totrans-233
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Type in a suitable Role name and select the Create function option to complete
    the process. Once the function is deployed, make a note of its ARN, as we will
    be requiring the same in the next step.
  id: totrans-234
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Return back to the AWS Config Add custom rule page and paste the newly created
    function''s ARN in the AWS Lambda function ARN file, as shown in the following
    screenshot:'
  id: totrans-235
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/73db2580-9b26-4ac9-a320-b6d63c14c599.png)'
  id: totrans-236
  prefs: []
  type: TYPE_IMG
- en: 'With the function''s ARN pasted, the rest of the configuration for the custom
    rule remains the same. Unlike the managed rules, you can opt to change the Trigger
    type between Configuration changes or Periodic, as per your requirements. In this
    case, I''ve opted to go for the Condition changes as my trigger mechanism, followed
    by EC2: Instance as the Resource type.'
  id: totrans-237
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Last, but not least, we also need to specify the Rule parameters, which is
    basically a key-value pair that defines an attribute against which your resources
    will be validated. In this case, desiredInstanceType is the Key and `t2.micro` is
    the Value. Click Save to complete the setup process:'
  id: totrans-238
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/2f5cbc09-97ff-487e-bf6a-17c128561410.png)'
  id: totrans-239
  prefs: []
  type: TYPE_IMG
- en: 'With the rule in place, all you need to do now is take it for a small test
    run! Go ahead and launch a new EC2 instance that is other than t2.micro. Remember
    that the instance has to be launched in the same region as that of your Lambda
    function! Sure enough, once the instance is launched, the change gets immediately
    reflected in AWS Config''s dashboard:'
  id: totrans-240
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/c644035b-99e2-4dc8-abdd-4e609b469ec7.png)'
  id: totrans-241
  prefs: []
  type: TYPE_IMG
- en: With this, we come towards the end of this section as well as the chapter! However,
    before we conclude, here's a quick look at some interesting best practices and
    next steps that you ought to keep in mind when working with AWS CloudTrail and
    AWS Config!
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
- en: Tips and best practices
  id: totrans-243
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Here''s a list of a few essential tips and best practices that you ought to
    keep in mind when working with AWS CloudTrail, AWS Config, and security in general:'
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
- en: '**Analyze and audit security configurations periodically**: Although AWS provides
    a variety of services for safeguarding your cloud environment, it is the organization''s
    mandate to ensure that the security rules are enforced and periodically verified
    against any potential misconfigurations.'
  id: totrans-245
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Complete audit trail for all users**: Ensure that all resource creation,
    modifications, and terminations are tracked minutely for each user, including
    root, IAM, and federated users.'
  id: totrans-246
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Enable CloudTrail globally**: By enabling logging at a global level, CloudTrail
    can essentially capture logs for all AWS services, including the global ones such
    as IAM, CloudFront, and so on.'
  id: totrans-247
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Enable CloudTrail Log file validation**: An optional setting, however it
    is always recommended to enable CloudTrail Log file validations for an added layer
    of integrity and security.'
  id: totrans-248
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Enable access logging for CloudTrail and config buckets**: Since both CloudTrail
    and config leverage S3 buckets to store the captured logs, it is always recommended
    that you enable access tracking for them to log unwarranted and unauthorized access.
    Alternatively, you can also restrict access to the logs and buckets to a specialized
    group of users as well.'
  id: totrans-249
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Encrypt log files at rest**: Encrypting the log files at rest provides an
    additional layer of protection from unauthorized viewing or editing of the logged
    data.'
  id: totrans-250
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Summary
  id: totrans-251
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Well this has surely been a really interesting chapter to cover! Before we move
    ahead with the next chapter, let's quickly summarize all that we have learned
    so far!
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
- en: We started off the chapter with a brief overview of AWS CloudTrail, along with
    a small step-by-step guide on getting started with your very own CloudTrail Trail.
    We also learned about AWS CloudTrail Logs, and their integration capabilities
    with Amazon CloudWatch Logs for better alerting and notifications capabilities.
    We also leveraged a couple of CloudFormation templates to deploy pre-configured
    CloudWatch alarms for monitoring our Trail, as well as setting up an entire Amazon
    Elasticsearch domain for viewing and filtering the CloudTrail Logs. Last, but
    not least, we also covered AWS Config as a configuration management and compliance
    service by deploying both managed as well as custom config rules.
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
- en: 'In the next chapter, we will be continuing and concluding our security journey
    with two really amazing services: AWS IAM and AWS Organizations, so stay tuned!'
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
