["```\n# Install IIS\n  Install-WindowsFeature -name Web-Server -IncludeManagementTools\n\n# Remove default htm file\n remove-item C:\\inetpub\\wwwroot\\iisstart.htm\n\n#Add custom htm file\n Add-Content -Path \"C:\\inetpub\\wwwroot\\iisstart.htm\" -Value $(\"Hello World from \" + $env:computername)\n```", "```\n# Create a resource group\naz group create \\\n --name PacktResourceGroupSLB \\\n --location eastus\n```", "```\n# Create a public IP address\naz network public-ip create --resource-group PacktResourceGroupSLB --name PacktPublicIP --sku standard\n```", "```\n# Create the Load Balancer\naz network lb create \\\n --resource-group PacktResourceGroupSLB \\\n --name PacktLoadBalancer \\\n --sku standard\n --public-ip-address PacktPublicIP \\\n --frontend-ip-name PacktFrontEnd \\\n --backend-pool-name PacktBackEndPool\n```", "```\n#Create the health probe\naz network lb probe create \\\n --resource-group PacktResourceGroupSLB \\\n --lb-name PacktLoadBalancer \\\n --name PacktHealthProbe \\\n --protocol tcp \\\n --port 80\n```", "```\n#Create the Load Balancer rule\naz network lb rule create \\\n --resource-group PacktResourceGroupSLB \\\n --lb-name PacktLoadBalancer \\\n --name PacktHTTPRule \\\n --protocol tcp \\\n --frontend-port 80 \\\n --backend-port 80 \\\n --frontend-ip-name PacktFrontEnd \\\n --backend-pool-name PacktBackEndPool \\\n --probe-name PacktHealthProbe\n```", "```\n#Create a virtual network\naz network vnet create \\\n --resource-group PacktResourceGroupSLB \\\n --location eastus \\\n --name PacktVnet \\\n --subnet-name PacktSubnet\n```", "```\naz network nsg create \\\n --resource-group PacktResourceGroupSLB \\\n --name PacktNetworkSecurityGroup\n```", "```\n#Create a Network Security Group rule\naz network nsg rule create \\\n --resource-group PacktResourceGroupSLB \\\n --nsg-name PacktNetworkSecurityGroup \\\n --name PacktNetworkSecurityGroupRuleHTTP \\\n --protocol tcp \\\n --direction inbound \\\n --source-address-prefix '*' \\\n --source-port-range '*' \\\n --destination-address-prefix '*' \\\n --destination-port-range 80 \\\n --access allow \\\n --priority 200\n```", "```\n#Create NICs\nfor i in `seq 1 2`; do\n az network nic create \\\n --resource-group PacktResourceGroupSLB \\\n --name PacktNic$i \\\n --vnet-name PacktVnet \\\n --subnet PacktSubnet \\\n --network-security-group PacktNetworkSecurityGroup \\\n --lb-name PacktLoadBalancer \\\n --lb-address-pools PacktBackEndPool\ndone\n```", "```\n#Create an Availability set\naz vm availability-set create \\\n --resource-group PacktResourceGroupSLB \\\n --name PacktAvailabilitySet\n```", "```\nsensible-editor cloud-init.txt\n```", "```\n#cloud-config\npackage_upgrade: true\npackages:\n - nginx\n - nodejs\n - npm\n```", "```\nwrite_files:\n - owner: www-data:www-data\n - path: /etc/nginx/sites-available/default\n content: |\n server {\n listen 80;\n location / {\n proxy_pass http://localhost:3000;\n proxy_http_version 1.1;\n proxy_set_header Upgrade $http_upgrade;\n proxy_set_header Connection keep-alive;\n proxy_set_header Host $host;\n proxy_cache_bypass $http_upgrade;\n }\n }\n```", "```\n- owner: azureuser:azureuser\n - path: /home/azureuser/myapp/index.js\n content: |\n var express = require('express')\n var app = express()\n var os = require('os');\n app.get('/', function (req, res) {\n res.send('Hello World from host ' + os.hostname() + '!')\n })\n app.listen(3000, function () {\n console.log('Hello world app listening on port 3000!')\n })\n```", "```\nruncmd:\n - service nginx restart\n - cd \"/home/azureuser/myapp\"\n - npm init\n - npm install express -y\n - nodejs index.js\n```", "```\n#Create two virtual machines \nfor i in `seq 1 2`; do\n az vm create \\\n --resource-group PacktResourceGroupSLB \\\n --name myVM$i \\\n --availability-set PacktAvailabilitySet \\\n --nics PacktNic$i \\\n --image UbuntuLTS \\\n --generate-ssh-keys \\\n --custom-data cloud-init.txt \\\n --no-wait\ndone\n```", "```\n#Obtain public IP address\naz network public-ip show \\\n --resource-group PacktResourceGroupSLB \\\n --name PacktPublicIP \\\n --query [ipAddress] \\\n --output tsv\n```"]