["```\n    $ sudo curl -sSL -o /usr/local/bin/argocd https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64\n    $ sudo chmod +x /usr/local/bin/argocd\n    ```", "```\n    $ argocd version\n    argocd: v2.2.1+122ecef\n      BuildDate: 2021-12-17T01:31:40Z\n      GitCommit: 122ecefc3abfe8b691a08d9f3cecf9a170cc8c37\n      GitTreeState: clean\n      GoVersion: go1.16.11\n      Compiler: gc\n      Platform: linux/amd64\n    FATA[0000] Argo CD server address unspecified\n    ```", "```\n    $ oc login -u <user> https://<api-newcluster>:6443\n    ```", "```\n    $ oc login -u <user> https://<api-argocluster>:6443\n    ```", "```\n    $ oc config get-contexts\n    CURRENT NAME         CLUSTER    AUTHINFO NAMESPACE\n            newcluster   newcluster admin\n    *       argocluster  argocluster\n    ```", "```\n    $ oc config set-context prd-cluster --cluster=newcluster --user=admin\n    Context \"prd-cluster\" created.\n    ```", "```\n    $ oc get route openshift-gitops-server -n openshift-gitops -o jsonpath='{.spec.host}'\n    ```", "```\n    $ oc extract secret/openshift-gitops-cluster -n openshift-gitops --to=-\n    ```", "```\n    $ argocd login --insecure openshift-gitops-server-openshift-gitops.apps.example.com\n    Username: admin\n    Password:\n    'admin:login' logged in successfully\n    Context ' openshift-gitops-server-openshift-gitops.apps.example.com' updated\n    ```", "```\n    argocd cluster add prd-cluster -y\n    INFO[0000] ServiceAccount \"argocd-manager\" created in namespace \"kube-system\"\n    INFO[0000] ClusterRole \"argocd-manager-role\" created\n    INFO[0001] ClusterRoleBinding \"argocd-manager-role-binding\" created\n    Cluster 'h https://<api-newcluster>:6443' added\n    ```", "```\n├── config #[1]\n├── environments #[2]\n│   ├── dev #[3]\n│   │   ├── apps #[4]\n│   │   │   └── app-1\n│   │   └── env #[5]\n│   └── qa #[6]\n│   │   ├── apps\n│   │   │   └── app-1\n│   │   └── env\n(...)\n```", "```\n├── base\n│   ├── deployment.yaml\n│   ├── kustomization.yaml\n│   ├── route.yaml\n│   └── service.yaml\n└── overlays\n    ├── dev\n    │   ├── deployment-patch.yaml\n    │   ├── kustomization.yaml\n    │   └── namespace.yaml\n    ├── prod\n    │   ├── deployment-patch.yaml\n    │   ├── kustomization.yaml\n    │   └── namespace.yaml\n    └── qa\n        ├── deployment-patch.yaml\n        ├── kustomization.yaml\n        └── namespace.yaml\n```", "```\napiVersion: argoproj.io/v1alpha1\nkind: AppProject\nmetadata:\n  name: clouds-api #[1]\n  namespace: openshift-gitops\nspec:\n  sourceRepos: #[2]\n    - '*'\n  destinations: #[3]\n    - namespace: '*'\n      server: '*'\n  clusterResourceWhitelist: #[4]\n    - group: '*'\n      kind: '*'\n```", "```\napiVersion: argoproj.io/v1alpha1\nkind: Application\nmetadata:\n  name: clouds-app-dev #[1]\n  namespace: openshift-gitops #[2]\nspec:\n  project: clouds-api #[3]\n  source: #[4]\n    repoURL: `https://github.com/PacktPublishing/OpenShift-Multi-Cluster-Management-Handbook.git'\n    path: chapter10/clouds-api-gitops/overlays/dev\n    targetRevision: dev\n  destination: #[5]\n    server: 'https://kubernetes.default.svc'\n    namespace: default\n  syncPolicy: #[6]\n    automated:\n      selfHeal: true\n```", "```\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  annotations:\n    argocd.argoproj.io/hook: Sync\n    argocd.argoproj.io/sync-wave: \"1\"\n(.. omitted ..)\n```", "```\n    $ GITHUB_USER=<your_user>\n    $ git clone https://github.com/PacktPublishing/OpenShift-Multi-Cluster-Management-Handbook.git\n    ```", "```\n    $ cd OpenShift-Multi-Cluster-Management-Handbook/chapter10\n    $ ./change-repo-urls.sh\n    # Go back to the root dir\n    $ cd ..\n    ```", "```\n    $ git checkout -b dev\n    ```", "```\n    $ vim ./sample-go-app/clouds-api/clouds.go\n    func homePage(w http.ResponseWriter, r *http.Request) {\n    fmt.Fprintf(w, \"Welcome to the HomePage! Version=1.0\")\n    fmt.Println(\"Endpoint Hit: homePage\")\n    }\n    ```", "```\n    $ git add ./sample-go-app/clouds-api/clouds.go\n    $ git commit -m 'Version 1.0 changes'\n    $ git push -u origin dev\n    ```", "```\n    $ oc apply -k ./chapter10/config/cicd\n    ```", "```\n    $ oc apply -f ./chapter10/config/cicd/pipelinerun/build-v1.yaml -n cicd\n    $ tkn pipelinerun logs build-v1-pipelinerun -f -n cicd\n    [fetch-repository : clone] + '[' false = true ']'\n    [fetch-repository : clone] + '[' false = true ']'\n    [fetch-repository : clone] + CHECKOUT_DIR=/workspace/output/\n    [fetch-repository : clone] + '[' true = true ']'\n    (.. omitted ..)\n    [build-image : push] Writing manifest to image destination\n    [build-image : push] Storing signatures\n     [build-image : digest-to-results] + cat /workspace/source/image-digest\n    [build-image : digest-to-results] + tee /tekton/results/IMAGE_DIGEST\n    [build-image : digest-to-results] sha256:5cc65974414ff904f28f92a0deda96b08f4ec5a98a09c59d81eb59459038b547\n    ```", "```\n    $ vim ./chapter10/clouds-api-gitops/overlays/dev/kustomization.yaml\n    apiVersion: kustomize.config.k8s.io/v1beta1\n    kind: Kustomization\n    commonLabels:\n      environment: dev\n    namespace: clouds-api-dev\n    bases:\n      - ../../base\n    resources:\n      - namespace.yaml\n    images:\n    - name: quay.io/gfontana/clouds-api\n      newName: image-registry.openshift-image-registry.svc:5000/cicd/clouds-api\n      newTag: v1.0 # Change this line\n    ```", "```\n    sed -i 's/changeme/v1.0/' ./chapter10/clouds-api-gitops/overlays/dev/kustomization.yaml\n    ```", "```\n    $ git add chapter10/clouds-api-gitops/overlays/dev/kustomization.yaml\n    $ git commit -m 'updating kustomization file for v1.0'\n    $ git push -u origin dev\n    ```", "```\n    $ oc apply -f ./chapter10/config/argocd/argocd-project.yaml\n    ```", "```\n    $ oc apply -f ./chapter10/config/argocd/argocd-app-dev.yaml\n    ```", "```\n    # Get the Argo CD url:\n    $ echo \"$(oc  get route openshift-gitops-server -n openshift-gitops --template='https://{{.spec.host}}')\"\n    # Get the Admin password\n    $ oc extract secret/openshift-gitops-cluster -n openshift-gitops --to=-\n    ```", "```\n    $ curl $(oc get route clouds-api -n clouds-api-dev --template='http://{{.spec.host}}')\n    ```", "```\nWelcome to the HomePage! Version=1.0\n```", "```\n    $ git checkout -b qa\n    ```", "```\n    $ cp -r ./chapter10/clouds-api-gitops/overlays/dev/ ./chapter10/clouds-api-gitops/overlays/qa/\n    ```", "```\n    $ sed -i 's/dev/qa/' ./chapter10/clouds-api-gitops/overlays/qa/namespace.yaml ./chapter10/clouds-api-gitops/overlays/qa/kustomization.yaml\n    ```", "```\n    $ git add ./chapter10/clouds-api-gitops/overlays/qa\n    $ git commit -m 'Promoting v1.0 to QA'\n    $ git push -u origin qa\n    ```", "```\n    $ oc apply -f ./chapter10/config/argocd/argocd-app-qa.yaml\n    ```", "```\n    $ curl $(oc get route clouds-api -n clouds-api-qa --template='http://{{.spec.host}}')\n    ```", "```\nWelcome to the HomePage! Version=1.0\n```", "```\n    $ git checkout -b pre-prod\n    ```", "```\n    $ cp -r chapter10/clouds-api-gitops/overlays/dev/ chapter10/clouds-api-gitops/overlays/prod/\n    $ sed -i 's/dev/prod/' ./chapter10/clouds-api-gitops/overlays/prod/namespace.yaml ./chapter10/clouds-api-gitops/overlays/prod/kustomization.yaml\n    ```", "```\n    $ git add ./chapter10/clouds-api-gitops/overlays/prod\n    $ git commit -m 'Promoting v1.0 to Prod'\n    $ git push -u origin pre-prod\n    ```", "```\n    $ git checkout main\n    $ oc apply -f ./chapter10/config/argocd/argocd-app-prod.yaml\n    ```", "```\n    $ curl $(oc get route clouds-api -n clouds-api-prod --template='http://{{.spec.host}}')\n    ```", "```\nWelcome to the HomePage! Version=1.0\n```", "```\napiVersion: argoproj.io/v1alpha1\nkind: Application\nmetadata:\n  name: clouds-app-dev-external-cluster\n  namespace: openshift-gitops\nspec:\n  project: clouds-api\n  source:\n    repoURL: `https://github.com/PacktPublishing/OpenShift-Multi-Cluster-Management-Handbook'\n    path: chapter10/clouds-api-gitops/overlays/dev\n    targetRevision: dev\n  destination:\n    server: 'https://api.<external-cluster>:6443'\n    namespace: default\n  syncPolicy:\n    automated:\n      selfHeal: true\n```"]