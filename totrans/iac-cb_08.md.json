["```\n$ cd chef-repo/cookbooks\n$ chef generate cookbook common\n$ cd common\n\n```", "```\ncookbook 'chef-client', '~> 7.0.0'\n```", "```\ndepends 'chef-client'\n```", "```\n    include_recipe 'chef-client'\n    ```", "```\n    $ berks install\n\n    ```", "```\n    $ berks upload\n\n    ```", "```\n    $ knife node run_list add vagrant common\n\n    ```", "```\n    $ chef-client \n    Recipe: chef-client::systemd_service\n    [...]\n     * service[chef-client] action enable\n     - enable service service[chef-client]\n     * service[chef-client] action start\n     - start service service[chef-client]\n     * service[chef-client] action restart\n     - restart service service[chef-client]\n\n    ```", "```\n    $ systemctl status chef-client\n    \n     chef-client.service - Chef Client daemon\n     Loaded: loaded (/etc/systemd/system/chef-client.service; enabled; vendor preset: disabled)\n     Active: active (running) since Mon 2016-11-07 01:35:05 UTC; 57s ago\n     Main PID: 12943 (chef-client)\n     CGroup: /system.slice/chef-client.service\n     └─12943 /opt/chef/embedded/bin/ruby /usr/bin/chef-client -c /etc/chef/client.rb -i 1800 -s 300\n\n    ```", "```\nnode.override['chef_client']['interval'] = '900'\ninclude_recipe 'chef-client'\n```", "```\n$ systemctl status chef-client\n\n chef-client.service - Chef Client daemon\n[...]\n └─13316 /opt/chef/embedded/bin/ruby /usr/bin/chef-client -c /etc/chef/client.rb -i 900 -s 300\n\n```", "```\nnode.override['chef_client']['init_style'] = 'none'\ninclude_recipe 'chef-client::cron'\n```", "```\n$ sudo crontab -l\n# Chef Name: chef-client\n0 0,4,8,12,16,20 * * * /bin/sleep 69;  /usr/bin/chef-client > /dev/null 2>&1\n\n```", "```\nnode.override['chef_client']['init_style'] = 'none'\nnode.override['chef_client']['cron']['minute'] = '*/15'\nnode.override['chef_client']['cron']['hour'] = '*'\n\ninclude_recipe 'chef-client::cron'\n```", "```\n$ sudo crontab -l\n# Chef Name: chef-client\n*/15 * * * * /bin/sleep 69;  /usr/bin/chef-client > /dev/null 2>&1\n\n```", "```\n# puppet resource service puppet ensure=running enable=true\n\n```", "```\n[agent]\n  runinterval = 5m\n```", "```\n# puppet resource cron puppet-agent ensure=present user=root minute=0 command='/opt/puppet/bin/puppet agent --onetime --no-daemonize --splay --splaylimit 60' \n\n```", "```\n$ sudo crontab -l\n0 * * * * /opt/puppet/bin/puppet agent --onetime --no-daemonize --splay --splaylimit 60\n\n```", "```\n# @param agentmode Agent type: service or cron. If anything else, agent will be disabled. Default value: service\nclass baseconfig (\n  $agentmode='service'\n) {\n  case $agentmode {\n    'service': {\n      $ensureservice='running';\n      $enableservice=true;\n      $ensurecron='absent'\n    }\n    'cron': {\n      $ensureservice='stopped';\n      $enableservice=false;\n      $ensurecron='present'\n    }\n    default: {\n      $ensureservice='stopped';\n      $enableservice=false;\n      $ensurecron='absent'\n    }\n  }\n  service {'puppet':\n    ensure => $ensureservice,\n    enable => $enableservice,\n  }\n  cron {'puppet-agent':\n    ensure  => $ensurecron,\n    user    => root,\n    minute  => 0,\n    command => '/opt/puppet/bin/puppet agent --onetime --no-daemonize --splay --splaylimit 60',\n  }\n}\n```", "```\nnode 'web.pomes.pro' {\n...\n  class { 'baseconfig':\n    agentmode => 'cron';\n  }\n...\n}\n```", "```\n$ mkdir environments\n\n```", "```\n    name 'production'\n    description 'The production environment'\n    ```", "```\n    $ knife environment from file environments/production.rb\n    Updated Environment production\n\n    ```", "```\n    $ knife environment list\n    _default\n    production\n\n    ```", "```\n$ knife node environment set my_node_name production\nmy_node_name:\n chef_environment: production\n\n```", "```\n$ knife bootstrap a.b.c.d -N vagrant -x vagrant --sudo --environment production --run-list 'recipe[mysite]'\n\n```", "```\ncookbook_versions  'mysite' => '= 0.3.1'\n```", "```\ncookbook_versions  'mysite' => '= 0.4.0'\n```", "```\ncookbook_versions: {\n    'mysite': '= 0.4.0',\n    'apache': '= 0.6.0'\n}\n```", "```\noverride_attributes 'sitename' => 'mysite_production'\n```", "```\nRunning in <%= @node.chef_environment %> mode.\n```", "```\n$ sudo -s\n# cd /etc/puppetlabs/code/environments/\n# cp -a production test\n\n```", "```\n# puppet agent --test --environment test\n\n```", "```\n[agent]\nenvironment = test\n```", "```\nfile {\"${docroot}/index.php\":\n    ensure  => present,\n    owner   => 'www-data',\n    group   => 'www-data',\n    mode    => '0644',\n    content => \"<?php echo \\\"Running from ${environment}\\\" ?>\"\n}\n```", "```\n# puppet agent --test\nInfo: Using configured environment 'production' \n…\n@@ -1 +1 @@\n-<?php echo \"Running from test\" ?>\n+<?php echo \"Running from production\" ?>\n…\n# puppet agent --test --environment test\nInfo: Using configured environment 'test'\n@@ -1 +1 @@\n-<?php echo \"Running from production\" ?>\n+<?php echo \"Running from test\" ?>\n```", "```\n:sources:\n  :my-repos:\n    remote: 'https://github.com/ppomes/r10k_sample.git'\n    basedir: 'puppetcode/environments'\n```", "```\n$ r10k -c ./r10k.yaml deploy environment -p\n$ ls -l puppetcode/environments/\ntotal 0\ndrwxr-xr-x  8 ppomes  staff   272B 26 Nov 16:40 production/\ndrwxr-xr-x  8 ppomes  staff   272B 26 Nov 16:40 test/\n\n```", "```\n    $ mkdir data_bags/aws\n\n    ```", "```\n    $ knife data bag create aws\n    Created data_bag[aws]\n\n    ```", "```\n    {\n      \"id\": \"us-east-1\",\n      \"aws_access_key\": \"AKIAJWTIBGE3NFDB4HOB\",\n      \"aws_secret_key\": \"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\"\n    }\n    ```", "```\n$ knife data bag from file --encrypt --secret s3cr3t aws us-east-1.json\nUpdated data_bag_item[aws::us-east-1]\n\n```", "```\n$ knife data bag show aws us-east-1\nWARNING: Encrypted data bag detected, but no secret provided for decoding. Displaying encrypted data.\naws_access_key:\n cipher:         aes-256-cbc\n encrypted_data: RwbfsWgKk16sSCkMD38tXKGHmT1AHFGHRm/7fyzppye7wSS0kk19Zml0VuhQ\n XxxI\n\n iv:             iRRgrKfz6Ou2qdpYLkUA+w==\n\n version:        1\naws_secret_key:\n cipher:         aes-256-cbc\n encrypted_data: uSppKMYrRbEYn/njDYo3CIGC5tY+pptN1Z7LiARtNIU/zsllBNdSVENC1XwX\n QksifE6g00sdcHTGlHlVU0WJ0Q==\n\n iv:             ppjeAJcegZ9Yyn9rXgHRBQ==\n\n version:        1\nid:             us-east-1\n\n```", "```\n$ knife data bag show aws us-east-1 -Fj\n{\n \"id\": \"us-east-1\",\n \"aws_access_key\": {\n \"encrypted_data\": \"RwbfsWgKk16sSCkMD38tXKGHmT1AHFGHRm/7fyzppye7wSS0kk19Zml0VuhQ\\nXxxI\\n\",\n \"iv\": \"iRRgrKfz6Ou2qdpYLkUA+w==\\n\",\n \"version\": 1,\n \"cipher\": \"aes-256-cbc\"\n },\n \"aws_secret_key\": {\n \"encrypted_data\": \"uSppKMYrRbEYn/njDYo3CIGC5tY+pptN1Z7LiARtNIU/zsllBNdSVENC1XwX\\nQksifE6g00sdcHTGlHlVU0WJ0Q==\\n\",\n \"iv\": \"ppjeAJcegZ9Yyn9rXgHRBQ==\\n\",\n \"version\": 1,\n \"cipher\": \"aes-256-cbc\"\n }\n}\n\n```", "```\n$ knife data bag show aws us-east-1 --secret s3cr3t\nEncrypted data bag detected, decrypting with provided secret.\naws_access_key: AKIAJWTIBGE3NFDB4HOB\naws_secret_key: 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\nid:             us-east-1\n\n```", "```\n[region_name]\naws_access_key_id = the_access_key\naws_secret_access_key = the_secret_key\n```", "```\n    $ chef generate recipe aws\n\n    ```", "```\n    directory \"/etc/aws\" do\n      owner 'root'\n      group 'root'\n      mode '0755'\n      action :create\n    end\n    ```", "```\n    [<%= @aws_region %>]\n    aws_access_key_id = <%= @aws_access_key %>\n    aws_secret_access_key = <%= @aws_secret_key %>\n    ```", "```\n    aws = Chef::EncryptedDataBagItem.load(\"aws\", \"us-east-1\", 's3cr3t')\n    ```", "```\n    template \"/etc/aws/credentials\" do\n      source 'aws.erb'\n      owner 'root'\n      group 'root'\n      mode '0600'\n      variables(\n        aws_region: aws['id'],\n        aws_access_key: aws['aws_access_key'],\n        aws_secret_key: aws['aws_secret_key']\n      )\n    end\n    ```", "```\n---\n:backends:\n  - yaml\n:hierarchy:\n  - \"nodes/%{::trusted.certname}\"\n  - common\n\n:yaml:\n:datadir:\n```", "```\nmod 'puppetlabs/inifile'\nmod 'puppet/hiera'\nmod 'puppetlabs/puppetserver_gem' \n```", "```\nnode 'puppet.pomes.pro' {\n\n  # Create a service resource for the puppetserver\n  # This is needed by the hiera module, in order\n  # to restart the server once hiera-eyaml is installed\n  service {'puppetserver':\n    ensure => running,\n  }\n  # Configure hiera\n  class { 'hiera':\n    hierarchy => [\n      'nodes/%{::trusted.certname}',\n    ],\n    eyaml          => true,\n    manage_package => true,\n    provider       => 'puppetserver_gem',\n    master_service => 'puppetserver',\n  }\n}\n```", "```\n    $ sudo puppet resource package hiera-eyaml provider=puppet_gem\n\n    ```", "```\n    $ ls ~/keys/\n    private_key.pkcs7.pem  public_key.pkcs7.pem\n\n    ```", "```\n    $ chmod 500 keys\n    $ chmod 400 keys/private_key.pkcs7.pem\n\n    ```", "```\n    ---\n    pkcs7_public_key: \"/Users/me/keys/public_key.pkcs7.pem\"\n    pkcs7_private_key: \"/Users/me/keys/private_key.pkcs7.pem\"\n    ```", "```\n$ eyaml encrypt -s 'super_secure_password'\n[hiera-eyaml-core] Loaded config from /Users/me/.eyaml/config.yaml\nstring: ENC[PKCS7,MIIBiQYJKoZIhvcNAQcDoIIBejCCAXYCAQAxggEhMIIBHQIBADAFMAACAQEwDQYJKoZIhvcNAQEBBQAEggEALjJ2a9uZ04lk2V5xKqEd0n3BtA4OLe1B6rA2iVruJRKxWJdevuGvJ55DDedRwBMZmqbvSMO1cgMUyPbfEy54i3SXw4x3LEuxc1R31ILoOspBgzU4OLuepCotuhBASA/pI/xu40y66AZAcCQ4CtD9SZJYjiWNtUA91rcARy/xYQGK39QievxT2eq5De89qIn2w/5fIRIkJBRyNqnwyYCWKcKSRwaiLbimpwmarOP+dxGHEFRrD/FiM4NfoV1WNNVr1UkPEFuNrWBzwBpvyZUnMbGHN676Rg5vq9sS6aWI6zPxTrJyLtssZm1f4GsfhmE+anFmuxrcWtEH6C82wKMOoTBMBgkqhkiG9w0BBwEwHQYJYIZIAWUDBAEqBBC3MhSP09yUw8XTj0XdlG1VgCCDCGhqIFdUmORYKlq0Pn5CE/cDZKTO+bhHxdBw5amAGQ==]\n\nOR\n\nblock: >\n ENC[PKCS7,MIIBiQYJKoZIhvcNAQcDoIIBejCCAXYCAQAxggEhMIIBHQIBADAFMAACAQEw\n DQYJKoZIhvcNAQEBBQAEggEALjJ2a9uZ04lk2V5xKqEd0n3BtA4OLe1B6rA2\n iVruJRKxWJdevuGvJ55DDedRwBMZmqbvSMO1cgMUyPbfEy54i3SXw4x3LEux\n c1R31ILoOspBgzU4OLuepCotuhBASA/pI/xu40y66AZAcCQ4CtD9SZJYjiWN\n tUA91rcARy/xYQGK39QievxT2eq5De89qIn2w/5fIRIkJBRyNqnwyYCWKcKS\n RwaiLbimpwmarOP+dxGHEFRrD/FiM4NfoV1WNNVr1UkPEFuNrWBzwBpvyZUn\n MbGHN676Rg5vq9sS6aWI6zPxTrJyLtssZm1f4GsfhmE+anFmuxrcWtEH6C82\n wKMOoTBMBgkqhkiG9w0BBwEwHQYJYIZIAWUDBAEqBBC3MhSP09yUw8XTj0Xd\n lG1VgCCDCGhqIFdUmORYKlq0Pn5CE/cDZKTO+bhHxdBw5amAGQ==]\n\n```", "```\n---\nroot_password: >\n ENC[PKCS7,MIIBiQYJKoZIhvcNAQcDoIIBejCCAXYCAQAxggEhMIIBHQIBADAFMAACAQEw\n DQYJKoZIhvcNAQEBBQAEggEALjJ2a9uZ04lk2V5xKqEd0n3BtA4OLe1B6rA2\n iVruJRKxWJdevuGvJ55DDedRwBMZmqbvSMO1cgMUyPbfEy54i3SXw4x3LEux\n c1R31ILoOspBgzU4OLuepCotuhBASA/pI/xu40y66AZAcCQ4CtD9SZJYjiWN\n tUA91rcARy/xYQGK39QievxT2eq5De89qIn2w/5fIRIkJBRyNqnwyYCWKcKS\n RwaiLbimpwmarOP+dxGHEFRrD/FiM4NfoV1WNNVr1UkPEFuNrWBzwBpvyZUn\n MbGHN676Rg5vq9sS6aWI6zPxTrJyLtssZm1f4GsfhmE+anFmuxrcWtEH6C82\n wKMOoTBMBgkqhkiG9w0BBwEwHQYJYIZIAWUDBAEqBBC3MhSP09yUw8XTj0Xd\n lG1VgCCDCGhqIFdUmORYKlq0Pn5CE/cDZKTO+bhHxdBw5amAGQ==]\n\n```", "```\n$ eyaml edit hieradata/nodes/web.pomes.pro.eyaml\n\n```", "```\n---\nroot_password: >\n DEC::PKCS7[super_secure_password]!\n\n```", "```\nnode 'web.pomes.pro' {\n...\n    $pass=hiera('root_password');\n...\n    class { 'mysql::server':\n      root_password => $pass;\n    }\n...\n}\n```", "```\n{\n  \"id\": \"eu-west-1\",\n  \"aws_access_key\": \"an_access_key\",\n  \"aws_secret_key\": \"a_secret_key\"\n}\n```", "```\n$ knife vault create aws eu-west-1 --json data_bags/aws/eu-west-1.json --search \"*:*\" --mode \"client\"\n\n```", "```\ninclude_recipe 'chef-vault'\naws = chef_vault_item('aws', 'eu-west-1')\n```", "```\ntemplate \"/etc/aws/credentials\" do\n  source 'aws.erb'\n  owner 'root'\n  group 'root'\n  mode '0600'\n  variables(\n    aws_region: aws['id'],\n    aws_access_key: aws['aws_access_key'],\n    aws_secret_key: aws['aws_secret_key']\n  )\nend\n```", "```\n$ sudo cat /etc/aws/credentials\n[eu-west-1]\naws_access_key_id = an_access_key\naws_secret_access_key = a_secret_key\n\n```", "```\n$ ohai | more\n{\n \"cpu\": {\n \"0\": {\n \"vendor_id\": \"GenuineIntel\",\n \"family\": \"6\",\n \"model\": \"69\",\n \"model_name\": \"Intel(R) Core(TM) i7-4578U CPU @ 3.00GHz\",\n \"stepping\": \"1\",\n \"mhz\": \"2999.991\",\n \"cache_size\": \"4096 KB\",\n \"physical_id\": \"0\",\n \"core_id\": \"0\",\n \"cores\": \"1\",\n\n```", "```\n$ ohai > ohai.json\n\n```", "```\nThis centos 7.2.1511 linux system version 3.10.0-327.el7.x86_64 listening on 192.168.146.129 is up since 25 minutes 55 seconds\n\n```", "```\nThis <%= node['platform'] %> <%= node['platform_version'] %> <%= node['os'] %> system version <%= node['os_version'] %> listening on <%= node['ipaddress'] %> is up since <%= node['uptime'] %>\n```", "```\nif node['platform'] == 'ubuntu'\n  httpd = 'apache2'\nelse\n  httpd = 'httpd'\nend\n\npackage httpd do\n  action :install\nend\n\nservice httpd do\n  action [:enable, :start]\nend\n```", "```\n$ facter | more\naio_agent_version => 1.8.0\naugeas => {\n version => \"1.4.0\"\n}\ndisks => {\n sda => {\n model => \"VBOX HARDDISK\",\n size => \"40.00 GiB\",\n size_bytes => 42949672960,\n vendor => \"ATA\"\n }\n}\ndmi => {\n bios => {\n release_date => \"12/01/2006\",\n vendor => \"innotek GmbH\",\n version => \"VirtualBox\"\n },\n board => {\n manufacturer => \"Oracle Corporation\",\n product => \"VirtualBox\"\n },\n...\n\n```", "```\nif $facts['os']['family'] == 'debian' {\n  $packagename='apache2'\n} else {\n  $packagename='httpd'\n}\n\npackage{'apache2':\n  ensure => present,\n  name   => $packagename,\n}  \n\nservice{'apache2':\n  ensure => running,\n  enable => true,\n  name   => $packagename,\n}\n```", "```\n$ chef generate recipe cookbooks/mysite deploy\n\n```", "```\ninclude_recipe 'apache::virtualhost'\ninclude_recipe 'mysite::mysql'\n```", "```\ndepends 'database'\ndepends 'mysql2_chef_gem', '~> 1.1'\ndepends 'mysql', '~> 8.1'\n```", "```\npackage 'mysql-community-devel'\n\nmysql2_chef_gem 'default' do\n  action :install\nend\n```", "```\nmysql_connection_info = {\n  host: '127.0.0.1',\n  username: 'root',\n  password: 'super_secure_password'\n}\n```", "```\nmysql_database 'wordpress' do\n  connection  mysql_connection_info\n  action      :create\nend\n```", "```\nmysql_database_user 'wordpress_user' do\n  connection    mysql_connection_info\n  password      'changeme'\n  database_name 'wordpress'\n  host          '%'\n  privileges    [:all]\n  action        [:create, :grant]\nend\n```", "```\npackage 'git'\n```", "```\ndeploy_revision 'wordpress' do\n  repo 'https://github.com/WordPress/WordPress'\n  revision 'HEAD'\n  user 'apache'\n  deploy_to \"/var/www/#{node['sitename']}\"\n  keep_releases 5\n  symlinks({})\n  symlink_before_migrate({})\n  migrate false\n  action :deploy\nend\n```", "```\n$ ls /var/www/mysite/\ncurrent  index.html  releases  shared\n\n```", "```\n$ ls -ld /var/www/mysite/current\nlrwxrwxrwx. 1 apache root 65 Nov 17 02:18 /var/www/mysite/current -> /var/www/mysite/releases/72606bed348e61b6f98318cf920684765aa08b37\n\n```", "```\nmod 'puppetlabs/vcsrepo', '1.4.0'\n```", "```\n  package {'git':\n    ensure => installed,\n  }\n```", "```\n  mysql::db {'wordpress':\n    user     => 'wordpress_user',\n    password => 'changeme',\n    host     => '%',\n    grant    => 'ALL',\n  }\n```", "```\n  apache::vhost { 'web.pomes.pro':\n    website => 'web.pomes.pro',\n    docroot => '/var/www/wordpress',\n  }\n```", "```\n  vcsrepo {'/var/www/wordpress':\n    ensure   => latest,\n    provider => git,\n    source   => 'https://github.com/WordPress/WordPress',\n    revision => 'master',\n  }\n\n  file {'/var/www/wordpress':\n    ensure    => directory,\n    owner     => 'www-data',\n    group => 'www-data',\n\trecurse => true,\n}\t\n\n```", "```\n    $ cd chef-repo\n    $ chef generate cookbook cookbooks/platform\n\n    ```", "```\n    $ chef generate recipe cookbooks/platform docker\n\n    ```", "```\n    $ git init\n\n    ```", "```\n    $ git add .\n    $ git commit -m \"initial chef repo state\" \n\n    ```", "```\n    $ git checkout -b docker_support\n\n    ```", "```\n$ mkdir -p test/integration/default/serverspec\n\n```", "```\n---\ndriver:\n  name: vagrant\n\nprovisioner:\n  name: chef_zero\n  always_update_cookbooks: true\n\nplatforms:\n  - name: centos-7.2\n\nsuites:\n  - name: default\n    run_list:\n      - recipe[platform::default]\n    attributes:\n```", "```\nrequire 'serverspec'\n# Required by serverspec\nset :backend, :exec\n```", "```\nrequire 'spec_helper'\n\ndescribe package('docker-engine') do\n  it { should be_installed }\nend\n\ndescribe service('docker') do\n  it { should be_enabled }\n  it { should be_running }\nend\n\ndescribe command('docker images') do\n  its(:exit_status) { should eq 0 }\n  its(:stdout) { should match(%r{^sjourdan/terraform\\s.*0.7.10}) }\nend\n```", "```\n$ kitchen create\n$ kitchen converge\n$ kitchen verify\n[...]\n       Package \"docker-engine\"\n         should be installed (FAILED - 1)\n\n       Service \"docker\"\n         should be enabled (FAILED - 2)\n         should be running (FAILED - 3)\n\n       Command \"docker images\"\n         exit_status\n           should eq 0 (FAILED - 4)\n         stdout\n           should match /^sjourdan\\/terraform\\s.*0.7.10/ (FAILED - 5)\n[...]\n```", "```\ndepends 'docker', '~> 2.0'\n```", "```\ncookbook 'docker', '~> 2.0'\n```", "```\ninclude_recipe 'platform::docker'\n```", "```\ndocker_installation 'default' do\n  repo 'main'\n  action :create\nend\n```", "```\n$ kitchen converge\n$ kitchen verify\n[...]\n Package \"docker-engine\"\n should be installed\n[...]\n Finished in 0.18797 seconds (files took 0.43908 seconds to load)\n 5 examples, 4 failures\n\n```", "```\ndocker_service 'default' do\n  action [:create, :start]\nend\n```", "```\n$ kitchen converge\n$ kitchen verify\n[...]\n Package \"docker-engine\"\n should be installed\n\n Service \"docker\"\n should be enabled\n should be running\n[...]\n Finished in 0.12301 seconds (files took 0.28237 seconds to load)\n 5 examples, 1 failure\n\n```", "```\ndocker_image 'sjourdan/terraform' do\n  tag '0.7.10'\n  action :pull\nend\n```", "```\n$ kitchen converge\n$ kitchen verify\n[...]\n Finished in 0.23526 seconds (files took 0.44015 seconds to load)\n 5 examples, 0 failures\n\n```", "```\n$ kitchen destroy\n\n```", "```\n$ cookstyle\nInspecting 6 files\n......\n\n6 files inspected, no offenses detected\n\n```", "```\n  - name: ubuntu-16.04\n```", "```\n$ kitchen test\n[...]\n\n Package \"docker-engine\"\n should be installed\n\n Service \"docker\"\n should be enabled\n should be running\n\n Command \"docker images\"\n exit_status\n should eq 0\n stdout\n should match /^sjourdan\\/terraform\\s.*0.7.10/\n\n Finished in 0.27516 seconds (files took 0.43079 seconds to load)\n 5 examples, 0 failures\n\n Finished verifying <default-ubuntu-1604> (5m9.12s).\n\n```", "```\n$ git status\nOn branch docker_support\nUntracked files:\n (use \"git add <file>...\" to include in what will be committed)\n\n cookbooks/platform/ \n\n```", "```\n$ git add cookbooks/platform\n$ git commit -m \"added docker support to the platform\"\n\n```", "```\n$ git status\nOn branch docker_support\nnothing to commit, working tree clean\n\n```", "```\n$ git push\n\n```", "```\n$ git merge docker_support master \n\n```", "```\n$ cd cookbooks/platform\n$ berks\n\n```", "```\n$ berks upload\n\n```", "```\nname 'staging'\ndescription 'The staging environment'\ncookbook_versions  'platform' => '= 0.1.0'\n```", "```\n$ knife environment from file environments/staging.rb\nUpdated Environment staging\n\n```", "```\n$ git add .\n$ git commit -m \"added platform::docker to staging\"\n\n```", "```\n$ knife node run_list add my_node_name 'recipe[platform]'\n\n```", "```\nname 'production'\ndescription 'The production environment'\ncookbook_versions  'platform' => '= 0.1.0'\n```", "```\n$ knife environment from file environments/production.rb\nUpdated Environment production\n\n```", "```\n$ git add .\n$ git commit -m \"updated production env with platform::docker\"\n\n```", "```\nHOSTS:\n  centos-7-x64:\n    roles:\n      - agent\n      - default\n    platform: redhat-7-x86_64\n    hypervisor: vagrant\n    box: puppetlabs/centos-7.2-64-nocm\nCONFIG:\n  type: foss\n```", "```\n$ BEAKER_set=centos-7-x64 rake beaker\n\n```", "```\nVagrant.configure(\"2\") do |config|\n  config.vm.box = \"bento/centos-7.2\"\nend\n```", "```\n  config.omnibus.chef_version = :latest\n```", "```\n  config.vm.provision \"chef_zero\" do |chef|\n    chef.cookbooks_path = \"cookbooks\"\n    chef.environments_path = \"environments\"\n    chef.roles_path = \"roles\"\n    chef.nodes_path = \"nodes\"\n    chef.environment = \"production\"\n    chef.add_role \"docker\"\n  end\n```", "```\n  config.berkshelf.berksfile_path = \"cookbooks/platform/Berksfile\"\n  config.berkshelf.enabled = true\n```", "```\n$ vagrant up \n[...]\n# Chef Client finished, 17/45 resources updated in 03 minutes 30 seconds\n\n```", "```\n$ vagrant destroy -f\n\n```", "```\nVagrant.configure('2') do |config|\n  config.vm.define 'whatever_vm', autostart: false do |node|\n    [...]\n  end\nend\n```", "```\n  config.vm.define 'webserver', autostart: false do |ws|\n    ws.vm.box = 'bento/centos-7.2'\n\n    ws.vm.provision :chef_zero do |chef|\n      chef.cookbooks_path = 'cookbooks'\n      chef.environments_path = 'environments'\n      chef.roles_path = 'roles'\n      chef.nodes_path = 'nodes'\n      chef.environment = 'production'\n      chef.add_role 'webserver'\n    end\n\n    ws.berkshelf.berksfile_path = 'cookbooks/apache/Berksfile'\n    ws.berkshelf.enabled = true\n  end\n```", "```\n$ vagrant up webserver\n\n```", "```\n  config.vm.define 'db', autostart: false do |db|\n    db.vm.box = 'bento/centos-7.2'\n\n    db.vm.provision :chef_zero do |chef|\n      chef.cookbooks_path = 'cookbooks'\n      chef.environments_path = 'environments'\n      chef.roles_path = 'roles'\n      chef.nodes_path = 'nodes'\n      chef.environment = 'production'\n      chef.add_recipe 'mysite::mysql'\n    end\n\n    db.berkshelf.berksfile_path = 'cookbooks/mysite/Berksfile'\n    db.berkshelf.enabled = true\n  end\n```", "```\n$ vagrant up db\n[...]\nChef Client finished, 29/43 resources updated in 01 minutes 28 seconds\n\n```", "```\n$ mkdir data_bags_encrypted \n$ knife data bag show aws us-east-1 -Fj > data_bags_encrypted/us-east-1.json \n\n```", "```\n  config.vm.define 'mysite', autostart: false do |mysite|\n    mysite.vm.box = 'bento/centos-7.2'\n\n    mysite.vm.provision :chef_zero do |chef|\n      chef.cookbooks_path = 'cookbooks'\n      chef.environments_path = 'environments'\n      chef.data_bags_path = 'data_bags_encrypted'\n      chef.roles_path = 'roles'\n      chef.nodes_path = 'nodes'\n      chef.environment = 'production'\n      chef.add_recipe 'mysite::default'\n    end\n\n    mysite.berkshelf.berksfile_path = 'cookbooks/mysite/Berksfile'\n    mysite.berkshelf.enabled = true\n  end\n```", "```\n$ vagrant up mysite\n\n```"]