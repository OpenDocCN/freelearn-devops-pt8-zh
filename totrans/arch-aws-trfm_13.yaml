- en: '13'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '13'
- en: Governing AWS with Terraform
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Terraform 治理 AWS
- en: In this chapter, we will explore the concept of infrastructure governance and
    why it is crucial for managing AWS resources effectively. We will also dive into
    how Terraform can be used as a powerful tool for governing infrastructure. With
    the increasing complexity and scale of AWS projects, effective governance is essential
    to ensure security, compliance, cost-efficiency, and overall success. We will
    cover the fundamentals of infrastructure governance, the importance of AWS resource
    governance, tools for governing AWS Terraform projects, automation, and best practices
    for building cost-effective and secure AWS Terraform projects.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将探讨基础设施治理的概念，以及为什么它对于有效管理 AWS 资源至关重要。我们还将深入了解如何将 Terraform 作为一个强大的工具来进行基础设施治理。随着
    AWS 项目复杂性和规模的不断增加，有效的治理对于确保安全性、合规性、成本效益和整体成功至关重要。我们将涵盖基础设施治理的基本原则、AWS 资源治理的重要性、治理
    AWS Terraform 项目的工具、自动化以及构建成本效益高且安全的 AWS Terraform 项目的最佳实践。
- en: 'The following topics will be covered in this chapter:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将涵盖以下主题：
- en: What is infrastructure governance?
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 什么是基础设施治理？
- en: Why do we need infrastructure governance?
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为什么我们需要基础设施治理？
- en: How to govern infrastructure with Terraform
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何使用 Terraform 管理基础设施
- en: How to use AWS tools with Terraform to govern IAC projects
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何使用 AWS 工具与 Terraform 一起治理 IAC 项目
- en: What is infrastructure governance?
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 什么是基础设施治理？
- en: Infrastructure governance is the process of managing and controlling the use
    of IT resources, including hardware, software, and data. It is the practice of
    defining policies, procedures, and guidelines to ensure that IT resources are
    used efficiently, securely, and in compliance with regulatory requirements. In
    the context of cloud computing, infrastructure governance is the process of managing
    and controlling the use of cloud resources, such as servers, storage, and networking,
    to ensure that they are used effectively and efficiently.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 基础设施治理是管理和控制 IT 资源使用的过程，包括硬件、软件和数据。这是定义政策、程序和指南的实践，以确保 IT 资源的高效、安全使用，并符合监管要求。在云计算的背景下，基础设施治理是管理和控制云资源的使用过程，如服务器、存储和网络，确保它们被有效且高效地使用。
- en: The importance of infrastructure governance
  id: totrans-10
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 基础设施治理的重要性
- en: 'Infrastructure governance is critical for organizations that want to ensure
    that their IT resources are used effectively and efficiently. Without effective
    governance, organizations may face several challenges, including the following:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 基础设施治理对希望确保其 IT 资源得到有效和高效使用的组织至关重要。如果没有有效的治理，组织可能会面临多种挑战，包括以下问题：
- en: '**Uncontrolled growth**: Without proper governance, organizations may end up
    with an uncontrolled and unmanageable IT environment, which can lead to inefficiencies,
    high costs, and security risks'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**失控增长**：如果没有适当的治理，组织可能会面临失控且无法管理的 IT 环境，这会导致低效、高成本和安全风险'
- en: '**Compliance issues**: In regulated industries, such as finance and healthcare,
    non-compliance with regulatory requirements can lead to severe penalties and damage
    to the organization’s reputation'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**合规性问题**：在受监管的行业中，如金融和医疗行业，未遵守监管要求可能导致严厉的处罚并损害组织的声誉'
- en: '**Security risks**: Without proper governance, organizations may not have adequate
    security measures in place to protect their IT resources from cyber threats'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**安全风险**：如果没有适当的治理，组织可能没有足够的安全措施来保护其 IT 资源免受网络威胁'
- en: '**Lack of visibility**: Without proper governance, organizations may not have
    a clear understanding of their IT resources, which can make it difficult to make
    informed decisions and manage their IT environment effectively'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**缺乏可见性**：如果没有适当的治理，组织可能无法清晰了解其 IT 资源，这会使得做出明智决策和有效管理 IT 环境变得困难'
- en: Key elements of infrastructure governance
  id: totrans-16
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 基础设施治理的关键要素
- en: 'The key elements of infrastructure governance include policies, procedures,
    and guidelines to ensure that IT resources are used effectively and efficiently.
    Some of the essential elements of infrastructure governance are as follows:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 基础设施治理的关键要素包括政策、程序和指南，以确保 IT 资源得到有效和高效的使用。基础设施治理的一些基本要素如下：
- en: '**Resource allocation**: Effective infrastructure governance requires allocating
    IT resources based on the organization’s needs and priorities. This includes determining
    the appropriate level of resources required to support the organization’s operations,
    as well as ensuring that resources are used efficiently and effectively.'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**资源分配**：有效的基础设施治理需要根据组织的需求和优先事项分配IT资源。这包括确定支持组织运营所需的资源水平，并确保资源得到高效和有效的使用。'
- en: '**Security**: Infrastructure governance must include policies and procedures
    to ensure that IT resources are protected from cyber threats, including data breaches,
    malware, and other types of attacks. This includes implementing appropriate security
    controls, such as firewalls, intrusion detection and prevention systems, and access
    controls.'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**安全性**：基础设施治理必须包括政策和程序，确保IT资源免受网络威胁，包括数据泄露、恶意软件和其他类型的攻击。这包括实施适当的安全控制措施，如防火墙、入侵检测与防御系统，以及访问控制。'
- en: '**Compliance**: Infrastructure governance must include policies and procedures
    to ensure that IT resources are used in compliance with regulatory requirements,
    industry standards, and best practices. This includes conducting regular audits
    and assessments to ensure that IT resources are compliant with applicable regulations.'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**合规性**：基础设施治理必须包括政策和程序，确保IT资源的使用符合监管要求、行业标准和最佳实践。这包括定期进行审计和评估，确保IT资源符合相关法规。'
- en: '**Monitoring and reporting**: Effective infrastructure governance requires
    monitoring and reporting on the use of IT resources to ensure that they are being
    used effectively and efficiently. This includes tracking resource usage, identifying
    potential issues, and reporting on the status of IT resources to management.'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**监控与报告**：有效的基础设施治理需要对IT资源的使用进行监控和报告，确保它们得到有效和高效的使用。这包括跟踪资源使用情况、识别潜在问题，并向管理层报告IT资源的状态。'
- en: Benefits of infrastructure governance
  id: totrans-22
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 基础设施治理的好处
- en: 'Effective infrastructure governance can provide several benefits to organizations:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 有效的基础设施治理可以为组织带来多项好处：
- en: '**Cost savings**: By ensuring that IT resources are used efficiently and effectively,
    infrastructure governance can help organizations save money on hardware, software,
    and other IT expenses'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**节省成本**：通过确保IT资源的高效和有效使用，基础设施治理可以帮助组织节省硬件、软件和其他IT费用。'
- en: '**Improved security**: By implementing appropriate security controls, infrastructure
    governance can help organizations protect their IT resources from cyber threats'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**增强安全性**：通过实施适当的安全控制，基础设施治理可以帮助组织保护其IT资源免受网络威胁。'
- en: '**Compliance**: By ensuring that IT resources are used in compliance with regulatory
    requirements, infrastructure governance can help organizations avoid penalties
    and reputational damage'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**合规性**：通过确保IT资源符合监管要求，基础设施治理可以帮助组织避免罚款和声誉损害。'
- en: '**Improved decision-making**: By providing management with visibility into
    the organization’s IT environment, infrastructure governance can help improve
    decision-making and enable more informed strategic planning'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**改进决策**：通过为管理层提供对组织IT环境的可见性，基础设施治理可以帮助改进决策，推动更有根据的战略规划。'
- en: Overall, infrastructure governance is critical for organizations that want to
    effectively manage and control their IT resources. It helps ensure that IT resources
    are used efficiently, effectively, and securely, while also ensuring compliance
    with regulatory requirements and industry best practices. In the next few sections,
    we will discuss why infrastructure governance is essential for AWS resources and
    how Terraform can help organizations achieve effective infrastructure governance
    in AWS.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 总体而言，基础设施治理对于希望有效管理和控制IT资源的组织至关重要。它帮助确保IT资源的高效、有效和安全使用，同时确保符合监管要求和行业最佳实践。在接下来的几节中，我们将讨论为什么基础设施治理对于AWS资源至关重要，以及Terraform如何帮助组织在AWS中实现有效的基础设施治理。
- en: Why do we need infrastructure governance?
  id: totrans-29
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为什么我们需要基础设施治理？
- en: As organizations grow and infrastructure becomes more complex, it becomes increasingly
    difficult to manage and govern. Without proper governance, infrastructure can
    become unmanageable, leading to issues such as security vulnerabilities, compliance
    violations, and excessive costs. In this section, we will explore the importance
    of infrastructure governance and why it is crucial for modern organizations.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 随着组织的增长和基础设施的复杂化，管理和治理变得越来越困难。没有适当的治理，基础设施可能变得无法管理，导致安全漏洞、合规性违规和过高的成本等问题。在本节中，我们将探讨基础设施治理的重要性，以及它为何对现代组织至关重要。
- en: Governance is a critical aspect of managing any infrastructure, and this is
    especially true for cloud-based resources. AWS, with its vast array of services,
    provides a lot of flexibility and power for developers and operations teams, but
    it also requires careful governance to ensure resources are used efficiently,
    securely, and cost-effectively. Terraform provides a powerful tool for managing
    AWS infrastructure, but to truly govern AWS resources, it’s important to understand
    the fundamentals of infrastructure governance, the importance of AWS resource
    governance, and the tools and automation available to govern AWS Terraform projects.
    This chapter will explore these topics in detail, providing you with a comprehensive
    understanding of how to build cost-effective, secure AWS Terraform projects that
    are governed according to best practices.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 治理是管理任何基础设施的关键方面，尤其对于基于云的资源尤为重要。AWS 提供了大量的服务，为开发者和运维团队提供了极大的灵活性和能力，但这也要求仔细的治理，以确保资源的高效、安全和成本效益的使用。Terraform
    提供了管理 AWS 基础设施的强大工具，但要真正治理 AWS 资源，了解基础设施治理的基本原则、AWS 资源治理的重要性，以及可用于治理 AWS Terraform
    项目的工具和自动化功能至关重要。本章将详细探讨这些主题，为您提供如何构建符合最佳实践的、成本效益高、安全的 AWS Terraform 项目的全面理解。
- en: Security and compliance
  id: totrans-32
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安全性和合规性
- en: Infrastructure governance helps organizations maintain security and compliance
    by ensuring that all resources are properly managed and secured. With proper governance,
    organizations can ensure that only authorized individuals have access to sensitive
    resources and that all resources are configured to meet regulatory requirements.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 基础设施治理通过确保所有资源得到适当管理和保护，帮助组织保持安全性和合规性。通过适当的治理，组织可以确保只有授权人员可以访问敏感资源，并且所有资源的配置都符合监管要求。
- en: For example, if a company stores sensitive customer data in an AWS S3 bucket,
    it must ensure that the bucket is properly secured and that only authorized individuals
    have access. Without proper governance, the bucket could be misconfigured, leaving
    the data vulnerable to attack or theft.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，如果一家公司将敏感的客户数据存储在 AWS S3 桶中，则必须确保该桶得到适当的安全保护，并且只有授权人员可以访问。没有适当的治理，该桶可能配置错误，使数据容易受到攻击或盗窃。
- en: Cost optimization
  id: totrans-35
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 成本优化
- en: Infrastructure governance can also help organizations optimize costs by ensuring
    that resources are used efficiently and effectively. With proper governance, organizations
    can monitor resource usage and identify areas where resources can be optimized
    or eliminated.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 基础设施治理还可以帮助组织通过确保资源得到高效和有效的使用来优化成本。通过适当的治理，组织可以监控资源使用情况，并识别可以优化或淘汰的资源领域。
- en: For example, if a company has multiple AWS instances running, they may be able
    to consolidate those instances to save on costs. Without proper governance, it
    may be difficult to identify these cost-saving opportunities.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，如果一家公司有多个 AWS 实例运行，它们可能会将这些实例整合以节省成本。没有适当的治理，可能很难识别出这些节省成本的机会。
- en: Standardization and consistency
  id: totrans-38
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 标准化和一致性
- en: Infrastructure governance helps organizations maintain standardization and consistency
    across their infrastructure. With proper governance, organizations can ensure
    that all resources are properly configured and follow the same set of standards
    and best practices.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 基础设施治理帮助组织在其基础设施中维持标准化和一致性。通过适当的治理，组织可以确保所有资源得到适当配置，并遵循相同的标准和最佳实践。
- en: For example, if a company has multiple AWS accounts, it can use Terraform to
    ensure that all accounts follow the same set of security and compliance policies.
    Without proper governance, it may be difficult to maintain consistency across
    multiple accounts.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，如果一家公司拥有多个 AWS 账户，它可以使用 Terraform 确保所有账户遵循相同的安全和合规政策。没有适当的治理，可能很难在多个账户之间保持一致性。
- en: Risk management
  id: totrans-41
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 风险管理
- en: Infrastructure governance can also help organizations manage risk by identifying
    potential issues and taking proactive measures to mitigate those risks. With proper
    governance, organizations can monitor their infrastructure and identify potential
    security vulnerabilities or compliance violations before they become major issues.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 基础设施治理还可以通过识别潜在问题并采取主动措施来帮助组织管理风险。通过适当的治理，组织可以监控其基础设施，识别潜在的安全漏洞或合规性问题，并在这些问题变得严重之前解决它们。
- en: For example, if a company is using AWS to store sensitive customer data, it
    can use Terraform to ensure that all resources are properly secured and meet regulatory
    requirements. Without proper governance, it may be difficult to identify potential
    risks and take proactive measures to mitigate them.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，如果某公司使用 AWS 存储敏感的客户数据，它可以使用 Terraform 确保所有资源都得到了适当的安全保护，并满足监管要求。如果没有适当的治理，可能很难识别潜在的风险并采取主动措施进行缓解。
- en: Infrastructure governance is essential for modern organizations to ensure security,
    compliance, cost optimization, standardization, consistency, and risk management.
    By implementing proper governance practices and using tools such as Terraform,
    organizations can maintain control over their infrastructure and avoid the many
    pitfalls that come with unmanaged infrastructure.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 基础设施治理对现代组织至关重要，它确保安全性、合规性、成本优化、标准化、一致性和风险管理。通过实施适当的治理实践并使用诸如 Terraform 这样的工具，组织可以保持对其基础设施的控制，避免未管理基础设施所带来的许多陷阱。
- en: In this section, we explored the fundamentals of infrastructure governance,
    the importance of AWS resource governance, and the tools and automation techniques
    available for governing AWS Terraform projects. We learned that infrastructure
    governance is the set of policies, procedures, and practices used to manage and
    optimize the use of IT resources and that it is becoming increasingly important
    as organizations move toward cloud-based infrastructure. We also discussed the
    importance of AWS resource governance, which involves managing AWS resources to
    ensure compliance, cost optimization, and security.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们探讨了基础设施治理的基本原理、AWS 资源治理的重要性，以及可用于治理 AWS Terraform 项目的工具和自动化技术。我们了解到，基础设施治理是用于管理和优化
    IT 资源使用的政策、程序和实践的集合，随着组织向基于云的基础设施转型，这一过程变得越来越重要。我们还讨论了 AWS 资源治理的重要性，其中涉及到管理 AWS
    资源以确保合规性、成本优化和安全性。
- en: In the next section, we will dive into how to govern infrastructure with Terraform.
    We will explore the features and benefits of Terraform and discuss how it can
    be used to implement infrastructure governance policies and procedures for AWS
    resources. We will also provide some best practices for using Terraform to govern
    infrastructure, including the use of modules, the adoption of a version control
    system, and the implementation of automated checks and peer reviews.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，我们将深入探讨如何使用 Terraform 治理基础设施。我们将探讨 Terraform 的特性和优势，并讨论它如何被用来实施 AWS 资源的基础设施治理政策和程序。我们还将提供一些使用
    Terraform 治理基础设施的最佳实践，包括使用模块、采用版本控制系统以及实施自动化检查和同行评审。
- en: How to govern infrastructure with Terraform
  id: totrans-47
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何使用 Terraform 治理基础设施
- en: Governance is a critical aspect of managing infrastructure at scale, and Terraform
    can be a powerful tool to help achieve it. Terraform provides a declarative way
    to manage **Infrastructure as Code** (**IaC**), which makes it an ideal tool for
    infrastructure governance. This section will cover various best practices and
    strategies for governing AWS resources using Terraform.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 治理是大规模管理基础设施的关键方面，而 Terraform 可以成为实现这一目标的强大工具。Terraform 提供了一种声明式的方式来管理**基础设施即代码**（**IaC**），这使其成为基础设施治理的理想工具。本节将介绍使用
    Terraform 治理 AWS 资源的各种最佳实践和策略。
- en: To govern infrastructure with Terraform, it is crucial to establish a clear
    governance policy that defines the processes and procedures for managing infrastructure.
    This policy should include guidelines for resource creation, resource modification,
    resource deletion, resource versioning, and resource access control. It is also
    important to define roles and responsibilities for infrastructure management,
    including who is responsible for creating and modifying resources, who is responsible
    for approving changes, and who has access to sensitive resources.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 为了使用 Terraform 管理基础设施，至关重要的是建立明确的治理政策，定义管理基础设施的流程和程序。该政策应包括资源创建、资源修改、资源删除、资源版本控制和资源访问控制的指导方针。还需要定义基础设施管理的角色和责任，包括谁负责创建和修改资源，谁负责批准更改，以及谁有权访问敏感资源。
- en: 'Some of the critical areas to consider when governing infrastructure with Terraform
    include the following:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 在使用 Terraform 管理基础设施时，以下是一些关键领域需要考虑的内容：
- en: '**Resource provisioning**: Terraform provides a way to create, modify, and
    delete resources in a consistent and repeatable way. However, it is essential
    to establish guidelines for resource provisioning, including defining naming conventions,
    resource tagging, and resource categorization.'
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**资源配置**：Terraform 提供了一种一致且可重复的方式来创建、修改和删除资源。然而，制定资源配置的指南非常重要，包括定义命名规范、资源标签和资源分类。'
- en: '**Resource versioning**: As infrastructure evolves, it is crucial to track
    changes to resources and maintain versioning history. Terraform enables the versioning
    of infrastructure code, which provides a clear audit trail of changes made to
    resources.'
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**资源版本控制**：随着基础设施的演变，追踪资源的变化并保持版本历史记录非常重要。Terraform 使基础设施代码的版本控制成为可能，提供了清晰的变更审计轨迹。'
- en: '**Resource access control**: Access control is essential to ensure that only
    authorized personnel can create, modify, or delete resources. Terraform integrates
    with AWS **Identity and Access Management** (**IAM**) to provide fine-grained
    access control to resources.'
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**资源访问控制**：访问控制对于确保只有授权人员才能创建、修改或删除资源至关重要。Terraform 与 AWS **身份与访问管理**（**IAM**）集成，提供精细化的资源访问控制。'
- en: '**Compliance and security**: Compliance and security are critical considerations
    when governing infrastructure. Terraform provides various compliance and security
    features, including the ability to apply security policies to resources and scan
    infrastructure code for security vulnerabilities.'
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**合规性和安全性**：合规性和安全性是管理基础设施时需要重点考虑的因素。Terraform 提供了多种合规性和安全性功能，包括能够对资源应用安全策略，并扫描基础设施代码中的安全漏洞。'
- en: '**Automation**: Automation is critical to ensure consistent and repeatable
    infrastructure management. Terraform provides a way to automate infrastructure
    management tasks, including resource creation, resource modification, and resource
    deletion.'
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**自动化**：自动化对于确保一致且可重复的基础设施管理至关重要。Terraform 提供了一种自动化基础设施管理任务的方法，包括资源创建、资源修改和资源删除。'
- en: In the following sections, we will delve into each of these areas in more detail
    and provide guidance on how to govern AWS resources using Terraform.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的章节中，我们将更详细地探讨这些领域，并提供有关如何使用 Terraform 管理 AWS 资源的指导。
- en: Resource provisioning with Terraform
  id: totrans-57
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 Terraform 进行资源配置
- en: Resource provisioning is a fundamental aspect of infrastructure governance with
    Terraform. Terraform allows teams to define and provision resources in a declarative
    manner, which ensures that infrastructure remains consistent, secure, and cost-effective.
    By leveraging Terraform’s resource provisioning capabilities, teams can automate
    the process of creating and updating infrastructure resources, which reduces the
    likelihood of human error and accelerates the deployment process.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 资源配置是使用 Terraform 管理基础设施的一个基本方面。Terraform 允许团队以声明性方式定义和配置资源，确保基础设施的一致性、安全性和成本效益。通过利用
    Terraform 的资源配置能力，团队可以自动化创建和更新基础设施资源的过程，从而减少人为错误的可能性，并加速部署过程。
- en: Terraform’s resource provisioning capabilities enable teams to define infrastructure
    resources using **HashiCorp Configuration Language** (**HCL**), a **domain-specific
    language** (**DSL**) for defining IaC. HCL is easy to read and write, and it provides
    a high level of abstraction for defining infrastructure resources. This means
    that teams can focus on the business logic of their infrastructure without worrying
    about the underlying implementation details.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: Terraform的资源供应功能使团队能够使用**HashiCorp配置语言**（**HCL**）定义基础设施资源，HCL是一种用于定义基础设施即代码（IaC）的**领域特定语言**（**DSL**）。HCL易于阅读和编写，并且为定义基础设施资源提供了较高的抽象层级。这意味着团队可以专注于基础设施的业务逻辑，而无需担心底层实现的细节。
- en: 'To provision resources with Terraform, teams typically follow these steps:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 为了使用Terraform供应资源，团队通常会按照以下步骤进行：
- en: '**Define resources**: The first step in resource provisioning is to define
    the resources that need to be provisioned. Terraform supports a wide range of
    resource types, including compute instances, databases, network components, and
    more. Teams define resources using Terraform’s HCL syntax, which allows them to
    specify the resource type, properties, and dependencies.'
  id: totrans-61
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**定义资源**：资源供应的第一步是定义需要供应的资源。Terraform支持广泛的资源类型，包括计算实例、数据库、网络组件等。团队使用Terraform的HCL语法定义资源，这允许他们指定资源类型、属性和依赖关系。'
- en: '**Plan changes**: After defining the resources, teams use Terraform to plan
    the changes that need to be made to the infrastructure. Terraform’s planning functionality
    generates an execution plan that outlines the changes that will be made to the
    infrastructure resources. This plan can be reviewed and approved before the changes
    are applied, which provides an additional layer of governance.'
  id: totrans-62
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**规划变更**：在定义资源之后，团队使用Terraform规划需要对基础设施进行的变更。Terraform的规划功能生成执行计划，列出了将对基础设施资源进行的变更。在应用变更之前，可以对该计划进行审查和批准，从而提供额外的治理层级。'
- en: '**Apply changes**: Once the execution plan has been reviewed and approved,
    teams can apply the changes to the infrastructure. Terraform applies the changes
    safely and reliably, ensuring that resources are updated in the correct order
    and that errors are detected and handled gracefully.'
  id: totrans-63
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**应用变更**：一旦执行计划经过审查和批准，团队可以将变更应用于基础设施。Terraform安全可靠地应用变更，确保资源按正确的顺序更新，并且能够优雅地检测和处理错误。'
- en: Governance considerations for defining resources in Terraform
  id: totrans-64
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Terraform中定义资源的治理考虑事项
- en: 'When defining resources in Terraform, it’s essential to consider governance
    and compliance requirements. Here are some factors to keep in mind:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 在Terraform中定义资源时，必须考虑治理和合规性要求。以下是需要牢记的一些因素：
- en: '**Resource naming conventions**: Establish naming conventions for resources
    to ensure consistency and avoid naming conflicts. Consider including a prefix
    that identifies the environment or projects the resource belongs to.'
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**资源命名规范**：为资源建立命名规范，确保一致性并避免命名冲突。考虑包括一个前缀，标识资源所属的环境或项目。'
- en: '**Resource tags**: Use tags to categorize and organize resources for cost allocation,
    resource management, and compliance purposes. Define tag policies that enforce
    standardization across the organization.'
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**资源标签**：使用标签对资源进行分类和组织，以便进行成本分配、资源管理和合规性检查。定义标签策略，强制在组织内执行标准化。'
- en: '**Resource types and configurations**: Choose resource types and configurations
    that comply with security and compliance requirements. For example, if you’re
    deploying a database, ensure it’s configured with appropriate security settings
    and access controls.'
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**资源类型和配置**：选择符合安全性和合规性要求的资源类型和配置。例如，如果您正在部署数据库，请确保其配置了适当的安全设置和访问控制。'
- en: '**Approval workflows**: Establish workflows for approving resource deployments
    to ensure that changes are properly reviewed and authorized. Consider integrating
    Terraform with a change management system to track and manage changes to the infrastructure.'
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**审批工作流**：建立资源部署的审批工作流，确保变更经过适当审查和授权。考虑将Terraform与变更管理系统集成，以跟踪和管理基础设施的变更。'
- en: By considering these governance considerations, you can ensure that your Terraform
    infrastructure is deployed in a secure and compliant manner.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 通过考虑这些治理事项，您可以确保您的Terraform基础设施以安全和合规的方式进行部署。
- en: Managing access and permissions
  id: totrans-71
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 管理访问权限
- en: One of the most important aspects of infrastructure governance is ensuring that
    access and permissions are managed correctly. Terraform provides several mechanisms
    for managing access and permissions to AWS resources. Let’s take a look.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 基础设施治理中最重要的方面之一是确保访问权限和权限得到正确管理。Terraform 提供了多个机制来管理 AWS 资源的访问权限。我们来看看。
- en: IAM roles and policies
  id: totrans-73
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: IAM 角色和策略
- en: Terraform provides a mechanism for defining IAM roles and policies within your
    IaC. By defining IAM roles and policies in Terraform, you can ensure that access
    to AWS resources is tightly controlled and that permissions are granted based
    on the principle of least privilege.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: Terraform 提供了一种在基础设施即代码（IaC）中定义 IAM 角色和策略的机制。通过在 Terraform 中定义 IAM 角色和策略，你可以确保
    AWS 资源的访问得到严格控制，并且权限是基于最小权限原则授予的。
- en: IAM roles can be created using the `aws_iam_role` resource type, while IAM policies
    can be created using the `aws_iam_policy` resource type. Once these resources
    are defined in Terraform, you can use them to grant permissions to specific users
    or groups within your organization.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: IAM 角色可以通过 `aws_iam_role` 资源类型创建，IAM 策略则可以通过 `aws_iam_policy` 资源类型创建。一旦这些资源在
    Terraform 中定义，你可以使用它们向组织内的特定用户或用户组授予权限。
- en: AWS Organizations
  id: totrans-76
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: AWS Organizations
- en: If you have multiple AWS accounts within your organization, you can use AWS
    Organizations to manage access and permissions across all of your accounts. AWS
    Organizations provides a centralized way to manage policies, permissions, and
    billing across multiple accounts.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你在组织内有多个 AWS 账户，可以使用 AWS Organizations 来管理所有账户之间的访问权限。AWS Organizations 提供了一种集中管理多个账户政策、权限和账单的方式。
- en: Terraform provides the `aws_organizations_account` resource type, which can
    be used to manage AWS accounts within an organization. You can use this resource
    to create and manage AWS accounts, as well as to define policies and permissions
    that apply across all of your accounts.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: Terraform 提供了 `aws_organizations_account` 资源类型，可以用来管理组织内的 AWS 账户。你可以使用此资源创建和管理
    AWS 账户，并定义适用于所有账户的政策和权限。
- en: Cross-account access
  id: totrans-79
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 跨账户访问
- en: If you need to grant access to resources across multiple AWS accounts, you can
    use cross-account access to do so. Cross-account access allows you to grant permissions
    to users or resources in one account to access resources in another account.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你需要在多个 AWS 账户之间授予资源访问权限，可以使用跨账户访问来实现。跨账户访问允许你授予一个账户中的用户或资源访问另一个账户中资源的权限。
- en: Terraform provides the `aws_iam_role` resource type, which can be used to define
    cross-account access. By defining a role in one account and granting permissions
    to that role, you can allow users or resources in another account to assume that
    role and access the resources that it has permission to access.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: Terraform 提供了 `aws_iam_role` 资源类型，可以用来定义跨账户访问。通过在一个账户中定义角色并授予该角色权限，你可以允许另一个账户中的用户或资源假设该角色并访问该角色已授权访问的资源。
- en: Resource-level permissions
  id: totrans-82
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 资源级权限
- en: 'In addition to managing access and permissions at the IAM and account level,
    it’s also important to manage access and permissions at the resource level. Terraform
    provides several mechanisms for doing so:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 除了在 IAM 和账户级别管理访问权限外，在资源级别管理访问权限同样重要。Terraform 提供了多个机制来实现这一点：
- en: '**Tags**: You can use tags to manage access and permissions to resources based
    on specific criteria, such as department or project.'
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**标签**：你可以使用标签基于特定标准（如部门或项目）来管理资源的访问权限。'
- en: '**VPC endpoints**: You can use VPC endpoints to manage access to AWS services
    from within your VPC. By defining VPC endpoints in Terraform, you can ensure that
    access to AWS services is controlled and that data doesn’t leave your VPC.'
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**VPC 终端节点**：你可以使用 VPC 终端节点来管理从 VPC 内部访问 AWS 服务的权限。通过在 Terraform 中定义 VPC 终端节点，你可以确保对
    AWS 服务的访问受到控制，并且数据不会离开你的 VPC。'
- en: '**Security groups**: You can use security groups to manage access to EC2 instances
    and other resources within your VPC. By defining security groups in Terraform,
    you can ensure that access to resources is tightly controlled and that permissions
    are granted based on the principle of least privilege.'
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**安全组**：你可以使用安全组来管理对 EC2 实例和 VPC 中其他资源的访问。通过在 Terraform 中定义安全组，你可以确保对资源的访问严格控制，并且权限是基于最小权限原则授予的。'
- en: Implementing security best practices
  id: totrans-87
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 实施安全最佳实践
- en: 'When managing infrastructure with Terraform, security should be a top priority.
    Here are some security best practices that can be implemented:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 在使用 Terraform 管理基础设施时，安全性应该是首要任务。以下是一些可以实施的安全最佳实践：
- en: '**Use encryption**: Always encrypt sensitive data such as passwords, private
    keys, and API keys. Terraform allows you to use various encryption mechanisms
    such as AES and RSA to encrypt your sensitive data.'
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**使用加密**：始终加密敏感数据，如密码、私钥和 API 密钥。Terraform 允许您使用各种加密机制，如 AES 和 RSA 来加密敏感数据。'
- en: '**Limit access to sensitive data**: Restrict access to sensitive data such
    as AWS access keys and secret access keys. Avoid embedding AWS keys in plain text
    in your Terraform files. Instead, use a secure secrets management system such
    as AWS **Key Management** **Service** (**KMS**).'
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**限制对敏感数据的访问**：限制对敏感数据的访问，例如 AWS 访问密钥和秘密访问密钥。避免在 Terraform 文件中以明文嵌入 AWS 密钥。相反，使用像
    AWS **密钥管理** **服务**（**KMS**）这样的安全密钥管理系统。'
- en: '**Secure communication**: Ensure that all communication between Terraform and
    your infrastructure is secure. This can be achieved by using SSL/TLS to encrypt
    your connections.'
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**保护通信安全**：确保 Terraform 与您的基础设施之间的所有通信都是安全的。这可以通过使用 SSL/TLS 加密连接来实现。'
- en: '**Secure remote state storage**: Always use secure storage for remote state
    data. Remote state data can be sensitive and should be protected. Terraform supports
    various storage backends, including Amazon S3, Google Cloud Storage, and Azure
    Blob Storage.'
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**保护远程状态存储**：始终使用安全存储来保存远程状态数据。远程状态数据可能包含敏感信息，应该得到保护。Terraform 支持多种存储后端，包括
    Amazon S3、Google Cloud Storage 和 Azure Blob Storage。'
- en: '**Enable logging and auditing**: Enable logging and auditing of all Terraform
    activities to track changes and identify security issues. Logging can be done
    through Terraform’s logging capabilities or by integrating with third-party logging
    tools.'
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**启用日志记录和审计**：启用对所有 Terraform 活动的日志记录和审计，以跟踪更改并识别安全问题。日志记录可以通过 Terraform 的日志功能完成，或者通过与第三方日志工具集成来实现。'
- en: '**Use multi-factor authentication** (**MFA**): Enable MFA for all users who
    access your Terraform infrastructure. MFA adds an extra layer of security by requiring
    a second factor, such as a mobile device or security token, in addition to a password.'
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**使用多因素认证**（**MFA**）：为所有访问您 Terraform 基础设施的用户启用 MFA。MFA 通过要求第二个因素（例如移动设备或安全令牌）来增加额外的安全层次，除了密码之外。'
- en: '**Monitor your infrastructure**: Monitor your infrastructure regularly for
    security issues and vulnerabilities. Use Terraform’s built-in monitoring capabilities
    or integrate with third-party monitoring tools to track changes and identify potential
    security issues.'
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**监控您的基础设施**：定期监控您的基础设施，以检测安全问题和漏洞。使用 Terraform 的内建监控功能或与第三方监控工具集成，跟踪更改并识别潜在的安全问题。'
- en: By implementing these security best practices, you can ensure that your Terraform
    infrastructure is secure and protected against potential security threats.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 通过实施这些安全最佳实践，您可以确保您的 Terraform 基础设施是安全的，并且能够防范潜在的安全威胁。
- en: Configuring logging and monitoring
  id: totrans-97
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 配置日志记录和监控
- en: Logging and monitoring are critical components of infrastructure governance.
    They help teams to track and troubleshoot issues, as well as to detect and respond
    to potential security breaches.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 日志记录和监控是基础设施治理的关键组成部分。它们帮助团队跟踪和排查问题，并检测和响应潜在的安全漏洞。
- en: With Terraform, you can configure logging and monitoring for your AWS infrastructure
    in a centralized and automated way. You can use AWS CloudTrail to log AWS API
    calls and AWS Config to monitor compliance with your desired configurations. You
    can also integrate with third-party logging and monitoring tools, such as Datadog
    or Splunk, to get more advanced insights and alerts.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 Terraform，您可以以集中和自动化的方式配置 AWS 基础设施的日志记录和监控。您可以使用 AWS CloudTrail 记录 AWS API
    调用，并使用 AWS Config 监控与您的期望配置的合规性。您还可以与第三方日志记录和监控工具（如 Datadog 或 Splunk）集成，以获得更先进的洞察和警报。
- en: To configure logging and monitoring with Terraform, you need to define the necessary
    resources in your configuration. For example, to enable CloudTrail, you can use
    the `aws_cloudtrail` resource and specify the S3 bucket where the logs should
    be stored. Similarly, to enable AWS Config, you can use the `aws_config_configuration_recorder`
    resource and specify the rules and resources to monitor.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用 Terraform 配置日志记录和监控，您需要在配置中定义必要的资源。例如，要启用 CloudTrail，您可以使用 `aws_cloudtrail`
    资源并指定应存储日志的 S3 存储桶。同样，要启用 AWS Config，您可以使用 `aws_config_configuration_recorder`
    资源并指定要监控的规则和资源。
- en: It’s also important to ensure that your logs and monitoring data are secured
    and encrypted. You can use AWS KMS to manage your encryption keys and encrypt
    your data at rest and in transit. You can also define IAM roles and policies to
    control access to your logs and monitoring data.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 同时确保你的日志和监控数据是安全且加密的也非常重要。你可以使用AWS KMS来管理加密密钥，并对静态数据和传输中的数据进行加密。你还可以定义IAM角色和策略来控制对日志和监控数据的访问。
- en: Overall, logging and monitoring are critical for infrastructure governance and
    should be an integral part of your Terraform configuration. By defining these
    resources in code, you can ensure that they are consistent, scalable, and automated
    across your AWS infrastructure.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 总体来说，日志记录和监控对基础设施治理至关重要，应成为Terraform配置的一个组成部分。通过在代码中定义这些资源，可以确保它们在AWS基础设施中是一致的、可扩展的和自动化的。
- en: Establishing resource naming conventions
  id: totrans-103
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 建立资源命名约定。
- en: Resource naming conventions are important for tracking and identifying resources
    in your infrastructure. Naming conventions must be clear and consistent to make
    it easier to identify resources, prevent naming conflicts, and support automation.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 资源命名约定对于跟踪和识别基础设施中的资源非常重要。命名约定必须清晰且一致，以便更容易地识别资源、防止命名冲突，并支持自动化。
- en: 'Here are some best practices for establishing resource naming conventions in
    Terraform:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是为Terraform建立资源命名约定的一些最佳实践：
- en: Use a standardized naming convention that is easy to read and understand, such
    as `{Environment}-{ResourceType}-{Name}`
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用易于阅读和理解的标准命名约定，例如`{Environment}-{ResourceType}-{Name}`。
- en: Keep resource names short but descriptive, and use only lowercase letters, numbers,
    and hyphens
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 保持资源名称简短且具有描述性，并且只使用小写字母、数字和连字符。
- en: Use consistent and meaningful names for similar resources, such as `"web-server-1"`
    and `"web-server-2"` for two web servers in a cluster
  id: totrans-108
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于相似的资源，使用一致且有意义的名称，例如将两个集群中的Web服务器命名为`"web-server-1"`和`"web-server-2"`。
- en: Use logical grouping to separate resources based on their function, such as
    `"network-"` for network-related resources and `"compute-"` for compute-related
    resources
  id: totrans-109
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用逻辑分组来根据功能区分资源，例如将网络相关的资源命名为`"network-"`，将计算相关的资源命名为`"compute-"`。
- en: Use unique identifiers for resources that have the same or similar names, such
    as `"db-instance-1"` and `"db-instance-2"` for two database instances
  id: totrans-110
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于名称相同或相似的资源，使用唯一标识符，例如两个数据库实例可以使用`"db-instance-1"`和`"db-instance-2"`。
- en: Use variables to enable dynamic naming of resources, such as prefixing the resource
    name with the environment name or project name
  id: totrans-111
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用变量来实现资源的动态命名，例如将资源名称与环境名称或项目名称前缀。
- en: By following these resource naming conventions, you can make it easier to identify,
    manage, and monitor resources in your infrastructure.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 通过遵循这些资源命名约定，你可以更轻松地识别、管理和监控基础设施中的资源。
- en: Using version control and collaboration tools
  id: totrans-113
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用版本控制和协作工具。
- en: 'Infrastructure governance with Terraform is a collaborative effort, and version
    control tools play a critical role in managing changes. Teams can use version
    control tools to track changes, collaborate, and manage the development and deployment
    of IaC. Here are some tips to effectively use version control and collaboration
    tools for your Terraform projects:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 使用Terraform进行基础设施治理是一个协作的过程，版本控制工具在管理变更中起着至关重要的作用。团队可以使用版本控制工具来跟踪更改、协作，并管理IaC的开发和部署。以下是一些有效使用版本控制和协作工具的建议，适用于你的Terraform项目：
- en: '**Use Git for version control**: Git is one of the most widely used version
    control tools available. It is easy to use and integrates well with most other
    tools in the DevOps and infrastructure management ecosystem.'
  id: totrans-115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**使用Git进行版本控制**：Git是最广泛使用的版本控制工具之一。它易于使用，并且与大多数DevOps和基础设施管理工具集成良好。'
- en: '**Create a centralized Git repository**: A centralized Git repository makes
    it easy to manage changes across the team. All team members can access the same
    repository, review changes, and make updates as needed.'
  id: totrans-116
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**创建集中式Git仓库**：集中式Git仓库可以轻松地管理团队间的变更。所有团队成员可以访问同一个仓库，审查更改，并根据需要进行更新。'
- en: '**Use branching**: Branching allows teams to work on separate versions of the
    infrastructure simultaneously. This helps minimize conflicts and ensure that changes
    are reviewed before they are merged into the main branch.'
  id: totrans-117
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**使用分支**：分支允许团队同时在基础设施的不同版本上工作。这有助于最小化冲突，并确保在将更改合并到主分支之前进行审查。'
- en: '**Implement a code review process**: Code reviews are an essential part of
    the collaboration process. Code reviews help ensure that changes are properly
    reviewed and tested before they are merged into the main branch.'
  id: totrans-118
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**实施代码审查流程**：代码审查是协作过程中的一个关键部分。代码审查有助于确保在将变更合并到主分支之前，变更已得到充分的审查和测试。'
- en: '**Use automation tools to enforce policies**: Automation tools such as Checkov
    or Sentinel can be used to enforce policies, scan code for vulnerabilities, and
    ensure that infrastructure code adheres to best practices.'
  id: totrans-119
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**使用自动化工具强制执行政策**：像Checkov或Sentinel这样的自动化工具可以用来强制执行政策，扫描代码中的漏洞，并确保基础设施代码遵循最佳实践。'
- en: '**Establish collaboration practices**: Teams should establish collaboration
    practices that define how code is reviewed, tested, and merged. This helps ensure
    that everyone is working together consistently and productively.'
  id: totrans-120
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**建立协作实践**：团队应建立协作实践，定义代码的审查、测试和合并方式。这有助于确保每个人都在一致且高效地合作。'
- en: '**Use communication tools**: Communication tools such as Slack or Microsoft
    Teams can be used to keep everyone on the team informed about changes, issues,
    and other important information related to the Terraform project.'
  id: totrans-121
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**使用沟通工具**：像Slack或Microsoft Teams这样的沟通工具可以用来确保团队中的每个人都能了解有关Terraform项目的变更、问题和其他重要信息。'
- en: By following these tips, teams can effectively manage changes to their Terraform
    infrastructure code, collaborate, and ensure that best practices are followed.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 通过遵循这些提示，团队可以有效地管理他们的Terraform基础设施代码的变更，进行协作，并确保遵循最佳实践。
- en: Building and deploying with automation and pipelines
  id: totrans-123
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用自动化和管道进行构建与部署
- en: Automating the build and deployment process for IaC projects is an essential
    part of governance. Automation ensures that the build and deployment processes
    are predictable and repeatable, reducing the risk of human error and increasing
    the speed of development.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 为IaC项目自动化构建和部署过程是治理的一个关键部分。自动化确保构建和部署过程是可预测和可重复的，减少了人为错误的风险，并提高了开发速度。
- en: Pipelines are the foundation of automation in IaC projects. A pipeline is a
    series of steps that are executed in sequence to build, test, and deploy the infrastructure.
    Pipelines typically include stages for linting, testing, building, and deploying
    the infrastructure. The steps in each stage are executed in sequence, and if any
    step fails, the entire pipeline is aborted.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 管道是IaC项目中自动化的基础。管道是一系列按顺序执行的步骤，用于构建、测试和部署基础设施。管道通常包括代码检查、测试、构建和部署等阶段。每个阶段中的步骤按顺序执行，如果任何一步失败，整个管道将被中止。
- en: To implement a pipeline for your IaC project, you will need to choose a pipeline
    tool that integrates with your version control system and infrastructure platform.
    Some popular pipeline tools for IaC projects include Jenkins, GitHub Actions,
    Terraform Cloud, Terraform Enterprise, and GitLab CI/CD.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 要为你的IaC项目实现管道，你需要选择一个与你的版本控制系统和基础设施平台集成的管道工具。一些流行的IaC项目管道工具包括Jenkins、GitHub
    Actions、Terraform Cloud、Terraform Enterprise和GitLab CI/CD。
- en: Once you have chosen a pipeline tool, you will need to define the stages and
    steps in your pipeline. Each step in the pipeline should be defined as a separate
    script or executable that can be run independently. This makes it easy to test
    and debug individual steps and also makes it easier to maintain and update the
    pipeline as your infrastructure changes.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦选择了管道工具，你需要定义管道中的各个阶段和步骤。管道中的每个步骤应定义为一个独立的脚本或可执行文件，可以独立运行。这使得测试和调试单个步骤变得更加容易，也便于在基础设施变化时维护和更新管道。
- en: To ensure that your pipeline is secure, you should use secrets management tools
    to store and manage your credentials and other sensitive information. You should
    also use automated testing tools to ensure that your infrastructure is secure
    and compliant with your organization’s policies and standards.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 为了确保你的管道安全，你应使用密钥管理工具来存储和管理你的凭证及其他敏感信息。你还应使用自动化测试工具来确保你的基础设施是安全的，并符合你所在组织的政策和标准。
- en: Overall, building and deploying IaC with automation and pipelines is a critical
    part of governance. Automation ensures that the build and deployment processes
    are predictable and repeatable, while pipelines provide a framework for testing,
    building, and deploying the infrastructure. By implementing automation and pipelines
    in your IaC projects, you can reduce the risk of human error, increase the speed
    of development, and ensure that your infrastructure is secure and compliant with
    your organization’s policies and standards.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 总的来说，使用自动化和管道构建和部署 IaC 是治理的重要组成部分。自动化确保了构建和部署过程的可预测性和可重复性，而管道提供了测试、构建和部署基础设施的框架。通过在
    IaC 项目中实施自动化和管道，可以减少人为错误的风险，提升开发速度，并确保基础设施的安全性及符合组织的政策和标准。
- en: Tracking and managing costs and budgets
  id: totrans-130
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 跟踪和管理成本与预算
- en: Tracking and managing costs and budgets is an important part of infrastructure
    governance. Terraform provides several features that can help manage costs and
    track expenses.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 跟踪和管理成本与预算是基础设施治理的重要部分。Terraform 提供了多个功能，可以帮助管理成本和跟踪开支。
- en: One way to track costs is to use Terraform’s ability to set budgets and configure
    alerts based on cost metrics. With AWS, Terraform can integrate with the AWS Budgets
    service to set and track budgets, as well as send notifications when budgets are
    exceeded.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 跟踪成本的一种方式是利用 Terraform 设置预算并根据成本指标配置警报功能。在 AWS 上，Terraform 可以与 AWS Budgets 服务集成，用于设置和跟踪预算，并在预算超支时发送通知。
- en: Another way to manage costs is to use Terraform’s ability to provision infrastructure
    based on specific cost requirements. For example, using the `aws_instance` resource,
    it’s possible to specify the `instance_type` parameter to provision instances
    that fit within specific price ranges.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 管理成本的另一种方式是利用 Terraform 根据特定成本需求来配置基础设施。例如，使用 `aws_instance` 资源，可以指定 `instance_type`
    参数来配置符合特定价格区间的实例。
- en: In addition to Terraform’s built-in cost management features, there are also
    third-party tools that can help manage costs and expenses. CloudHealth by VMware
    and CloudCheckr are two popular options that integrate with Terraform and provide
    additional cost management and optimization features.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 除了 Terraform 内置的成本管理功能外，还有第三方工具可以帮助管理成本和开支。VMware 的 CloudHealth 和 CloudCheckr
    是两个流行的选项，它们与 Terraform 集成，并提供额外的成本管理和优化功能。
- en: Overall, by implementing cost management practices with Terraform, organizations
    can ensure that they are using their resources efficiently and staying within
    budget.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 总体而言，通过在 Terraform 中实施成本管理实践，组织可以确保高效使用资源并保持在预算范围内。
- en: Implementing compliance and governance policies
  id: totrans-136
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 实施合规性和治理政策
- en: In addition to security, compliance and governance policies are crucial to ensuring
    the proper functioning and management of your infrastructure. Terraform provides
    numerous tools and features to help you ensure compliance with various regulations
    and standards, such as HIPAA, PCI DSS, and SOC 2.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 除了安全性，合规性和治理政策对于确保基础设施的正常运行和管理至关重要。Terraform 提供了众多工具和功能，帮助确保遵守各种法规和标准，如 HIPAA、PCI
    DSS 和 SOC 2。
- en: 'To implement compliance and governance policies with Terraform, you can use
    the following tools:'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 要在 Terraform 中实现合规性和治理政策，可以使用以下工具：
- en: '**Sentinel**: Sentinel is a policy-as-code framework built into Terraform Enterprise.
    It enables you to define and enforce policies across all of your IaC, using a
    familiar programming language.'
  id: totrans-139
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Sentinel**：Sentinel 是 Terraform Enterprise 中内置的政策即代码框架。它使你能够使用熟悉的编程语言定义并执行跨所有
    IaC 的政策。'
- en: '**Open Policy Agent** (**OPA**): OPA is a flexible and lightweight policy engine
    that can be used to enforce policies across your IaC. OPA is compatible with Terraform
    and can be used to define policies for Terraform configurations and plans.'
  id: totrans-140
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Open Policy Agent**（**OPA**）：OPA 是一个灵活且轻量的政策引擎，可以用于在 IaC 中执行政策。OPA 与 Terraform
    兼容，可用于为 Terraform 配置和计划定义政策。'
- en: '**AWS Config**: AWS Config is a service that enables you to assess, audit,
    and evaluate the configurations of your AWS resources. You can use AWS Config
    to monitor compliance with regulatory standards and best practices and to enforce
    governance policies across your AWS infrastructure.'
  id: totrans-141
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**AWS Config**：AWS Config 是一项服务，允许你评估、审计和评估 AWS 资源的配置。你可以使用 AWS Config 监控合规性，确保符合监管标准和最佳实践，并在
    AWS 基础设施中执行治理政策。'
- en: By implementing compliance and governance policies with Terraform, you can ensure
    that your infrastructure is secure, reliable, and compliant with regulatory standards
    and best practices.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 通过使用Terraform实施合规性和治理政策，你可以确保你的基础设施安全、可靠，并符合监管标准和最佳实践。
- en: In conclusion, infrastructure governance is an essential aspect of managing
    cloud resources, especially when dealing with large and complex environments.
    Terraform provides a powerful platform to implement governance policies and automate
    infrastructure management, allowing organizations to achieve cost savings, security,
    and compliance goals. By following best practices for resource provisioning, access
    and permissions, security, logging and monitoring, resource naming, version control
    and collaboration, automation and pipelines, cost tracking, and compliance policies,
    organizations can establish a strong governance framework for their AWS infrastructure.
    With the right tools and processes in place, teams can ensure that their AWS Terraform
    projects are secure, efficient, and cost-effective.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 总结来说，基础设施治理是管理云资源的一个重要方面，尤其是在处理大型和复杂环境时。Terraform提供了一个强大的平台来实施治理政策并自动化基础设施管理，使组织能够实现成本节约、安全和合规目标。通过遵循资源供应、访问和权限、安全、日志记录和监控、资源命名、版本控制和协作、自动化和管道、成本跟踪及合规政策的最佳实践，组织可以为其AWS基础设施建立一个强有力的治理框架。通过合适的工具和流程，团队可以确保他们的AWS
    Terraform项目安全、高效且具有成本效益。
- en: Summary
  id: totrans-144
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we explored the importance of infrastructure governance and
    how it can be achieved with Terraform on AWS. First, we defined what infrastructure
    governance is and why it is essential to have proper governance policies in place.
    Then, we explored how Terraform can be used to govern infrastructure by defining
    resources, managing access and permissions, implementing security best practices,
    configuring logging and monitoring, establishing resource naming conventions,
    using version control and collaboration tools, building and deploying with automation
    and pipelines, and tracking and managing costs and budgets.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们探讨了基础设施治理的重要性，以及如何通过在AWS上使用Terraform实现它。首先，我们定义了什么是基础设施治理，以及为什么必须实施适当的治理政策。接着，我们探讨了如何通过Terraform来治理基础设施，包括定义资源、管理访问和权限、实施安全最佳实践、配置日志记录和监控、建立资源命名规范、使用版本控制和协作工具、通过自动化和管道构建与部署、以及跟踪和管理成本与预算。
- en: We also discussed how to implement compliance and governance policies to ensure
    that infrastructure is managed in a compliant and secure manner. By following
    these best practices, organizations can build cost-effective, secure, and compliant
    AWS infrastructure while leveraging the benefits of Terraform.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还讨论了如何实施合规性和治理政策，以确保基础设施以合规和安全的方式进行管理。通过遵循这些最佳实践，组织可以在利用Terraform的优势的同时，构建具有成本效益、安全且合规的AWS基础设施。
- en: In conclusion, Terraform provides a powerful toolset for governing infrastructure
    on AWS, and by following the best practices outlined in this chapter, organizations
    can maintain a high level of security, compliance, and efficiency in their infrastructure
    management.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 总之，Terraform为在AWS上治理基础设施提供了强大的工具集，通过遵循本章中概述的最佳实践，组织可以在基础设施管理中保持高水平的安全性、合规性和效率。
- en: 'As this chapter concludes, we turn our attention to the next challenge: building
    a secure infrastructure with Terraform, laying the groundwork for a resilient
    and scalable digital environment.'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 随着本章的结束，我们将目光转向下一个挑战：使用Terraform构建安全的基础设施，为一个具有弹性和可扩展性的数字环境奠定基础。
