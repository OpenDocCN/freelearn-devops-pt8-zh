["```\n    root@ubuntu:~# apt-get update && apt-get upgrade && reboot\n    root@ubuntu:~# apt-get install python-pip python-dev ipython\n    root@ubuntu:~# apt-get install lxc-dev=2.0.3-0ubuntu1~ubuntu14.04.1 \n    liblxc1=2.0.3-0ubuntu1~ubuntu14.04.1 cgroup-lite=1.11~ubuntu14.04.2 \n\n    root@ubuntu:~# apt-get install \n    lxc-templates=2.0.3-0ubuntu1~ubuntu14.04.1\n    lxc1=2.0.3-0ubuntu1~ubuntu14.04.1 \n    python3-lxc=2.0.3-0ubuntu1~ubuntu14.04.1\n\n    ```", "```\n    [root@centos ~]# yum update && reboot\n    [root@centos ~]# yum install python-devel python-pip lxc \n    lxc-devel lxc-templates libcgroup-devel ipython\n\n    ```", "```\n    [root@centos ~]# brctl addbr virbr0\n\n    ```", "```\n    root@ubuntu:~# pip install virtualenv\n\n    ```", "```\n    root@ubuntu:~# mkdirlxc_python\n    root@ubuntu:~# virtualenv lxc_python\n    New python executable in /root/lxc_python/bin/python\n    Installing setuptools, pip, wheel...done.\n    root@ubuntu:~# \n    root@ubuntu:~# source lxc_python/bin/activate\n    (lxc_python) root@ubuntu:~# cd lxc_python\n    (lxc_python) root@ubuntu:~/lxc_python#\n\n    ```", "```\n    (lxc_python) root@ubuntu:~/lxc_python# pip install lxc-python2\n    (lxc_python) root@ubuntu:~/lxc_python# pip freeze\n    lxc-python2==0.1\n    (lxc_python) root@ubuntu:~/lxc_python#\n\n    ```", "```\n(lxc_python) root@ubuntu:~/lxc_python# ipython\nIn [1]: import lxc\n\n```", "```\nIn [2]: container = def build():Container(\"python_container\")\nIn [3]: type(container)\nOut[3]: lxc.Container\n\n```", "```\nIn [4]: container.create(\"ubuntu\")\n\nChecking cache download in /var/cache/lxc/trusty/rootfs-amd64 ... \nCopy /var/cache/lxc/trusty/rootfs-amd64 to /var/lib/lxc/python_container/rootfs ...\nCopying rootfs to /var/lib/lxc/python_container/rootfs ...\nGenerating locales...\nen_US.UTF-8... up-to-date\nGeneration complete.\nCreating SSH2 RSA key; this may take some time ...\nCreating SSH2 DSA key; this may take some time ...\nCreating SSH2 ECDSA key; this may take some time ...\nCreating SSH2 ED25519 key; this may take some time ...\nupdate-rc.d: warning: default stop runlevel arguments (0 1 6) do not match ssh Default-Stop values (none)\ninvoke-rc.d: policy-rc.d denied execution of start.\nCurrent default time zone: 'Etc/UTC'\nLocal time is now: Tue Sep 20 16:30:31 UTC 2016.\nUniversal Time is now: Tue Sep 20 16:30:31 UTC 2016.\n##\n# The default user is 'ubuntu' with password 'ubuntu'!\n# Use the 'sudo' command to run tasks as root in the container.\n##\nOut[4]: True\n\n```", "```\nIn [5]: container.name\nOut[5]: u'python_container'\n\n```", "```\nIn [6]: container.state\nOut[6]: u'STOPPED'\n\n```", "```\nIn [7]: lxc.list_containers()\nOut[7]: (u'python_container')\n\n```", "```\nIn [8]: container.get_config_path()\nOut[8]: u'/var/lib/lxc'\nIn [9]: container.get_config_item('lxc.rootfs')\nOut[9]: u'/var/lib/lxc/python_container/rootfs'\n\n```", "```\nIn [10]: \ncontainer.get_config_item('lxc.cgroup.memory.limit_in_bytes')\nOut[10]: u''\n\n```", "```\nIn [11]: container.get_ips()\nOut[11]: ()\n\n```", "```\nIn [12]: container.running\nOut[12]: False\n\n```", "```\nstart(useinit = False, daemonize=True, close_fds=False, cmd = (,)) ->boolean\n\n```", "```\nIn [13]: container.start(useinit = False, daemonize = True)\nOut[13]: True\n\n```", "```\nIn [14]: container.wait(\"RUNNING\", 5)\nOut[14]: True\n\n```", "```\nIn [15]: container.running\nOut[15]: True\nIn [16]: container.state\nOut[16]: u'RUNNING'\n\n```", "```\nroot@ubuntu:~# lxc-ls -f\nNAME             STATE   AUTOSTART GROUPS IPV4      IPV6\npython_container RUNNING 0         -      10.0.3.29 -\nroot@ubuntu:~#\n\n```", "```\nIn [17]: container.init_pid\nOut[17]: 4688L\n\n```", "```\nroot@ubuntu:~# psaxfw\n...\n4683 ?Ss     0:00 /usr/bin/python /usr/bin/ipython\n4688 ?Ss     0:00  \\_ /sbin/init\n5405 ?        S      0:00      \\_ upstart-socket-bridge --daemon\n6224 ?        S      0:00      \\_ upstart-udev-bridge --daemon\n6235 ?Ss     0:00      \\_ /lib/systemd/systemd-udevd --daemon\n6278 ?        S      0:00      \\_ upstart-file-bridge --daemon\n6280 ?Ssl    0:00      \\_ rsyslogd\n6375 ?Ss     0:00      \\_ dhclient -1 -v -pf /run/dhclient.eth0.pid -lf /var/lib/dhcp/dhclient.eth0.leases eth0\n6447 pts/3    Ss+    0:00      \\_ /sbin/getty -8 38400 tty4\n6450 pts/1    Ss+    0:00      \\_ /sbin/getty -8 38400 tty2\n6451 pts/2    Ss+    0:00      \\_ /sbin/getty -8 38400 tty3\n6462 ?Ss     0:00      \\_ /usr/sbin/sshd -D\n6468 ?Ss     0:00      \\_ cron\n6498 pts/4    Ss+    0:00      \\_ /sbin/getty -8 38400 console\n6501 pts/0    Ss+    0:00      \\_ /sbin/getty -8 38400 tty1\nroot@ubuntu:~#\n\n```", "```\nIn [18]: container.get_ips()\nOut[18]: (u'10.0.3.29',)\n\n```", "```\nIn [19]: container.attach_wait(lxc.attach_run_command, [\"ifconfig\", \"eth0\"])\neth0      Link encap:EthernetHWaddr 00:16:3e:ea:1c:38\ninet addr:10.0.3.29  Bcast:10.0.3.255  Mask:255.255.255.0\ninet6addr: fe80::216:3eff:feea:1c38/64 Scope:Link\n UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1\n RX packets:53 errors:0 dropped:0 overruns:0 frame:0\n TX packets:52 errors:0 dropped:0 overruns:0 carrier:0\ncollisions:0 txqueuelen:1000\n RX bytes:5072 (5.0 KB)  TX bytes:4892 (4.8 KB)\nOut[19]: 0L\n\n```", "```\nIn [20]: container.attach_wait(lxc.attach_run_command, [\"ls\", \"-la\"], namespaces=(lxc.CLONE_NEWNS))\ntotal 68\ndrwxr-xr-x  21 root root 4096 Sep 20 18:51 .\ndrwxr-xr-x  21 root root 4096 Sep 20 18:51 ..\ndrwxr-xr-x   2 root root 4096 Sep 14 15:20 bin\ndrwxr-xr-x   2 root root 4096 Apr 10  2014 boot\ndrwxr-xr-x   7 root root 1140 Sep 20 18:51 dev\ndrwxr-xr-x  65 root root 4096 Sep 20 18:51 etc\ndrwxr-xr-x   3 root root 4096 Sep 20 16:30 home\ndrwxr-xr-x  12 root root 4096 Sep 14 15:19 lib\ndrwxr-xr-x   2 root root 4096 Sep 14 15:19 lib64\ndrwxr-xr-x   2 root root 4096 Sep 14 15:18 media\ndrwxr-xr-x   2 root root 4096 Apr 10  2014 mnt\ndrwxr-xr-x   2 root root 4096 Sep 14 15:18 opt\ndr-xr-xr-x 143 root root    0 Sep 20 18:51 proc\ndrwx------   2 root root 4096 Sep 14 15:18 root\ndrwxr-xr-x  10 root root  420 Sep 20 18:51 run\ndrwxr-xr-x   2 root root 4096 Sep 14 15:20 sbin\ndrwxr-xr-x   2 root root 4096 Sep 14 15:18 srv\ndr-xr-xr-x  13 root root    0 Sep 20 18:51 sys\ndrwxrwxrwt   2 root root 4096 Sep 20 19:17 tmp\ndrwxr-xr-x  10 root root 4096 Sep 14 15:18 usr\ndrwxr-xr-x  11 root root 4096 Sep 14 15:18 var\nOut[20]: 0L\n\n```", "```\nIn [21]: container.attach_wait(lxc.attach_run_command, [\"ps\", \"axfw\"], namespaces=(lxc.CLONE_NEWNS + lxc.CLONE_NEWPID))\nPID TTY      STAT   TIME COMMAND\n1751 pts/0    R+     0:00psaxfw\n1 ?Ss     0:00 /sbin/init\n670 ?        S      0:00 upstart-socket-bridge --daemon\n1487 ?        S      0:00 upstart-udev-bridge --daemon\n1498 ?Ss     0:00 /lib/systemd/systemd-udevd --daemon\n1541 ?        S      0:00 upstart-file-bridge --daemon\n1543 ?Ssl    0:00 rsyslogd\n1582 ?Ss     0:00 dhclient -1 -v -pf /run/dhclient.eth0.pid -lf /var/lib/dhcp/dhclient.eth0.leases eth0\n 1654 lxc/tty4 Ss+    0:00 /sbin/getty -8 38400 tty4\n 1657 lxc/tty2 Ss+    0:00 /sbin/getty -8 38400 tty2\n 1658 lxc/tty3 Ss+    0:00 /sbin/getty -8 38400 tty3\n1669 ?Ss     0:00 /usr/sbin/sshd -D\n1675 ?Ss     0:00 cron\n 1705 lxc/console Ss+   0:00 /sbin/getty -8 38400 console\n 1708 lxc/tty1 Ss+    0:00 /sbin/getty -8 38400 tty1\nOut[21]: 0L\n\n```", "```\nIn [22]: container.set_config_item(\"lxc.cgroup.memory.limit_in_bytes\", \"536870912\")\nOut[22]: True\nIn [23]: container.get_config_item('lxc.cgroup.memory.limit_in_bytes')\nOut[23]: [u'536870912']\n\n```", "```\nIn [24]: container.append_config_item(\"lxc.cgroup.memory.limit_in_bytes\", \"536870912\")\nOut[24]: True\nIn [25]: container.save_config()\nOut[25]: True\n\n```", "```\nroot@ubuntu:~# cat /var/lib/lxc/python_container/config\nlxc.include = /usr/share/lxc/config/ubuntu.common.conf\n# Container specific configuration\nlxc.rootfs = /var/lib/lxc/python_container/rootfs\nlxc.rootfs.backend = dir\nlxc.utsname = python_container\nlxc.arch = amd64\n# Network configuration\nlxc.network.type = veth\nlxc.network.link = lxcbr0\nlxc.network.flags = up\nlxc.network.hwaddr = 00:16:3e:ea:1c:38\nlxc.cgroup.memory.limit_in_bytes = 536870912\nroot@ubuntu:~#\n\n```", "```\nIn [26]: container.get_cgroup_item(\"memory.limit_in_bytes\")\nOut[26]: u'536870912'\nIn [27]: container.set_cgroup_item(\"memory.limit_in_bytes\", \"268435456\")\nOut[27]: True\nIn [28]: container.get_cgroup_item(\"memory.limit_in_bytes\")\nOut[28]: u'268435456'\n\n```", "```\nIn [29]: container.freeze()\nOut[29]: u'FROZEN'\n\n```", "```\nIn [30]: container.state\nOut[30]: u'FROZEN'\n\n```", "```\nroot@ubuntu:~# cat /sys/fs/cgroup/freezer/lxc/python_container/freezer.state\nFROZEN\nroot@ubuntu:~#\n\n```", "```\nIn [31]: container.unfreeze()\nOut[31]: True\nIn [32]: container.state\nOut[32]: u'RUNNING'\nroot@ubuntu:~# cat /sys/fs/cgroup/freezer/lxc/python_container/freezer.state\nTHAWED\nroot@ubuntu:~#\n\n```", "```\nIn [33]: container.stop()\nOut[33]: True\nIn [34]: container.state\nOut[34]: u'STOPPED'\n\n```", "```\nroot@ubuntu:~# lxc-ls -f\nNAME             STATE   AUTOSTART GROUPS IPV4 IPV6\npython_container STOPPED 0         -      -    -\nroot@ubuntu:~#\n\n```", "```\nIn [35]: cloned_container = container.clone(\"cloned_container\")\nIn [35]: True\n\n```", "```\nIn [36]: lxc.list_containers()\nOut[36]: (u'cloned_container', u'python_container')\n\n```", "```\nroot@ubuntu:~# lxc-ls -f\nNAME             STATE   AUTOSTART GROUPS IPV4 IPV6\ncloned_container STOPPED 0         -      -    -\npython_container STOPPED 0         -      -    -\nroot@ubuntu:~#\n\n```", "```\nIn [37]: cloned_container.get_config_item('lxc.rootfs')\nOut[37]: u'/var/lib/lxc/cloned_container/rootfs'\n\n```", "```\nroot@ubuntu:~# ls -la /var/lib/lxc\ntotal 20\ndrwx------  5 root root 4096 Sep 20 19:51 .\ndrwxr-xr-x 47 root root 4096 Sep 16 13:40 ..\ndrwxrwx---  3 root root 4096 Sep 20 19:51 cloned_container\ndrwxrwx---  3 root root 4096 Sep 20 16:30 python_container\nroot@ubuntu:~#\n\n```", "```\nIn [38]: cloned_container.start()\nOut[38]: True\nIn [39]: cloned_container.state\nOut[39]: u'RUNNING'\n\n```", "```\nIn [40]: cloned_container.stop()\nOut[40]: True\nIn [41]: container.stop()\nOut[41]: True\n\n```", "```\nIn [42]: cloned_container.destroy()\nOut[42]: True\nIn [43]: container.destroy()\nOut[43]: True\n\n```", "```\nIn [44]: lxc.list_containers()\nOut[44]: ()\n\n```", "```\n(lxc_python) root@ubuntu:~/lxc_python# deactivate\nroot@ubuntu:~/lxc_python# cd ..\nroot@ubuntu:~#\n\n```", "```\nroot@ubuntu:~# apt-get install python-libvirt debootstrap\nroot@ubuntu:~# service libvirt-bin start\n\n```", "```\n[root@centos ~]# yum install libvirt libvirt-python debootstrap\n[root@centos ~]# service libvirtd start\n\n```", "```\nroot@ubuntu:~# debootstrap --arch=amd64 --include=\"openssh-server vim\" stable ~/container http://httpredir.debian.org/debian/ \n...\nroot@ubuntu:~#\n\n```", "```\nroot@ubuntu:~# source lxc_python/bin/activate\n(lxc_python) root@ubuntu:~# ipython\nIn [1]:\n\n```", "```\nIn [1]: import libvirt\nIn [2]: lxc_conn = libvirt.open('lxc:///')\n\n```", "```\nIn [3]: lxc_conn.getType()\nOut[3]: 'LXC'\nIn [4]: lxc_conn.getURI()\nOut[4]: 'lxc:///'\n\n```", "```\nIn [5]: lxc_conn.getInfo()\nOut[5]: ['x86_64', 1996L, 2, 3000, 1, 2, 1, 1]\n\n```", "```\nIn [6]: domain_xml = '''\n<domain type='lxc'>\n <name>libvirt_python</name>\n <memory unit='KiB'>524288</memory>\n <currentMemory unit='KiB'>524288</currentMemory>\n <vcpu placement='static'>1</vcpu>\n <os>\n <type arch='x86_64'>exe</type>\n <init>/sbin/init</init>\n </os>\n <clock offset='utc'/>\n <on_poweroff>destroy</on_poweroff>\n <on_reboot>restart</on_reboot>\n <on_crash>destroy</on_crash>\n <devices>\n <emulator>/usr/lib/libvirt/libvirt_lxc</emulator>\n <filesystem type='mount' accessmode='passthrough'>\n <sourcedir='/root/container/'/>\n <targetdir='/'/>\n </filesystem>\n <interface type='bridge'>\n <mac address='00:17:3e:9f:33:f7'/>\n <source bridge='lxcbr0'/>\n <link state='up'/>\n </interface>\n <console type='pty' />\n </devices>\n</domain>\n'''\n\n```", "```\nIn [7]: container = lxc_conn.defineXML(domain_xml)\n\n```", "```\nroot@ubuntu:~# virsh --connect lxc:/// list --all\nId    Name                           State\n----------------------------------------------------\n-     libvirt_python                 shut off\nroot@ubuntu:~#\n\n```", "```\nIn [8]: lxc_conn.listDefinedDomains()\nOut[8]: ['libvirt_python']\n\n```", "```\nIn [9]: container.create()\nOut[9]: 07\n\n```", "```\nroot@ubuntu:~# virsh --connect lxc:/// list --all\nId    Name                           State\n----------------------------------------------------\n23749 libvirt_python                 running\nroot@ubuntu:~#\n\n```", "```\nIn [10]: container.XMLDesc()\nOut[10]: \"<domain type='lxc' id='25535'>\\n  <name>libvirt_python</name>\\n  <uuid>6a46bd23-f0df-461b-85e7-19fd36be90df</uuid>\\n  <memory unit='KiB'>524288</memory>\\n  <currentMemory unit='KiB'>524288</currentMemory>\\n  <vcpu placement='static'>1</vcpu>\\n  <resource>\\n    <partition>/machine</partition>\\n  </resource>\\n  <os>\\n    <type arch='x86_64'>exe</type>\\n    <init>/sbin/init</init>\\n  </os>\\n  <clock offset='utc'/>\\n  <on_poweroff>destroy</on_poweroff>\\n  <on_reboot>restart</on_reboot>\\n  <on_crash>destroy</on_crash>\\n  <devices>\\n    <emulator>/usr/lib/libvirt/libvirt_lxc</emulator>\\n    <filesystem type='mount' accessmode='passthrough'>\\n      <source dir='/root/container/'/>\\n      <target dir='/'/>\\n    </filesystem>\\n    <interface type='bridge'>\\n      <mac address='00:17:3e:9f:33:f7'/>\\n      <source bridge='lxcbr0'/>\\n      <target dev='vnet0'/>\\n      <link state='up'/>\\n    </interface>\\n    <console type='pty' tty='/dev/pts/1'>\\n      <source path='/dev/pts/1'/>\\n      <target type='lxc' port='0'/>\\n      <alias name='console0'/>\\n    </console>\\n  </devices>\\n  <seclabel type='none'/>\\n</domain>\\n\"\n\n```", "```\nIn [11]: lxc_conn.isAlive()\nOut[11]: 1\n\n```", "```\nIn [12]: lxc_conn.listDomainsID()\nOut[12]: [23749]\n\n```", "```\nIn [13]: domains = lxc_conn.listAllDomains(0)\nIn [13]: for domain in domains:\n....:     print('  '+domain.name())\n....:\nlibvirt_python\n\n```", "```\nIn [14]: container = lxc_conn.lookupByName(\"libvirt_python\")\nIn [15]: container = lxc_conn.lookupByID(23749)\n\n```", "```\nIn [16]: container.maxMemory()\nOut[16]: 524288L\n\n```", "```\nIn [17]: container.memoryStats()\nOut[17]: {'actual': 524288L, 'rss': 1388L, 'swap_in': 1388L}\n\n```", "```\nIn [18]: container.OSType()\nOut[18]: 'exe'\n\n```", "```\nIn [19]: container.info()\nOut[19]: [1, 524288L, 1352L, 1, 8080449759L]\n\n```", "```\nIn [20]: container.isActive()\nOut[20]: 1\nIn [21]: container.name()\nOut[21]: 'libvirt_python'\n\n```", "```\nIn [22]: container.destroy()\nOut[22]: 0\n\n```", "```\nroot@ubuntu:~# virsh --connect lxc:/// list --all\nId    Name                           State\n----------------------------------------------------\n-     libvirt_python                 shut off\nroot@ubuntu:~#\n\n```", "```\nIn [23]: container.undefine()\nOut[23]: 0\nroot@ubuntu:~# virsh --connect lxc:/// list --all\nId    Name                           State\n----------------------------------------------------\nroot@ubuntu:~#\n\n```", "```\nroot@ubuntu:~# cd /usr/src/\nroot@ubuntu:/usr/src# wget https://releases.hashicorp.com/vagrant/1.8.5/vagrant_1.8.5_x86_64.deb\n--2016-09-26 21:11:56-- https://releases.hashicorp.com/vagrant/1.8.5/vagrant_1.8.5_x86_64.deb\nResolving releases.hashicorp.com (releases.hashicorp.com)... 151.101.44.69\nConnecting to releases.hashicorp.com (releases.hashicorp.com)|151.101.44.69|:443... connected.\nHTTP request sent, awaiting response... 200 OK\nLength: 76325224 (73M) [application/x-debian-package]\nSaving to: 'vagrant_1.8.5_x86_64.deb'\n100%[============================================================\n================================>] 76,325,224   104MB/s   in 0.7s\n2016-09-26 21:11:57 (104 MB/s) - 'vagrant_1.8.5_x86_64.deb' saved [76325224/76325224]\nroot@ubuntu:/usr/src#\n\n```", "```\nroot@ubuntu:/usr/src# dpkg --install vagrant_1.8.5_x86_64.deb\nSelecting previously unselected package vagrant.\n(Reading database ... 60326 files and directories currently installed.)\nPreparing to unpack vagrant_1.8.5_x86_64.deb ...\nUnpacking vagrant (1:1.8.5) ...\nSetting up vagrant (1:1.8.5) ...\nroot@ubuntu:/usr/src#\n\n```", "```\n     [root@centos ~]# cd /usr/src/\n     [root@centossrc]# wget   \n          https://releases.hashicorp.com/vagrant/1.8.5/\n          vagrant_1.8.5_x86_64.rpm\n    --2016-09-26 21:16:06-- \n          https://releases.hashicorp.com/vagrant/1.8.5/\n          vagrant_1.8.5_x86_64.rpm\n     Resolving releases.hashicorp.com (releases.hashicorp.com)...     \n          151.101.44.69\n     Connecting to releases.hashicorp.com       \n          (releases.hashicorp.com)|151.101.44.69|:443... connected.\n     HTTP request sent, awaiting response... 200 OK\n     Length: 75955433 (72M) []\n     Saving to: 'vagrant_1.8.5_x86_64.rpm'\n     100%   \n          [========================================================\n          =====================================>] \n          75,955,433  104MB/s   in 0.7s\n     2016-09-26 21:16:07 (104 MB/s) - 'vagrant_1.8.5_x86_64.rpm' saved \n          [75955433/75955433]\n     [root@centossrc]# rpm --install vagrant_1.8.5_x86_64.rpm\n\n    ```", "```\n     [root@centossrc]# brctladdbr lxcbr0\n\n    ```", "```\n     root@ubuntu:/usr/src# vagrant plugin install vagrant-lxc\n     Installing the 'vagrant-lxc' plugin. This can take a few minutes...\n     Installed the plugin 'vagrant-lxc (1.2.1)'!\n     root@ubuntu:/usr/src#\n\n    ```", "```\n     root@ubuntu:/usr/src# vagrant plugin list\n     vagrant-lxc (1.2.1)\n     vagrant-share (1.1.5, system)\n     root@ubuntu:/usr/src#\n\n    ```", "```\n     root@ubuntu:/usr/src# mkdirmy_project\n     root@ubuntu:/usr/src# cd my_project/\n\n    ```", "```\n    root@ubuntu:/usr/src/my_project# vagrant init fgrehm/precise64-lxc\n    A `Vagrantfile` has been placed in this directory. You are now\n    ready to `vagrant up` your first virtual environment! Please read\n    the comments in the Vagrantfile as well as documentation on\n    `vagrantup.com` for more information on using Vagrant.\n    root@ubuntu:/usr/src/my_project#\n\n    ```", "```\n    root@ubuntu:/usr/src/my_project# ls -alh\n    total 12K\n    drwxr-xr-x 2 root root 4.0K Sep 26 21:45 .\n    drwxr-xr-x 5 root root 4.0K Sep 26 21:18 ..\n    -rw-r--r-- 1 root root 3.0K Sep 26 21:45 Vagrantfile\n    root@ubuntu:/usr/src/my_project#\n\n    ```", "```\n     root@ubuntu:/usr/src/my_project# cat Vagrantfile | grep -v \"#\" \n          | sed '/^$/d'\n    Vagrant.configure(\"2\") do |config|\n    config.vm.box = \"fgrehm/precise64-lxc\"\n    end\n    root@ubuntu:/usr/src/my_project#\n\n    ```", "```\n    root@ubuntu:/usr/src/my_project# vagrant up --provider=lxc\n    Bringing machine 'default' up with 'lxc' provider...\n    ==>default: Importing base box 'fgrehm/precise64-lxc'...\n    ==>default: Checking if box 'fgrehm/precise64-lxc' is up to date...\n    ==>default: Setting up mount entries for shared folders...\n    default: /vagrant => /usr/src/my_project\n    ==>default: Starting container...\n    ==>default: Waiting for machine to boot. This may take a few \n          minutes...\n    default: SSH address: 10.0.3.181:22\n    default: SSH username: vagrant\n    default: SSH auth method: private key\n    default:\n    default: Vagrant insecure key detected. Vagrant will automatically \n          replace\n    default: this with a newly generated keypair for better security.\n    default:\n    default: Inserting generated public key within guest...\n    default: Removing insecure key from the guest if it's present...\n    default: Key inserted! Disconnecting and reconnecting using new SSH \n          key...\n    ==>default: Machine booted and ready!\n    root@ubuntu:/usr/src/my_project#\n\n    ```", "```\n    root@ubuntu:/usr/src/my_project# lxc-ls -f\n    NAME                      STATE   AUTOSTART GROUPS IPV4      IPV6\n    my_project_default_1474926399170_41712 RUNNING 0         -      \n          10.0.3.80 -\n    root@ubuntu:/usr/src/my_project#\n\n    ```", "```\n    root@ubuntu:/usr/src/my_project# vagrant status\n    Current machine states:\n    default                   running (lxc)\n    ...\n    root@ubuntu:/usr/src/my_project#\n\n    ```", "```\n    root@ubuntu:/usr/src/my_project# vagrant ssh\n    Welcome to Ubuntu 12.04.5 LTS (GNU/Linux 3.13.0-91-generic x86_64)\n     * Documentation:  https://help.ubuntu.com/\n    vagrant@vagrant-base-precise-amd64:~$ ps ax\n     PID TTY      STAT   TIME COMMAND\n    1 ?Ss     0:00 /sbin/init\n    194 ?        S      0:00 upstart-socket-bridge --daemon\n    2630 ?        S      0:00 upstart-udev-bridge --daemon\n    2653 ?Ss     0:00 /sbin/udevd --daemon\n    2672 ?Sl     0:00 rsyslogd -c5\n    2674 ?Ss     0:00 rpcbind -w\n    2697 ?Ss     0:00 rpc.statd -L\n    2830 ?Ss     0:00 dhclient3 -e IF_METRIC=100 -pf \n          /var/run/dhclient.eth0.pid -lf \n          /var/lib/dhcp/dhclient.eth0.leases -1 eth0\n    2852 ?Ss     0:00 /usr/sbin/sshd -D\n    2888 ?Ss     0:00 cron\n    3259 ?Ss     0:00 /sbin/getty -8 38400 tty4\n    3260 ?Ss     0:00 /sbin/getty -8 38400 tty2\n    3261 ?Ss     0:00 /sbin/getty -8 38400 tty3\n    3262 ?Ss     0:00 /sbin/getty -8 38400 console\n    3263 ?Ss     0:00 /sbin/getty -8 38400 tty1\n    3266 ?Ss     0:00 sshd: vagrant [priv]\n    3278 ?        S      0:00 sshd: vagrant@pts/9\n     3279 pts/9    Ss     0:00 -bash\n     3305 pts/9    R+     0:00ps ax\n    vagrant@vagrant-base-precise-amd64:~$ exit\n    logout\n    Connection to 10.0.3.181 closed.\n    root@ubuntu:/usr/src/my_project#\n\n    ```", "```\n    root@ubuntu:/usr/src/my_project# vagrant halt\n    ==>default: Attempting graceful shutdown of VM...\n    root@ubuntu:/usr/src/my_project#\n\n    ```", "```\n    root@ubuntu:/usr/src/my_project# vim Vagrantfile\n    Vagrant.configure(\"2\") do |config|\n    config.vm.box = \"fgrehm/trusty64-lxc\"\n    config.vm.provider :lxc do |lxc|\n    lxc.customize 'cgroup.memory.limit_in_bytes', '1024M'\n    end\n    end\n    root@ubuntu:/usr/src/my_project#\n\n    ```", "```\n    root@ubuntu:/usr/src/my_project# vagrant up --provider=lxc\n    Bringing machine 'default' up with 'lxc' provider...\n    ==>default: Setting up mount entries for shared folders...\n    default: /vagrant => /usr/src/my_project\n    ==>default: Starting container...\n    ==>default: Waiting for machine to boot. This may take a few \n          minutes...\n    default: SSH address: 10.0.3.181:22\n    default: SSH username: vagrant\n    default: SSH auth method: private key\n    ==>default: Machine booted and ready!\n    ==>default: Machine already provisioned. Run `vagrant provision` or \n          use the `--provision`\n    ==>default: flag to force provisioning. Provisioners marked to run \n          always will still run.\n    root@ubuntu:/usr/src/my_project#\n\n    ```", "```\n    root@ubuntu:/usr/src/my_project# cat /sys/fs/cgroup/memory/lxc/ \n          my_project_default_1474926399170_41712/memory.limit_in_bytes\n    1073741824\n    root@ubuntu:/usr/src/my_project#\n\n    ```", "```\n    root@ubuntu:/usr/src/my_project# vagrant destroy\n    default: Are you sure you want to destroy the 'default' VM? [y/N] y\n    ==>default: Forcing shutdown of container...\n    ==>default: Destroying VM and associated drives...\n    root@ubuntu:/usr/src/my_project# lxc-ls -f\n    NAME                    STATE   AUTOSTART GROUPS IPV4 IPV6\n    root@ubuntu:/usr/src/my_project#\n\n    ```", "```\nroot@ubuntu:~# source lxc_python/bin/activate\n(lxc_python) root@ubuntu:~# pip install bottle\nCollecting bottle\n Downloading bottle-0.12.9.tar.gz (69kB)\n 100% |████████████████████████████████| 71kB 7.1MB/s\nBuilding wheels for collected packages: bottle\n Running setup.py bdist_wheel for bottle ... done\n Stored in directory: \n/root/.cache/pip/wheels/6e/87/89/f7ddd6721f4a208d44f2dac02f281b2403a314dd735d2b0e61\nSuccessfully built bottle\nInstalling collected packages: bottle\nSuccessfully installed bottle-0.12.9\n(lxc_python) root@ubuntu:~#\n\n```", "```\n(lxc_python) root@ubuntu:~# pip freeze\nbottle==0.12.9\nlxc-python2==0.1\n(lxc_python) root@ubuntu:~#\n\n```", "```\nimport lxc\nfrom bottle import run, request, get, post\n\n@get('/list')\ndef list():\n     container_list = lxc.list_containers()\n\n     return \"List of containers: {0}\\n\".format(container_list)\nrun(host='localhost', port=8080, debug=True)\n\n```", "```\n(lxc_python) root@ubuntu:~# python lxc_api.py\nBottle v0.12.9 server starting up (using WSGIRefServer())...\nListening on http://localhost:8080/\nHit Ctrl+C to quit. \n\n```", "```\nroot@ubuntu:~# curl localhost:8080/list\nList of containers: ()\nroot@ubuntu:~#\n\n```", "```\n@post('/build')\ndef build():\n     name = request.headers.get('X-LXC-Name')\n     template = str(request.headers.get('X-LXC-Template'))\n\n     container = lxc.Container(name)\n     container.create(template)\n     return \"Building container {0} using the {1} template\\n\".format(\n    name, template)\n\n```", "```\nroot@ubuntu:~# curl -XPOST --header \"X-LXC-Name: api_container\" --header \"X-LXC-  \nTemplate: ubuntu\" localhost:8080/build \nBuilding container api_container using the ubuntu template\nroot@ubuntu:~#\n\n```", "```\nBottle v0.12.9 server starting up (using WSGIRefServer())...\nListening on http://localhost:8080/\nHit Ctrl-C to quit.\nCopying rootfs to /var/lib/lxc/api_container/rootfs ...\nGenerating locales...\nen_US.UTF-8... up-to-date\nGeneration complete.\nCreating SSH2 RSA key; this may take some time ...\nCreating SSH2 DSA key; this may take some time ...\nCreating SSH2 ECDSA key; this may take some time ...\nCreating SSH2 ED25519 key; this may take some time ...\nupdate-rc.d: warning: default stop runlevel arguments (0 1 6) do not match ssh  \nDefault-Stop values (none)\ninvoke-rc.d: policy-rc.d denied execution of start.\n...\n127.0.0.1 - - [06/Oct/2016 21:36:10] \"POST /build HTTP/1.1\" 200 59\n\n```", "```\nroot@ubuntu:~# curl localhost:8080/list\nList of containers: (u'api_container',)\nroot@ubuntu:~#\n\n```", "```\n@post('/container/<name>/start')\ndef container_start(name):\n     container = lxc.Container(name)\n     container.start(useinit = False, daemonize = True)\n\n     return \"Starting container {0}\\n\".format(name)\n\n```", "```\nroot@ubuntu:~# curl -XPOST localhost:8080/container/api_container/start\nStarting container api_container\nroot@ubuntu:~#\n\n```", "```\nroot@ubuntu:~# lxc-ls -f\nNAME          STATE   AUTOSTART GROUPS IPV4       IPV6\napi_container RUNNING 0         -      10.0.3.198 -\nroot@ubuntu:~#\n\n```", "```\n@get('/container/<name>/state')\ndef container_status(name):\n     container = lxc.Container(name)\n     state = container.state\n\n     return \"The state of container {0} is {1}\\n\".format(name, state)\n\n```", "```\nroot@ubuntu:~# curl localhost:8080/container/api_container/state\nThe state of container api_container is RUNNING\nroot@ubuntu:~#\n\n```", "```\n@get('/container/<name>/ips')\ndef container_status(name):\n     container = lxc.Container(name)\n     ip_list = container.get_ips()\n     return \"Container {0} has the following IP's {1}\\n\".format(\n     name, ip_list)\n\n```", "```\nroot@ubuntu:~# curl localhost:8080/container/api_container/ips\nContainer api_container has the following IP's (u'10.0.3.198',)\nroot@ubuntu:~#\n\n```", "```\n@post('/container/<name>/freeze')\ndef container_start(name):\n     container = lxc.Container(name)\n     container.freeze()\n     return \"Freezing container {0}\\n\".format(name)\n\n@post('/container/<name>/unfreeze')\ndef container_start(name):\n     container = lxc.Container(name)\n     container.unfreeze()\n     return \"Unfreezing container {0}\\n\".format(name)\n\n```", "```\nroot@ubuntu:~# curl -XPOST localhost:8080/container/api_container/freeze\nFreezing container api_container\nroot@ubuntu:~# curl localhost:8080/container/api_container/state\nThe state of container api_container is FROZEN\nroot@ubuntu:~# lxc-ls -f\nNAME          STATE  AUTOSTART GROUPS IPV4       IPV6\napi_container FROZEN 0         -      10.0.3.198 -\nroot@ubuntu:~#\n\n```", "```\nroot@ubuntu:~# curl -XPOST localhost:8080/container/api_container/unfreeze\nUnfreezing container api_container\nroot@ubuntu:~# curl localhost:8080/container/api_container/state\nThe state of container api_container is RUNNING\nroot@ubuntu:~# lxc-ls -f\nNAME          STATE   AUTOSTART GROUPS IPV4       IPV6\napi_container RUNNING 0         -      10.0.3.198 -\nroot@ubuntu:~#\n\n```", "```\n@post('/container/<name>/stop')\ndef container_start(name):\n     container = lxc.Container(name)\n     container.stop()\n\n     return \"Stopping container {0}\\n\".format(name)\n\n@post('/container/<name>/destroy')\ndef container_start(name):\n     container = lxc.Container(name)\n     container.destroy() \n\n     return \"Destroying container {0}\\n\".format(name)\n\n```", "```\nroot@ubuntu:~# curl -XPOST localhost:8080/container/api_container/stop\nStopping container api_container \nroot@ubuntu:~# curl localhost:8080/container/api_container/state\nThe state of container api_container is STOPPED\nroot@ubuntu:~#\n\n```", "```\n127.0.0.1 - - [06/Oct/2016 22:00:08] \"GET /container/api_container/state HTTP/1.1\" 200 48\n127.0.0.1 - - [06/Oct/2016 22:02:45] \"GET /container/api_container/ips HTTP/1.1\" 200 64\n127.0.0.1 - - [06/Oct/2016 22:08:14] \"POST /container/api_container/freeze HTTP/1.1\" 200 33\n127.0.0.1 - - [06/Oct/2016 22:08:19] \"GET /container/api_container/state HTTP/1.1\" 200 47\n127.0.0.1 - - [06/Oct/2016 22:08:30] \"POST /container/api_container/unfreeze HTTP/1.1\" 200 35\n127.0.0.1 - - [06/Oct/2016 22:08:32] \"GET /container/api_container/state HTTP/1.1\" 200 48\n127.0.0.1 - - [06/Oct/2016 22:18:39] \"POST /container/api_container/stop HTTP/1.1\" 200 33\n127.0.0.1 - - [06/Oct/2016 22:18:41] \"GET /container/api_container/state HTTP/1.1\" 200 48\n\n```", "```\nroot@ubuntu:~# curl -XPOST localhost:8080/container/api_container/destroy\nDestroying container api_container\nroot@ubuntu:~# lxc-ls -f\nroot@ubuntu:~#\n\n```", "```\nimport lxc\nfrom bottle import run, request, get, post\n@post('/build')\ndef build():\n name = request.headers.get('X-LXC-Name')\n memory = request.headers.get('X-LXC-Memory')\n template = str(request.headers.get('X-LXC-Template'))\n\n container = lxc.Container(name)\n container.create(template)\n\n return \"Building container {0} using the {1} template\\n\".format(\n    name, template)\n\n@post('/container/<name>/start')\ndef container_start(name):\n container = lxc.Container(name)\n container.start(useinit=False, daemonize=True)\n\n return \"Starting container {0}\\n\".format(name)\n\n@post('/container/<name>/stop')\ndef container_start(name):\n container = lxc.Container(name)\n container.stop()\n\n return \"Stopping container {0}\\n\".format(name)\n\n@post('/container/<name>/destroy')\ndef container_start(name):\n container = lxc.Container(name)\n container.destroy()\n\n return \"Destroying container {0}\\n\".format(name)\n\n@post('/container/<name>/freeze')\ndef container_start(name):\n container = lxc.Container(name)\n container.freeze()\n\n return \"Freezing container {0}\\n\".format(name)\n\n@post('/container/<name>/unfreeze')\ndef container_start(name):\n container = lxc.Container(name)\n container.unfreeze()\n\n return \"Unfreezing container {0}\\n\".format(name)\n\n@get('/container/<name>/state')\ndef container_status(name):\n container = lxc.Container(name)\n state = container.state\n\nreturn \"The state of container {0} is {1}\\n\".format(name, state)\n\n@get('/container/<name>/ips')\ndef container_status(name):\n container = lxc.Container(name)\n ip_list = container.get_ips()\n\nreturn \"Container {0} has the following IP's {1}\\n\".format(\n    name, ip_list)\n\n @get('/list')\ndef list():\n container_list = lxc.list_containers()\n\n return \"List of containers: {0}\\n\".format(container_list)\n\nrun(host='localhost', port=8080, debug=True)\n\n```"]