- en: Using CloudWatch Logs
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Docker containers generate logs, and Docker supports the `docker logs` and `docker
    service logs` commands to list logs. Docker also supports logging drivers, which
    are logging mechanisms to get logs generated by running containers and services.
  prefs: []
  type: TYPE_NORMAL
- en: '**Problem****:** Without a managed service, such as Amazon ECS, a logging driver
    must be configured if a logging mechanism is to be added.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Solution****:** With the Fargate launch type, logging is greatly simplified
    and the only supported logging driver is `awslogs`. The `awslogs` logging driver
    streams logs generated by ECS tasks to CloudWatch Logs. Using `aws-logs-prefix`,
    a label may be associated with the `awslogs` driver to differentiate between the
    log streams generated by the different tasks containers.'
  prefs: []
  type: TYPE_NORMAL
- en: 'In this chapter, we will learn about the following:'
  prefs: []
  type: TYPE_NORMAL
- en: Overview of CloudWatch Logs and aws log driver
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Creating an ECS service for a MySQL database
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Configuring a Container definition
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Configuring logging
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Configuring a Task definition
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Configuring a service
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Configuring a cluster
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Creating an ECS service
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Exploring Task Logs
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Exploring CloudWatch Logs
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Exploring CloudWatch metrics
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The only prerequisite is an AWS account.
  prefs: []
  type: TYPE_NORMAL
- en: Overview of CloudWatch Logs and aws log driver
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Amazon CloudWatch is an AWS service for monitoring logs from AWS resources,
    including Amazon ECS, EC2, EBS volumes, Elastic Load Balancers, and RDS. Metrics
    for CPU utilization, memory utilization, latency, and request counts are streamed
    in near-real time from these resources to CloudWatch. Some CloudWatch terms and
    concepts are discussed in the following table:'
  prefs: []
  type: TYPE_NORMAL
- en: '| **CloudWatch concept** | **Description** |'
  prefs: []
  type: TYPE_TB
- en: '| Log event | A `log event`, which includes a log message and a timestamp,
    is a record of some event/activity on a resource or application. |'
  prefs: []
  type: TYPE_TB
- en: '| Log stream | A `log stream` is a continuous sequence of log events from the
    same resource or application. |'
  prefs: []
  type: TYPE_TB
- en: '| Log group | A `log group` is a group of log streams that share the same retention,
    monitoring, and access control settings. Each log stream is associated with a
    single log group, and the log streams in a log group do not have to originate
    from the same resource or application. More often, the log streams originate from
    different resources or applications, and the log group aggregates similar monitoring
    data. |'
  prefs: []
  type: TYPE_TB
- en: '| Metric filter | Metric filters filter metric observations from events to
    generate data points for a CloudWatch metric. |'
  prefs: []
  type: TYPE_TB
- en: '| Retention settings | Retention settings indicate the duration for which the
    log events are to be kept. |'
  prefs: []
  type: TYPE_TB
- en: 'The `awslogs` log driver is the only log driver supported with the Fargate
    launch type. The `awslogs` log driver supports the options discussed in the following
    table. The `awslogs` log driver supports other options in addition to those discussed
    in the table, but ECS only supports these options:'
  prefs: []
  type: TYPE_NORMAL
- en: '| **Option** | **Description** | **Required** |'
  prefs: []
  type: TYPE_TB
- en: '| `awslogs-region` | Specifies the Amazon region to which CloudWatch logs are
    sent. | Yes |'
  prefs: []
  type: TYPE_TB
- en: '| `awslogs-group` | Specifies the log group to which the log streams are to
    send their logs. | Yes |'
  prefs: []
  type: TYPE_TB
- en: '| `awslogs-stream-prefix` | Specifies a prefix that is to be associated with
    a log stream. Log streams generated with the Fargate launch type have the following
    format: `prefix-name/container-name/ecs-task-Id`. | Yes, for Fargate launch type
    |'
  prefs: []
  type: TYPE_TB
- en: Creating an ECS service for MySQL database
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this section, we shall create an ECS definition for a MySQL database to demonstrate
    logging. Any Docker image could be used; the MySQL database image was chosen because
    several log events are generated when MySQL database is inited, installed, and
    configured. Another Docker image, such as `tutum/hello-world`, does not generate
    very many log events.
  prefs: []
  type: TYPE_NORMAL
- en: Open [URL](https://aws.amazon.com/ecs/) in a browser and click on Get started
    with Amazon ECS. The ECS console starts up.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on Get started to start the wizard to create new container and task definitions,
    and a new service. By default, the ECS wizard is based on the Fargate launch type.
    The diagram of ECS objects is displayed.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The ECS objects are discussed in [Chapter 1](c1c9718a-58b6-41b1-a9f3-0c3e5cb9d5c4.xhtml),
    *Getting Started with Amazon ECS and Amazon Fargate*.
  prefs: []
  type: TYPE_NORMAL
- en: Configuring a Container definition
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In this section, we shall discuss creating a container definition for a MySQL
    database:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Click on Configure for the Custom Container definition, as shown in the following
    screenshot. Some other container definitions are available as examples:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/d7f7fc78-e1a1-4fbd-96dc-ce7e7e5a26bc.png)'
  prefs: []
  type: TYPE_IMG
- en: In the Edit container dialog, specify a Container name (`mysql`) and specify
    Image as `mysql`, as shown in the following screenshot.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Specify a Soft limit (`512`) and a Hard limit (`1024`) for memory. The hard
    limit for memory must not be less than the soft limit:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/817966e3-c42a-40fd-acb2-4d7e9ddc500e.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Specify the Container port as `3306` in Port Mappings, with the Protocol as
    tcp, as shown in the following screenshot. With the Fargate launch type, only
    container port mappings may be configured. Host port mappings are not valid, and
    are set to the same value as the container port mappings:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/50866010-10d0-454a-a7fe-0492403afaca.png)'
  prefs: []
  type: TYPE_IMG
- en: In the Advanced container configuration | ENVIRONMENT section, specify the mandatory
    environment variable for the mysql Docker image. The mandatory environment variable
    is `MYSQL_ROOT_PASSWORD` and sets the password for the `root` user, as shown in
    the following screenshot. Optionally, specify other environment variables such
    as `MYSQL_DATABASE` for the database to create.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'The Essential checkbox indicates whether a container is essential to the running
    of a task. If the Essential checkbox is selected, the container is essential,
    and if the container fails, the task fails too. At least one container in a task
    definition must be set as Essential. As the mysql container is the only container,
    it must be set to Essential:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/fd20d1bd-e54e-470c-80ff-44b1dd1b0712.png)'
  prefs: []
  type: TYPE_IMG
- en: Configuring logging
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Scroll to the STORAGE AND LOGGING section in the Edit container dialog, as
    shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: 'To configure logging automatically, click the Auto-configure CloudWatch Logs checkbox.
    The Fargate launch type only supports the `awslogs` log driver:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/c9088591-3d05-401e-971b-5854fabf872b.png)'
  prefs: []
  type: TYPE_IMG
- en: 'All the log options discussed in the earlier table are mandatory for the Fargate
    launch type, and the default value for each gets set. The `awslogs-group` option
    is set to a value of `/ecs/<task definition name>`. If the task definition name
    is modified after configuring the logging, the `awslogs-group` also gets updated.
    Click on Update to complete the container configuration:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/9c541c20-a98d-40e2-9e69-645e20826df2.png)'
  prefs: []
  type: TYPE_IMG
- en: 'The `logConfiguration` parameters added for the logging configuration are as
    follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: A container definition, mysql, for the MySQL database gets created as shown
    in next illustration.
  prefs: []
  type: TYPE_NORMAL
- en: Configuring a Task definition
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The default Task definition settings are listed. Some of the Task definition
    settings are modifiable, while others are not. Network mode is not modifiable,
    and must be awsvpc. Compatibilities is also not modifiable, and must be set to
    FARGATE. Modifying the task definition is optional:'
  prefs: []
  type: TYPE_NORMAL
- en: 'To modify a task definition, click on Task definition | Edit, as shown in the
    following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/577d1f66-2093-4655-89a3-cadf730c7cce.png)'
  prefs: []
  type: TYPE_IMG
- en: In the Configure task definition dialog, set the Task definition name (`mysql-task-definition`)
    as shown in the following screenshot.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Network mode is not modifiable for the Fargate launch type and must be awsvpc.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select Task execution role as ecsTaskExecutionRole. The ecsTaskExecutionRole
    grants permissions to make calls to CloudWatch to send container logs.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Compatibilities is preset to FARGATE, and is not modifiable either.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Set the Task size, which allocates the selected task memory and CPU to the task.
    Only specific combinations of Task memory and Task CPU may be selected.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Click on Save to complete the task definition configuration:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/fc4711da-5ea9-436d-9569-170e69572452.png)'
  prefs: []
  type: TYPE_IMG
- en: 'The task configuration gets saved. `awslogs-group` gets updated to `/ecs/ mysql-task-definition`.
    Click on Next in the Get Started wizard, as shown in the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/c8e175d5-f134-4217-9cd4-4d7694169a4b.png)'
  prefs: []
  type: TYPE_IMG
- en: Configuring a service
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Having configured the Container definition and task definition, it''s time
    to configure the service next. The Service name (`mysql-service`), Number of desired
    tasks (1 by default), Security group (Automatically create new), and Load balancer
    type (None) may be modified if required with Edit. We shall use the default settings
    for the service to demonstrate logging with Fargate. Click on Next, as shown in
    the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/5260c23e-459f-4e17-8519-d67f78aad3d0.png)'
  prefs: []
  type: TYPE_IMG
- en: Configuring a cluster
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Next, configure the cluster. The default cluster is specified in Cluster name
    by default:'
  prefs: []
  type: TYPE_NORMAL
- en: Specify a different Cluster name (`mysql`).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The default settings for VPC ID and Subnets are to create new. Click on Next:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](img/37fccb93-1d0f-4af8-9986-e669b9d92ee3.png)'
  prefs: []
  type: TYPE_IMG
- en: Creating an ECS service
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Review the settings for the Container definition, Task definition, and Service.
    The Edit button is provided to edit any of these ECS objects:'
  prefs: []
  type: TYPE_NORMAL
- en: 'To create the ECS with the Fargate launch type, click on Create in Review,
    as shown in the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/c02f12fa-d318-4de4-8923-c87d221ede45.png)'
  prefs: []
  type: TYPE_IMG
- en: 'The ECS resources start to get created, as shown in Launch Status in the following
    screenshot. Some of the resources are shown as pending, while others are shown
    as complete. When all the ECS resources have been created, as indicated by the complete status, click
    on View service:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/f0ef1b5f-ebda-4bea-b7ee-b444892d1a73.png)'
  prefs: []
  type: TYPE_IMG
- en: 'An ECS `mysql-service` gets created in the `mysql` cluster, as listed in the
    Services tab of the mysql, cluster as shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/1108b988-4660-4714-a025-681c2e2d5506.png)'
  prefs: []
  type: TYPE_IMG
- en: 'The Task tab lists the tasks in the service, as shown in the following screenshot. Click
    on the task link to list the details of the task:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/23647ff1-af90-4990-b339-ef2bf6e6f0a0.png)'
  prefs: []
  type: TYPE_IMG
- en: 'The task details get displayed, including the ENI Id link shown in the following
    screenshot, in order to obtain details about the ENI. The Public IP and Private
    IP for the task definition are also listed:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/0860704c-8750-4a5f-a802-415907de12d4.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Click on Task Definitions in the margin navigation to list the task definition,
    including revision, in Task Definition Name: Revision format, as shown in the
    following screenshot. Other task definitions may also be listed. The task definition
    Status is listed as Active, which indicates the task definition is active and
    may be used in a service to run tasks:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/6576fc59-21d6-4ff3-8f0e-49c3bccfe339.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Click on the task definition link to list the task definition''s revisions,
    as shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/149d1026-c046-426d-a331-0f4f5a23131d.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Click on the task definition revision link to display the Builder and JSON
    format tabs, as shown in the following screenshot. To create a new revision of
    the task definition, click on Create new revision. We have not used a new revision,
    but a new revision creates a new set of tasks, based on a revised task definition:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/e99674f5-7e06-491a-b26a-481e240d75b9.png)'
  prefs: []
  type: TYPE_IMG
- en: 'The mysql container is listed in the Container Definitions section. The Container
    Definitions table lists the Container Name, Docker Image, CPU Units, Hard/Soft
    memory limits, and whether the container is Essential. Click on the mysql container
    to display its details, including Log Configuration, as shown in the following
    screenshot. The detailed configuration includes Port Mappings and Environment
    Variables:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/db689b3a-0fd5-437e-a2b9-75054235b3a9.png)'
  prefs: []
  type: TYPE_IMG
- en: 'The mysql cluster is listed in clusters, as shown in the following screenshot.
    The number of Services and the number of Running tasks and Pending tasks are also
    listed. Only the FARGATE launch type lists services and tasks, and not the EC2
    launch type:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/93a0a387-d5dd-4f05-820c-5a91d2d67701.png)'
  prefs: []
  type: TYPE_IMG
- en: Exploring Task logs
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Task log events are generally used for debugging a task or a service, and to
    find out whether a task started without any errors. The log events generated by
    a task are displayed by selecting the Logs tab in the task details, shown in the
    following screenshot. Each log entry includes a Timestamp and a log Message. An
    example of debugging a task is indicated by a MySQL init process failed message:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/4bed299f-15ea-4e55-8158-72ca8de93b7b.png)'
  prefs: []
  type: TYPE_IMG
- en: 'A task could fail for several reasons, and some of the common reasons are:'
  prefs: []
  type: TYPE_NORMAL
- en: Task is out of memory
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mandatory environment variables have not been set
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Insufficient CPU allocated to the container or task
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'An example log entry in which a MySQL database is indicated to be running and
    accepting connections is mysqld: ready for connections, as shown in the following
    screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/61e75d0b-d833-4df4-9d1d-45e9a71ca75b.png)'
  prefs: []
  type: TYPE_IMG
- en: Exploring CloudWatch Logs
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In this section, we shall find details about the CloudWatch logs generated
    and display the log streams generated:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Click on Logs in the CloudWatch Console, as shown in the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/2008b2a3-61dc-4b9c-acc1-c49764498906.png)'
  prefs: []
  type: TYPE_IMG
- en: 'In Filter, specify `/ecs/mysql` or just `/ecs`, which is the value of the `awslogs-stream-prefix`
    option for the `awslogs` log driver, as configured in the container definition
    in the *Configuring logging* section. The log group   `/ecs/mysql-task-definition`
    is displayed, as shown in the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/1e2c6933-fcb2-415b-b924-509f0691b78b.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Click on the log group to display the log streams, as shown in the following
    screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/7322c545-0464-4885-8d91-4ae554b83583.png)'
  prefs: []
  type: TYPE_IMG
- en: 'The log events in the log stream get displayed. Each log event is associated
    with a timestamp and a log message. An example log message is Initializing database,
    as shown in the following screenshot. Some of the messages have [Warning] associated
    with them:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/8d9cd791-977b-4309-8d23-03cf71408ac4.png)'
  prefs: []
  type: TYPE_IMG
- en: 'A CloudWatch log message indicating the MySQL database is running and accepting
    connections is the message mysqld: ready for connections, as shown in the following
    screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/7742ebb7-3115-4cda-9ee0-ee49aaa8d963.png)'
  prefs: []
  type: TYPE_IMG
- en: Exploring CloudWatch metrics
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In this section, we shall display the metrics:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Click on Metrics in the navigation, as shown in the following screenshot. Filter
    metrics for the mysql service with All | ECS ClusterName | ServiceNameSelect to
    display all metrics, which include MemoryUtilization and CPUUtilization metrics:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/16fd8abf-add9-4386-b72a-eb15a16f800d.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Not all metrics may be graphed, although the MemoryUtilization and CPUUtilization
    metrics generated by a task are graphed. Select the Graphed metrics tab to display
    only the graphed metrics:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/89c6c8a8-632f-4ece-95c8-5a7707d1ca99.png)'
  prefs: []
  type: TYPE_IMG
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In this chapter, we discussed configuring an ECS container for logging. We
    demonstrated CloudWatch Logs using an ECS service for a MySQL database. The only
    supported log driver for the Fargate launch type is the awslogs driver. Three
    log driver options must be configured with the Fargate launch type: `awslogs-region`,
    `awslogs-stream-prefix`, and `awslogs-group`. In the next chapter, we shall discuss
    auto scaling with Fargate.'
  prefs: []
  type: TYPE_NORMAL
