- en: Azure Information Protection Development
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This chapter is a good starting point for anyone who wants to dive deeper into
    the Azure Information Protection technology to get more information for troubleshooting
    or supporting a solution. This chapter will also help you write an application
    to help your customers to fulfill your organization's needs. Using the development
    resources of Azure Information Protection will give you more in-depth knowledge
    about this technology.
  prefs: []
  type: TYPE_NORMAL
- en: In this chapter, we'll provide you with an overview of the different development
    resources to help you start your journey into the different Azure Information
    Protection development options. We'll offer you the starters to prepare your development
    environment and give you some examples so you can start analyzing this excellent
    service. You'll get information about the Microsoft Information Protection SDK,
    the use of PowerShell, and the other SDKs that are available to help you begin
    your journey.
  prefs: []
  type: TYPE_NORMAL
- en: 'This chapter is organized into the following sections:'
  prefs: []
  type: TYPE_NORMAL
- en: Microsoft Information Protection solutions
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Understanding the Microsoft Information Protection SDK
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Preparing your Azure AD environment for tests
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Using MIP binaries to explore functionality
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Using PowerShell with Azure Information Protection
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Overview of the RMS 2.1 and 4.2 SDKs
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Lets look at the technical requirements you need to start developing on our
    lab environment.
  prefs: []
  type: TYPE_NORMAL
- en: Technical requirements
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, you can use the **YD1APP01** server, on which Visual Studio
    2017 is already installed in [Chapter 7](468509fa-856c-411d-abdb-e9a39c266750.xhtml),
    *Deploying Solutions on Azure AD and ADFS*. Additionally, you need to install
    the Information Protection SDK 2.1 from [https://bit.ly/298QzMn](https://bit.ly/298QzMn)
    to run any development. Also, download the examples from [https://bit.ly/2CBVvoE](https://bit.ly/2RHCjjO),
    [https://bit.ly/2RHCjjO,](https://bit.ly/2RHCjjO)and [https://bit.ly/2HtYKEj](https://bit.ly/2HtYKEj)
    to the server in your Visual Studio project directory, such as `C:\Users\cloudadmin.INOVITDEMOS\Documents\Visual
    Studio 2017\Projects>`, which you can use to experiment with the framework.
  prefs: []
  type: TYPE_NORMAL
- en: In the next section, we'll dive into the Microsoft Information Protection solutions
    to get the knowledge about all the related technologies.
  prefs: []
  type: TYPE_NORMAL
- en: Microsoft Information Protection solutions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Azure Information Protection itself is built to classify, label, and protect
    files in Office 365 and many other applications. The following list shows the
    different solution components and their relation to Azure Information Protection:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Microsoft Cloud App Security**: For protecting cloud applications with direct
    integration of Azure Information Protection.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Conditional Access**: To control access to sensitive information where no
    direct integration into Azure Information Protection is required.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**SharePoint**: To deliver RMS-protected libraries and groups to provide access
    control.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Office 365 Message encryption**: To send encrypted emails inside or outside
    your organization with a direct integration into Azure Information Protection.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Office 365 Data Loss Prevention**: Is built to prevent data loss over Exchange
    and SharePoint Online, including OneDrive for Business with a direct integration into
    Azure Information Protection.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Office 365 Advanced Data Governance**: Provides the retention and deletion
    policies for sensitive information with a direct integration into Azure Information
    Protection.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Azure Security Center Information Protection**: Assigns classification of
    structured data, such as Azure SQL or SQL servers, including other Azure repositories
    with no direct integration into Azure Information Protection.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Windows Information Protection**: Is built to separate the private and business
    context on a mobile phone or PC.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Office Apps**: Used to protect sensitive information in Excel, PowerPoint,
    Word, and Outlook with an indirect integration into Azure Information Protection.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Adobe PDFs**: Azure Information Protection delivers the native support to
    label and protect Adobe PDF''s.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Overall, Microsoft provides Microsoft SDKs to help developers to work on solutions
    for traditional on-premises infrastructure, cloud platforms, and modern applications
    on mobile devices. Lets understand more about it.
  prefs: []
  type: TYPE_NORMAL
- en: Understanding the Microsoft Information Protection SDK
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The Microsoft Information Protection SDK extends labeling and protection functionality
    so you can provide a consistent experience in cross-platform scenarios, and it
    provides a comprehensive set of capabilities. With the SDK, you can extend the
    classification, labeling, and protection to any other app and service. In general,
    Microsoft Information Protection solutions are compatible with traditional Active
    Directory RMS infrastructures. You experienced this with the **Hold Your Own Key**
    (**HYOK**) functionality.
  prefs: []
  type: TYPE_NORMAL
- en: 'The Microsoft Information Protection SDK is available on the following:'
  prefs: []
  type: TYPE_NORMAL
- en: macOS, Linux, and Windows
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A preview for Android, IOS, and other platforms
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The SDK supports user and service applications, including support for multi-tenancy. User
    applications include common authoring tools, such as Office and Adobe. Labeling
    structured data is also supported. Service applications mostly run in the background,
    such as DLP, **cloud access security brokers** (**CASBs**), and eDiscovery features.
    These applications authenticate using OAuth.
  prefs: []
  type: TYPE_NORMAL
- en: 'In detail, the APIs provide the following capabilities:'
  prefs: []
  type: TYPE_NORMAL
- en: '| **API** | **Functionality** | **Use cases** |'
  prefs: []
  type: TYPE_TB
- en: '| **Protection** |'
  prefs: []
  type: TYPE_TB
- en: Accepts plaintext content and returns a publishing license
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Allows ciphertext and publishing licenses
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Returns plaintext
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Rights enforcement if needed
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: Encryption of any data
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: No key exchange management required
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: For example, security software that needs to inspect data in transit
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: '| **Policy** |'
  prefs: []
  type: TYPE_TB
- en: Computes actions that policy should take
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Submission enablement for events in the audit pipeline
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Application of label metadata if needed
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: CAD and CAM applications for classifying parts or components
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: DLP platforms for reading labels and monitoring your services or networks
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: '| **File** |'
  prefs: []
  type: TYPE_TB
- en: Support for well-known file types
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Allows read, write, or delete labels
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Enables protection removal
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Applies metadata provided by the API
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: Word, Excel, PowerPoint, or others
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Scanners that need to label files
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: In the next section, we'll provide a sample app, `MipSdk-FileApi-Cpp-Sample-Basic`,
    from Microsoft and help you to start using the SDK and explore the different functionalities.
  prefs: []
  type: TYPE_NORMAL
- en: Preparing your Azure AD environment for tests
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In this section, we''ll adjust our Azure AD environment to run code from the
    Microsoft Information Protection SDK against our Azure Information Protection
    infrastructure. As usual, it starts with the creation of an Azure AD app:'
  prefs: []
  type: TYPE_NORMAL
- en: Log in with global administrator credentials to the Azure portal at [https://portal.azure.com](https://portal.azure.com).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Navigate to the Azure AD blade.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click App registrations to create a new application.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click New Applications registration.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Use the following settings:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/f51dc959-9c84-4f10-9897-e18a15153d4c.png)'
  prefs: []
  type: TYPE_IMG
- en: Example app properties
  prefs: []
  type: TYPE_NORMAL
- en: 'Click the Settings button on the registered application:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/702a42b2-68ef-4aae-b8d0-a57df94fff22.png)'
  prefs: []
  type: TYPE_IMG
- en: App Settings option
  prefs: []
  type: TYPE_NORMAL
- en: Click the Required permissions section for API access.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Click Add:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/bd12866c-c9f6-46a6-ab98-4f7c4f9d6cfd.png)'
  prefs: []
  type: TYPE_IMG
- en: Required permissions configuration
  prefs: []
  type: TYPE_NORMAL
- en: Click Select an API. If needed, use the search field to find Microsoft Rights
    Management Services.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Select the Microsoft Rights Management Services API:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/575c4cf6-ea03-4c9f-90a9-76b8546c5c14.png)'
  prefs: []
  type: TYPE_IMG
- en: Choosing the Microsoft RMS API
  prefs: []
  type: TYPE_NORMAL
- en: Under the Select permissions section, use the Create and access protected content
    for users permission under the DELEGATED PERMISSIONS options.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Click Select and Done:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/51bfae5b-3f26-4a56-9d48-852db417fc99.png)'
  prefs: []
  type: TYPE_IMG
- en: Permission scoping
  prefs: []
  type: TYPE_NORMAL
- en: Click the Add button.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click the Select an API option to choose the correct API.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Search the Microsoft Information Protection Sync Service and select the service:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/9d316de6-707e-441a-b834-648d31d9f8b2.png)'
  prefs: []
  type: TYPE_IMG
- en: Select the Microsoft Information Protection Sync Service API
  prefs: []
  type: TYPE_NORMAL
- en: Under the Select permissions option, select Read all unified policies a user
    has access to. under DELEGATED PERMISSIONS.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Click Select and then press Done:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/a2817c4f-78c8-4236-9a1e-d71694c09e76.png)'
  prefs: []
  type: TYPE_IMG
- en: Delegated permission configuration
  prefs: []
  type: TYPE_NORMAL
- en: 'In the Required permissions blade, click the Grant permissions button and confirm
    the dialog:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/b9458139-9edb-478b-8837-67c1699032e5.png)'
  prefs: []
  type: TYPE_IMG
- en: Permission granting procedure
  prefs: []
  type: TYPE_NORMAL
- en: 'Copy the application ID in line `57` of the `main.cpp` file, and your test
    user into line `64`, to configure the application:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/8cffd10a-a0d7-49ec-873f-072500b294d2.png)'
  prefs: []
  type: TYPE_IMG
- en: Modification of the example app
  prefs: []
  type: TYPE_NORMAL
- en: Now that we have prepared our Azure AD environment, you can start exploring
    the code samples.
  prefs: []
  type: TYPE_NORMAL
- en: 'Open the `MipSdk-FileApi-Cpp-Sample-Basic.vcxproj` file with Visual Studio
    and start with the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Copy the label ID to the clipboard or Notepad.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Paste the label into the input prompt.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The application asks for the path to a file. Enter the path to your specific
    Office document.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The application will display the name of the currently applied label.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Open the file in a viewer that supports the labeling or protection feature.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Next, we will explore the functionality of the Microsoft Information Protection
    (MIP) binaries to see the broad functionality that you can include in the development
    of your solution.
  prefs: []
  type: TYPE_NORMAL
- en: Using MIP binaries to explore functionality
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: With the Microsoft Information protection binary from the SDK, we can explore
    the new functionalities of Microsoft's unified Information Protection solution.
    The binaries deliver all the examples needed to start using the different functions
    like gathering the actual status of a file, classifying and protecting a file,
    and bulk decrypting files. In the following section, we will focus on the file_example.exe
    binary which delivers all this basic functionality. This example will give you
    ideas for developing own applications that use the SDK and the Information protection
    functions.
  prefs: []
  type: TYPE_NORMAL
- en: 'We downloaded the MIP binaries to explore features. You can use the following
    steps to get more insight into features:'
  prefs: []
  type: TYPE_NORMAL
- en: Open PowerShell and navigate to the sample files.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Execute the `.\file_sample.exe` binary to view the functionality you can test:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/31602700-832a-47f2-b1a6-57666e82bd41.png)'
  prefs: []
  type: TYPE_IMG
- en: Application command-line options
  prefs: []
  type: TYPE_NORMAL
- en: 'With this binary, you can start with the following commands:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Get a list of labels:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'Set a label:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Read a label:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: After working with the MIP file_sample.exe example, we will introduce you the
    several capabilities of PowerShell to administer and develop your own solution.
    The functionality is similar to the binaries, but maybe easier to understand for
    an administrator or PowerShell experienced person.
  prefs: []
  type: TYPE_NORMAL
- en: Using PowerShell with Azure Information Protection
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'PowerShell provides you managing capabilities for Azure Information Protection.
    In special, to handle custom classification and protection solutions you need
    to be able to use PowerShell to solve your challenges like, labeling and protecting
    files on a file share or single computer. With the following cmdlets you have
    the basic toolset to do the most administrative tasks with PowerShell. We used
    the cmdlets for example for providing a monitoring solution of a single folder
    and labeling and encrypting the files in the folder based on keywords. With the
    following commands, you can start to explore more about Azure Information Protection''s
    capabilities and technology:'
  prefs: []
  type: TYPE_NORMAL
- en: '`Import-Module AzureInformationProtection`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Get-AIPFileStatus`: Used to identify all files with a specific label'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Set-AIPFileClassification:` Used to inspect file contents and automatically
    label unlabeled files'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Set-AIPFileLabel`: Used to apply a specified label'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Set-AIPAuthentication`: Used to label files non-interactively (scripting/scheduler)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Next, we will see some useful PowerShell cmdlets to administrator Azure RMS.
  prefs: []
  type: TYPE_NORMAL
- en: Useful Azure RMS cmdlets
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In the following section, we will provide a service principal that is needed
    for using the scripts to administrate Azure RMS. The following commands are needed
    to create a new service principal:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'The following output is expected:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/bc7736cf-0233-4e64-9b7b-c8231eda3995.png)'
  prefs: []
  type: TYPE_IMG
- en: Creation result of the new service principal
  prefs: []
  type: TYPE_NORMAL
- en: 'Copy the generated symmetric key value:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'The following output is expected:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/c586f0b1-9442-4a42-af35-d9144310afdf.png)'
  prefs: []
  type: TYPE_IMG
- en: Key information
  prefs: []
  type: TYPE_NORMAL
- en: 'Now, you can start doing the following commands using the service principal
    account:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Enumerate all `RMSTemplate`:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 'Protect a file:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: 'Get the status of a file:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: 'Unprotect a file:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: Now that we've started using PowerShell to work with Azure Information Protection
    and Azure Rights Management Service, we'll give you some useful information about
    the other SDKs that are available to develop against the services and increase
    your knowledge.
  prefs: []
  type: TYPE_NORMAL
- en: Overview of the RMS 2.1 and 4.2 SDKs
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Two active generations of RMS SDKs are available to developers and used for
    the following developments:'
  prefs: []
  type: TYPE_NORMAL
- en: Microsoft Rights Management SDK 4.2 for Android, iOS/macOS, Windows devices,
    and Linux
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Microsoft Rights Management SDK 2.1 for Windows Desktop Client
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: AD RMS SDK is superseded
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The following improvements were included with the 4.2 version:'
  prefs: []
  type: TYPE_NORMAL
- en: Hybrid support AD RMS and Azure RMS (AD RMS' mobile device extension is needed
    to make AD RMS available on mobile devices and provides the required authentication
    methods)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Access protected content offline
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bring your authentication library
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bring your user interface
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Redesigned API
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'You can use the following example design to develop your application:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/7e3b572f-f336-4253-b0de-49ed0a151535.png)'
  prefs: []
  type: TYPE_IMG
- en: Example of design for an application with the feature specification
  prefs: []
  type: TYPE_NORMAL
- en: The example above demonstrates how a user can encrypt a document. For this task,
    he needs to select an Azure RMS template or use an Azure RMS AdHoc-Protection.
    In order to get the template information from Azure Information Protection, the
    user needs to be authenticated. Post successful authentication, the user can request
    templates and services, and return them. If all the previous steps are successful,
    the required template can be applied and the document will be encrypted. Furthermore,
    a functionality to unencrypt the document must be included in your design and
    development to store sensitive information which is not encrypted. Both encryption
    and unencryption are important to have full solution.
  prefs: []
  type: TYPE_NORMAL
- en: If we take a look at the Azure IP Test application you downloaded at the beginning
    of the chapter, in the *Technical requirements *section, you can start to build
    such an application with the help of this sample, because it provides many main
    functions of the SDK.
  prefs: []
  type: TYPE_NORMAL
- en: 'Otherwise, Microsoft provides other examples that help you start to gather
    more knowledge. A perfect way to start is through simple interaction with text
    files, which you can do with the `IpcNoteapp` application. This app shows you
    how you can protect a simple text file. My favorite way is to start directly with
    a specific use case, such as the protection of data in Azure Blob storage. If
    you think like me, start with `IpcAzureApp`, because this automatically introduces
    you to `IpcManagedAPI`, which provides you with many helper classes. Otherwise,
    if you want to explore more about the DLP functionality, you can use `IpcDlpApp`,
    which interacts with the File API to protect or unprotect data. You can monitor
    directories on your filesystem and apply protection policies with `RMSFileWatcher`.
    If you also want to see such functionality in a simple PowerShell script, you
    can use the following example:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Set the folder that you want monitor, including the subfolders:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: 'Define the actions for when an event is detected:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: 'Decide which events should be monitored:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: To extend your knowledge, with the inclusion of the Azure **Active Directory
    Authentication Library** (**ADAL**), you can encrypt files with the `FormFileEncrypt`
    application. If you need to support HYOK scenarios, I recommend you work through
    `DualSererTestApp`. With your lab infrastructure, you're able to run every scenario.
  prefs: []
  type: TYPE_NORMAL
- en: For more information, check out the Microsoft developer reference (Azure Information
    Protection Developer's Guide): [https://bit.ly/2HIDjQ2](https://bit.ly/2HIDjQ2).
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this final chapter, we first introduced you to the several PowerShell scripts
    and the related code of the SDK to gather more information about the whole Microsoft
    Information Protection solution framework, or to start developing your extensions
    or applications. It was never the intention to turn you into a developer in one
    chapter, but using these resources is a good source of knowledge for troubleshooting
    or administering such a solution. You should now be able to describe which SDKs
    are available and what they can be used for. Furthermore, you have enough code
    samples to start working. We wanted to provide you with a functional and ready
    work environment to help you get started easily.
  prefs: []
  type: TYPE_NORMAL
- en: Hopefully, the information in this book will help you with your current organization
    or project. I want to thank you very much sticking around till the end of this
    book. If you have any questions, don't hesitate to ask me under my blog jochennickel.ch
    or info@inovit.ch.
  prefs: []
  type: TYPE_NORMAL
