["```\nprovider \"aws\" {\n  region     = \"us-west-2\"\n  access_key = \"my-access-key\"\n  secret_key = \"my-secret-key\"\n}\n```", "```\n    export AWS_ACCESS_KEY_ID=AK************IEVXQ\n    export AWS_SECRET_ACCESS_KEY=gbaIbK*********************iwN0dGfS\n    ```", "```\n    aws configure\n    ```", "```\n    AWS Access Key ID [None]: downloaded access key id\n    Secret Access Key [None]: downloaded secret access key\n    Default region name [None]: us-west-2\n    Default output format [None]: json\n    ```", "```\n    provider \"aws\" {\n      profile    = \"default\"\n      region     = \"us-east-1\"\n    }\n    resource \"aws_instance\" \"example\" {\n      ami           = \"ami-2757f631\"\n      instance_type = \"t2.micro\"\n    }\n    ```", "```\n    resource \"aws_vpc\" \"main\" {\n      cidr_block = var.base_cidr_block\n    }\n     <BLOCK TYPE> \"<BLOCK NAME>\" \"<BLOCK LABEL>\" {\n      # Block body\n      <IDENTIFIER> = <EXPRESSION> # Argument\n    }\n    ```", "```\nprovider \"aws\" {\n  profile    = \"default\"\n  region     = \"us-east-2\"\n}\nresource \"aws_instance\" \"example\" {\n  ami           = \"ami-0fb653ca2d3203ac1\"\n  instance_type = \"t2.micro\"\n}\n```", "```\nterraform init\n```", "```\nInitializing the backend...\nInitializing provider plugins...\n- Checking for available provider plugins...\n- Downloading plugin for provider \"aws\" (hashicorp/aws) 2.44.0...\nThe following providers do not have any version constraints in configuration, so the latest version was installed.\nTo prevent automatic upgrades to new major versions that may contain breaking changes, it is recommended to add version = \"...\" constraints to the corresponding provider blocks in configuration, with the constraint string suggested below.\n* provider.aws: version = \"~> 2.44\"\nTerraform has been successfully initialized!\nYou may now begin working with Terraform. Try running a \"terraform plan\" to see any changes that are required for your infrastructure. All Terraform commands should now work.\nIf you ever set or change modules or backend configuration for Terraform rerun this command to reinitialize your working directory. If you forget, other commands will detect it and remind you to do so if necessary.\n```", "```\nterraform plan\n```", "```\n(...)\nTerraform will perform the following actions:\n  # aws_instance.example will be created\n  + resource \"aws_instance\" \"example\" {\n      + ami                          = \"ami-0fb653ca2d3203ac1\"\n      + arn                          = (known after apply)\n      + associate_public_ip_address  = (known after apply)\n      + availability_zone            = (known after apply)\n      + cpu_core_count               = (known after apply)\n      + cpu_threads_per_core         = (known after apply)\n      + get_password_data            = false\n      + host_id                      = (known after apply)\n      + id                           = (known after apply)\n      + instance_state               = (known after apply)\n      + instance_type                = \"t2.micro\"\n      + ipv6_address_count           = (known after apply)\n      + ipv6_addresses               = (known after apply)\n      + key_name                     = (known after apply)\n      (...)\n  }\nPlan: 1 to add, 0 to change, 0 to destroy.\n```", "```\nPlan: 1 to add, 0 to change, 0 to destroy.\n```", "```\nterraform apply\n```", "```\nTerraform will perform the following actions:\n  # aws_instance.example will be created\n  + resource \"aws_instance\" \"example\" {\n      + ami                          = \"ami-0fb653ca2d3203ac1\"\n      + arn                          = (known after apply)\n      + associate_public_ip_address  = (known after apply)\n      + availability_zone            = (known after apply)\n      + cpu_core_count               = (known after apply)\n      + cpu_threads_per_core         = (known after apply)\n      + get_password_data            = false\n      + host_id                      = (known after apply)\n      + id                           = (known after apply)\n      + instance_state               = (known after apply)\n      + instance_type                = \"t2.micro\"\n      + ipv6_address_count           = (known after apply)\n      + ipv6_addresses               = (known after apply)\n      + key_name                     = (known after apply)\n      (...)\n  }\nPlan: 1 to add, 0 to change, 0 to destroy.\nDo you want to perform these actions?\n  Terraform will perform the actions described above.\n  Only 'yes' will be accepted to approve.\n  Enter a value:\n```", "```\nDo you want to perform these actions?\n  Terraform will perform the actions described above.\n  Only 'yes' will be accepted to approve.\n  Enter a value: yes\naws_instance.example: Creating...\naws_instance.example: Still creating... [10s elapsed]\naws_instance.example: Still creating... [20s elapsed]\naws_instance.example: Still creating... [30s elapsed]\naws_instance.example: Creation complete after 38s [id=i-07e2a3exxx]\nApply complete! Resources: 1 added, 0 changed, 0 destroyed.\n```", "```\nprovider \"aws\" {\n  region = \"us-west-2\"\n}\n```"]