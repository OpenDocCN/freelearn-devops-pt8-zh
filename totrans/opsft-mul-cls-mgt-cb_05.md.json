["```\n$ sudo yum install bind bind-utils -y\n$ sudo systemctl enable --now named\n$ sudo firewall-cmd --permanent --add-port=53/tcp\n$ sudo firewall-cmd --permanent --add-port=53/udp\n$ sudo firewall-cmd --reload\n```", "```\n    $ sudo cat << EOF >>  /etc/named.conf\n    zone \"ocp.hybridmycloud.com\" IN {\n    type master;\n    file \"/var/named/ocp.hybridmycloud.com.db\";\n    allow-query { any; };\n    allow-transfer { none; };\n    allow-update { none; };\n    };\n    zone \"1.168.192.in-addr.arpa\" IN {  \n    type master;  \n    file \"/var/named/1.168.192.in-addr.arpa\";\n    allow-update { none; };\n    };\n    EOF\n    ```", "```\n    $ sudo cat <<EOF > /var/named/ocp.hybridmycloud.com.db\n    ;[1] Begin Common Header Definition\n    \\$TTL 86400\n    @ IN SOA bastion.ocp.hybridmycloud.com. root.ocp.hybridmycloud.com. (\n    202201010001 ;Serial\n    21600 ;Refresh\n    3600 ;Retry\n    604800 ;Expire\n    86400 ;Minimum TTL\n    )\n    ;End Common Header Definition\n    ;Name Server Information [2]\n       IN NS bastion.ocp.hybridmycloud.com.\n    ;IP address of Name Server [3]\n    bastion IN A 192.168.1.200\n    ;api internal and external purposes [4]\n    api        IN    A    192.168.1.200 \n    api-int    IN    A    192.168.1.200 \n    ;wildcard application [5]\n    *.apps     IN    A    192.168.1.200\n    ;bootstrap node to start cluster install only [6]\n    bootstrap  IN    A    192.168.1.90 \n    ;master nodes [7]\n    master1    IN    A    192.168.1.91 \n    master2    IN    A    192.168.1.92 \n    master3    IN    A    192.168.1.93\n    ;worker nodes [8]\n    worker1    IN    A    192.168.1.101\n    worker2    IN    A    192.168.1.102\n    EOF\n    ```", "```\n    $ sudo cat <<EOF > /var/named/1.168.192.in-addr.arpa\n    \\$TTL 1W @    IN    SOA    bastion.ocp.hybridmycloud.com.root (     \n    2019070700 ; serial \n    3H         ; refresh (3 hours) \n    30M        ; retry (30 minutes) \n    2W         ; expiry (2 weeks) \n    1W )       ; minimum (1 week) \n    5.1.168.192.in-addr.arpa. IN PTR \n    api.ocp.hybridmycloud.com.;\n    5.1.168.192.in-addr.arpa. IN PTR \n    api-int.ocp.hybridmycloud.com.;\n    90.1.168.192.in-addr.arpa. IN PTR \n    bootstrap.ocp.hybridmycloud.com.; \n    91.1.168.192.in-addr.arpa. IN PTR \n    master1.ocp.hybridmycloud.com.; \n    92.1.168.192.in-addr.arpa. IN PTR \n    master2.ocp.hybridmycloud.com.; \n    93.1.168.192.in-addr.arpa. IN PTR \n    master3.ocp.hybridmycloud.com.; \n    101.1.168.192.in-addr.arpa. IN PTR \n    worker1.ocp. hybridmycloud.com.; \n    102.1.168.192.in-addr.arpa. IN PTR \n    worker2.ocp. hybridmycloud.com.;\n    EOF\n    ```", "```\n    sudo systemctl restart named\n    ```", "```\n    dig +short @192.168.1.200 api.ocp.hybridmycloud.com\n    dig +short @192.168.1.200 api-int.ocp.hybridmycloud.com\n    ```", "```\n    192.168.1.5\n    192.168.1.5\n    ```", "```\n    dig +short @192.168.1.200 joedoe.apps.ocp.hybridmycloud.com\n    dig +short @192.168.1.200 whatever.apps.ocp.hybridmycloud.com\n    ```", "```\n    192.168.1.6\n    192.168.1.6\n    ```", "```\n    dig +short @192.168.1.200 boostrap.ocp.hybridmycloud.com\n    dig +short @192.168.1.200 master1.ocp.hybridmycloud.com\n    dig +short @192.168.1.200 master2.ocp.hybridmycloud.com\n    dig +short @192.168.1.200 master3.ocp.hybridmycloud.com\n    dig +short @192.168.1.200 worker1.ocp.hybridmycloud.com\n    dig +short @192.168.1.200 worker2.ocp.hybridmycloud.com\n    ```", "```\n192.168.1.90\n192.168.1.91\n192.168.1.92\n192.168.1.93\n192.168.1.101\n192.168.1.102\n```", "```\ndig +short @192.168.1.200 -x 192.168.1.90\ndig +short @192.168.1.200 -x 192.168.1.91\ndig +short @192.168.1.200 -x 192.168.1.92\ndig +short @192.168.1.200 -x 192.168.1.93\ndig +short @192.168.1.200 -x 192.168.1.101\ndig +short @192.168.1.200 -x 192.168.1.102\n```", "```\nbootstrap.ocp.hybridmycloud.com.\nmaster1.ocp.hybridmycloud.com.\nmaster2.ocp.hybridmycloud.com.\nmaster3.ocp.hybridmycloud.com.\nworker1.ocp.hybridmycloud.com.\nworker2.ocp.hybridmycloud.com.\n```", "```\n    $ sudo yum install dhcp-server -y\n    ```", "```\n    cat <<EOF > /etc/dhcp/dhcpd.conf\n    # DHCP Server Configuration file.\n    #[1]\n    ddns-update-style interim;\n    ignore client-updates;\n    authoritative;\n    allow booting;\n    allow bootp;\n    allow unknown-clients;\n    default-lease-time 3600;\n    default-lease-time 900;\n    max-lease-time 7200;\n    #[2]\n    subnet 192.168.1.0 netmask 255.255.255.0 {\n    option routers 192.168.1.254;\n    option domain-name-servers 192.168.1.200;\n    option ntp-servers 192.168.1.200;\n    next-server 192.168.1.200; #[2.1]\n    #filename \"pxelinux.0\";#[2.2]\n    #[3]\n    group {\n    host bootstrap {\n    hardware ethernet 50:6b:8d:aa:aa:aa;\n    fixed-address 192.168.1.90;\n    option host-name \"bootstrap.ocp.hybridmycloud.com\";\n    allow booting;\n    }\n    host master1 {\n    hardware ethernet 50:6b:8d:bb:bb:bb;\n    fixed-address 192.168.1.91;\n    option host-name \"master1.ocp.hybridmycloud.com\";\n    allow booting;\n    }\n    host master2 {\n    hardware ethernet 50:6b:8d:cc:cc:cc;\n    fixed-address 192.168.1.92 ;\n    option host-name \"master2.ocp.hybridmycloud.com\";\n    allow booting;\n    }\n    host master3 {\n    hardware ethernet 50:6b:8d:dd:dd:dd;\n    fixed-address 192.168.1.93 ;\n    option host-name \"master3.ocp.hybridmycloud.com\";\n    allow booting;\n    }\n    host worker1 {\n    hardware ethernet 50:6b:8d:11:11:11;\n    fixed-address 192.168.1.101;\n    option host-name \"worker1.ocp.hybridmycloud.com\";\n    allow booting;\n    }\n    host worker2 {\n    hardware ethernet 50:6b:8d:22:22:22;\n    fixed-address 192.168.1.102;\n    option host-name \"worker2.ocp.hybridmycloud.com\";\n    allow booting;\n    }\n    }\n    } \n    EOF\n    $ sudo systemctl enable --now dhcpd\n    $ sudo firewall-cmd --add-service=dhcp --permanent\n    $ sudo firewall-cmd --reload\n    ```", "```\n    $ sudo yum install httpd policycoreutils-python-utils –y\n    ```", "```\n    $ sudo sed –i 's/80/81/g' /etc/httpd/conf/httpd.conf\n    ```", "```\n    $ sudo semanage port -a -t http_port_t -p tcp 81\n    ```", "```\n    $ sudo firewall-cmd --add-port 81/tcp --permanent\n    $ sudo firewall-cmd --reload\n    ```", "```\n    $ sudo mkdir –p /var/www/html/images\n    $ sudo mkdir –p /var/www/html/ignition\n    $ sudo touch /var/www/html/images/imageFileToTest.txt\n    $ sudo touch /var/www/html/ignition/ignitionFileToTest.txt\n    ```", "```\n    $ sudo chown –R apache. /var/www/html/\n    $ sudo chmod 744 –R /var/www/html/\n    ```", "```\n    $ sudo systemctl enable --now httpd \n    ```", "```\n    $ curl –O http://192.168.1.200:81/images/imageFileToTest.txt\n    $ curl –O http://192.168.1.200:81/ignition/ignitionFileToTest.txt\n    ```", "```\n$ sudo yum install haproxy -y\n$ sudo cat <<EOF > /etc/haproxy/haproxy.cfg\n# Global settings\nglobal\n  maxconn 20000\n  log /dev/log local0 info\n  chroot /var/lib/haproxy\n  pidfile /var/run/haproxy.pid\n  user haproxy\n  group haproxy\n  daemon\n  # turn on stats unix socket\n  stats socket /var/lib/haproxy/stats\ndefaults\n  mode http\n  log global\n  option httplog\n  option dontlognull\n  option forwardfor except 127.0.0.0/8\n  option redispatch\n  retries 3\n  timeout http-request 10s\n  timeout queue 1m\n  timeout connect 10s\n  timeout client 300s\n  timeout server 300s\n  timeout http-keep-alive 10s\n  timeout check 10s\n  maxconn 20000\n# Enable haproxy status endpoint\nlisten stats\n  bind :9000\n  mode http\n  stats enable\n  stats uri /\n# OpenShift API (port 6443)\nfrontend openshift-api-server\n  bind *:6443 \n  default_backend openshift-api-server\n  mode tcp\n  option tcplog\nbackend openshift-api-server\n  balance source\n  mode tcp\n# bootstrap line below can be removed after the cluster is deployed\n  server bootstrap 192.168.1.90:6443 check\n  server master1 192.168.1.91:6443 check\n  server master2 192.168.1.92:6443 check\n  server master3 192.168.1.93:6443 check\n# machine-config-server API (port 22623)\nfrontend machine-config-server\n  bind *:22623\n  default_backend machine-config-server\n  mode tcp\n  option tcplog\nbackend machine-config-server\n  balance source\n  mode tcp\n# bootstrap line below can be removed after the cluster is deployed\n  server bootstrap 192.168.1.90:22623 check\n  server master1 192.168.1.91:22623 check\n  server master2 192.168.1.92:22623 check\n  server master3 192.168.1.93:22623 check\n# Applications HTTP (port 80)\nfrontend ingress-http\n  bind *:80\n  default_backend ingress-http\n  mode tcp\n  option tcplog\nbackend ingress-http\n  balance source\n  mode tcp\n  server worker1 192.168.1.101:80 check # [1]\n  server worker2 192.168.1.102:80 check # [1]\n# Applications HTTPS (port 443)\nfrontend ingress-https\n  bind *:443\n  default_backend ingress-https\n  mode tcp\n  option tcplog\nbackend ingress-https\n  balance source\n  mode tcp\n  server worker0 192.168.1.101:443 check # [1]\n  server worker1 192.168.1.102:443 check # [1]\nEOF\n```", "```\n$ sudo setsebool -P haproxy_connect_any=1\n$ sudo systemctl enable --now haproxy\n$ sudo firewall-cmd --add-service=http --permanent\n$ sudo firewall-cmd --add-service=https --permanent\n$ sudo firewall-cmd --add-port=6443/tcp --permanent\n$ sudo firewall-cmd --add-port=22623/tcp --permanent\n$ sudo firewall-cmd --reload\n```", "```\n    $ sudo yum install –y syslinux-tftpboot syslinux-nonlinux syslinux tftp-server\n    $ firewall-cmd --add-service=tftp --permanent\n    $ firewall-cmd --reload\n    $ sudo systemctl enable --now tftp\n    ```", "```\n    $ mkdir -p /var/lib/tftpboot/networkboot/coreOS\n    $ mkdir -p /var/lib/tftpboot/pxelinux.cfg\n    ```", "```\n    $ cp /usr/share/syslinux/* /var/lib/tftpboot\n    ```", "```\n    ├── networkboot\n    │    └── coreOS\n    │          ├── rhcos-live-initramfs.x86_64.img\n    │          ├── rhcos-live-kernel-x86_64\n    │          └── rhcos-live-rootfs.x86_64.img\n    ```", "```\n    $ sudo cat <<EOF > /var/lib/tftpboot/pxelinux.cfg/default\n    UI vesamenu.c32\n    MENU COLOR sel 4 #ffffff std\n    MENU COLOR title 0 #ffffff\n    TIMEOUT 120\n    PROMPT 0\n    MENU TITLE OPENSHIFT 4.X AGNOSTIC PXE MENU\n    LABEL BOOTSTRAP NODE\n      KERNEL networkboot/coreOS/rhcos-live-kernel-x86_64 \n      APPEND initrd=networkboot/coreOS/rhcos-live-initramfs.x86_64.img,networkboot/coreOS/rhcos-live-rootfs.x86_64.img coreos.inst.install_dev=/dev/sda coreos.inst.ignition_url=http://192.168.1.200:81/ignition/bootstrap.ign \n    LABEL MASTER NODE\n      KERNEL networkboot/coreOS/rhcos-live-kernel-x86_64 \n      APPEND initrd=networkboot/coreOS/rhcos-live-initramfs.x86_64.img,networkboot/coreOS/rhcos-live-rootfs.x86_64.img coreos.inst.install_dev=/dev/sdacoreos.inst.ignition_url=http://192.168.1.200:81/ignition/master.ign \n    LABEL  WORKER NODE  \n      KERNEL networkboot/coreOS/rhcos-live-kernel-x86_64 \n      APPEND initrd=networkboot/coreOS/rhcos-live-initramfs.x86_64.img,networkboot/coreOS/rhcos-live-rootfs.x86_64.img coreos.inst.install_dev=/dev/sdacoreos.inst.ignition_url=http://192.168.1.200:81/ignition/worker.ign \n    EOF\n    ```", "```\napiVersion: v1\nbaseDomain: hybridmycloud.com \ncredentialsMode: Mint \ncontrolPlane: \n  hyperthreading: Enabled \n  name: master\n  platform:\n    aws:\n      zones:\n      - us-west-2a\n      - us-west-2b\n      rootVolume:\n        iops: 4000\n        size: 500\n        type: io1 \n        type: m5.xlarge\n    replicas: 3\ncompute: \n  - hyperthreading: Enabled \n  name: worker\n  platform:\n    aws: \n      rootVolume:\n        iops: 2000\n        size: 500\n        type: io1 \n      type: c5.4xlarge\n      zones:\n      - us-west-2c\n    replicas: 3\nmetadata:\n  name: test-cluster \n  networking:\n    clusterNetwork:\n    - cidr: 10.128.0.0/14\n    hostPrefix: 23\n    machineNetwork:\n    - cidr: 10.0.0.0/16\n    networkType: OpenShiftSDN\n    serviceNetwork:\n    - 172.30.0.0/16\n  platform:\n    aws:\n      region: us-west-2 \n      userTags:\n      adminContact: jdoe\n    costCenter: 7536\n    amiID: ami-96c6f8f7 \n    serviceEndpoints: \n      - name: ec2\n        url: https://vpce-id.ec2.us-west-2.vpce.amazonaws.com\nfips: false \nsshKey: ssh-ed25519 AAAA... \npullSecret: '{\"auths\": ...}'\n```", "```\napiVersion: v1 \nbaseDomain: hybridmycloud.com \ncontrolPlane: \n  hyperthreading: Enabled \n  name: master \n  platform: \n    azure: \n      osDisk: \n        diskSizeGB: 1024 \n        type: Standard_D8s_v3 \n        replicas: 3 \n    compute: \n  - hyperthreading: Enabled \n  name: worker \n  platform: \n    azure: \n      type: Standard_D2s_v3 \n      osDisk: diskSizeGB: 512 \n      zones: \n      - \"1\" \n      - \"2\" \n      - \"3\" \n  replicas: 5 \nmetadata: \n  name: test-cluster \n  networking: \n  clusterNetwork: \n  - cidr: 10.128.0.0/14 \n  hostPrefix: 23 \n  machineNetwork: \n  - cidr: 10.0.0.0/16 \n  networkType: OpenShiftSDN \n  serviceNetwork:\n  - 172.30.0.0/16\nplatform: \n  azure: \n    BaseDomainResourceGroupName: resource_group \n    region: centralus \n    resourceGroupName: existing_resource_group \n    outboundType: Loadbalancer \n    cloudName: AzurePublicCloud \npullSecret: '{\"auths\": ...}'\n```", "```\napiVersion: v1\nbaseDomain: hybridmycloud.com\ncontrolPlane:\n  hyperthreading: Enabled\n  name: master\n  platform:\n  gcp:\n    type: n2-standard-4\n    zones:\n    - us-central1-a\n    - us-central1-c\n  osDisk:\n    diskType: pd-ssd\n    diskSizeGB: 1024\n    encryptionKey:\n      kmsKey:\n      name: worker-key\n      keyRing: test-machine-keys\n      location: global\n      projectID: project-id\n  replicas: 3\ncompute:\n- hyperthreading: Enabled\n  name: worker\n  platform:\n  gcp:\n    type: n2-standard-4\n    zones:\n    - us-central1-a\n    - us-central1-c\n    osDisk:\n    diskType: pd-standard\n    diskSizeGB: 128\n    encryptionKey:\n    kmsKey:\n      name: worker-key\n      keyRing: test-machine-keys\n      location: global\n      projectID: project-id\n  replicas: 3\nmetadata:\nname: test-cluster\nnetworking:\n  clusterNetwork:\n  - cidr: 10.128.0.0/14\n    hostPrefix: 23\n  machineNetwork:\n  - cidr: 10.0.0.0/16\n  networkType: OpenShiftSDN\n  serviceNetwork:\n  - 172.30.0.0/16\nplatform:\ngcp:\n  projectID: openshift-production\n  region: us-central1\npullSecret: '{\"auths\": ...}'\nfips: false\nsshKey: ssh-ed25519 AAAA...\n```", "```\n$ ssh-keygen -t ecdsa -N '' -f ~/.ssh/clusterOCP_key\n```", "```\n$ mkdir ~/ocp\n$ cat <<EOF > ~/ocp/install-config.yaml\napiVersion: v1\nbaseDomain: hybridmycloud.com # [1]\ncompute:\n- hyperthreading: Enabled \n  name: worker\n  replicas: 2 # [2]\ncontrolPlane:\n  hyperthreading: Enabled \n  name: master \n  replicas: 3 # [3]\nmetadata:\n  name: ocp # [4]\nnetworking:\n  clusterNetwork:\n  - cidr: 10.148.0.0/14 # [5]\n    hostPrefix: 23 \n  networkType: OpenShiftSDN # [6]\n  serviceNetwork: \n  - 10.153.0.0/16 # [7]\nplatform:\n  none: {} # [8]\nfips: false\npullSecret: '<YOUR-PULL-SECRET>' # [9]\nsshKey: '<YOUR-SSH-KEY>' # [10]\nEOF\n```", "```\n$ ./openshift-install create manifests --dir=home/user/ocp/\n```", "```\n$ ./openshift-install create ignition-configs --dir=home/user/ocp/\n```", "```\n$ sudo cp ~/ocp/*.ign /var/www/html/ignition\n$ sudo chown -R apache. /var/www/html\n$ sudo chmod 744 /var/www/html\n```", "```\n    $ sha512sum ~/ocp/bootstrap.ign\n    $ sha512sum ~/ocp/master.ign\n    $ sha512sum ~/ocp/worker.ign\n    ```", "```\na5a2d43879223273c9b60af66b44202a1d1248fc01cf156c46d4a79f552b6bad47bc8cc78ddf0116e80c59d2ea9e32ba53bc807afbca581aa059311def2c3e3b installation_directory/bootstrap.ign\n```", "```\n    $ sudo coreos-installer install --ignition-url= http://192.168.1.200:81/ignition/bootstrap.ign /dev/sda --ignition-hash=SHA512-\n    a5a2d43879223273c9b60af66b44202a1d1248fc01cf156c46d4a79f552b6bad47bc8cc78ddf0116e80c59d2ea9e32ba53bc807afbca581aa059311def2c3e3b\n    ```", "```\n    $ sudo coreos-installer install --ignition-url=http://192.168.1.200:81/<node_type>.ign <device> --ignition-hash=SHA512-<digest>\n    ```", "```\n./openshift-install wait-for bootstrap-complete --dir= /home/user/ocp/ --log-level=debug\n```", "```\nINFO Waiting up to 30m0s for the Kubernetes API at https://api.ocp.hybridmycloud.com:6443... INFO API v1.22.1 up INFO Waiting up to 30m0s for bootstrapping to complete... INFO It is now safe to remove the bootstrap resources\n```", "```\n$ export KUBECONFIG=~/ocp/auth/kubeconfig\n```", "```\n$ oc get csr | grep –i Pending \nNAME      AGE   REQUESTOR                             CONDITION \ncsr-bfd72 5m26s system:node:worker0.ocp.hybridmycloud.com   Pending \ncsr-c57lv 5m26s system:node:worker1.ocp.hybridmycloud.com   Pending \n...\n```", "```\n$ oc get csr -o name | xargs oc adm certificate approve\ncertificatesigningrequest.certificates.k8s.io/csr-bfd72 approved\ncertificatesigningrequest.certificates.k8s.io/csr-c57lv approved\n```", "```\n$ oc get nodes\nNAME                        STATUS   ROLES    AGE   VERSION\nocp-7m9wx-master-0       Ready    master   77d   v1.21.1+9807387\nocp-7m9wx-master-1       Ready    master   77d   v1.21.1+9807387\nocp-7m9wx-master-2       Ready    master   77d   v1.21.1+9807387\nocp-7m9wx-worker-jds5s   Ready    worker   77d   v1.21.1+9807387\nocp-7m9wx-worker-kfr4d   Ready    worker   77d   v1.21.1+9807387\n```", "```\n./openshift-install wait-for install-complete --dir= /home/user/ocp/ --log-level=debug\nINFO Waiting up to 30m0s for the cluster to initialize...\n```", "```\nMessage: \"INFO Waiting up to 20m0s for the Kubernetes API at https://api.ocp.hybridmycloud.com:6443...\"\n```", "```\nMessage: \"INFO Waiting up to 30m0s for bootstrapping to complete...\"\n```", "```\nMessage: \"x509 certificate signed by unknown authority..\"\n```"]