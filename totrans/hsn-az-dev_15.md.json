["```\nTelemetryConfiguration.Active.InstrumentationKey = \"<instrumentation-key>\";\nvar telemetryClient = new TelemetryClient();\n```", "```\ntelemetryClient.TrackTrace(\"Hello World!\");\ntelemetryClient.TrackException(new Exception());\ntelemetryClient.TrackDependency(new DependencyTelemetry());\n```", "```\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<ApplicationInsights >\n  <InstrumentationKey>8sad7asd-asd876asf-jr323jsd-3hshjahj</InstrumentationKey>\n  <TelemetryInitializers>\n    <Add Type=\"Microsoft.ApplicationInsights.DependencyCollector.HttpDependenciesParsingTelemetryInitializer, Microsoft.AI.DependencyCollector\"/>\n  </TelemetryInitializers>\n  <TelemetryModules>\n    <Add Type=\"Microsoft.ApplicationInsights.DependencyCollector.DependencyTrackingTelemetryModule, Microsoft.AI.DependencyCollector\">\n      <ExcludeComponentCorrelationHttpHeadersOnDomains>\n      </ExcludeComponentCorrelationHttpHeadersOnDomains>\n      <IncludeDiagnosticSourceActivities>\n        <Add>Microsoft.Azure.ServiceBus</Add>\n        <Add>Microsoft.Azure.EventHubs</Add>\n      </IncludeDiagnosticSourceActivities>\n    </Add>\n  </TelemetryModules>\n  <TelemetryChannel Type=\"Microsoft.ApplicationInsights.WindowsServer.TelemetryChannel.ServerTelemetryChannel, Microsoft.AI.ServerTelemetryChannel\"/>\n</ApplicationInsights>\n```", "```\npublic partial class Form1 : Form\n{\n  private TelemetryClient _telemetryClient = new TelemetryClient();\n\n  private void Form1_Load(object sender, EventArgs e)\n  {\n    _telemetryClient.InstrumentationKey = \"<instrumenation-key>\";\n\n    _telemetryClient.Context.User.Id = Environment.UserName;\n    _telemetryClient.Context.Session.Id = Guid.NewGuid().ToString();\n    _telemetryClient.Context.Device.OperatingSystem = Environment.OSVersion.ToString();\n\n    _telemetryClient.TrackPageView(\"Form1\");\n  }\n}\n```", "```\nnpm install applicationinsights\n```", "```\nlet http = require(\"http\");\nlet appInsights = require(\"applicationinsights\");\n\nappInsights.setup(\"<instrumentation-key>\");\nappInsights.start();\nlet client = appInsights.defaultClient;\n\nclient.trackEvent({name: \"my custom event\", properties: {customProperty: \"custom property value\"}});\nclient.trackException({exception: new Error(\"handled exceptions can be logged with this method\")});\nclient.trackMetric({name: \"custom metric\", value: 3});\nclient.trackTrace({message: \"trace message\"});\nclient.trackDependency({target:\"http://dbname\", name:\"select customers proc\", data:\"SELECT * FROM Customers\", duration:231, resultCode:0, success: true, dependencyTypeName: \"ZSQL\"});\nclient.trackRequest({name:\"GET /customers\", url:\"http://myserver/customers\", duration:309, resultCode:200, success:true});\n\nhttp.createServer( (req, res) => {\n  client.trackNodeHttpRequest({request: req, response: res});\n}).listen(1337, \"127.0.0.1\");\n\nconsole.log('Server running at http://127.0.0.1:1337/');\n```", "```\nrequests\n| summarize totalCount=sum(itemCount) by bin(timestamp, 30m)\n| render timechart\n```", "```\nrequests\n| summarize RequestsCount=sum(itemCount), AverageDuration=avg(duration), percentiles(duration, 50, 95, 99) by operation_Name\n| order by RequestsCount desc\n```", "```\n{\n  \"name\": \"[variables('myFirstAlertName')]\",\n  \"type\": \"Microsoft.Insights/alertrules\",\n  \"apiVersion\": \"2014-04-01\",\n  \"location\": \"[parameters('appLocation')]\",\n  \"dependsOn\": [\n    \"[resourceId('Microsoft.Insights/components', parameters('myApplicationName'))]\"\n  ],\n  \"tags\": {\n    \"[concat('hidden-link:', resourceId('Microsoft.Insights/components', parameters('myApplicationName')))]\": \"Resource\"\n  },\n  \"properties\": {\n    \"name\": \"[variables('responseAlertName')]\",\n    \"description\": \"response time alert\",\n    \"isEnabled\": true,\n    \"condition\": {\n      \"$type\": \"Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.ThresholdRuleCondition, Microsoft.WindowsAzure.Management.Mon.Client\",\n      \"odata.type\": \"Microsoft.Azure.Management.Insights.Models.ThresholdRuleCondition\",\n      \"dataSource\": {\n        \"$type\": \"Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.RuleMetricDataSource, Microsoft.WindowsAzure.Management.Mon.Client\",\n        \"odata.type\": \"Microsoft.Azure.Management.Insights.Models.RuleMetricDataSource\",\n        \"resourceUri\": \"[resourceId('microsoft.insights/components', parameters('myApplicationName'))]\",\n        \"metricName\": \"request.duration\"\n      },\n      \"threshold\": \"[parameters('responseTime')]\",\n      \"windowSize\": \"PT15M\"\n    },\n    \"actions\": [{\n      \"$type\": \"Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.RuleEmailAction, Microsoft.WindowsAzure.Management.Mon.Client\",\n      \"odata.type\": \"Microsoft.Azure.Management.Insights.Models.RuleEmailAction\",\n      \"sendToServiceOwners\": true,\n      \"customEmails\": []\n    }]\n  }\n}\n```", "```\n{\n  \"id\": \"/subscriptions/.../resourceGroups/handsonazure-rg/providers/microsoft.insights/alertrules/Failure Anomalies - handsonazure-ai\",\n  \"name\": \"Failure Anomalies - handsonazure-ai\",\n  \"type\": \"Microsoft.Insights/alertRules\",\n  \"location\": \"West Europe\",\n  \"properties\": {\n    \"name\": \"Failure Anomalies - handsonazure-ai\",\n    \"description\": \"\",\n    \"isEnabled\": true,\n    \"condition\": {\n      \"$type\": \"Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.ThresholdRuleCondition, Microsoft.WindowsAzure.Management.Mon.Client\",\n      \"odata.type\": \"Microsoft.Azure.Management.Insights.Models.ThresholdRuleCondition\",\n      \"dataSource\": {\n        \"$type\": \"Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.RuleMetricDataSource, Microsoft.WindowsAzure.Management.Mon.Client\",\n        \"odata.type\": \"Microsoft.Azure.Management.Insights.Models.RuleMetricDataSource\",\n        \"resourceUri\": \"/subscriptions/.../resourcegroups/handsonazure-rg/providers/microsoft.insights/components/handsonazure-ai\",\n        \"resourceLocation\": null,\n        \"metricNamespace\": null,\n        \"metricName\": \"...\",\n        \"legacyResourceId\": null\n      },\n      \"operator\": \"GreaterThan\",\n      \"threshold\": 2,\n      \"windowSize\": \"PT1H\",\n      \"timeAggregation\": null\n    },\n    \"action\": null,\n    \"lastUpdatedTime\": \"2018-09-14T12:04:57.6355645Z\",\n    \"provisioningState\": \"Succeeded\",\n    \"actions\": [\n      {\n        \"$type\": \"Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.RuleEmailAction, Microsoft.WindowsAzure.Management.Mon.Client\",\n        \"odata.type\": \"Microsoft.Azure.Management.Insights.Models.RuleEmailAction\",\n        \"sendToServiceOwners\": true,\n        \"customEmails\": []\n      }\n    ]\n  }\n}\n```"]