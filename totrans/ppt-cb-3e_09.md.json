["```\n    Facter.add(:hello) do\n      setcode do\n        \"Hello, world\"\n      end\n    end\n    ```", "```\n    node 'cookbook' {\n      notify { $::hello: }\n    }\n    ```", "```\n    [root@cookbook ~]# puppet agent -t\n    Notice: /File[/var/lib/puppet/lib/facter/hello.rb]/ensure: defined content as '{md5}f66d5e290459388c5ffb3694dd22388b'\n    Info: Loading facts\n    Info: Caching catalog for cookbook.example.com\n    Info: Applying configuration version '1416205745'\n    Notice: Hello, world\n    Notice: /Stage[main]/Main/Node[cookbook]/Notify[Hello, world]/message: defined 'message' as 'Hello, world'\n    Notice: Finished catalog run in 0.53 seconds\n\n    ```", "```\n[root@cookbook ~]# facter hello\n\n[root@cookbook ~]# facter -p hello\nHello, world\n\n```", "```\n[main]\npluginsync = true\n\n```", "```\nFacter.add(:users) do\n  setcode do\n    %x{/usr/bin/who |wc -l}.chomp\n  end\nend\n```", "```\nnotify { \"${::users} users logged in\": }\nNotice:  2 users logged in\n\n```", "```\nFile.open('/proc/meminfo') do |f|\n  f.each_line { |line|\n  if (line[/^Active:/])\n    Facter.add(:memory_active) do\n      setcode do line.split(':')[1].to_i\n      end\n    end\n  end\n  if (line[/^Inactive:/])\n    Facter.add(:memory_inactive) do\n      setcode do line.split(':')[1].to_i\n      end\n    end\n  end\n  }\nend\n```", "```\n[root@cookbook ~]# facter -p |grep memory_\nmemory_active => 63780\nmemory_inactive => 58188\n\n```", "```\nmessage=\"Hello, world\"\n```", "```\n    [root@cookbook ~]# facter facterversion\n    2.3.0\n    [root@cookbook ~]# facter -v\n    2.3.0\n\n    ```", "```\n    [root@cookbook ~]# mkdir -p /etc/facter/facts.d\n\n    ```", "```\n    model=ED-209\n    ```", "```\n    [root@cookbook ~]# facter model\n    ED-209\n\n    ```", "```\n    model=ED-209\n    builder=OCP\n    directives=4\n    ```", "```\n    #!/bin/sh\n    echo users=`who |wc -l`\n\n    ```", "```\n    [root@cookbook ~]# chmod a+x /etc/facter/facts.d/users.sh\n\n    ```", "```\n    [root@cookbook ~]# facter users\n    2\n\n    ```", "```\n    [root@cookbook ~]# facter model\n    ED-209\n\n    ```", "```\n    ---\n    registry: NCC-68814\n    class: Andromeda\n    shipname: USS Prokofiev\n    ```", "```\n    [root@cookbook ~]# facter registry class shipname\n    class => Andromeda\n    registry => NCC-68814\n    shipname => USS Prokofiev\n\n    ```", "```\n    users=2\n\n    ```", "```\n    [root@cookbook ~]# facter users\n    2\n\n    ```", "```\n    [root@cookbook ~]# facter architecture\n    x86_64\n    [root@cookbook ~]# echo \"architecture=ppc64\">>/etc/facter/facts.d/myfacts.txt\n    [root@cookbook ~]# facter architecture\n    ppc64\n\n    ```", "```\n[root@cookbook ~]# facter architecture\nppc64\n[root@cookbook ~]# echo \"architecture=r10000\" >>/etc/facter/facts.d/z-architecture.txt\n[root@cookbook ~]# facter architecture\nr10000\n\n```", "```\nubuntu@cookbook:~/puppet$ facter -d robin\nFact file /etc/facter/facts.d/myfacts.json was parsed but returned an empty data set\n\n```", "```\nnotify { \"There are $::users people logged in right now.\": }\n\n```", "```\n[root@cookbook ~]# facter -p hello\nHello, world\n\n```", "```\n[root@cookbook ~]# FACTER_hello='Howdy!' facter -p hello\nHowdy!\n\n```", "```\n    node cookbook {\n      notify {\"$::hello\": }\n    }\n    ```", "```\n    [root@cookbook ~]# FACTER_hello=\"Hallo Welt\" puppet agent -t\n    Info: Caching catalog for cookbook.example.com\n    Info: Applying configuration version '1416212026'\n    Notice: Hallo Welt\n    Notice: /Stage[main]/Main/Node[cookbook]/Notify[Hallo Welt]/message: defined 'message' as 'Hallo Welt'\n    Notice: Finished catalog run in 0.27 seconds\n\n    ```", "```\n    [root@cookbook ~]# puppet resource user thomas\n    user { 'thomas':\n     ensure           => 'present',\n     comment          => 'thomas Admin User',\n     gid              => '1001',\n     groups           => ['bin', 'wheel'],\n     home             => '/home/thomas',\n     password         => '!!',\n     password_max_age => '99999',\n     password_min_age => '0',\n     shell            => '/bin/bash',\n     uid              => '1001',\n    }\n\n    ```", "```\n    [root@cookbook ~]# puppet resource service sshd\n    service { 'sshd':\n     ensure => 'running',\n     enable => 'true',\n    }\n\n    ```", "```\n    [root@cookbook ~]# puppet resource package kernel\n    package { 'kernel':\n     ensure => '2.6.32-431.23.3.el6',\n    }\n\n    ```", "```\n[root@cookbook ~]# puppet resource service\nservice { 'abrt-ccpp':\n ensure => 'running',\n enable => 'true',\n}\nservice { 'abrt-oops':\n ensure => 'running',\n enable => 'true',\n}\nservice { 'abrtd':\n ensure => 'running',\n enable => 'true',\n}\nservice { 'acpid':\n ensure => 'running',\n enable => 'true',\n}\nservice { 'atd':\n ensure => 'running',\n enable => 'true',\n}\nservice { 'auditd':\n ensure => 'running',\n enable => 'true',\n}\n\n```", "```\n[root@cookbook ~]# puppet resource file\nError: Could not run: Listing all file instances is not supported.  Please specify a file or directory, e.g. puppet resource file /etc\n\n```", "```\n[root@cookbook ~]# puppet resource package python-pip ensure=installed\nNotice: /Package[python-pip]/ensure: created\npackage { 'python-pip':\n ensure => '1.3.1-4.el6',\n}\n[root@cookbook ~]# pip install blueprint\nDownloading/unpacking blueprint\n Downloading blueprint-3.4.2.tar.gz (59kB): 59kB downloaded\n Running setup.py egg_info for package blueprint\nInstalling collected packages: blueprint\n Running setup.py install for blueprint\n changing mode of build/scripts-2.6/blueprint from 644 to 755\n...\nSuccessfully installed blueprint\nCleaning up...\n\n```", "```\n    [root@cookbook ~]# mkdir blueprint && cd blueprint\n    [root@cookbook blueprint]# blueprint create -P blueprint_test\n    # [blueprint] searching for APT packages to exclude\n    # [blueprint] searching for Yum packages to exclude\n    # [blueprint] caching excluded Yum packages\n    # [blueprint] parsing blueprintignore(5) rules\n    # [blueprint] searching for npm packages\n    # [blueprint] searching for configuration files\n    # [blueprint] searching for APT packages\n    # [blueprint] searching for PEAR/PECL packages\n    # [blueprint] searching for Python packages\n    # [blueprint] searching for Ruby gems\n    # [blueprint] searching for software built from source\n    # [blueprint] searching for Yum packages\n    # [blueprint] searching for service dependencies\n    blueprint_test/manifests/init.pp\n\n    ```", "```\n    #\n    # Automatically generated by blueprint(7).  Edit at your own risk.\n    #\n    class blueprint_test {\n      Exec {\n        path => '/usr/lib64/qt-3.3/bin:/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin:/root/bin',\n      }\n      Class['sources'] -> Class['files'] -> Class['packages']\n        class files {\n          file {\n            '/etc':\n              ensure => directory;\n            '/etc/aliases.db':\n    content => template('blueprint_test/etc/aliases.db'),\n              ensure  => file,\n    group   => root,\n              mode    => 0644,\n              owner   => root;\n    '/etc/audit':\n              ensure => directory;\n    '/etc/audit/audit.rules':\n              content => template('blueprint_test/etc/audit/audit.rules'),\n              ensure  => file,\n              group   => root,\n              mode    => 0640,\n              owner   => root;\n            '/etc/blkid':\n              ensure => directory;\n    '/etc/cron.hourly':\n              ensure => directory;\n    '/etc/cron.hourly/run-backup':\n              content => template('blueprint_test/etc/cron.hourly/run-backup'),\n              ensure  => file,\n              group   => root,\n              mode    => 0755,\n    owner   => root;\n    '/etc/crypttab':\n              content => template('blueprint_test/etc/crypttab'),\n              ensure  => file,\n              group   => root,\n              mode    => 0644,\n              owner   => root;\n    ```", "```\nclass yum {\n  package {\n    'GeoIP':\n      ensure => '1.5.1-5.el6.x86_64';\n    'PyXML':\n      ensure => '0.8.4-19.el6.x86_64';\n    'SDL':\n      ensure => '1.2.14-3.el6.x86_64';\n    'apr':\n      ensure => '1.3.9-5.el6_2.x86_64';\n    'apr-util':\n      ensure => '1.3.9-3.el6_0.1.x86_64';\n```", "```\nnode 'web1' {\n  include apache\n}\n```", "```\n    t@mylaptop ~/puppet $ mkdir -p modules/enc/manifests\n\n    ```", "```\n    class enc {\n      notify {\"We defined this from $enc\": }\n    }\n    ```", "```\n    #!/bin/bash\n    cat <<EOF\n    ---\n    classes:\n    enc:\n    parameters:\n      enc: $0\n    EOF\n    ```", "```\n    root@puppet:/etc/puppet# chmod a+x cookbook.sh \n\n    ```", "```\n    [main]\n      node_terminus = exec\n      external_nodes = /etc/puppet/cookbook.sh\n    ```", "```\n    node default {}\n    ```", "```\n    [root@cookbook ~]# puppet agent -t\n    Info: Caching catalog for cookbook.example.com\n    Info: Applying configuration version '1416376937'\n    Notice: We defined this from /etc/puppet/cookbook.sh\n    Notice: /Stage[main]/Enc/Notify[We defined this from /etc/puppet/cookbook.sh]/message: defined 'message' as 'We defined this from /etc/puppet/cookbook.sh'\n    Notice: Finished catalog run in 0.17 seconds\n\n    ```", "```\n---\nclasses:\n  CLASS1:\n  CLASS2:\n  CLASS3:\n```", "```\n---\nclasses:\n  mysql:\n    package: percona-server-server-5.5\n    socket:  /var/run/mysqld/mysqld.sock\n    port:    3306\n```", "```\n---\nparameters:\n  message: 'Anyone home MyFly?'\n```", "```\nPuppet::Type.newtype(:gitrepo) do\n  ensurable\n\n  newparam(:source) do\n    isnamevar\n  end\n\n  newparam(:path)\nend\n```", "```\nPuppet::Type.newtype(:gitrepo) do\n```", "```\nensurable\n```", "```\nnewparam(:source) do\n  isnamevar\nend\n```", "```\ngitrepo { 'git://github.com/puppetlabs/puppet.git':\n  path => '/home/ubuntu/dev/puppet',\n}\n```", "```\nnewparam(:path)\n```", "```\nPuppet::Type.newtype(:gitrepo) do\n  @doc = \"Manages Git repos\"\n\n  ensurable\n\n  newparam(:source) do\n    desc \"Git source URL for the repo\"\n    isnamevar\n  end\n\n  newparam(:path) do\n    desc \"Path where the repo should be created\"\n  end\nend\n```", "```\nnewparam(:path) do\n  validate do |value|\n    basepath = File.dirname(value)\n    unless File.directory?(basepath)\n      raise ArgumentError , \"The path %s doesn't exist\" % basepath\n    end\n  end\nend\n```", "```\nnewparam(:breakfast) do\n  newvalues(:bacon, :eggs, :sausages)\nend\n```", "```\n    require 'fileutils'\n\n    Puppet::Type.type(:gitrepo).provide(:git) do\n      commands :git => \"git\"\n\n      def create\n        git \"clone\", resource[:source], resource[:path]\n      end\n\n      def exists?\n        File.directory? resource[:path]\n      end\n    end\n    ```", "```\n    node 'cookbook' {\n      gitrepo { 'https://github.com/puppetlabs/puppetlabs-git':\n        ensure => present,\n        path   => '/tmp/puppet',\n      }\n    }\n    ```", "```\n    [root@cookbook ~]# puppet agent -t\n    Notice: /File[/var/lib/puppet/lib/puppet/type/gitrepo.rb]/ensure: defined content as '{md5}6471793fe2b4372d40289ad4b614fe0b'\n    Notice: /File[/var/lib/puppet/lib/puppet/provider/gitrepo]/ensure: created\n    Notice: /File[/var/lib/puppet/lib/puppet/provider/gitrepo/git.rb]/ensure: defined content as '{md5}f860388234d3d0bdb3b3ec98bbf5115b'\n    Info: Caching catalog for cookbook.example.com\n    Info: Applying configuration version '1416378876'\n    Notice: /Stage[main]/Main/Node[cookbook]/Gitrepo[https://github.com/puppetlabs/puppetlabs-git]/ensure: created\n    Notice: Finished catalog run in 2.59 seconds\n\n    ```", "```\nPuppet::Type.type(:gitrepo).provide(:git) do\n```", "```\ndef exists?\n  File.directory? resource[:path]\nend\n```", "```\ndef create\n  git \"clone\", resource[:source], resource[:path]\nend\n```", "```\n    module Puppet::Parser::Functions\n      newfunction(:random_minute, :type => :rvalue) do |args|\n        lookupvar('hostname').sum % 60\n      end\n    end\n    ```", "```\n    node 'cookbook' {\n      cron { 'randomised cron job':\n        command => '/bin/echo Hello, world >>/tmp/hello.txt',\n        hour    => '*',\n        minute  => random_minute(),\n      }\n    }\n    ```", "```\n    [root@cookbook ~]# puppet agent -t\n    Info: Retrieving pluginfacts\n    Info: Retrieving plugin\n    Notice: /File[/var/lib/puppet/lib/puppet/parser/functions/random_minute.rb]/ensure: defined content as '{md5}e6ff40165e74677e5837027bb5610744'\n    Info: Loading facts\n    Info: Caching catalog for cookbook.example.com\n    Info: Applying configuration version '1416379652'\n    Notice: /Stage[main]/Main/Node[cookbook]/Cron[custom fuction example job]/ensure: created\n    Notice: Finished catalog run in 0.41 seconds\n\n    ```", "```\n    [root@cookbook ~]# crontab -l\n    # HEADER: This file was autogenerated at Wed Nov 19 01:48:11 -0500 2014 by puppet.\n    # HEADER: While it can still be managed manually, it is definitely not recommended.\n    # HEADER: Note particularly that the comments starting with 'Puppet Name' should\n    # HEADER: not be deleted, as doing so could cause duplicate cron jobs.\n    # Puppet Name: run-backup\n    0 15 * * * /usr/local/bin/backup\n    # Puppet Name: custom fuction example job\n    15 * * * * /bin/echo Hallo, welt >>/tmp/hallo.txt\n\n    ```", "```\nmodule Puppet::Parser::Functions\n  ...\nend\n```", "```\nnewfunction(:random_minute, :type => :rvalue) do |args|\n```", "```\n    lookupvar('hostname').sum % 60\n```", "```\nmodule Puppet::Parser::Functions\n  newfunction(:hashtable, :type => :rvalue) do |args|\n    if args.length == 2\n      hashtable=lookupvar(args[1]).sum\n    else\n      hashtable=lookupvar('hostname').sum\n    end\n\n    if args.length > 0\n      size = args[0].to_i\n    else\n      size = 60\n    end\n    unless size == 0\n      hashtable % size\n    else\n      0\n    end\n  end\nend\n```", "```\nnode cookbook {\n  $hours = hashtable(24)\n  $minutes = hashtable()\n  $days = hashtable(30)\n  $days_fqdn = hashtable(30,'fqdn')\n  $days_ipaddress = hashtable(30,'ipaddress')\n  notify {\"\\n hours=${hours}\\n minutes=${minutes}\\n days=${days}\\n days_fqdn=${days_fqdn}\\n days_ipaddress=${days_ipaddress}\\n\":}\n}\n```", "```\nNotice:  hours=15\n minutes=15\n days=15\n days_fqdn=4\n days_ipaddress=2\n\n```", "```\nt@mylaptop~ $ sudo puppet resource package rspec-puppet ensure=installed provider=gem\nNotice: /Package[rspec-puppet]/ensure: created\npackage { 'rspec-puppet':\n ensure => ['1.0.1'],\n}\nt@mylaptop ~ $ sudo puppet resource package puppetlabs_spec_helper ensure=installed provider=gem\nNotice: /Package[puppetlabs_spec_helper]/ensure: created\npackage { 'puppetlabs_spec_helper':\n ensure => ['0.8.2'],\n}\n\n```", "```\n    class thing {\n      service {'thing':\n        ensure  => 'running',\n        enable  => true,\n        require => Package['thing'],\n      }\n      package {'thing':\n        ensure => 'installed'\n      }\n      file {'/etc/thing.conf':\n        content => 'fubar\\n',\n        mode    => 0644,\n        require => Package['thing'],\n        notify  => Service['thing'],\n      }\n    }\n    ```", "```\n    t@mylaptop ~/puppet]$cd modules/thing\n    t@mylaptop~/puppet/modules/thing $ rspec-puppet-init\n     + spec/\n     + spec/classes/\n     + spec/defines/\n     + spec/functions/\n     + spec/hosts/\n     + spec/fixtures/\n     + spec/fixtures/manifests/\n     + spec/fixtures/modules/\n     + spec/fixtures/modules/heartbeat/\n     + spec/fixtures/manifests/site.pp\n     + spec/fixtures/modules/heartbeat/manifests\n     + spec/fixtures/modules/heartbeat/templates\n     + spec/spec_helper.rb\n     + Rakefile\n\n    ```", "```\n    require 'spec_helper'\n\n    describe 'thing' do\n      it { should create_class('thing') }\n      it { should contain_package('thing') }\n      it { should contain_service('thing').with(\n        'ensure' => 'running'\n      ) }\n      it { should contain_file('/etc/things.conf') }\n    end\n    ```", "```\n    t@mylaptop ~/.puppet/modules/thing $ rspec\n    ...F\n\n    Failures:\n\n     1) thing should contain File[/etc/things.conf]\n     Failure/Error: it { should contain_file('/etc/things.conf') }\n     expected that the catalogue would contain File[/etc/things.conf]\n     # ./spec/classes/thing_spec.rb:9:in `block (2 levels) in <top (required)>'\n\n    Finished in 1.66 seconds\n    4 examples, 1 failure\n\n    Failed examples:\n\n    rspec ./spec/classes/thing_spec.rb:9 # thing should contain File[/etc/things.conf]\n\n    ```", "```\nrequire 'spec_helper'\n```", "```\ndescribe 'thing' do\n  ..\nend\n```", "```\n  it { should create_class('thing') }\n```", "```\n  it { should contain_package('thing') }\n```", "```\nit { should contain_service('thing').with(\n  'ensure' => 'running'\n) }\n```", "```\ncontain_service('thing')\n```", "```\nwith(\n  'ensure' => 'running'\n)\n```", "```\nit { should contain_file('/tmp/hello.txt').with(\n  'content' => \"Hello, world\\n\",\n  'owner'   => 'ubuntu',\n  'group'   => 'ubuntu',\n  'mode'    => '0644'\n) }\n```", "```\nit { should contain_file('/etc/thing.conf') }\n```", "```\n...F\nFailures:\n 1) thing should contain File[/etc/things.conf]\n Failure/Error: it { should contain_file('/etc/things.conf') }\n expected that the catalogue would contain File[/etc/things.conf]\n # ./spec/classes/thing_spec.rb:9:in `block (2 levels) in <top (required)>'\nFinished in 1.66 seconds\n4 examples, 1 failure\n\n```", "```\n  it { should contain_file('/etc/thing.conf') }\n```", "```\nt@mylaptop ~/.puppet/modules/thing $ rspec\n....\nFinished in 1.6 seconds\n4 examples, 0 failures\n\n```", "```\nroot@puppet:~# puppet resource package librarian-puppet ensure=installed provider=gem\nNotice: /Package[librarian-puppet]/ensure: created\npackage { 'librarian-puppet':\n ensure => ['2.0.0'],\n}\n\n```", "```\n    root@puppet:~# mkdir librarian\n    root@puppet:~# cd librarian\n\n    ```", "```\n    #!/usr/bin/env ruby\n    #^syntax detection\n\n    forge \"https://forgeapi.puppetlabs.com\"\n\n    # A module from the Puppet Forge\n    mod 'puppetlabs-stdlib'\n    ```", "```\n    root@puppet:~/librarian# librarian-puppet init\n     create  Puppetfile\n\n    ```", "```\n    root@puppet:~/librarian# librarian-puppet install\n    root@puppet:~/librarian # ls\n    modules  Puppetfile  Puppetfile.lock\n    root@puppet:~/librarian # ls modules\n    stdlib\n\n    ```", "```\n#!/usr/bin/env ruby\n```", "```\nforge \"https://forgeapi.puppetlabs.com\"\n```", "```\nmod 'puppetlabs-stdlib'\n```", "```\nFORGE\n  remote: https://forgeapi.puppetlabs.com\n  specs:\n    puppetlabs-stdlib (4.4.0)\n\nDEPENDENCIES\n  puppetlabs-stdlib (>= 0)\n```", "```\n    root@puppet:~# puppet resource package r10k ensure=installed provider=gem\n    Notice: /Package[r10k]/ensure: created\n    package { 'r10k':\n     ensure => ['1.3.5'],\n    }\n\n    ```", "```\n    [git@git repos]$ git clone --bare puppet.git puppet-r10k.git\n    Initialized empty Git repository in /home/git/repos/puppet-r10k.git/\n\n    ```", "```\n    t@mylaptop ~ $ git clone git@git.example.com:repos/puppet-r10k.git\n    Cloning into 'puppet-r10k'...\n    remote: Counting objects: 2660, done.\n    remote: Compressing objects: 100% (2136/2136), done.\n    remote: Total 2660 (delta 913), reused 1049 (delta 238)\n    Receiving objects: 100% (2660/2660), 738.20 KiB | 0 bytes/s, done.\n    Resolving deltas: 100% (913/913), done.\n    Checking connectivity... done.\n    t@mylaptop ~ $ cd puppet-r10k/\n    t@mylaptop ~/puppet-r10k $ git checkout production\n    Branch production set up to track remote branch production from origin.\n    Switched to a new branch 'production'\n    t@mylaptop ~/puppet-r10k $ git mv modules local\n    t@mylaptop ~/puppet-r10k $ git commit -m \"moving modules in preparation for r10k\"\n    [master c96d0dc] moving modules in preparation for r10k\n     9 files changed, 0 insertions(+), 0 deletions(-)\n     rename {modules => local}/base (100%)\n     rename {modules => local}/puppet/files/papply.sh (100%)\n     rename {modules => local}/puppet/files/pull-updates.sh (100%)\n     rename {modules => local}/puppet/manifests/init.pp (100%)\n\n    ```", "```\n    forge \"http://forge.puppetlabs.com\"\n    mod 'puppetlabs/puppetdb', '3.0.0'\n    mod 'puppetlabs/stdlib', '3.2.0'\n    mod 'puppetlabs/concat'\n    mod 'puppetlabs/firewall'\n    ```", "```\n    t@mylaptop ~/puppet-r10k $ git add Puppetfile\n    t@mylaptop ~/puppet-r10k $ git commit -m \"adding Puppetfile\"\n    [production d42481f] adding Puppetfile\n     1 file changed, 7 insertions(+)\n     create mode 100644 Puppetfile\n    t@mylaptop ~/puppet-r10k $ git push\n    Counting objects: 7, done.\n    Delta compression using up to 4 threads.\n    Compressing objects: 100% (5/5), done.\n    Writing objects: 100% (5/5), 589 bytes | 0 bytes/s, done.\n    Total 5 (delta 2), reused 0 (delta 0)\n    To git@git.example.com:repos/puppet-r10k.git\n     cf8dfb9..d42481f  production -> production\n\n    ```", "```\n    ---\n    :cachedir: '/var/cache/r10k'\n    :sources:\n     :plops:\n     remote: 'git@git.example.com:repos/puppet-r10k.git'\n     basedir: '/etc/puppet/environments'\n\n    ```", "```\n    root@puppet:~# r10k deploy environment -p\n\n    ```", "```\n    root@puppet:/etc/puppet/environments# tree -L 2\n    .\n    ├── master\n    │   ├── manifests\n    │   ├── modules\n    │   └── README\n    └── production\n     ├── environment.conf\n     ├── local\n     ├── manifests\n     ├── modules\n     ├── Puppetfile\n     └── README\n\n    ```"]