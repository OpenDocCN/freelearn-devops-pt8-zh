["```\napiVersion: apps.open-cluster-management.io/v1\nkind: Channel\nmetadata:\n  name: cloud-api-github\n  namespace: clouds-api-dev\nspec:\n  pathname: https://github.com/PacktPublishing/OpenShift-Multi-Cluster-Management-Handbook.git #[1]\n  type: Git\n```", "```\napiVersion: apps.open-cluster-management.io/v1\nkind: PlacementRule\nmetadata:\n  name: cloud-api-placement\n  namespace: clouds-api-dev\n  labels:\n    app: cloud-api\nspec:\n  clusterSelector:\n    matchLabels:\n      env: dev #[1]\n```", "```\napiVersion: apps.open-cluster-management.io/v1\nkind: Subscription\nmetadata:\n  name: cloud-api-subscription\n  namespace: clouds-api-dev\n  annotations:\n    apps.open-cluster-management.io/git-path: sample-go-app/clouds-api/k8s/ #[1]\n  labels:\n    app: cloud-api #[2]\nspec:\n  channel: clouds-api-dev/cloud-api-github #[3]\n  placement:\n    placementRef: #[4]\n      name: cloud-api-placement\n      kind: PlacementRule\n```", "```\napiVersion: app.k8s.io/v1beta1\nkind: Application\nmetadata:\n  name: cloud-api\n  namespace: clouds-api-dev\nspec:\n  componentKinds:\n    - group: apps.open-cluster-management.io\n      kind: Subscription\n  descriptor: {}\n  selector:\n    matchExpressions: #[1]\n      - key: app\n        operator: In\n        values:\n          - cloud-api\n```", "```\n$ git clone https://github.com/PacktPublishing/OpenShift-Multi-Cluster-Management-Handbook.git\n$ cd OpenShift-Multi-Cluster-Management-Handbook/\n$ oc apply -k chapter11/acm-model\nnamespace/clouds-api-dev created\napplication.app.k8s.io/cloud-api created\nchannel.apps.open-cluster-management.io/cloud-api-github created\nplacementrule.apps.open-cluster-management.io/cloud-api-placement created\nsubscription.apps.open-cluster-management.io/cloud-api-subscription created\n```", "```\n$ oc get application -n clouds-api-dev\nNAME        TYPE   VERSION   OWNER   READY   AGE\ncloud-api                                    5m48s\n```", "```\n$ git clone https://github.com/PacktPublishing/OpenShift-Multi-Cluster-Management-Handbook.git\n$ cd OpenShift-Multi-Cluster-Management-Handbook/\n$ oc apply -k chapter11/argocd\ngitopscluster.apps.open-cluster-management.io/argo-acm-clusters created\nmanagedclusterset.cluster.open-cluster-management.io/all-clusters created\nmanagedclustersetbinding.cluster.open-cluster-management.io/all-clusters created\nplacement.cluster.open-cluster-management.io/all-clusters created\n```", "```\n$ oc apply -f chapter11/argocd/applicationset.yaml\napplicationset.argoproj.io/cloud-api created\nplacement.cluster.open-cluster-management.io/cloud-api-placement created\n```", "```\n$ git clone https://github.com/PacktPublishing/OpenShift-Multi-Cluster-Management-Handbook.git\n$ cd OpenShift-Multi-Cluster-Management-Handbook/\n$ oc apply -k chapter11/governance\nnamespace/acm-policies-sample created\nplacementrule.apps.open-cluster-management.io/placement-policy-etcdencryption created\nplacementbinding.policy.open-cluster-management.io/binding-policy-etcdencryption created\npolicy.policy.open-cluster-management.io/policy-etcdencryption created\n```", "```\n    $ LOCATION=eastus #[1]\n    $ RESOURCEGROUP=aro-rg #[2]\n    $ CLUSTER=MyHubCluster #[3]\n    $ STORAGEBLOB=observsto #[4]\n    $ az storage account create --name $STORAGEBLOB --resource-group $RESOURCEGROUP --location $LOCATION --sku Standard_ZRS --kind StorageV2 #[5]\n    $ az ad signed-in-user show --query objectID –o tsv | az role assignment create --role \"Storage Blob Data Contributor\" --assignee @- --scope \"subscriptions/11111111-2222-a1a1-d3d3-12mn12mn12mn/resourceGroups/$RESOURCEGROUP/providers/Microsoft.Storage/storageAccountes/$STORAGEBLOB\" #[6]\n    $ az storage container create --account-name $STORAGEBLOB --name container-observ --auth-mode login #[7]\n         \"created\": true\n    $ az storage account show-connection-string –name $STORAGEBLOB\n    \"connectionString\": \"DefaultEndpointsProtocol=https;EndpointSuffix=conre.windows.net;AccountName=observsto;AccountKey=sfsfoefoosdfojevntoaa/dsafojosjfsodfsafdsaf==\" #[8]\n    ```", "```\n    $ oc create namespace open-cluster-management-observability\n    ```", "```\n    $DOCKER_CONFIG_JSON='oc extract secret/pull-secret –n openshift-config --to=.' #[1]\n    .dockerconfigjson\n    $ oc create secret generic multiclusterhub-operator-pull-secret –n open-cluster-management-observability --from-literal=.dockerconfigjson=\"DOCKER_CONFIG_JSON\" --type= kubernetes.io/dockerconfigjson #[2]\n    (.. omitted ..)\n      thanos.yaml: |\n        type: AZURE\n        config:\n          storage_account: observsto  #[3]\n          storage_account_key: sfsfoefoosdfojevntoaa/dsafojosjfsodfsafdsaf== #[3]\n          container: container-observ #[3]\n          endpoint: blob.core.windows.net\n          max_retries: 0\n    (.. omitted ..)\n    ```", "```\nglobal:\n  slack_api_url: 'https://hooks.slack.com/services/T03ECLDORAS04/B03DVP1Q91D/R4Oabcioek' #[1]\n  resolve_timeout: 1m\nroute:\n  receiver: 'slack-notifications'\n(.. omitted ..)\n  routes:\n    - receiver: slack-notifications #[2]\n      match:\n        severity: critical|warning #[3]\nreceivers:\n- name: 'slack-notifications'\n  slack_configs:\n  - channel: '#alertmanager-service' #[4]\n    send_resolved: true\n    icon_url: https://avatars3.githubusercontent.com/u/3380462\n    title: |-\n     [{{ .Status | toUpper }}{{ if eq .Status \"firing\" }}:{{ .Alerts.Firing | len }}{{ end }}] {{ .CommonLabels.alertname }} for {{ .CommonLabels.job }}\n(.. omitted ..)\n```", "```\n$ oc -n open-cluster-management-observability create secret generic alertmanager-config --from-file=alertmanager.yaml --dry-run=client -o=yaml |  oc -n open-cluster-management-observability replace secret --filename=-\n```"]