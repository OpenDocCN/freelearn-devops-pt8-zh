["```\nFROM python:2.7-slim\nWORKDIR /app\nADD . /app\nRUN pip install --trusted-host pypi.python.org -r requirements.txt\nEXPOSE 80\nENV NAME HandsOnAzure\nCMD [\"python\", \"app.py\"]\n```", "```\nFlask\nRedis\n```", "```\nfrom flask import Flask\nfrom redis import Redis, RedisError\nimport os\nimport socket\n\n# Connect to Redis\nredis = Redis(host=\"redis\", db=0, socket_connect_timeout=2, socket_timeout=2)\n\napp = Flask(__name__)\n\n@app.route(\"/\")\ndef hello():\n    try:\n        visits = redis.incr(\"counter\")\n    except RedisError:\n        visits = \"<i>cannot connect to Redis, counter disabled</i>\"\n\n    html = \"<h3>Hello {name}!</h3>\" \\\n           \"<b>Hostname:</b> {hostname}<br/>\" \\\n           \"<b>Visits:</b> {visits}\"\n    return html.format(name=os.getenv(\"NAME\", \"HandsOnAzure\"), hostname=socket.gethostname(), visits=visits)\n\nif __name__ == \"__main__\":\n    app.run(host='0.0.0.0', port=80)\n```", "```\ndocker build -t {IMAGE_NAME} .\n```", "```\ndocker run -p 4000:80 {IMAGE_NAME}\n```", "```\ndocker images\n```", "```\ndocker tag handsonazurehello {ACR_LOGIN_SERVER}/handsonazurehello:v1\n```", "```\ndocker push handsonazureregistry.azurecr.io/handsonazurehello:v1\n```", "```\n$ docker push handsonazureregistry.azurecr.io/handsonazurehello:v1\nThe push refers to repository [handsonazureregistry.azurecr.io/handsonazurehello]\nbbdbf9d56e79: Preparing\n128193523190: Preparing\nf78e6f8eec4b: Preparing\n20f93bdcee9c: Preparing\n21b24882d499: Preparing\ndb9dabc5cfee: Waiting\nd626a8ad97a1: Waiting\nunauthorized: authentication required\n```", "```\naz login\naz acr login --name {REGISTRY_NAME}\n```", "```\n$ docker push handsonazureregistry.azurecr.io/handsonazurehello:v1\nThe push refers to repository [handsonazureregistry.azurecr.io/handsonazurehello]\nbbdbf9d56e79: Pushed\n128193523190: Pushed\nf78e6f8eec4b: Pushed\n20f93bdcee9c: Pushed\n21b24882d499: Pushed\ndb9dabc5cfee: Pushed\nd626a8ad97a1: Pushed\nv1: digest: sha256:2e689f437e1b31086b5d4493c8b4ef93c92640ad576f045062c81048d8988aa6 size: 1787\n```", "```\nkubectl get nodes\n```", "```\nUnable to connect to the server: dial tcp [::1]:8080: connectex: No connection could be made because the target machine actively refused it.\n```", "```\naz aks get-credentials --resource-group {RESSOURCE_GROUP} --name {AKS_CLUSTER_NAME}\n```", "```\nkubectl apply -f handsonazure.yml\n```", "```\n$ kubectl apply -f handsonazure.yml\ndeployment \"handsonazurehello-back\" created\nservice \"handsonazurehello-back\" created\ndeployment \"handsonazurehello\" configured\nservice \"handsonazurehello\" unchanged\n```", "```\n$ kubectl get service handsonazurehello --watch\nNAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGE\nhandsonazurehello LoadBalancer 10.0.223.94 40.118.7.118 80:30910/TCP 4m\n```", "```\naz aks browse --resource-group {RESOURCE_GROUP} --name {AKS_CLUSTER_NAME}\n```", "```\n$ az acr show --name {REGISTRY_NAME} --query loginServer --output tsv\n{YOUR_REGISTRY_NAME}\n\n$ az acr show --name handsonazureregistry --query id --output tsv\n/subscriptions/94f33c43-60b5-4042-ae74-51777f69f99a/resourceGroups/handsonazure-rg/providers/Microsoft.ContainerRegistry/registries/handsonazureregistry\n{REGISTRY_ID}\n\n$ az ad sp create-for-rbac --name acr-service-principal --role Reader --scopes {REGISTRY_ID} --query password --output tsv\n{PASSWORD}\n\n$ az ad sp show --id http://acr-service-principal --query appId --output tsv\n{CLIENT_ID}\n\n$ kubectl create secret docker-registry acr-auth --docker-server {YOUR_REGISTRY_NAME} --docker-username {CLIENT_ID} --docker-password {PASSWORD} --docker-email {DOCKER_ACCOUNT_EMAIL}\n```", "```\ncontainers:\n - name: handsonazurehello\n image: handsonazureregistry.azurecr.io/handsonazurehello:v1\n ports:\n - containerPort: 80\n resources:\n requests:\n cpu: 250m\n limits:\n cpu: 500m\n env:\n - name: REDIS\n value: \"handsonazurehello-back\"\n imagePullSecrets:\n - name: acr-auth\n```", "```\ndocker tag handsonazurehello {ACR_LOGIN_SERVER}/handsonazurehello:v2\n```", "```\ndocker push\n{ACR_LOGIN_SERVER}/handsonazurehello:v2\n```", "```\nkubectl set image deployment handsonazurehello handsonazurehello=\n{ACR_LOGIN_SERVER}/handsonazurehello:v2\n```", "```\nFROM node:8.9.3-alpine\nRUN mkdir -p /bin/\nCOPY ./app/ /bin/\nWORKDIR /bin\nRUN npm install\nCMD node index.js\n```", "```\ndocker build ./ -t {CONTAINER_NAME}\n```", "```\ndocker run -d -p 8080:80 {CONTAINER_NAME}\n```", "```\naz acr login --name {ACR_NAME}\ndocker tag {CONTAINER_NAME} {ACR_LOGIN_SERVER}/{CONTAINER_NAME}:v1\ndocker push {ACR_LOGIN_SERVER}/{CONTAINER_NAME}:v1\n\n```", "```\naz acr credential show --name {REGISTRY_NAME}--query \"passwords[0].value\"\n```"]