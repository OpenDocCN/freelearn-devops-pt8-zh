["```\nNew-Item -ItemType directory -Path 'C:\\Shares\\Marketing'\nNew-Item -ItemType directory -Path 'C:\\Shares\\Finance'\nNew-Item -ItemType directory -Path 'C:\\Shares\\Production'\nNew-Item -ItemType directory -Path 'C:\\Shares\\Sales'\nNew-Item -ItemType directory -Path 'C:\\Shares\\Executives'\nNew-Item -ItemType directory -Path 'C:\\Shares\\HumanResources'\nNew-Item -ItemType directory -Path 'C:\\Shares\\ResearchDevelopment'\nNew-SmbShare -Name Marketing -Path 'C:\\Shares\\Marketing' -FullAccess Everyone\nNew-SmbShare -Name Production -Path 'C:\\Shares\\Production' -FullAccess Everyone\nNew-SmbShare -Name Sales -Path 'C:\\Shares\\Sales' -FullAccess Everyone\nNew-SmbShare -Name HumanResources -Path 'C:\\Shares\\HumanResources' -FullAccess Everyone\nNew-SmbShare -Name ResearchDevelopment -Path 'C:\\Shares\\ResearchDevelopment' -FullAccess Everyone\nNew-SmbShare -Name Finance -Path 'C:\\Shares\\Finance' -FullAccess Everyone\nNew-SmbShare -Name Executives -Path 'C:\\Shares\\Executives' -FullAccess Everyone\n```", "```\n# Open an evaluated PowerShell\n# Provide your global administrator credentials\n$Creds = Get-Credential\n$Session = New-PSSession -ConfigurationName Microsoft.Exchange -ConnectionUri https://outlook.office365.com/powershell-liveid/ -Credential $Creds -Authentication Basic -AllowRedirection\nImport-PSSession $Session\nNew-TransportRule -Name \"Protect external mails (Contains Credit Card)\" -SentToScope NotInOrganization -ApplyRightsProtectionTemplate \"Encrypt\" -MessageContainsDataClassifications @(@{Name=\"Credit Card Number\"; minCount=\"1\"})\n```", "```\n# Label ID of Confidential / All Employees gathered on the Azure Information Protection blade\n$labelid = \"6eae6a7b-f321-4fc4-8049-1ef7cc9575b2\"\n$label = \"MSIP_Label_\"+$labelid+\"_enabled=true\"\nNew-TransportRule -name \"Protect External User Access\" -SentToScope notinorganization -HeaderContainsMessageHeader \"msip_labels\" -HeaderContainsWord $label -RejectMessageReasonText \"Internal Protected Message\"\n```", "```\nNew-ADUser -Name \"svcaipscanner\" -SamAccountName svcaipscanner -UserPrincipalName svcaipscanner@inovitdemos.ch -path \"OU=Users,OU=AIP,OU=Managed Service Objects,DC=inovitdemos,DC=ch\" -AccountPassword (ConvertTo-SecureString \"YourPassword\" -AsPlainText -Force) -Enabled $True\n```", "```\nConnect-AzureAD\n$PasswordProfile = New-Object -TypeName Microsoft.Open.AzureAD.Model.PasswordProfile $PasswordProfile.ForceChangePasswordNextLogin = $false $Password = Read-Host -assecurestring \"Please enter password for cloud service account\" $Password = [System.Runtime.InteropServices.Marshal]::PtrToStringAuto([System.Runtime.InteropServices.Marshal]::SecureStringToBSTR($Password)) $PasswordProfile.Password = $Password\n$Tenant = Read-Host \"Please enter tenant name for UserPrincipalName (e.g. inovitdemos.ch)\" New-AzureADUser -AccountEnabled $True -DisplayName \"AIP Scanner Cloud Service\" -PasswordProfile $PasswordProfile -MailNickName \"AIPScannerCloud\" -UserPrincipalName \"AIPScannerCloud@$Tenant\"\n```", "```\nInstall-Module AADRM\n```", "```\nConnect-AadrmService\n```", "```\nEnable-AadrmSuperUserFeature\n```", "```\nSet-AadrmSuperUserGroup -GroupEmailAddress \"AzureRMSSuperUsers@yourdomain1.com\"\n```", "```\n$cred = Get-Credential\nInstall-AIPScanner -SqlServerInstance YD1APP01 -ServiceUserCredentials $cred\n```", "```\nInstall-Module AzureADPreview\n```", "```\nConnect-AzureAD\n```", "```\nNew-AzureADApplication -DisplayName AIPOnBehalfOf -ReplyUrls 'http://localhost'\n$WebApp = Get-AzureADApplication -Filter \"DisplayName eq 'AIPOnBehalfOf'\"\nNew-AzureADServicePrincipal -AppId $WebApp.AppId\n$WebAppKey = New-Guid\n$Date = Get-Date\nNew-AzureADApplicationPasswordCredential -ObjectId $WebApp.ObjectID -startDate $Date -endDate $Date.AddYears(1) -Value $WebAppKey.Guid -CustomKeyIdentifier \"AIPClient\"\n```", "```\n$AIPServicePrincipal = Get-AzureADServicePrincipal -All $true | ? {$_.DisplayName -eq 'AIPOnBehalfOf'}\n $AIPPermissions = $AIPServicePrincipal | select -expand Oauth2Permissions\n $Scope = New-Object -TypeName \"Microsoft.Open.AzureAD.Model.ResourceAccess\" -ArgumentList $AIPPermissions.Id,\"Scope\"\n $Access = New-Object -TypeName \"Microsoft.Open.AzureAD.Model.RequiredResourceAccess\"\n $Access.ResourceAppId = $WebApp.AppId\n $Access.ResourceAccess = $Scope\n```", "```\nNew-AzureADApplication -DisplayName AIPClient -ReplyURLs http://localhost -RequiredResourceAccess $Access -PublicClient $true\n $NativeApp = Get-AzureADApplication -Filter \"DisplayName eq 'AIPClient'\"\n New-AzureADServicePrincipal -AppId $NativeApp.AppId\n```", "```\n\"Set-AIPAuthentication -WebAppID \" + $WebApp.AppId + \" -WebAppKey \" + $WebAppKey.Guid + \" -NativeAppID \" + $NativeApp.AppId | Out-File ~\\Desktop\\Set-AIPAuthentication.txt\n Start ~\\Desktop\\Set-AIPAuthentication.txt\n```", "```\nSet-AIPAuthentication -WebAppID 10fea33d-a6c0-44cb-88ea-eca3cf673d4d -WebAppKey f84ec310-cb36-44f9-ab7f-4edeecf099d0 -NativeAppID 4f478966-0930-4fc3-b1e4-a3acb92d4932\n```", "```\nUpdate-AIPScanner -Profile WestEurope\n```"]