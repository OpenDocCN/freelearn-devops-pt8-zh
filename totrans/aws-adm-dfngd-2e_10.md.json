["```\n{ \n    \"Version\": \"2012-10-17\", \n    \"Statement\": [ \n        { \n            \"Effect\": \"Allow\", \n            \"Action\": [ \n                \"cloudwatch:*\", \n                \"datapipeline:DescribeObjects\", \n                \"datapipeline:EvaluateExpression\", \n                \"dynamodb:BatchGetItem\", \n                \"dynamodb:DescribeTable\", \n                \"dynamodb:GetItem\", \n                ... \n                \"ec2:RunInstances\", \n                \"ec2:StartInstances\", \n                \"ec2:StopInstances\", \n                ... \n                \"elasticmapreduce:*\", \n                \"iam:GetInstanceProfile\", \n                \"iam:GetRole\", \n                \"iam:GetRolePolicy\", \n                ...   \n                \"rds:DescribeDBInstances\", \n                \"rds:DescribeDBSecurityGroups\", \n                \"redshift:DescribeClusters\", \n                \"redshift:DescribeClusterSecurityGroups\", \n                \"s3:CreateBucket\", \n                \"s3:DeleteObject\", \n                \"s3:Get*\", \n                \"s3:List*\", \n                \"s3:Put*\", \n                ... \n                \"sns:ListTopics\", \n                \"sns:Publish\", \n                \"sns:Subscribe\", \n                ... \n                \"sqs:GetQueue*\", \n                \"sqs:PurgeQueue\", \n                \"sqs:ReceiveMessage\" \n            ], \n            \"Resource\": [ \n                \"*\" \n            ] \n        }, \n        { \n            \"Effect\": \"Allow\", \n            \"Action\": \"iam:CreateServiceLinkedRole\", \n            \"Resource\": \"*\", \n            \"Condition\": { \n                \"StringLike\": { \n                    \"iam:AWSServiceName\": [ \n                        \"elasticmapreduce.amazonaws.com\", \n                        \"spot.amazonaws.com\" \n                    ] \n                } \n            } \n        } \n    ] \n}\n```", "```\n{ \n    \"Version\": \"2012-10-17\", \n    \"Statement\": [ \n        { \n            \"Effect\": \"Allow\", \n            \"Action\": [ \n                \"cloudwatch:*\", \n                \"datapipeline:*\", \n                \"dynamodb:*\", \n                \"ec2:Describe*\", \n                \"elasticmapreduce:AddJobFlowSteps\", \n                \"elasticmapreduce:Describe*\", \n                \"elasticmapreduce:ListInstance*\", \n                \"elasticmapreduce:ModifyInstanceGroups\", \n                \"rds:Describe*\", \n                \"redshift:DescribeClusters\", \n                \"redshift:DescribeClusterSecurityGroups\", \n                \"s3:*\", \n                \"sdb:*\", \n                \"sns:*\", \n                \"sqs:*\" \n            ], \n            \"Resource\": [ \n                \"*\" \n            ] \n        } \n    ] \n} \n```", "```\n{ \n  \"objects\" : [ \n    { \n       \"key1\" : \"value1\", \n       \"key2\" : \"value2\" \n    }, \n    { \n       \"key3\" : \"value3\" \n    } \n  ] \n} \n```", "```\n{ \n  \"objects\": [ \n    { \n      \"failureAndRerunMode\": \"CASCADE\", \n      \"resourceRole\": \"DataPipelineDefaultResourceRole\", \n      \"role\": \"DataPipelineDefaultRole\", \n      \"pipelineLogUri\": \"s3://us-east-datapipeline-logs-01/logs/\", \n      \"scheduleType\": \"ONDEMAND\", \n      \"name\": \"Default\", \n      \"id\": \"Default\" \n    }, \n    { \n      \"name\": \"myActivity\", \n      \"id\": \"ShellCommandActivityId_2viZe\", \n      \"runsOn\": { \n        \"ref\": \"ResourceId_EhxAF\" \n      }, \n      \"type\": \"ShellCommandActivity\", \n      \"command\": \"echo \"This is just a Hello World message!\"\" \n    }, \n    { \n      \"resourceRole\": \"DataPipelineDefaultResourceRole\", \n      \"role\": \"DataPipelineDefaultRole\", \n      \"name\": \"myEC2Resource\", \n      \"id\": \"ResourceId_EhxAF\", \n      \"type\": \"Ec2Resource\", \n      \"terminateAfter\": \"10 Minutes\" \n    } \n  ], \n  \"parameters\": [] \n} \n```", "```\n{ \n      \"name\": \"myEC2Resource\", \n      \"id\": \"ResourceId_EhxAF\", \n      \"type\": \"Ec2Resource\", \n       ... \n} \n```", "```\n{ \n      \"name\": \"myActivity\", \n      \"id\": \"ShellCommandActivityId_2viZe\", \n      \"runsOn\": { \n        \"ref\": \"ResourceId_EhxAF\" \n      }, \n      \"type\": \"ShellCommandActivity\", \n      \"command\": \"echo \"This is just a Hello World message!\"\" \n    }, \n    { \n      \"resourceRole\": \"DataPipelineDefaultResourceRole\", \n      \"role\": \"DataPipelineDefaultRole\", \n      \"name\": \"myEC2Resource\", \n      \"id\": \"ResourceId_EhxAF\", \n      \"type\": \"Ec2Resource\", \n      \"terminateAfter\": \"10 Minutes\" \n    } \n```", "```\n{ \n  \"id\": \" ResourceId_EhxAF\", \n  \"type\": \"Ec2Resource\", \n  \"myCustomField\": \"This is a custom field.\", \n  \"myCustomReference\": {\"ref\":\" ShellCommandActivityId_2vi\"} \n  }, \n```", "```\n \"#{VARIABLE_NAME}\"\n```", "```\n{ \n      \"name\": \"myActivity\", \n      \"id\": \"ShellCommandActivityId_2viZe\", \n      \"runsOn\": { \n        \"ref\": \"ResourceId_EhxAF\" \n      }, \n      \"type\": \"ShellCommandActivity\", \n      \"command\": \"#{myVariable}\" \n}\n```", "```\n{ \n  \"parameters\": [ \n    { \n      \"id\": \"myVariable\", \n      \"description\": \"Shell command to run\", \n      \"type\": \"String\", \n      \"default\": \"echo \"Default message!\"\" \n    } \n  ] \n} \n```", "```\n#!/bin/bash \necho \"----------------------------------\" \necho \"Your username is: $(echo $USER)\" \necho \"----------------------------------\" \necho \"The current date and time : $(date)\" \necho \"----------------------------------\" \necho \"Users currently logged on this system: \" \necho \"$(who)\" \necho \"----------------------------------\" \necho \"AWS CLI installed at: \" \necho \"$(aws --version)\" \necho \"----------------------------------\" \n```", "```\n{ \n  \"objects\": [ \n    { \n      \"failureAndRerunMode\": \"CASCADE\", \n      \"resourceRole\": \"DataPipelineDefaultResourceRole\", \n      \"role\": \"DataPipelineDefaultRole\", \n      \"pipelineLogUri\": \"s3://<DATAPIPELINE_LOG_BUCKET>\", \n      \"scheduleType\": \"ONDEMAND\", \n      \"name\": \"Default\", \n      \"id\": \"Default\" \n    }, \n    { \n      \"name\": \"CliActivity\", \n      \"id\": \"CliActivity\", \n      \"runsOn\": { \n        \"ref\": \"Ec2Instance\" \n      }, \n      \"type\": \"ShellCommandActivity\", \n      \"command\": \"(sudo yum -y update aws-cli) && (#{myCustomScriptCmd})\" \n    }, \n    { \n      \"instanceType\": \"t1.micro\", \n      \"name\": \"Ec2Instance\", \n      \"id\": \"Ec2Instance\", \n      \"type\": \"Ec2Resource\", \n      \"terminateAfter\": \"15 Minutes\" \n    } \n  ], \n  \"parameters\": [ \n    { \n      \"watermark\": \"aws [options] <command> <subcommand> [parameters]\", \n      \"description\": \"AWS CLI command\", \n      \"id\": \"myCustomScriptCmd\", \n      \"type\": \"String\" \n    } \n  ], \n  \"values\": { \n    \"myCustomScriptCmd\": \"aws s3 cp s3://<S3_BUCKET_SCRIPT_LOCATION>/simplescript.sh . && sh simplescript.sh\" \n  } \n} \n```", "```\n  \"objects\": [\n    {\n      \"failureAndRerunMode\": \"CASCADE\",\n      \"resourceRole\": \"DataPipelineDefaultResourceRole\",\n      \"role\": \"DataPipelineDefaultRole\",\n      \"pipelineLogUri\": \"#{myDataPipelineLogs}\",\n      \"scheduleType\": \"ONDEMAND\",\n      \"name\": \"Default\",\n      \"id\": \"Default\"\n    },\n```", "```\n    {\n      \"filePath\": \"#{myInputS3FilePath}\",\n      \"name\": \"inputS3Bucket\",\n      \"id\": \"InputS3FilePath\",\n      \"type\": \"S3DataNode\"\n    },\n    {\n      \"filePath\": \"#{myOutputS3FilePath}/#{format(@scheduledStartTime, 'YYYY-MM-dd-HH-mm-ss')}.bak\",\n      \"name\": \"outputS3Bucket\",\n      \"id\": \"OutputS3FilePath\",\n      \"type\": \"S3DataNode\"\n    },\n```", "```\n{\n    \"role\": \"DataPipelineDefaultRole\",\n    \"subject\": \"Failure\",\n    \"name\": \"SNSAlertonFailure\",\n    \"id\": \"OnFailSNSAlert\",\n    \"message\": \"File was not copied over successfully. Pls check with Data Pipeline Logs\",\n    \"type\": \"SnsAlarm\",\n    \"topicArn\": \"#{mySNSTopicARN}\"\n},\n```", "```\n  \"parameters\": [\n    {\n      \"watermark\": \"s3://mysourcebucket/filename\",\n      \"description\": \"Source File Path:\",\n      \"id\": \"myInputS3FilePath\",\n      \"type\": \"AWS::S3::ObjectKey\",\n      \"myComment\": \"The File path from the Input S3 Bucket\"\n    },\n    {\n      \"watermark\": \"s3://mydestinationbucket/filename\",\n      \"description\": \"Destination (Backup) File Path:\",\n      \"id\": \"myOutputS3FilePath\",\n      \"myComment\": \"The File path for the Output S3 Bucket\",\n      \"type\": \"AWS::S3::ObjectKey\"\n    },\n    {\n      \"watermark\": \"arn:aws:sns:us-east-1:28619EXAMPLE:ExampleTopic\",\n      \"description\": \"SNS Topic ARN:\",\n      \"id\": \"mySNSTopicARN\",\n      \"type\": \"string\",\n      \"myComment\": \"The SNS Topic's ARN for notifications\"\n    },\n. . . .\n  ]\n}\n```", "```\n{ \n  \"id\" : \"Default\", \n  \"type\" : \"Schedule\", \n  \"period\" : \"1 hours\", \n  \"startDateTime\" : \"2018-03-01T00:00:00\", \n  \"endDateTime\" : \"2018-04-01T00:00:00\" \n} \n```", "```\n# aws datapipeline create-pipeline  \n--name <NAME_OF_PIPELINE>  \n--unique-id <UNIQUE_TOKEN> \n```", "```\n{ \n  \"values\": \n    { \n      \"myDataPipelineLogs\": \"s3://<BUCKET_NAME>\", \n      \"myOutputS3FilePath\": \"s3://<BUCKET_NAME>/<FOLDER>\", \n      \"myInputS3FilePath\": \"s3://<BUCKET_NAME>/<FILE_NAME>\", \n      \"mySNSTopicARN\": \"<SNS_ARN_FOR_NOTIFICATIONS>\", \n      \"myEC2InstanceType\": \"t1.micro\", \n      \"myEC2InstanceTermination\": \"20\" \n    } \n} \n```", "```\n# aws datapipeline put-pipeline-definition  \n--pipeline-id <PIPELINE_ID>  \n--pipeline-definition file://pipeline.json  \n--parameter-objects file://parameters.json  \n--parameter-values-uri file://values.json \n```", "```\n# aws datapipeline activate-pipeline  \n--pipeline-id <PIPELINE_ID> \n```", "```\n# aws datapipeline list-runs\n--pipeline-id <PIPELINE_ID>\n```", "```\n# aws datapipeline deactivate-pipeline  \n--pipeline-id <PIPELINE_ID> \n# aws datapipeline delete-pipeline  \n--pipeline-id <PIPELINE_ID> \n```"]