- en: 2\. Automation and governance in Azure
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 2\. Azure 中的自动化与治理
- en: In the last chapter, we saw how infrastructure in the cloud works from not only
    a native but also a hybrid perspective. We will now take a look at how we can
    build resources in Azure. You can now go to the Azure portal and create any Azure
    resource; however, this can be very cumbersome without automation. Automation
    in Azure is accomplished through Azure DevOps and **Azure Resource Manager** (**ARM**)
    templates. We are strictly sticking to out-of-the-box Microsoft solutions, but
    there are quite a few other deployment and development tools available that can
    help you accomplish automation tasks. Once you've deployed your resources, you
    need to ensure they're secure.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一章中，我们从本地和混合视角了解了云中的基础设施是如何工作的。现在，我们将看看如何在 Azure 中构建资源。你现在可以进入 Azure 门户并创建任何
    Azure 资源；然而，如果没有自动化，这可能会非常繁琐。Azure 中的自动化是通过 Azure DevOps 和 **Azure 资源管理器**（**ARM**）模板完成的。我们严格遵循
    Microsoft 的现成解决方案，但也有很多其他部署和开发工具可以帮助你完成自动化任务。一旦部署了资源，你需要确保它们是安全的。
- en: 'In this chapter, we are going to cover the following:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将讨论以下内容：
- en: Azure DevOps and why it is important
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Azure DevOps 及其重要性
- en: ARM templates and the different ways they can be used
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ARM 模板及其可以使用的不同方式
- en: Fundamentals and best practices of deploying Azure **Infrastructure as Code**
    (**IaC**)
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 部署 Azure **基础设施即代码**（**IaC**）的基础知识和最佳实践
- en: Benefits and best practices for identity and access control in Azure
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Azure 中身份和访问控制的好处及最佳实践
- en: Azure governance
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Azure 治理
- en: Before we dive into how you can accomplish automation and what it means to have
    IaC, let's get an overview of Azure DevOps and ARM templates to build a foundation
    for this automation approach.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们深入探讨如何实现自动化以及什么是基础设施即代码（IaC）之前，让我们先了解一下 Azure DevOps 和 ARM 模板，为这一自动化方法打下基础。
- en: Azure DevOps
  id: totrans-9
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Azure DevOps
- en: 'While this chapter isn''t about Azure DevOps, it''s a good idea to begin with
    a fundamental understanding of what it brings to the table. Azure DevOps is both
    a developer tool and a business tool, as it can be the source of truth for your
    code base and a backlog of items that code needs to accomplish. Let''s look at
    some of the options that it brings to the table, from which you can pick and choose:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然本章并非关于 Azure DevOps，但了解它所带来的基本功能是一个好主意。Azure DevOps 既是开发工具也是业务工具，因为它可以成为代码库的真实来源，并且是代码需要完成的项目待办事项的来源。让我们看看它所提供的一些选项，你可以从中选择使用：
- en: Azure Repos allows you to either create a Git repository or Team Foundation
    Version Control to store your development source control.
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Azure Repos 允许你创建一个 Git 仓库或 Team Foundation 版本控制库来存储开发源代码控制。
- en: Azure Pipelines, one of the critical processes we will use in this chapter for
    the artifacts we create, provides build and release services for **continuous
    integration and delivery** (**CI/CD**) of your apps.
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Azure Pipelines 是我们在本章中用于创建工件的关键流程之一，它提供了用于**持续集成和交付**（**CI/CD**）应用程序的构建和发布服务。
- en: Azure Boards helps deliver a product backlog to plan and track work, code defects,
    and other issues that may arise during your software development.
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Azure Boards 帮助交付产品待办事项，以规划和跟踪工作、代码缺陷及在软件开发过程中可能出现的其他问题。
- en: Azure Test Plans allows you to test the code within your repository and enables
    you to perform manual and exploratory testing, along with continuous testing.
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Azure Test Plans 允许你测试仓库中的代码，并使你能够执行手动和探索性测试，以及持续测试。
- en: Azure Artifacts provides the elements needed for your code to be packaged and
    deployed, such as NuGet resources usually shared with your CI/CD pipelines.
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Azure Artifacts 提供了将代码打包和部署所需的元素，例如通常与 CI/CD 管道共享的 NuGet 资源。
- en: As you can see, Azure DevOps is Microsoft's tool for deploying and managing
    applications within Azure as part of the release management process. To learn
    more about Azure DevOps, you can head over to the documentation at [https://docs.microsoft.com/azure/devops/user-guide/what-is-azure-devops?view=azure-devops](https://docs.microsoft.com/azure/devops/user-guide/what-is-azure-devops?view=azure-devops).
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 正如你所看到的，Azure DevOps 是微软的工具，用于在 Azure 内部部署和管理应用程序，作为发布管理过程的一部分。想要了解更多关于 Azure
    DevOps 的信息，你可以前往文档：[https://docs.microsoft.com/azure/devops/user-guide/what-is-azure-devops?view=azure-devops](https://docs.microsoft.com/azure/devops/user-guide/what-is-azure-devops?view=azure-devops)。
- en: Note
  id: totrans-17
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 注意
- en: Azure DevOps is available for free with a five-user license, so feel free to
    have a look and explore how deployment in Azure works. Head to [https://azure.microsoft.com/services/devops/](https://azure.microsoft.com/services/devops/)
    to create your free account.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: Azure DevOps 提供五用户免费许可证，因此可以随时查看并探索 Azure 中的部署方式。请访问 [https://azure.microsoft.com/services/devops/](https://azure.microsoft.com/services/devops/)
    创建您的免费帐户。
- en: Now that we've discussed some of the toolings at a very high level, let's take
    a look at ARM templates.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经从非常高的层次讨论了一些工具，让我们来看看 ARM 模板。
- en: ARM templates
  id: totrans-20
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: ARM 模板
- en: ARM templates are how your infrastructure is represented as code. ARM templates
    help teams take a more agile approach to deploying infrastructure in the cloud;
    it is no longer necessary to click deploy within the Azure portal to create your
    infrastructure. An ARM template is a mixture of a JSON file representing the configuration
    of your infrastructure and a PowerShell script to execute that template and create
    the infrastructure.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: ARM 模板是您基础设施如何以代码形式表示的方式。ARM 模板帮助团队以更敏捷的方式在云中部署基础设施；不再需要在 Azure 门户中点击“部署”来创建基础设施。ARM
    模板是一个 JSON 文件，表示您的基础设施配置，以及一个 PowerShell 脚本，用于执行该模板并创建基础设施。
- en: The real benefit of using the ARM template system is that it allows you to have
    declarative syntax. That means you can deploy a virtual machine and create the
    networking infrastructure that goes around it. Templates end up providing a process
    that can be run repeatedly in a very consistent manner. They manage the desired
    state of the infrastructure, meaning a template becomes the source of truth for
    those infrastructure resources. If you make changes to your infrastructure, you
    should do that through the templates.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 ARM 模板系统的真正好处是它允许您使用声明性语法。这意味着您可以部署虚拟机并创建围绕它的网络基础设施。模板最终提供了一个可以一致、重复运行的过程。它们管理基础设施的期望状态，意味着模板成为这些基础设施资源的权威来源。如果您对基础设施进行更改，应该通过模板来完成。
- en: The template deployment process can't be accomplished without orchestrating
    how the template process needs to run and what order it needs to run in. It is
    also useful to break these files into smaller chunks and allow them to be linked
    together or reused in different fashions with other templates. This can help with
    understanding and controlling your infrastructure while making it repeatable and
    stable. ARM templates are used in CI/CD pipelines and code deployment to build
    a suite of applications within the organization.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 模板部署过程无法完成，除非您组织模板过程的执行方式及其执行顺序。将这些文件拆分成较小的部分并允许它们相互链接或在不同的模板中以不同的方式重用也很有用。这有助于理解和控制您的基础设施，同时使其可重复和稳定。ARM
    模板在 CI/CD 流水线和代码部署中用于构建组织内的一系列应用程序。
- en: 'The following JSON file shows you how ARM templates are structured:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 以下 JSON 文件展示了 ARM 模板的结构：
- en: '[PRE0]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'As you can see, there are several important parts: parameters, variables, resources,
    and outputs. Let''s discuss each of them briefly:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 如您所见，有几个重要部分：参数、变量、资源和输出。我们简要讨论一下每个部分：
- en: ARM template files should be parameterized, and there is a separate file for
    the parameters that maps to the **parameters** list in the JSON template file.
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ARM 模板文件应该是参数化的，并且有一个单独的文件来定义参数，映射到 JSON 模板文件中的 **参数** 列表。
- en: The **variables** portion is for variables used within this file. Variables
    are generally used for creating naming functions to help generate a naming convention
    that is already structured, and for building that structure to use input parameters
    to make the name.
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**变量**部分用于文件中使用的变量。变量通常用于创建命名函数，以帮助生成已经结构化的命名约定，并通过构建该结构来使用输入参数生成名称。'
- en: The **resources** section is where all of the resources that you're trying to
    deploy with this ARM template are represented; these can range from virtual machines
    to websites.
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**资源**部分是您尝试通过此 ARM 模板部署的所有资源的表示；这些资源可以是从虚拟机到网站的任何内容。'
- en: Finally, the **outputs** section is anything you want to pass out of your ARM
    template to be used elsewhere, such as an SQL Server name, before running your
    SQL scripts.
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最后，**输出**部分是您希望从 ARM 模板中传递到其他地方使用的内容，比如在运行 SQL 脚本之前传递 SQL Server 名称。
- en: 'Three files are created when you create an ARM template file within Visual
    Studio:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Visual Studio 中创建 ARM 模板文件时，会创建三个文件：
- en: The first is the JSON file, which is the template that is represented in the
    preceding code.
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第一种是 JSON 文件，这就是前面代码中表示的模板。
- en: The second is the JSON parameter input file, a file that can be changed with
    every deployment to match the environment you want to deploy.
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第二种是 JSON 参数输入文件，这个文件可以在每次部署时更改，以匹配您要部署的环境。
- en: The third is the PowerShell script used to execute the template. The PowerShell
    script accepts the resource group's inputs, the ARM template file, and the parameters
    file.
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第三种是用于执行模板的 PowerShell 脚本。该 PowerShell 脚本接受资源组的输入、ARM 模板文件和参数文件。
- en: That was a quick overview of Azure DevOps and the files that are created when
    you create an ARM template. Let's see how Azure resources are deployed using these
    ARM templates.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是 Azure DevOps 和创建 ARM 模板时所生成文件的快速概述。接下来，让我们看看如何使用这些 ARM 模板部署 Azure 资源。
- en: Deploying Azure IaC
  id: totrans-36
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 部署 Azure 基础设施即代码（IaC）
- en: As we saw in the *ARM templates* section, we want to use ARM templates to deploy
    our infrastructure, as it fits in nicely with our CI/CD process. There are several
    ways to approach building out these templates.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们在*ARM 模板*部分看到的，我们希望使用 ARM 模板来部署我们的基础设施，因为它与我们的 CI/CD 过程非常契合。构建这些模板有几种方法。
- en: One way is to create a monolithic template that contains all of the resources
    that you want to deploy. To make things a little more modular, you could use a
    nested template structure. Alternatively, you may want to take a more decoupled
    approach and create smaller templates that you can link together, making a highly
    usable and repeatable structure.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 一种方法是创建一个包含所有要部署资源的单体模板。为了让它更加模块化，您可以使用嵌套模板结构。或者，您可能希望采取一种更解耦的方法，创建更小的模板，并将它们链接在一起，从而构建一个高度可用和可重复的结构。
- en: 'Let''s take a look at each of these methods, starting with the monolithic view:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从单体视图开始，看看每种方法：
- en: '![Monolithic view of an ARM template](img/B17153_02_01.jpg)'
  id: totrans-40
  prefs: []
  type: TYPE_IMG
  zh: '![ARM 模板的单体视图](img/B17153_02_01.jpg)'
- en: 'Figure 2.1: Monolithic ARM template'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.1：单体 ARM 模板
- en: As you can see in *Figure 2.1*, a monolithic ARM template deploys a UI front
    end with an API middle tier connected to the SQL database. In this process, we
    need to build out all of the dependencies within the JSON template. The SQL database
    is deployed before the API middle tier to use the connection string in the API
    application configuration. You would then deploy the UI layer with the API URL
    being used in the UI application configuration. The chaining of the deployment
    can work not only for deploying code but also helping with the configuration.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 如您在*图 2.1*中看到的，单体 ARM 模板部署了一个与 SQL 数据库连接的 UI 前端和 API 中间层。在这个过程中，我们需要在 JSON 模板中构建所有依赖项。SQL
    数据库在 API 中间层之前部署，以便在 API 应用程序配置中使用连接字符串。然后，您将部署 UI 层，UI 应用程序配置中会使用 API URL。部署链不仅适用于部署代码，还可以帮助进行配置。
- en: 'Alternatively, you could implement a nested template arrangement:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 另外，您可以实现嵌套模板安排：
- en: '![Nested ARM templates](img/B17153_02_02.jpg)'
  id: totrans-44
  prefs: []
  type: TYPE_IMG
  zh: '![嵌套的 ARM 模板](img/B17153_02_02.jpg)'
- en: 'Figure 2.2: Nested ARM templates'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.2：嵌套的 ARM 模板
- en: As you can see, this is similar to the structure in *Figure 2.1*. However, the
    templates within this structure are nested in separate file sections. This means
    that each template owns the resource within it that it's trying to deploy. This
    structure is similar to breaking out your C# code into manageable methods and
    actions. This follows the same deployment process as discussed in the monolithic
    scenario, but the files are nested.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 如您所见，这与*图 2.1*中的结构类似。然而，这个结构中的模板被嵌套在单独的文件部分中。这意味着每个模板拥有其内部的资源，并且它正在尝试部署这些资源。这个结构类似于将
    C# 代码拆分为可管理的方法和操作。这遵循与单体场景中讨论的相同的部署过程，但文件是嵌套的。
- en: 'The final structure is linked ARM templates:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 最终结构是链接的 ARM 模板：
- en: '![The final structure—linked ARM templates](img/B17153_02_03.jpg)'
  id: totrans-48
  prefs: []
  type: TYPE_IMG
  zh: '![最终结构—链接的 ARM 模板](img/B17153_02_03.jpg)'
- en: 'Figure 2.3: Linked ARM templates'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.3：链接的 ARM 模板
- en: As you can see, the templates are initially separate and decoupled from each
    other, and then we link them together in our release pipeline. Linked templates
    are similar to nested templates, except the files are external to the template
    and system, whereas the nested templates are included in the same scope as the
    parent template. This helps with reusability down the line, because the templates
    are separate files that can be linked to other deployment files.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所见，模板最初是独立且解耦的，然后我们在发布流水线中将它们链接在一起。链接模板类似于嵌套模板，只不过文件是外部的，而嵌套模板则包含在与父模板相同的作用域内。这有助于后期的可重用性，因为这些模板是独立的文件，可以链接到其他部署文件中。
- en: We should note that with linked or nested templates, the deployment mode can
    only be set to **Incremental**. However, the main template can be deployed in
    **Complete** mode, so if the linked or nested templates target the same resource
    group, that combined deployment will be evaluated for a complete deployment; otherwise,
    it will deploy incrementally. To learn more about ARM deployment modes, visit
    [https://docs.microsoft.com/azure/azure-resource-manager/templates/deployment-modes](https://docs.microsoft.com/azure/azure-resource-manager/templates/deployment-modes).
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 我们应该注意，使用链接或嵌套模板时，部署模式只能设置为**增量**模式。然而，主模板可以以**完整**模式部署，因此如果链接或嵌套模板针对的是同一个资源组，那么该组合部署将被评估为完整部署；否则，它将增量部署。要了解更多关于
    ARM 部署模式的信息，请访问[https://docs.microsoft.com/azure/azure-resource-manager/templates/deployment-modes](https://docs.microsoft.com/azure/azure-resource-manager/templates/deployment-modes)。
- en: We've seen different ways of using these ARM templates to automate the deployment
    of infrastructure; now we turn to the benefits of doing so.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经看到不同的方式使用这些 ARM 模板来自动化基础设施的部署；现在我们来探讨这样做的好处。
- en: Benefits of Azure IaC
  id: totrans-53
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Azure IaC 的好处
- en: 'The main benefit of using IaC is automating the creation, updating, and configuration
    of different resources and environments. Automation takes the human element out
    of the picture while adding certain key benefits:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 IaC 的主要好处是自动化不同资源和环境的创建、更新和配置。自动化将人为因素排除在外，同时带来一些关键的好处：
- en: The ability to schedule automated deployments, helping your operations staff
    work fewer hours.
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 能够安排自动化部署，帮助运维人员减少工作时间。
- en: The ability to smoke test your automated deployments.
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 能够进行自动化部署的烟雾测试。
- en: The ability to create a repeatable process.
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 能够创建可重复的流程。
- en: Pure self-healing applications can be achieved.
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可以实现完全自愈的应用程序。
- en: The ability to roll back changes.
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 能够回滚更改。
- en: Resource Manager helps in tagging resources.
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 资源管理器有助于为资源打标签。
- en: ARM takes care of the dependencies of resources in the resource group.
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ARM 负责资源组中资源的依赖关系。
- en: Automation at any point is the real key to using a platform like Azure, whether
    that is automating your infrastructure deployments or testing to ensure the stability
    of your production deployments.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 在任何阶段的自动化都是使用像 Azure 这样的平台的真正关键，无论是自动化基础设施的部署还是测试以确保生产部署的稳定性。
- en: In order to reap these benefits, we need to learn how to use ARM templates effectively.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 为了获得这些好处，我们需要学习如何有效地使用 ARM 模板。
- en: Best practices
  id: totrans-64
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 最佳实践
- en: We want to take a quick look at some best practices to optimize ARM templates.
    But first, let's start by understanding what some of our template limits are.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 我们想快速了解一些优化 ARM 模板的最佳实践。但首先，我们先了解一下模板的一些限制。
- en: Overall, the template can only be a maximum of 4 MB, and each parameter file
    is limited to 64 KB. You can only have 256 parameters, with 256 variables, containing
    800 resources, 64 output values, and 24,576 characters in a template expression.
    As we've discussed, you can exceed some of these limits by using nested templates
    if your template gets too big, but Microsoft recommends that you use linked templates
    to help avoid these limits. In the following sections, we discuss some best practices
    for each component within an ARM template.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 总体而言，模板的最大大小为 4 MB，每个参数文件的大小限制为 64 KB。你只能有 256 个参数、256 个变量、包含 800 个资源、64 个输出值和
    24,576 个字符的模板表达式。如我们所讨论的，如果模板过大，你可以通过使用嵌套模板来超出某些限制，但微软建议你使用链接模板来避免这些限制。在接下来的章节中，我们将讨论
    ARM 模板中每个组件的最佳实践。
- en: Parameters
  id: totrans-67
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 参数
- en: The ARM template system within Azure DevOps resolves parameter values before
    deployment operations and allows you to reuse the template for different environments.
    It is essential to point out that each parameter must have a set data type value.
    You can find a list of these data types at [https://docs.microsoft.com/azure/azure-resource-manager/templates/template-syntax#data-types](https://docs.microsoft.com/azure/azure-resource-manager/templates/template-syntax#data-types).
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: Azure DevOps 中的 ARM 模板系统会在部署操作之前解析参数值，并允许您将模板重用于不同的环境。需要特别指出的是，每个参数必须有一个明确的数据类型值。您可以在[https://docs.microsoft.com/azure/azure-resource-manager/templates/template-syntax#data-types](https://docs.microsoft.com/azure/azure-resource-manager/templates/template-syntax#data-types)找到这些数据类型的列表。
- en: Best practices
  id: totrans-69
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 最佳实践
- en: 'Microsoft recommends the following best practices for parameters:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 微软推荐以下关于参数的最佳实践：
- en: It's best to minimize the use of parameters. As we pointed out at the beginning
    of the chapter, you should use variables for properties and only use parameters
    for the things you need to input.
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最好尽量减少使用参数。正如我们在本章开头提到的，您应该使用变量来表示属性，只有在需要输入值时才使用参数。
- en: It is recommended that you use camel casing for parameter names.
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 推荐您使用驼峰命名法来命名参数。
- en: It is also recommended that you describe each parameter, so when other developers
    use the template they know what the parameters are.
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 还建议您描述每个参数，这样当其他开发人员使用模板时，他们能清楚地知道这些参数的作用。
- en: Ensure that you use parameters for those settings that may change when the environment
    changes, such as capacity or app service names.
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 确保为那些在环境变化时可能发生变化的设置使用参数，如容量或应用服务名称。
- en: Ensure you name your parameters to make them easily identifiable.
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 确保为参数命名，以便于识别。
- en: Provide default values for parameters; this involves providing the smallest
    virtual machine skew size so non-production environments use smaller resources
    and other developers that use the template have a basic starting point.
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为参数提供默认值；这涉及提供最小的虚拟机配置，以便非生产环境使用较小的资源，并且其他使用该模板的开发人员有一个基本的起始点。
- en: If you need to specify optional parameters, avoid using empty strings as the
    default value and instead use a literal value. This helps to provide a naming
    structure for users of the template.
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果您需要指定可选参数，请避免使用空字符串作为默认值，应该使用一个字面值。这有助于为模板用户提供命名结构。
- en: Try to use allowed values as little as possible, as these may change over time
    and can become difficult to update in your scripts.
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 尽量减少使用允许的值，因为这些值可能会随着时间变化，更新脚本时可能会变得困难。
- en: Always use parameters for usernames and passwords or secrets to be set for each
    environment and not hardcoded in the template. You should also use a secure string
    for all passwords and secrets.
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 始终为每个环境使用参数来设置用户名、密码或秘密，而不是将它们硬编码在模板中。对于所有密码和秘密，您还应该使用安全字符串。
- en: When you need to set a location for the resource you're deploying, set the default
    value to `resourcegroup().location` so the location value is set correctly within
    the resource group.
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当您需要为正在部署的资源设置位置时，将默认值设置为`resourcegroup().location`，这样资源组中的位置值就会正确设置。
- en: As you can see, parameters are very useful in the ARM template process because
    they allow us to be flexible with the environments we're trying to deploy. Remember
    to keep these templates as simple as possible with the applications or microservices
    you're trying to deploy.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 正如您所看到的，参数在 ARM 模板过程中非常有用，因为它们使我们能够灵活地应对不同的部署环境。请记住，在使用模板部署应用程序或微服务时，尽量保持模板的简单性。
- en: Variables
  id: totrans-82
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 变量
- en: Variables are also resolved before starting the deployment, and the resource
    manager replaces the variable with its determined value. Variables are useful
    in deriving complex naming within your template and allow you to only pass in
    the required parameters.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 变量也会在开始部署之前解析，资源管理器会将变量替换为其确定的值。变量在推导模板中的复杂命名时非常有用，它们让您只需传入所需的参数。
- en: An example of this is an organization that uses a customer ID and depends on
    this for its naming convention to keep all deployed resources in Azure unique
    to that customer ID. In this case, you would create the customer ID as a parameter
    and then develop variables to generate names using your naming standard. You can
    find a list of acceptable data types for variables at [https://docs.microsoft.com/azure/azure-resource-manager/templates/template-syntax#data-types](https://docs.microsoft.com/azure/azure-resource-manager/templates/template-syntax#data-types).
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，一个组织使用客户 ID，并依赖此 ID 来保持所有部署的 Azure 资源对于该客户 ID 的唯一性。在这种情况下，您可以将客户 ID 作为参数创建，然后开发变量来使用命名标准生成名称。您可以在[https://docs.microsoft.com/azure/azure-resource-manager/templates/template-syntax#data-types](https://docs.microsoft.com/azure/azure-resource-manager/templates/template-syntax#data-types)中找到可接受的数据类型列表。
- en: Best practices
  id: totrans-85
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 最佳实践
- en: 'Microsoft recommends the following best practices for variables:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 微软推荐以下变量的最佳实践：
- en: Remember to remove unused variables and files as they can be confusing.
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 记得删除未使用的变量和文件，以免引起混淆。
- en: Use camel casing for your variable names.
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 请使用驼峰命名法来命名您的变量。
- en: Use variables for values that you need more than once within your template.
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于模板中需要多次使用的值，请使用变量。
- en: Variable names must be unique.
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 变量名称必须是唯一的。
- en: For repeatable patterns of JSON objects, use the copy loop in variables.
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于重复的 JSON 对象模式，请在变量中使用复制循环。
- en: Resources
  id: totrans-92
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 资源
- en: The resources section of the ARM templates is reserved for resources that will
    be deployed or updated. ARM templates generally help derive the desired state
    of the resources within Azure. When changing Azure infrastructure, it is always
    a good practice to change your template first and then re-run it to change your
    Azure resources. All too often, organizations make changes on the portal but forget
    to change their ARM template, and then the next time they deploy these resources,
    they are deployed into the wrong state.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: ARM 模板中的资源部分用于部署或更新的资源。ARM 模板通常有助于推导出 Azure 中资源的期望状态。在更改 Azure 基础设施时，最好先更改模板，然后重新运行它来更新
    Azure 资源。很多时候，组织会在门户中进行更改，却忘记更新 ARM 模板，接下来部署这些资源时，它们会被部署到错误的状态。
- en: Best practices
  id: totrans-94
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 最佳实践
- en: 'Microsoft recommends the following best practices for resources:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 微软推荐以下资源的最佳实践：
- en: Add comments to your resources so that others know their purpose.
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为您的资源添加注释，以便其他人了解其用途。
- en: Remember that there are quite a few resources that require unique names, so
    never hardcode your resource names.
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 请记住，很多资源需要唯一的名称，因此永远不要将资源名称硬编码。
- en: When you add a password to a custom script extension, use the `CommandToExecute`
    property in the protected settings of Azure Resource Manager.
  id: totrans-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当您向自定义脚本扩展添加密码时，请使用 `CommandToExecute` 属性，在 Azure 资源管理器的保护设置中进行配置。
- en: We now have a fundamental understanding of the elements within an ARM template.
    Our next focus will be identity and access control once your resources have been
    deployed.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在对 ARM 模板中的元素有了基本的理解。接下来的重点是，当您的资源部署完成后，我们将关注身份和访问控制。
- en: Identity and access control
  id: totrans-100
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 身份和访问控制
- en: 'Before we dive in, it is good to realize that there is a shared responsibility
    between you and the cloud provider when it comes to security and securing your
    resources. It is essential to understand where your responsibility stops and the
    cloud provider steps in. Let''s take a quick look at shared responsibility in
    Azure, as you can see in *Figure 2.4*:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们深入探讨之前，理解在安全性和保护资源方面，您与云服务提供商之间有共享责任是很重要的。必须了解您的责任在哪里结束，而云服务提供商的责任在哪里开始。让我们快速看一下
    Azure 中的共享责任，如*图 2.4*所示：
- en: '![Azure shared responsibility](img/B17153_02_04.jpg)'
  id: totrans-102
  prefs: []
  type: TYPE_IMG
  zh: '![Azure 共享责任](img/B17153_02_04.jpg)'
- en: 'Figure 2.4: Azure shared responsibility'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.4：Azure 共享责任
- en: Depending on the type of service you choose in Azure, your responsibilities
    will vary, as will those of the cloud provider. Note the differences between on-premises
    resources and the various Azure options. You can see that, regardless of any new
    responsibilities, you will always retain the responsibility for endpoints, account
    management, accounts, and data repositories you create in the cloud.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 根据您在 Azure 中选择的服务类型，您的责任将有所不同，云服务提供商的责任也会不同。请注意本地资源和各种 Azure 选项之间的差异。您可以看到，无论有无新增责任，您始终需要对在云中创建的端点、账户管理、帐户和数据存储库负责。
- en: With Azure being a public-facing resource, security is at the forefront of its
    development. There is a wide range of tools and advisors within Azure that help
    you take advantage of Azure's different security tools and capabilities.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 由于Azure是面向公众的资源，安全性是其开发的重中之重。Azure中有一系列工具和顾问，帮助你利用Azure的各种安全工具和功能。
- en: What are the security benefits of Azure?
  id: totrans-106
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Azure的安全性有哪些好处？
- en: Organizations' on-premises security groups only have limited resources (team
    members and tools) to view exploits and attackers. One of the benefits of using
    a platform like Azure is that you can offload those responsibilities to the provider
    in the cloud and gain a more efficient and intelligent approach to your organization's
    threat plane without the need to bring in physical resources.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 组织的本地安全组通常资源有限（团队成员和工具），无法有效查看漏洞和攻击者。使用像Azure这样的平台的一个好处是，你可以将这些职责转交给云端提供商，借助更高效、更智能的方式应对组织的威胁，而不需要引入物理资源。
- en: One of the most significant benefits of Azure is that when you create a tenant,
    it comes with Azure AD behind it, which allows you to start from a security perspective
    in Azure. Azure AD is used to lock down all of the services and resources within
    Azure. You can also use Azure AD to secure your applications or create **Business
    to Customer** (**B2C**) or **Business to Business** (**B2B**) ADs to house your
    client information.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: Azure的一个重要优势是，当你创建一个租户时，它自带Azure AD，这让你可以从安全的角度开始使用Azure。Azure AD用于锁定Azure中的所有服务和资源。你还可以使用Azure
    AD来保护你的应用程序，或者创建**企业对客户**（**B2C**）或**企业对企业**（**B2B**）的AD，以存储客户信息。
- en: Helpful tools in Azure
  id: totrans-109
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Azure中的有用工具
- en: 'There are several security and audit solutions built into Azure to strengthen
    your security posture, which can be viewed in the Azure portal through the security
    and audit dashboard from your home screen. Here are some helpful tools in Azure
    to assist you and your organization:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: Azure内置了多个安全和审计解决方案，用于增强你的安全防护，这些可以通过Azure门户的安全和审计仪表盘从首页查看。以下是一些帮助你和你的组织的有用工具：
- en: We mentioned earlier that Azure Resource Manager helps keep everything in one
    place for deploying, updating, and deleting resources within your solution to
    support coordinated operations.
  id: totrans-111
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们之前提到过，Azure资源管理器帮助将所有内容集中在一个地方，便于部署、更新和删除解决方案中的资源，以支持协调操作。
- en: Azure also offers **Application Performance Management** (**APM**), which is
    referred to as Application Insights. Application Insights gives you the ability
    to monitor your applications within Azure and detect performance anomalies.
  id: totrans-112
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Azure还提供了**应用性能管理**（**APM**），也称为应用洞察。应用洞察使你能够监控Azure中的应用程序，并检测性能异常。
- en: Azure Monitor allows you to visualize your infrastructure for your activity
    log and the individual diagnostic logs for your Azure resources.
  id: totrans-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Azure监控允许你可视化基础设施的活动日志和单独的诊断日志，以监控你的Azure资源。
- en: Azure Advisor is like a personalized cloud concierge to help you optimize your
    cloud resources. This service can help detect security and performance issues
    within your applications.
  id: totrans-114
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Azure顾问就像一个个性化的云管家，帮助你优化云资源。该服务可以帮助检测应用程序中的安全和性能问题。
- en: Azure Security Center helps prevent, detect, and respond to different threat
    planes for your applications within Azure. It helps provide security monitoring
    and policy management across all of your other subscriptions.
  id: totrans-115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Azure安全中心有助于防止、检测并应对Azure中应用程序面临的不同威胁。它帮助你在所有其他订阅中提供安全监控和策略管理。
- en: Best practices
  id: totrans-116
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 最佳实践
- en: 'Here are some Azure security best practices recommended by Microsoft:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是微软推荐的一些Azure安全最佳实践：
- en: Use Azure AD for central security control and identity management in Azure.
    This will make management and integration more streamlined.
  id: totrans-118
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Azure AD进行中心化的安全控制和身份管理。这将使管理和集成更加高效。
- en: Try to keep your Azure AD instances to a single source of truth.
  id: totrans-119
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 尽量保持Azure AD实例为单一的真理源。
- en: If you have an on-premises AD, it is recommended that you integrate it with
    Azure AD, using Azure AD Connect for a single sign-on experience.
  id: totrans-120
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果你有本地AD，建议将其与Azure AD集成，使用Azure AD Connect实现单点登录体验。
- en: If you use Azure AD Connect to sync your on-premises AD with Azure, turn on
    password hash synchronization in case the main resource goes offline or is deprecated.
  id: totrans-121
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果你使用Azure AD Connect将本地AD与Azure同步，请开启密码哈希同步，以防主资源离线或被弃用。
- en: Remember that you can use Azure AD for authentication in your new applications,
    and this can be accomplished through Azure AD directly, B2B, or B2C.
  id: totrans-122
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 请记住，你可以在新的应用程序中使用 Azure AD 进行身份验证，这可以通过 Azure AD 直接、B2B 或 B2C 来实现。
- en: Use management groups to control your access to subscriptions. This helps with
    centralized management, over needing to worry about **Azure Identity and Access
    Management** (**IAM**) in each subscription.
  id: totrans-123
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用管理组来控制你对订阅的访问。这有助于集中管理，而不必担心在每个订阅中进行**Azure 身份和访问管理**（**IAM**）。
- en: Use Conditional Access for your support personnel so that they can elevate their
    permissions when needed in Azure, rather than having access all the time.
  id: totrans-124
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用条件访问控制你的支持人员，以便他们在需要时提升权限，而不是始终拥有访问权限。
- en: Block legacy protocols that aren't used to stop attack planes.
  id: totrans-125
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 阻止不再使用的传统协议，以阻止攻击计划。
- en: It is recommended you use self-service password resets for your users if you're
    using Azure AD for your applications and you want to ensure you monitor this process.
  id: totrans-126
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果你在应用程序中使用 Azure AD，并且希望确保能够监控此过程，建议为用户启用自助密码重置功能。
- en: If you are using Azure AD Connect, ensure that your cloud policies match your
    on-premises policies.
  id: totrans-127
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果你正在使用 Azure AD Connect，请确保你的云端策略与本地策略匹配。
- en: Enable multi-factor authentication for your organization if possible.
  id: totrans-128
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果可能，启用多因素身份验证以保障组织的安全。
- en: If you wish to provide built-in roles in Azure, ensure that you maintain role-based
    access over rule-based access, as rule-based access can be very cumbersome to
    manage in the long run.
  id: totrans-129
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果你希望在 Azure 中提供内置角色，请确保优先使用基于角色的访问控制，而不是基于规则的访问控制，因为基于规则的访问控制在长期管理中可能非常繁琐。
- en: Ensure that you give the least privileged access to those logging in to Azure,
    so that when an account is compromised, its access is limited.
  id: totrans-130
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 确保对登录 Azure 的用户授予最小权限，这样当账户被攻破时，其访问权限将被限制。
- en: Define at least two emergency access accounts, just in case the organization
    admin operation team members' accounts get compromised.
  id: totrans-131
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 至少定义两个紧急访问账户，以防组织管理员操作团队成员的账户被攻破。
- en: Ensure you control locations where resources are created for your organization
    if you also wish to monitor suspicious activities within your Azure AD tenant
    actively, as there may be data restrictions in different regions.
  id: totrans-132
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果你还希望主动监控 Azure AD 租户中的可疑活动，请确保控制资源创建的位置，因为不同地区可能有数据限制。
- en: Ensure you use authentication and authorization for your storage accounts.
  id: totrans-133
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 确保对你的存储账户使用身份验证和授权。
- en: Review and apply improvements to your best practices over time.
  id: totrans-134
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 随着时间推移，回顾并应用对最佳实践的改进。
- en: Now that we have an understanding of security in Azure, we can review how to
    use Azure governance.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经了解了 Azure 中的安全性，可以回顾一下如何使用 Azure 管理。
- en: Azure governance
  id: totrans-136
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Azure 管理
- en: 'Azure governance is defined as the processes and mechanisms that are used to
    maintain control of your applications and resources in Azure. They are the strategic
    priorities involved in planning your initiatives within your organization. Azure
    governance is provided in two services: Azure Policy and, as we will discuss in
    *Chapter 7*, *Offers, support, resources, and tips to optimize cost in Azure*,
    Azure Cost Management.'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: Azure 管理被定义为用于保持对 Azure 中应用程序和资源控制的流程和机制。这些是涉及你组织内计划优先事项的战略规划。Azure 管理通过两个服务提供：Azure
    Policy 和我们将在*第7章*中讨论的*提供、支持、资源和优化 Azure 成本的建议*，以及 Azure 成本管理。
- en: The purpose of Azure Policy is to organize your operational standards and to
    assess your compliance. Azure Policy regulates compliance, security, costs, and
    management while implementing governance for consistency of your resources. Everything
    that we see in Azure is governed by these policies, which contain business rules
    in JSON format and policy definitions. The schema for these policy definitions
    can be found at [https://schema.management.azure.com/schemas/2019-09-01/policyDefinition.json](https://schema.management.azure.com/schemas/2019-09-01/policyDefinition.json).
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: Azure Policy 的目的是组织你的操作标准并评估合规性。Azure Policy 调节合规性、安全性、成本和管理，同时对你的资源实施一致性的治理。我们在
    Azure 中看到的所有内容都由这些政策进行治理，这些政策包含 JSON 格式的业务规则和政策定义。你可以在 [https://schema.management.azure.com/schemas/2019-09-01/policyDefinition.json](https://schema.management.azure.com/schemas/2019-09-01/policyDefinition.json)
    找到这些政策定义的架构。
- en: What are the benefits?
  id: totrans-139
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 其益处是什么？
- en: 'Azure governance and Azure Policy help with building and scaling your applications
    while maintaining a level of control. This helps create guardrails and assists
    with deploying entirely governed environments throughout your organization''s
    subscription using Azure Blueprints. As we will discuss in *Chapter 7*, *Offers,
    support, resources, and tips to optimize cost in Azure*, it also assists in managing
    costs by providing insights into your spending to maximize your cloud investment.
    In addition, Azure governance offers the following benefits:'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: Azure 治理和 Azure 策略帮助您在构建和扩展应用程序的同时保持一定的控制水平。这有助于创建防护栏，并协助通过 Azure 蓝图在组织的订阅中部署完全治理的环境。正如我们在*第7章*中讨论的那样，*提供优化
    Azure 成本的建议、支持、资源和技巧*，它还通过提供支出洞察来帮助管理成本，从而最大化您的云投资。此外，Azure 治理还提供以下好处：
- en: Helps with audit and enforcement of your policies for any Azure service
  id: totrans-141
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 有助于对任何 Azure 服务的策略进行审计和执行
- en: Helps encourage accountability throughout the organization while monitoring
    spending
  id: totrans-142
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 有助于在监控支出的同时，推动整个组织的问责制
- en: Creates compliant environments, including resources, policies, and access control
  id: totrans-143
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建合规的环境，包括资源、策略和访问控制
- en: Helps ensure compliance with external regulations via built-in compliance controls
  id: totrans-144
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过内建的合规性控制，帮助确保符合外部规定
- en: In the following sections, we'll look in detail at some of the features and
    services available via Azure governance, namely Azure management groups, Azure
    Policy, Azure Blueprints, Azure Graph, and Azure Cost Management and Billing.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 在以下章节中，我们将详细介绍通过 Azure 治理可用的一些功能和服务，具体包括 Azure 管理组、Azure 策略、Azure 蓝图、Azure 图形以及
    Azure 成本管理和计费。
- en: Azure management groups
  id: totrans-146
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Azure 管理组
- en: 'Azure management groups help manage your Azure subscriptions by grouping them
    and taking actions against those groups. They allow you to define security, policies,
    and typical deployments via blueprints. They help create a hierarchical view of
    your organization so that you can efficiently manage your subscriptions and resources:'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: Azure 管理组通过将您的 Azure 订阅进行分组并对这些组采取行动来帮助管理您的 Azure 订阅。它们允许您通过蓝图定义安全性、策略和典型的部署方式。它们有助于创建您组织的层次视图，以便您能高效地管理订阅和资源：
- en: '![Hierarchical representation of Azure management groups](img/B17153_02_05.jpg)'
  id: totrans-148
  prefs: []
  type: TYPE_IMG
  zh: '![Azure 管理组的层次表示](img/B17153_02_05.jpg)'
- en: 'Figure 2.5: Azure management groups'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.5：Azure 管理组
- en: As you can see in *Figure 2.5*, there is a simple separation between production
    and non-production. We should understand from this illustration that each management
    group has a root or parent that every hierarchical structure inherits from. You
    can create a global structure at the root, or you can create a production or non-production
    policy in either one of the branches.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 正如在*图 2.5*中所示，生产和非生产环境之间有简单的分隔。我们应该从这张示意图中理解到，每个管理组都有一个根节点或父节点，所有层次结构都从这个节点继承。您可以在根节点创建全局结构，或者可以在任一分支中创建生产或非生产策略。
- en: Azure Policy
  id: totrans-151
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Azure 策略
- en: Azure Policy was put in place to help enforce asset compliance in organizational
    standards within Azure. Common uses of Azure Policy are implementing governance
    for resources consistency, security, costs, and management. Like everything in
    Azure, Azure policies are in JSON format, and you add business rules for policy
    definitions to help simplify the management of these rules.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: Azure 策略的实施旨在帮助确保资产符合组织在 Azure 中的标准。Azure 策略的常见用途包括实施资源一致性、安保、成本和管理的治理。像 Azure
    中的其他内容一样，Azure 策略是 JSON 格式的，并且您可以为策略定义添加业务规则，从而简化这些规则的管理。
- en: Azure policies can be applied to Azure resources in different life cycles or
    during an ongoing compliance evaluation. These can be used as a control mechanism
    to deny changes or to log them. The difference between Azure Policy and Azure
    **rule-based access control** (**RBAC**) is that your policy does not restrict
    Azure actions. This means a combination of Azure RBAC and Azure policy provides
    the full scope of security in Azure.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: Azure 策略可以应用于 Azure 资源的不同生命周期阶段或在持续的合规性评估过程中。这些策略可以作为控制机制来拒绝更改或记录更改。Azure 策略与
    Azure **基于规则的访问控制** (**RBAC**) 之间的区别在于，您的策略不会限制 Azure 操作。这意味着结合使用 Azure RBAC 和
    Azure 策略可以提供 Azure 安全的完整范围。
- en: 'The following best practices are recommended by Microsoft:'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是微软推荐的最佳实践：
- en: When you use Azure policies, it's always good to start with an audit policy
    rather than a denial policy, as setting a denial policy may hinder automation
    tasks when creating the resources.
  id: totrans-155
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 Azure 策略时，最好从审核策略开始，而不是拒绝策略，因为设置拒绝策略可能会妨碍在创建资源时的自动化任务。
- en: When creating your definitions, consider your organizational hierarchies. Creating
    higher-level definitions such as at the management group or subscription level
    is recommended.
  id: totrans-156
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在创建定义时，请考虑组织层级结构。建议在管理组或订阅级别创建更高层次的定义。
- en: Create and assign initiative definitions or policy sets even for the smallest
    policy definitions.
  id: totrans-157
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 即使是最小的策略定义，也可以创建和分配计划定义或策略集。
- en: It is good to remember that once an initial assignment is evaluated, all policies
    within that initiative are evaluated as well.
  id: totrans-158
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 值得记住的是，一旦初始分配被评估，所有该计划中的策略也会被评估。
- en: You should think about using policies to help control your infrastructure, like
    requiring antivirus to be installed on all virtual machines or not allowing specific
    sizes of virtual machines to be created in a non-production environment. To gain
    a better understanding of Azure policy definition structure, you can learn more
    at [https://docs.microsoft.com/azure/governance/policy/concepts/definition-structure](https://docs.microsoft.com/azure/governance/policy/concepts/definition-structure).
  id: totrans-159
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你应该考虑使用策略来帮助控制你的基础设施，例如要求所有虚拟机安装防病毒软件，或者不允许在非生产环境中创建特定大小的虚拟机。要更好地了解 Azure 策略定义结构，你可以访问
    [https://docs.microsoft.com/azure/governance/policy/concepts/definition-structure](https://docs.microsoft.com/azure/governance/policy/concepts/definition-structure)
    了解更多信息。
- en: Azure Blueprints
  id: totrans-160
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Azure 蓝图
- en: Azure Blueprints enables technology groups to develop a repeatable set of Azure
    resources that support an organization's patterns, requirements, and standards.
    Blueprints are a great way to orchestrate the deployment of various resources,
    such as role assignments, policies, ARM templates, and resource groups. Azure
    Blueprints is an extension of ARM templates, which are designed to help with environment
    setup, and Azure Blueprints uses templates to accomplish this goal.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: Azure 蓝图使技术团队能够开发一套可重复的 Azure 资源，以支持组织的模式、需求和标准。蓝图是编排各种资源部署的好方法，例如角色分配、策略、ARM
    模板和资源组。Azure 蓝图是 ARM 模板的扩展，旨在帮助环境设置，而 Azure 蓝图使用模板来实现这一目标。
- en: Azure Resource Graph
  id: totrans-162
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Azure Resource Graph
- en: Azure Resource Graph was created to extend ARM templates' capabilities to help
    explore resources even across subscriptions. Azure Resource Graph queries allow
    you to search for complex results from resources that have been deployed in Azure.
    Azure Resource Graph is the query system that supports the search in Azure. The
    query language is based on the Kusto Query Language, which is also used by Azure
    Data Explorer, so it may be new to you and take a little bit of getting used to.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: Azure Resource Graph 的创建旨在扩展 ARM 模板的功能，帮助跨订阅探索资源。Azure Resource Graph 查询允许你从已部署在
    Azure 中的资源中搜索复杂的结果。Azure Resource Graph 是支持 Azure 搜索的查询系统。查询语言基于 Kusto 查询语言（KQL），该语言也被
    Azure 数据探索器使用，因此它可能对你来说是新的，需要一些时间适应。
- en: You need the appropriate rights in Azure RBAC to see the resources—this is the
    read permission. If you don't get any results returned in Azure when you use Azure
    Resource Graph, check your read permission first.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 你需要在 Azure RBAC 中拥有适当的权限才能查看资源——这是读取权限。如果在使用 Azure Resource Graph 时没有返回任何结果，请先检查你的读取权限。
- en: Azure Resource Graph is free to use, but it's throttled to ensure the best experience
    for everyone.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: Azure Resource Graph 是免费的，但为了确保每个人都能获得最佳体验，使用时会受到限制。
- en: Azure Cost Management and Billing
  id: totrans-166
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Azure 成本管理与计费
- en: 'Azure Cost Management and Billing was created to help analyze, manage, and
    optimize the costs of your workloads in Azure. It was introduced to help businesses
    reduce their risk of potential waste and inefficiencies as they migrate to the
    cloud. Azure Cost Management and Billing does the following:'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: Azure 成本管理与计费的创建旨在帮助分析、管理和优化 Azure 工作负载的成本。它的引入旨在帮助企业在迁移到云时减少潜在的浪费和低效风险。Azure
    成本管理与计费提供以下功能：
- en: Assists in paying your bills
  id: totrans-168
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 协助支付账单
- en: Generates monthly invoices containing cost and usage data that can be downloaded
  id: totrans-169
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 生成包含成本和使用数据的月度发票，并可以下载
- en: Sets spending thresholds
  id: totrans-170
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设置支出阈值
- en: Analyzes your costs proactively
  id: totrans-171
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 主动分析成本
- en: Identifies opportunities to optimize spending for your workloads in Azure
  id: totrans-172
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 识别优化 Azure 工作负载支出的机会
- en: We will cover this in more depth in *Chapter 7*, *Offers, support, resources,
    and tips to optimize cost in Azure*, since individuals and organizations manage
    cost streams differently in Azure.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在*第 7 章*《*Azure 中优化成本的方案、支持、资源和技巧*》中深入探讨此内容，因为个人和组织在 Azure 中管理成本流的方式有所不同。
- en: Summary
  id: totrans-174
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 摘要
- en: As you can see from this chapter, Azure and Azure DevOps have significant synergies.
    It is essential to create a repeatable, stable way to deploy your code and infrastructure
    to the cloud. While learning how to deploy this infrastructure to the cloud, we
    needed to understand why ARM templates are used. This led us to discuss some of
    the fundamentals and best practices around deploying this infrastructure to leverage
    our code or applications. We looked at exactly how we need to secure resources
    and our applications through identity and access control. This brought us to understanding
    how to create governance in Azure to ensure consistency and compliance.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 正如你从这一章中看到的，Azure 和 Azure DevOps 之间具有显著的协同效应。创建一种可重复、稳定的方式来将代码和基础设施部署到云端至关重要。在学习如何将基础设施部署到云端时，我们需要理解为什么使用
    ARM 模板。这促使我们讨论了一些部署基础设施的基本原则和最佳实践，以便利用我们的代码或应用程序。我们具体查看了如何通过身份和访问控制来保护资源和应用程序。这引导我们理解如何在
    Azure 中创建治理，以确保一致性和合规性。
- en: Azure creates a lot of frameworks that allow you to digest the things that you
    need to leverage to ensure your applications are secure and complete. It is also
    good to remember that as you approach Azure, you should approach it from an automation
    perspective. An organization should develop compliance, Azure governance, and
    best practices that work across the organization while minimizing its business
    risk.
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: Azure 创建了许多框架，允许你消化确保应用程序安全和完整所需的内容。同样值得记住的是，在接触 Azure 时，应该从自动化的角度来接近它。一个组织应该制定合规性、Azure
    管理和最佳实践，这些内容能在整个组织中有效运作，同时最小化其业务风险。
- en: Now that we have built a foundation, in the next chapter, we will move on to
    how we can modernize applications.
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经建立了基础，在下一章中，我们将讨论如何实现应用程序的现代化。
- en: Important links
  id: totrans-178
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 重要链接
- en: '*Azure Cost Management and Billing*: [https://docs.microsoft.com/azure/cost-management-billing/cost-management-billing-overview](https://docs.microsoft.com/azure/cost-management-billing/cost-management-billing-overview)'
  id: totrans-179
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*Azure 成本管理与计费*: [https://docs.microsoft.com/azure/cost-management-billing/cost-management-billing-overview](https://docs.microsoft.com/azure/cost-management-billing/cost-management-billing-overview)'
- en: '*Azure Resource Graph*: [https://docs.microsoft.com/azure/governance/resource-graph/](https://docs.microsoft.com/azure/governance/resource-graph/)'
  id: totrans-180
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*Azure 资源图*: [https://docs.microsoft.com/azure/governance/resource-graph/](https://docs.microsoft.com/azure/governance/resource-graph/)'
- en: '*Azure Blueprints*: [https://docs.microsoft.com/azure/governance/blueprints/overview](https://docs.microsoft.com/azure/governance/blueprints/overview)'
  id: totrans-181
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*Azure 蓝图*: [https://docs.microsoft.com/azure/governance/blueprints/overview](https://docs.microsoft.com/azure/governance/blueprints/overview)'
- en: '*Azure Policy*: [https://docs.microsoft.com/azure/governance/policy/overview#policy-definition](https://docs.microsoft.com/azure/governance/policy/overview#policy-definition)'
  id: totrans-182
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*Azure Policy*: [https://docs.microsoft.com/azure/governance/policy/overview#policy-definition](https://docs.microsoft.com/azure/governance/policy/overview#policy-definition)'
- en: '*Azure Policy*: [https://docs.microsoft.com/azure/governance/policy/concepts/definition-structure](https://docs.microsoft.com/azure/governance/policy/concepts/definition-structure)'
  id: totrans-183
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*Azure Policy*: [https://docs.microsoft.com/azure/governance/policy/concepts/definition-structure](https://docs.microsoft.com/azure/governance/policy/concepts/definition-structure)'
- en: '*Azure management groups*: [https://docs.microsoft.com/azure/governance/management-groups/](https://docs.microsoft.com/azure/governance/management-groups/)'
  id: totrans-184
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*Azure 管理组*: [https://docs.microsoft.com/azure/governance/management-groups/](https://docs.microsoft.com/azure/governance/management-groups/)'
- en: '*ARM Template Toolkit*: [https://docs.microsoft.com/azure/azure-resource-manager/templates/test-toolkit](https://docs.microsoft.com/azure/azure-resource-manager/templates/test-toolkit
    )'
  id: totrans-185
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*ARM 模板工具包*: [https://docs.microsoft.com/azure/azure-resource-manager/templates/test-toolkit](https://docs.microsoft.com/azure/azure-resource-manager/templates/test-toolkit
    )'
- en: '*ARM Template Structure*: [https://docs.microsoft.com/azure/azure-resource-manager/templates/template-syntax](https://docs.microsoft.com/azure/azure-resource-manager/templates/template-syntax)'
  id: totrans-186
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*ARM 模板结构*: [https://docs.microsoft.com/azure/azure-resource-manager/templates/template-syntax](https://docs.microsoft.com/azure/azure-resource-manager/templates/template-syntax)'
- en: '*ARM Template Recommendations*: [https://docs.microsoft.com/azure/azure-resource-manager/templates/templates-cloud-consistency](https://docs.microsoft.com/azure/azure-resource-manager/templates/templates-cloud-consistency)'
  id: totrans-187
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*ARM 模板建议*: [https://docs.microsoft.com/azure/azure-resource-manager/templates/templates-cloud-consistency](https://docs.microsoft.com/azure/azure-resource-manager/templates/templates-cloud-consistency)'
- en: '*Azure Security Center*: [https://azure.microsoft.com/services/security-center/](https://azure.microsoft.com/services/security-center/)'
  id: totrans-188
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*Azure 安全中心*: [https://azure.microsoft.com/services/security-center/](https://azure.microsoft.com/services/security-center/)'
- en: '*Azure Security Best Practices*: [https://azure.microsoft.com/blog/azure-storage-support-for-azure-ad-based-access-control-now-generally-available/](https://azure.microsoft.com/blog/azure-storage-support-for-azure-ad-based-access-control-now-generally-available/)'
  id: totrans-189
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*Azure 安全最佳实践*: [https://azure.microsoft.com/blog/azure-storage-support-for-azure-ad-based-access-control-now-generally-available/](https://azure.microsoft.com/blog/azure-storage-support-for-azure-ad-based-access-control-now-generally-available/)'
- en: '*Resources Link*: [https://docs.microsoft.com/azure/azure-resource-manager/templates/template-syntax#resources](https://docs.microsoft.com/azure/azure-resource-manager/templates/template-syntax#resources)'
  id: totrans-190
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*资源链接*: [https://docs.microsoft.com/azure/azure-resource-manager/templates/template-syntax#resources](https://docs.microsoft.com/azure/azure-resource-manager/templates/template-syntax#resources)'
- en: '*ARM Template Best Practices*: [https://docs.microsoft.com/azure/azure-resource-manager/templates/template-best-practices?WT.mc_id=azuredevops-azuredevops-jagord](https://docs.microsoft.com/azure/azure-resource-manager/templates/template-best-practices?WT.mc_id=azuredevops-azuredevops-jagord)'
  id: totrans-191
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*ARM 模板最佳实践*: [https://docs.microsoft.com/azure/azure-resource-manager/templates/template-best-practices?WT.mc_id=azuredevops-azuredevops-jagord](https://docs.microsoft.com/azure/azure-resource-manager/templates/template-best-practices?WT.mc_id=azuredevops-azuredevops-jagord)'
- en: '*Variables*: [https://docs.microsoft.com/azure/azure-resource-manager/templates/template-variables](https://docs.microsoft.com/azure/azure-resource-manager/templates/template-variables)'
  id: totrans-192
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*变量*: [https://docs.microsoft.com/azure/azure-resource-manager/templates/template-variables](https://docs.microsoft.com/azure/azure-resource-manager/templates/template-variables)'
- en: '*Parameters*: [https://docs.microsoft.com/azure/azure-resource-manager/templates/template-parameters](https://docs.microsoft.com/azure/azure-resource-manager/templates/template-parameters)'
  id: totrans-193
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*参数*: [https://docs.microsoft.com/azure/azure-resource-manager/templates/template-parameters](https://docs.microsoft.com/azure/azure-resource-manager/templates/template-parameters)'
