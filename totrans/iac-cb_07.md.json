["```\n$ cookstyle\n\n```", "```\n$ cookstyle -DES\n\n```", "```\n$ cookstyle -a\n\n```", "```\n$ foodcritic <cookbook path>\n\n```", "```\n$ foodcritic --exclude test cookbooks/mysite\nFC003: Check whether you are running with chef server before using server-specific features: cookbooks/mysite/recipes/htaccess.rb:7\nFC033: Missing template: cookbooks/mysite/recipes/htaccess.rb:9\nFC033: Missing template: cookbooks/mysite/recipes/htaccess.rb:19\nFC064: Ensure issues_url is set in metadata: cookbooks/mysite/metadata.rb:1\nFC065: Ensure source_url is set in metadata: cookbooks/mysite/metadata.rb:1\n\n```", "```\n$ foodcritic -t ~FC003 --exclude test cookbooks/mysite/\nFC033: Missing template: cookbooks/mysite/recipes/htaccess.rb:9\nFC033: Missing template: cookbooks/mysite/recipes/htaccess.rb:19\nFC064: Ensure issues_url is set in metadata: cookbooks/mysite/metadata.rb:1\nFC065: Ensure source_url is set in metadata: cookbooks/mysite/metadata.rb:1\n\n```", "```\nif Chef::Config[:solo]\n  Chef::Log.warn('This recipe uses search. Chef Solo does not support search.')\nelse\n  users = search(:webusers, '*:*')\nend\n```", "```\n$ berks upload\n\n```", "```\n$ foodcritic --exclude test cookbooks/mysite\n\n```", "```\n$ foodcritic -t ~FC033 --exclude test cookbooks/mysite/\nFC064: Ensure issues_url is set in metadata: cookbooks/mysite/metadata.rb:1\nFC065: Ensure source_url is set in metadata: cookbooks/mysite/metadata.rb:1\n\n```", "```\n$ foodcritic -t ~FC033 -t ~supermarket --exclude test cookbooks/mysite/\n\n```", "```\n$ cat Makefile\ntests:\n foodcritic -t ~FC033 -t ~supermarket --exclude test cookbooks/mysite\n\n```", "```\n$ sudo puppet resource package puppet-lint provider=puppet_gem \n\n```", "```\n$ puppet-lint modules/apache/manifests/init.pp\nWARNING: class not documented on line 1\nERROR: two-space soft tabs not used on line 3\n...\n$ puppet-lint modules/apache/manifests/vhost.pp\nWARNING: defined type not documented on line 1\nWARNING: variable not enclosed in {} on line 6\n...\nERROR: trailing whitespace found on line 11\n...\nERROR: two-space soft tabs not used on line 2\n...\nWARNING: indentation of => is not properly aligned\n (expected in column 34, but found it in column 31) on line 12\n...\n$ puppet-lint modules/apache/manifests/htpasswd.pp\nWARNING: defined type not documented on line 1\nWARNING: string containing only a variable on line 6\nWARNING: variable not enclosed in {} on line 6\nERROR: two-space soft tabs not used on line 2\n...\n$ puppet-lint modules/apache/manifests/htaccess.pp\nWARNING: defined type not documented on line 1\nWARNING: variable not enclosed in {} on line 6\nERROR: two-space soft tabs not used on line 2\n\n```", "```\n# Apache module\n\n## Table of Contents\n\n1\\. [Description](#description)\n1\\. [Usage](#usage)\n    * [Apache installation](#installation)\n    * [Defining a vhost](#vhost)\n\n## Description\n\nSample module for Apache on Ubuntu systems\n\n## Usage\n\n### installation\n\nTo install apache2:\n\n```", "```\n\n### vhost\n\nTo create a vhost:\n\n```", "```\n```", "```\n    # See README\n    class apache {\n      package {'apache2':\n        ensure => present,\n      }\n\n      service {'apache2':\n        ensure => running,\n        enable => true\n      }\n\n      file {'/etc/apache2/sites-enabled/000-default.conf':\n        ensure => absent,\n        notify => Service['apache2'],\n      }\n    }\n    ```", "```\n    # @param filepath Path of the htpasswd database\n    # @param users Array of hash containing users\n    # See README\n    define apache::htpasswd (\n      $filepath,\n      $users\n    ) {\n      file { $filepath:\n        ensure  => present,\n        owner   => 'root',\n        group   => 'root',\n        mode    => '0644',\n        content => template('apache/htpasswd.erb'),\n      }\n    }\n    ```", "```\n    # @param filepath Path of the htpasswd database\n    # @param docroot DocumentRoot where the .htaccess should be generated\n    # See README\n    define apache::htaccess (\n      $filepath,\n      $docroot\n    ) {\n      file { \"${docroot}/.htaccess\":\n        ensure  => present,\n        owner   => 'root',\n        group   => 'root',\n        mode    => '0644',\n        content => template('apache/htaccess.erb'),\n      }\n    }\n    ```", "```\n    # @param website Site name\n    # @param docroot DocumentRoot\n    # See README\n    define apache::vhost (\n      $website,\n      $docroot\n    ) {\n      file { \"/etc/apache2/sites-available/${website}.conf\":\n        ensure  => present,\n        owner   => 'root',\n        group   => 'root',\n        mode    => '0644',\n        content => epp('apache/vhost.epp', {\n          'website'    => $website,\n          'docroot' => $docroot}\n        ),\n      }\n\n      file { \"/etc/apache2/sites-enabled/${website}.conf\":\n        ensure  => link,\n        target  => \"/etc/apache2/sites-available/${website}.conf\",\n        require => File[\"/etc/apache2/sites-available/${website}.conf\"],\n        notify  => Service['apache2'],\n      }\n    }\n    ```", "```\n$ sudo puppet resource package yard provider=puppet_gem\n\n$ sudo puppet resource package puppet-strings provider=puppet_gem\n\n```", "```\n$ puppet strings\nFiles:                    4\nModules:                  0 (    0 undocumented)\nClasses:                  0 (    0 undocumented)\nConstants:                0 (    0 undocumented)\nAttributes:               0 (    0 undocumented)\nMethods:                  0 (    0 undocumented)\nPuppet Classes:           1 (    0 undocumented)\nPuppet Defined Types:     3 (    0 undocumented)\nPuppet Types:             0 (    0 undocumented)\nPuppet Providers:         0 (    0 undocumented)\nPuppet Functions:         0 (    0 undocumented)\n 100.00% documented\n$ ls -1 doc\n_index.html\ncss/\nfile.README.html\nframes.html\nindex.html\njs/\npuppet_class_list.html\npuppet_classes/\npuppet_defined_type_list.html\npuppet_defined_types/\ntop-level-namespace.html\n\n```", "```\n$ mkdir -p spec/unit/recipes\n\n```", "```\n$ tree spec/\nspec/\n├── spec_helper.rb\n└── unit\n └── recipes\n ├── default_spec.rb\n └── virtualhost_spec.rb\n\n```", "```\nrequire 'chefspec'\nrequire 'chefspec/berkshelf'\nChefSpec::Coverage.start!\n```", "```\nrequire 'spec_helper'\n```", "```\ndescribe 'cookbook::recipe_name' do \n  [...]\nend\n```", "```\ndescribe 'apache::default' do\n  context 'Default attributes on CentOS 7.2' do\n    let(:chef_run) do\n      runner = ChefSpec::ServerRunner.new(platform: 'centos', version: '7.2.1511')\n      runner.converge(described_recipe)\n    end\n\n    it 'converges successfully' do\n      expect { chef_run }.to_not raise_error\n    end\n  end\nend\n```", "```\n$ chef exec rspec --color\n.....\n\nFinished in 0.82521 seconds (files took 1.87 seconds to load)\n5 examples, 0 failures\n\nChefSpec Coverage report generated...\n\n Total Resources:   2\n Touched Resources: 0\n Touch Coverage:    0.0%\n\nUntouched Resources:\n\n yum_package[httpd]                 apache/recipes/default.rb:7\n service[httpd]                     apache/recipes/default.rb:11\n\n```", "```\n$ chef exec rspec --format documentation --color\n\napache::default\n Default attributes on CentOS 7.2\n converges successfully\n installs httpd\n enables and starts httpd service\n\napache::virtualhost\n Default attributes on CentOS 7.2\n converges successfully\n creates a virtualhost directory\n creates and index.html file\n creates a virtualhost configuration file\n\nFinished in 1.14 seconds (files took 2.56 seconds to load)\n7 examples, 0 failures\n\nChefSpec Coverage report generated...\n\n Total Resources:   5\n Touched Resources: 5\n Touch Coverage:    100.0%\n\nYou are awesome and so is your test coverage! Have a fantastic day!\n\n```", "```\n it 'installs httpd' do\n expect(chef_run).to install_package('httpd')\n end\n\n```", "```\n it 'enables and starts httpd service' do\n expect(chef_run).to enable_service('httpd')\n expect(chef_run).to start_service('httpd')\n end\n\n```", "```\nrequire 'spec_helper'\n\ndescribe 'apache::virtualhost' do\n  context 'Default attributes on CentOS 7.2' do\n    let(:chef_run) do\n      runner = ChefSpec::ServerRunner.new(platform: 'centos', version: '7.2.1511')\n      runner.converge(described_recipe)\n    end\n\n    it 'converges successfully' do\n      expect { chef_run }.to_not raise_error\n    end\n  end\nend\n```", "```\n$ chef exec rspec --color\n[...]\nChefSpec Coverage report generated...\n\n Total Resources:   5\n Touched Resources: 2\n Touch Coverage:    40.0%\n\nUntouched Resources:\n\n directory[/var/www/default]        apache/recipes/virtualhost.rb:8\n file[/var/www/default/index.html]   apache/recipes/virtualhost.rb:15\n template[/etc/httpd/conf.d/default.conf]   apache/recipes/virtualhost.rb:22\n\n```", "```\n    it 'creates a virtualhost directory' do\n      expect(chef_run).to create_directory('/var/www/default').with(\n        user: 'root',\n        group: 'root'\n      )\n    end\n```", "```\n    it 'creates and index.html file' do\n      expect(chef_run).to create_file('/var/www/default/index.html').with(\n        user: 'root',\n        group: 'root'\n      )\n    end\n```", "```\n    it 'creates a virtualhost configuration file' do\n      expect(chef_run).to create_template('/etc/httpd/conf.d/default.conf').with(\n        user: 'root',\n        group: 'root'\n      )\n    end\n```", "```\nYou are awesome and so is your test coverage! Have a fantastic day!\n\n```", "```\ndescribe 'mysite::default' do\n  context 'Default attributes on CentOS 7.2' do\n    let(:chef_run) do\n      runner = ChefSpec::ServerRunner.new(platform: 'centos', version: '7.2.1511')\n      runner.create_data_bag('webusers', {\n 'john' => {\n 'id' => 'john',\n 'htpasswd' => '$apr1$AUI2Y5pj$0v0PaSlLfc6QxZx1Vx5Se.'\n }\n })\n      runner.converge(described_recipe)\n    end\n\n    it 'converges successfully' do\n      expect { chef_run }.to_not raise_error\n    end\n  end\nend\n```", "```\n    it 'includes the `apache` recipes' do\n      expect(chef_run).to include_recipe('apache::default')\n      expect(chef_run).to include_recipe('apache::virtualhost')\n    end\n```", "```\n    it 'converges successfully' do\n      # The selinux cookbook raises this error.\n      expect { chef_run }.to raise_error(RuntimeError, 'chefspec not supported!')\n    end\n```", "```\n$ sudo puppet resource package puppetlabs_spec_helper provider=puppet_gem\n\n```", "```\nrequire 'puppetlabs_spec_helper/rake_tasks'\n\n```", "```\nrequire 'puppetlabs_spec_helper/module_spec_helper'\n\n```", "```\nrequire 'spec_helper'\n\n# Description of the \"apache\" class\ndescribe 'apache' do\n  # Assertion list\n  it { is_expected.to compile.with_all_deps }\n  it { is_expected.to contain_package('apache2').with(\n     {\n      'ensure' => 'present',\n    }\n  ) }\n  it { is_expected.to contain_service('apache2').with(\n     {\n      'ensure' => 'running',\n      'enable' => 'true',\n    }\n  ) }\nend\n```", "```\n$ rake spec\n...\n\nFinished in 2.42 seconds (files took 1.53 seconds to load)\n3 examples, 0 failures\n\n```", "```\n    require 'spec_helper'\n\n    # Description of the \"apache::vhost\" 'define' resource\n    describe 'apache::vhost', :type => :define do\n\n      # As a requirement, we should load the apache class\n      let :pre_condition do\n        'class {\"apache\":;}'\n      end\n\n      # Define a title for the 'define' resource\n      let :title do\n        'mysite'\n      end\n\n      # Parameters list \n      let :params do \n        {\n          :website => 'www.sample.com' , \n          :docroot => '/var/www/docroot',\n        }\n      end\n\n      # Assertions list\n      it { is_expected.to compile }\n      it { is_expected.to contain_class('apache') }\n      it { is_expected.to contain_file('/etc/apache2/sites-available/www.sample.com.conf')\n        .with_content(/DocumentRoot \\/var\\/www\\/docroot/) }\n      it { is_expected.to contain_file('/etc/apache2/sites-enabled/www.sample.com.conf').with(\n        'ensure' => 'link',\n        'target' => '/etc/apache2/sites-available/www.sample.com.conf'\n      ) }\n    end\n    ```", "```\n    require 'spec_helper'\n\n    # Description of the \"apache::htpasswd\" 'define' resource\n    describe 'apache::htpasswd', :type => :define do\n\n      # As a requirement, we should load the apache class\n      let :pre_condition do\n        'class {\"apache\":;}'\n      end\n\n      # Define a title for the 'define' resource\n      let :title do\n        'myhtpasswd'\n      end\n\n      # Parameters list\n      let :params do \n        {\n          :filepath => '/tmp/htpasswd' , \n          :users => [ { \"id\" => \"user1\", \"htpasswd\" => \"hash1\" } ]\n        }\n      end\n\n      # Assertion list\n      it { is_expected.to compile }\n      it { is_expected.to contain_class('apache') }\n      it { is_expected.to contain_file('/tmp/htpasswd')\n        .with_content(/user1:hash1/) }\n    end\n    ```", "```\n    require 'spec_helper'\n\n    # Description of the \"apache::htaccess\" 'define' resource\n    describe 'apache::htaccess', :type => :define do\n\n      # As a requirement, we should load the apache class\n      let :pre_condition do\n        'class {\"apache\":;}'\n      end\n\n      # Define a title for the 'define' resource\n      let :title do\n        'myhtaccess'\n      end\n\n      # Parameters list\n      let :params do \n        {\n          :filepath => '/tmp/htpasswd' , \n          :docroot => '/var/www/docroot',\n        }\n      end\n\n      # Assertion list\n      it { is_expected.to compile }\n      it { is_expected.to contain_class('apache') }\n      it { is_expected.to contain_file('/var/www/docroot/.htaccess')\n        .with_content(/AuthUserFile \\/tmp\\/htpasswd/) }\n    end\n    ```", "```\n$ rake spec\n.............\n\nFinished in 2.88 seconds (files took 1.52 seconds to load)\n13 examples, 0 failures\n\n```", "```\n---\ndriver:\n  name: vagrant\n\nprovisioner:\n  name: chef_zero\n\nplatforms:\n  - name: centos-7.2\n\nsuites:\n  - name: default\n    data_bags_path: \"../../data_bags\"\n    run_list:\n      - recipe[mysite::default]\n    attributes:\n```", "```\n$ kitchen test\n-----> Testing <default-centos-72>\n-----> Creating <default-centos-72>...\n[...]\n Finished creating <default-centos-72> (1m1.51s).\n-----> Converging <default-centos-72>...\n[...]\n-----> Installing Chef Omnibus (install only if missing)\n[...]\n resolving cookbooks for run list: [\"mysite::default\"]\n Synchronizing Cookbooks:\n - apache (0.5.0)\n - php (0.2.0)\n - selinux (0.9.0)\n - yum-mysql-community (1.0.0)\n - mysite (0.3.1)\n - mysql (8.0.4)\n - yum (4.0.0)\n[...]\n Chef Client finished, 41/56 resources updated in 02 minutes 47 seconds\n Finished converging <default-centos-72> (3m18.96s).\n-----> Setting up <default-centos-72>...\n Finished setting up <default-centos-72> (0m0.00s).\n-----> Verifying <default-centos-72>...\n Preparing files for transfer\n Transferring files to <default-centos-72>\n Finished verifying <default-centos-72> (0m0.00s).\n-----> Destroying <default-centos-72>...\n ==> default: Stopping the VMware VM...\n ==> default: Deleting the VM...\n Vagrant instance <default-centos-72> destroyed.\n Finished destroying <default-centos-72> (0m28.38s).\n Finished testing <default-centos-72> (4m48.86s).\n-----> Kitchen is finished. (4m50.01s)\n\n```", "```\n$ sudo puppet resource package beaker-rspec \nprovider=puppet_gem ensure=5.6.0\n\n```", "```\n$ sudo puppet resource package beaker-puppet_install_helper provider=puppet_gem\n\n```", "```\nHOSTS:\n ubuntu-1604-x64:\n roles:\n - agent\n - default\n platform: ubuntu-16.04-amd64\n hypervisor: vagrant\n box: bento/ubuntu-16.04\nCONFIG:\n type: foss\n\n```", "```\n$ rake beaker\n/opt/puppetlabs/puppet/bin/ruby -I/opt/puppetlabs/puppet/lib/ruby/gems/2.1.0/gems/rspec-support-3.6.0.beta1/lib:/opt/puppetlabs/puppet/lib/ruby/gems/2.1.0/gems/rspec-core-3.6.0.beta1/lib /opt/puppetlabs/puppet/lib/ruby/gems/2.1.0/gems/rspec-core-3.6.0.beta1/exe/rspec --pattern spec/acceptance --color\nNo examples found.\nFinished in 0.00081 seconds (files took 0.14125 seconds to load)\n0 examples, 0 failures\n\n```", "```\n$ cd cookbooks/mysite\n$ rm -rf test/*\n\n```", "```\n$ mkdir -p test/integration/default/serverspec\n\n```", "```\nrequire 'serverspec'\n# Required by serverspec\nset :backend, :exec\n```", "```\nrequire 'spec_helper'\n```", "```\nrequire 'spec_helper'\n\ndescribe package('httpd') do\n  it { should be_installed }\nend\n```", "```\nrequire 'spec_helper'\n\ndescribe package('php') do\n  it { should be_installed }\nend\n\ndescribe package('php-cli') do\n  it { should be_installed }\nend\n\ndescribe package('php-mysql') do\n  it { should be_installed }\nend\n```", "```\ndescribe service('httpd') do\n  it { should be_enabled }\n  it { should be_running }\nend\n```", "```\ndescribe service('mysql-default') do\n  it { should be_enabled }\n  it { should be_running }\nend\n```", "```\ndescribe port('80') do\n  it { should be_listening }\nend\n```", "```\ndescribe port('3306') do\n  it { should be_listening }\nend\n```", "```\ndescribe file('/etc/httpd/conf.d/mysite.conf') do\n  it { should exist }\n  it { should be_mode 644 }\n  its(:content) { should match /ServerName mysite/ }\n  it { should be_owned_by 'root' }\n  it { should be_grouped_into 'root' }\nend\n```", "```\ndescribe file('/var/www/mysite') do\n  it { should be_directory }\nend\n```", "```\ndescribe file('/etc/httpd/htpasswd') do\n  it { should exist }\n  it { should be_mode 660 }\n  its(:content) { should match /john/ }\n  it { should be_owned_by 'root' }\n  it { should be_grouped_into 'root' }\nend\n```", "```\ndescribe yumrepo('mysql57-community') do\n    it { should be_exist   }\n    it { should be_enabled }\nend\n```", "```\nrequire 'beaker-rspec'\nrequire 'beaker/puppet_install_helper'\n\n# Install puppet\nrun_puppet_install_helper\n\nRSpec.configure do |c|\n  # Project root\n  proj_root = File.expand_path(File.join(File.dirname(__FILE__), '..'))\n\n  # Output should contain test descriptions\n  c.formatter = :documentation\n\n  # Configure nodes\n  c.before :suite do\n    # Install module \n    puppet_module_install(:source => proj_root, :module_name => 'apache')\n  end\nend\n```", "```\nrequire 'spec_helper_acceptance'\n\ndescribe 'Apache' do\n  describe 'Puppet code' do\n    it 'should compile and work with no error' do\n      pp = <<-EOS\n        class { 'apache': }\n      EOS\n\n      apply_manifest(pp, :catch_failures => true)\n      apply_manifest(pp, :catch_changes => true)\n    end\n  end\nend\n```", "```\n$ rake beaker\n...\n...\nBeaker::Hypervisor, found some vagrant boxes to create\nBringing machine 'ubuntu-1604-x64' up with 'virtualbox' provider...\n...\n...\nApache\n Puppet code\nlocalhost $ scp /var/folders/k9/7sp85p796qx7c22btk7_tgym0000gn/T/beaker20161101-75828-1of1g5j ubuntu-1604-x64:/tmp/apply_manifest.pp.cZK277 {:ignore => }\nlocalhost $ scp /var/folders/k9/7sp85p796qx7c22btk7_tgym0000gn/T/beaker20161101-75828-1l28bth ubuntu-1604-x64:/tmp/apply_manifest.pp.q2Z81Z {:ignore => }\n should compile and work with no error\nDestroying vagrant boxes\n==> ubuntu-1604-x64: Forcing shutdown of VM...\n==> ubuntu-1604-x64: Destroying VM and associated drives...\n\nFinished in 19.68 seconds (files took 1 minute 20.11 seconds to load)\n1 example, 0 failures\n\n```", "```\nHOSTS:\n  ubuntu-1604-x64:\n    roles:\n      - agent\n      - default\n    platform: ubuntu-16.04-amd64\n    hypervisor: vagrant\n    box: bento/ubuntu-16.04\nCONFIG:\n  type: foss\n log_level: verbose\n\n```", "```\nrequire 'spec_helper_acceptance'\n\ndescribe 'Apache' do\n  describe 'Puppet code' do\n    it 'should compile and work with no error' do\n      pp = <<-EOS\n        class { 'apache': }\n apache::vhost{'mysite':\n website    => 'www.sample.com',\n docroot    => '/var/www/docroot',\n }\n apache::htpasswd{'htpasswd':\n filepath => '/etc/apache2/htpasswd',\n users    => [ { \"id\" => \"user1\", \"htpasswd\" => \"hash1\" } ],\n }\n file { '/var/www/docroot':\n ensure => directory,\n owner  => 'www-data',\n group  => 'www-data',\n mode   => '0755',\n }\n apache::htaccess{'myhtaccess':\n filepath => '/etc/apache2/htpasswd',\n docroot  => '/var/www/docroot',\n }\n      EOS\n\n      apply_manifest(pp, :catch_failures => true)\n      apply_manifest(pp, :catch_changes => true)\n    end\n  end\n\n # Apache running and enabled at boot ?\n describe service('apache2') do\n it { is_expected.to be_enabled }\n it { is_expected.to be_running }\n end\n\n # Apache listening ?\n describe port(80) do\n it { is_expected.to be_listening }\n end\n\n # Vhost deployed ?\n describe file ('/etc/apache2/sites-available/www.sample.com.conf') do\n its(:content) { should match /DocumentRoot \\/var\\/www\\/docroot/ }\n end\n\n describe file ('/etc/apache2/sites-enabled/www.sample.com.conf') do\n it { is_expected.to be_symlink }\n end\n\n # htpasswd file deployed ?\n describe file ('/etc/apache2/htpasswd') do\n its(:content) { should match /user1:hash1/ }\n end\n\n # htaccess file deployed ?\n describe file ('/var/www/docroot/.htaccess') do\n its(:content) { should match /AuthUserFile \\/etc\\/apache2\\/htpasswd/ }\n end\n\nend\n\n```", "```\n$ rake beaker\n…\n…\nBeaker::Hypervisor, found some vagrant boxes to create\nBringing machine 'ubuntu-1604-x64' up with 'virtualbox' provider...\n…\n…\nApache\n Puppet code\nlocalhost $ scp /var/folders/k9/7sp85p796qx7c22btk7_tgym0000gn/T/beaker20161103-41882-1twwbr2 ubuntu-1604-x64:/tmp/apply_manifest.pp.nWPdZJ {:ignore => }\nlocalhost $ scp /var/folders/k9/7sp85p796qx7c22btk7_tgym0000gn/T/beaker20161103-41882-73vqlb ubuntu-1604-x64:/tmp/apply_manifest.pp.0Jht7j {:ignore => }\n should compile and work with no error\n Service \"apache2\"\n should be enabled\n should be running\n Port \"80\"\n should be listening\n File \"/etc/apache2/sites-available/www.sample.com.conf\"\n content\n should match /DocumentRoot \\/var\\/www\\/docroot/\n File \"/etc/apache2/sites-enabled/www.sample.com.conf\"\n should be symlink\n File \"/etc/apache2/htpasswd\"\n content\n should match /user1:hash1/\n File \"/var/www/docroot/.htaccess\"\n content\n should match /AuthUserFile \\/etc\\/apache2\\/htpasswd/\nDestroying vagrant boxes\n==> ubuntu-1604-x64: Forcing shutdown of VM...\n==> ubuntu-1604-x64: Destroying VM and associated drives...\n\nFinished in 20.22 seconds (files took 1 minute 24.54 seconds to load)\n8 examples, 0 failures\n\n```"]