- en: '3'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Setting Variables, Environments, Approvals, and Checks
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In the previous chapters, we created our first build pipeline by creating jobs
    and tasks for it and made a trigger to run a build pipeline automatically. This
    chapter will cover the next step in creating release pipelines. By the end of
    this chapter, you will have learned how to create a release pipeline so that you
    can deploy an application on Azure. This involves setting up a variable group
    library and learning to add and use secret files for specific use cases, such
    as mobile application deployment.
  prefs: []
  type: TYPE_NORMAL
- en: 'We will cover the following topics in this chapter:'
  prefs: []
  type: TYPE_NORMAL
- en: Creating a service connection for Azure resources
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Creating a variable group library
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Uploading and managing a secret file
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Creating a release pipeline.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Creating a service connection for Azure resources
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This section will teach you how to create a service connection so that you can
    release your application on Azure resources. Before creating a service connection,
    you need to provide an Azure credential that can be obtained from the Azure portal.
  prefs: []
  type: TYPE_NORMAL
- en: Exploring Azure app registration
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**App registrations** is the portal section where you can obtain Azure credentials,
    allowing Azure Pipelines to deploy applications to Azure resources. You can create
    an Azure app registration by performing the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Navigate to [https://portal.azure.com](https://portal.azure.com) | **Microsoft**
    **Entra ID**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Click on **App registrations** and then **+** **New registration**:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 3.1 – The App registrations page](img/B18875_03_01.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 3.1 – The App registrations page
  prefs: []
  type: TYPE_NORMAL
- en: 'Click on the **Register an application** option. At this point, you need to
    provide the name of the registered application, after which you can choose from
    four options regarding account type. The first is for a single tenant, which means
    only a single identity in one Azure account. The second option is for multiple
    identities in one Azure account. The third option is for if there are multiple
    identities, including personal Microsoft accounts in one Azure account. The last
    option is only for personal Microsoft accounts in one Azure account. Once you’ve
    chosen the relevant option, click **Register**:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 3.2 – The Register an application page](img/B18875_03_02.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 3.2 – The Register an application page
  prefs: []
  type: TYPE_NORMAL
- en: 'After registering an app ID, navigate to **Certificates & Secrets** to create
    a secret. Go to **+ New client secret** | **Add a client secret**. Provide the
    description and expiry date and click **Add**:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 3.3 – Certificates and secrets](img/B18875_03_03.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 3.3 – Certificates and secrets
  prefs: []
  type: TYPE_NORMAL
- en: 'Do not forget to copy the *secret* value – it will disappear, and you cannot
    recover it after you close this page:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 3.4 – Client secrets](img/B18875_03_04.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 3.4 – Client secrets
  prefs: []
  type: TYPE_NORMAL
- en: 'Copy the highlighted information to prepare for creating a service connection:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 3.5 – App registration overview](img/B18875_03_05.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 3.5 – App registration overview
  prefs: []
  type: TYPE_NORMAL
- en: In the following section, we will use this information to create a service connection.
  prefs: []
  type: TYPE_NORMAL
- en: Creating a service connection
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'To deploy an application on Azure, you need to create a service connection,
    which is a service account that allows you to access the Azure resource. To do
    this, follow these instructions:'
  prefs: []
  type: TYPE_NORMAL
- en: 'After creating an app registration from the Azure portal, navigate to the Azure
    DevOps page at [https://dev.azure.com/](https://dev.azure.com/) and click **Sign
    in**:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 3.6 – Sign-in page](img/B18875_03_06.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 3.6 – Sign-in page
  prefs: []
  type: TYPE_NORMAL
- en: 'Click on **Project settings** | **Service connections** > **Create** **service
    connection**:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 3.7 – Creating a service connection](img/B18875_03_07.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 3.7 – Creating a service connection
  prefs: []
  type: TYPE_NORMAL
- en: 'Select **Azure Resource Manager** and click **Next**:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 3.8 – Selecting a service connection type](img/B18875_03_08.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 3.8 – Selecting a service connection type
  prefs: []
  type: TYPE_NORMAL
- en: 'For **Authentication method**, there are four options to choose from:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The first option involves automatically finding service principles in all Azure
    resources.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: The second option is a manual method where you can enter all information about
    the app ID. This option allows you to easily connect to Azure resources.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: The third option is used for an existing identity that is used for another system.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: The final option involves exporting the public profile from the Azure portal
    page and using it.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'For this example, select the second option, **Service principal (manual)**,
    and click **Next**:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Figure 3.9 – Choosing an authentication method](img/B18875_03_09.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 3.9 – Choosing an authentication method
  prefs: []
  type: TYPE_NORMAL
- en: Fill in the required fields, as follows, and click `Azure Cloud`
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '`<Check on` `subscription menu>`'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '`<Check on` `subscription menu>`'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '`<Client id of` `App registration>`'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '`<Secret of` `App registration>`'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '`<Tenant ID of` `App registration>`'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '`sp-for-devops`'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Security**: Turn **Grant access permission to all** **pipelines** on.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 3.10 – Enter Azure service connection details](img/B18875_03_10.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 3.10 – Enter Azure service connection details
  prefs: []
  type: TYPE_NORMAL
- en: 'You can now view the new service connection:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 3.11 – List of all service connections](img/B18875_03_11.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 3.11 – List of all service connections
  prefs: []
  type: TYPE_NORMAL
- en: In this section, you learned how to create a service connection for an Azure
    resource connection. You will use this when you create a release pipeline for
    deploying an Azure application. In the next section, you will learn how to create
    global variables and secret files for use on all Azure pipelines in a project.
  prefs: []
  type: TYPE_NORMAL
- en: Managing global variables and secret files
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Most projects will use the same value for creating release pipelines, such as
    the name of the Azure service connection. This section will teach you how to create
    the variable group and secret files. These resources are essential for sharing
    common values across multiple pipelines, and include, for instance, a username
    and password for deploying applications to Microsoft Azure.
  prefs: []
  type: TYPE_NORMAL
- en: Creating a variable group library
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You need to create a global variable to link to all pipelines if that pipeline
    needs to use an Azure service connection. Using variable groups reduces the chances
    of making mistakes and duplicating values across many pipelines. When you need
    to update the values, you can do so in a single centralized location instead of
    throughout all pipelines.
  prefs: []
  type: TYPE_NORMAL
- en: 'You can follow these steps when you need to create variables you wish to share
    for all pipelines:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Navigate to your project and click on **Pipelines** | **Library** | **Variable
    group**:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 3.12 – Creating a variable group](img/B18875_03_12.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 3.12 – Creating a variable group
  prefs: []
  type: TYPE_NORMAL
- en: 'Fill in all the required fields; specify **Variable group name** and **Name**
    with the values that you would like to share across all pipelines and click **Save**:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 3.13 – Entering variable group details](img/B18875_03_13.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 3.13 – Entering variable group details
  prefs: []
  type: TYPE_NORMAL
- en: 'Edit the existing pipeline that you need to link to a variable group. Click
    the **Edit** option for the existing pipeline and navigate to **Variables** |
    **Variable groups** | **Link** **variable group**:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 3.14 – Selecting variable groups](img/B18875_03_14.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 3.14 – Selecting variable groups
  prefs: []
  type: TYPE_NORMAL
- en: 'Select the variable group you just created and click **Link**:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 3.15 – Link variable group](img/B18875_03_15.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 3.15 – Link variable group
  prefs: []
  type: TYPE_NORMAL
- en: 'Review all the values that have been assigned to your variable group and click
    **Save &** **queue**:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 3.16 – Reviewing and saving the variable group to the pipeline](img/B18875_03_16.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 3.16 – Reviewing and saving the variable group to the pipeline
  prefs: []
  type: TYPE_NORMAL
- en: In this section, you learned how to create a variable group to share for all
    pipelines. You also learned how to link a variable group to the existing pipeline.
    In the next section, you will learn how to upload secret files and connect them
    to your pipelines.
  prefs: []
  type: TYPE_NORMAL
- en: Uploading and selecting a secret file
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Secret files typically contain sensitive information, such as signing certificates,
    SSH keys, license files, or mobile provisioning profiles. In some cases, you are
    responsible for generating such files and in other cases, these files are generated
    on other platforms. You then must download the file from that platform and make
    it available to your CI/CD pipelines.
  prefs: []
  type: TYPE_NORMAL
- en: For example, to deploy a mobile application such as an iOS application, you
    must first generate a **provisioning profile** that contains information about
    who is developing the iOS application, download it, and then link it to the pipeline.
  prefs: []
  type: TYPE_NORMAL
- en: 'To do this, follow these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Go to **Pipelines** | **Library** | **+** **Secure file**:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 3.17 – Secure file](img/B18875_03_17.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 3.17 – Secure file
  prefs: []
  type: TYPE_NORMAL
- en: 'Click `*.mobileprovision` file that you need to keep as a secret file and click
    **OK**:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 3.18 – Upload file](img/B18875_03_18.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 3.18 – Upload file
  prefs: []
  type: TYPE_NORMAL
- en: 'View the secure file that you uploaded:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 3.19 – Viewing secure files](img/B18875_03_19.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 3.19 – Viewing secure files
  prefs: []
  type: TYPE_NORMAL
- en: 'Click on `Secure`, and click **Add** on the **Download secure** **file** task:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 3.20 – The Download secure file task](img/B18875_03_20.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 3.20 – The Download secure file task
  prefs: []
  type: TYPE_NORMAL
- en: 'In the previous steps, we added the secret file in the global section. We now
    need to download it when we use it. To do this, enter the relevant details:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 3.21 – Entering the relevant details](img/B18875_03_21.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 3.21 – Entering the relevant details
  prefs: []
  type: TYPE_NORMAL
- en: 'Click `Command line`, and click **Add** on the **Command** **line** task:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 3.22 – Adding the Command line task](img/B18875_03_22.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 3.22 – Adding the Command line task
  prefs: []
  type: TYPE_NORMAL
- en: 'Enter the relevant `Display secure file path` and for `echo $(demo.secureFilePath)`.
    Click **Save &** **queue**:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 3.23 – Entering details for the Command line task](img/B18875_03_23.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 3.23 – Entering details for the Command line task
  prefs: []
  type: TYPE_NORMAL
- en: 'View the job to see the **Display secure** **file** log:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 3.24 – Viewing the secure file path](img/B18875_03_24.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 3.24 – Viewing the secure file path
  prefs: []
  type: TYPE_NORMAL
- en: Why use secure files?
  prefs: []
  type: TYPE_NORMAL
- en: These files will be stored securely and encrypted in Azure DevOps for you to
    use in your pipelines, minimizing the chances for them to be misplaced or misused
    by your team.
  prefs: []
  type: TYPE_NORMAL
- en: This section taught you how to create secure files and connect them to pipelines.
    You also learned how to download secure files to pipelines and display them on
    the command line. In the next section, you will learn how to create a release
    pipeline that includes both a variable group and a secure file.
  prefs: []
  type: TYPE_NORMAL
- en: Creating a release pipeline
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This section will teach you how to create a release pipeline to deploy the artifact
    that’s received from a build pipeline.
  prefs: []
  type: TYPE_NORMAL
- en: A **release pipeline** also includes a secure file and a variable from a variable
    group of a library.
  prefs: []
  type: TYPE_NORMAL
- en: 'To create such a pipeline, follow these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Navigate to **Pipelines** | **Releases** | **New pipeline**:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 3.25 – New pipeline](img/B18875_03_25.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 3.25 – New pipeline
  prefs: []
  type: TYPE_NORMAL
- en: 'Click on the relevant pipeline, which in this case is **release-app-dev**.
    Navigate to **Pipeline** | **Artifacts** | **+** **Add**:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 3.26 – Adding artifacts](img/B18875_03_26.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 3.26 – Adding artifacts
  prefs: []
  type: TYPE_NORMAL
- en: 'Click **Build** and select **PacktAzureDevOps-CI**, then click **Add**:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 3.27 – Entering artifact data](img/B18875_03_27.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 3.27 – Entering artifact data
  prefs: []
  type: TYPE_NORMAL
- en: 'Go to **Variables** | **Variable groups** | **global-var-group** | **Link**:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 3.28 – Link variable group](img/B18875_03_28.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 3.28 – Link variable group
  prefs: []
  type: TYPE_NORMAL
- en: 'Expand **global-var-group (1)** to see all the associated variables:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 3.29 – Reviewing the variables](img/B18875_03_29.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 3.29 – Reviewing the variables
  prefs: []
  type: TYPE_NORMAL
- en: 'Click `demo` under **Reference name**:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 3.30 – Adding a Download secure file task](img/B18875_03_30.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 3.30 – Adding a Download secure file task
  prefs: []
  type: TYPE_NORMAL
- en: Click on the `Display Secure file &` `Variables`
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Script**:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'This can be seen in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 3.31 – Adding a Command line task](img/B18875_03_31.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 3.31 – Adding a Command line task
  prefs: []
  type: TYPE_NORMAL
- en: 'Click on **Agent job**, then select the following options:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Agent pool**: **Azure Pipelines**'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Agent** **Specification**: **ubuntu-latest**'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Then click **Save**:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Figure 3.32 – Agent job properties.](img/B18875_03_32.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 3.32 – Agent job properties.
  prefs: []
  type: TYPE_NORMAL
- en: 'To create the release pipeline, navigate to **Releases** | **PacktAzureDevOps-CD**
    | **Releases** | **Create** **a release**:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 3.33 – Create a release](img/B18875_03_33.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 3.33 – Create a release
  prefs: []
  type: TYPE_NORMAL
- en: 'You can retain the default values. You can also enter information to describe
    the purpose of the release pipeline in the **Release description** box and click
    **Create**:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 3.34 – Confirming the creation of a release pipeline](img/B18875_03_34.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 3.34 – Confirming the creation of a release pipeline
  prefs: []
  type: TYPE_NORMAL
- en: 'The default values in the preceding screenshot have different meanings; let’s
    break them down:'
  prefs: []
  type: TYPE_NORMAL
- en: Stages with an automated trigger will start as soon as the release is created.
    With this option, you can stop the stage from starting when the release is created
    and then start it manually from the portal.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: For **Artifacts**, the latest version available when creating the release will
    be the default option that’s selected. This option gives you the chance to select
    any other version available, such as in the scenario where you want to perform
    a rollback by deploying a previous version of the artifact.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'You can now see the progress of running the release pipeline:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 3.35 – Building a release](img/B18875_03_35.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 3.35 – Building a release
  prefs: []
  type: TYPE_NORMAL
- en: 'You can also view the task list by clicking **Display Secure file &** **Variables**:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 3.36 – Viewing the release results](img/B18875_03_36.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 3.36 – Viewing the release results
  prefs: []
  type: TYPE_NORMAL
- en: 'The task results will be shown as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 3.37 – Command line task results](img/B18875_03_37.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 3.37 – Command line task results
  prefs: []
  type: TYPE_NORMAL
- en: With that, you have learned how to create a release pipeline, including a secure
    file and a variable group library. You can apply this pattern to any pipeline
    when creating one.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This chapter taught you how to create a release pipeline with variable group
    libraries and upload and manage a secret file. These components not only enhance
    the organization and security of your pipelines but also provide a foundation
    for efficient, consistent deployments.
  prefs: []
  type: TYPE_NORMAL
- en: Understanding how to create them will help you orchestrate streamlined, effective
    interactions between your Azure DevOps pipeline and the Azure ecosystem, a valuable
    skill for any Azure-powered development project.
  prefs: []
  type: TYPE_NORMAL
- en: In the next chapter, you will learn how to customize a build pipeline using
    YAML and run it on the agent. This YAML will create an advanced build pipeline
    rather than creating it on the Azure portal and is where you can create parameters
    for a build pipeline.
  prefs: []
  type: TYPE_NORMAL
