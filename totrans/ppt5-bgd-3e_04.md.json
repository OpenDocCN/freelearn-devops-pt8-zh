["```\nfile { '/tmp/hello.txt':\n  content => \"hello, world\\n\",\n}\n```", "```\nfile { '/etc/motd':\n  source => '/examples/files/motd.txt',\n}\n```", "```\nsudo puppet apply /examples/file_source.pp\ncat /etc/motd\nThe best software in the world only sucks. The worst software is significantly worse than that.\n-Luke Kanies\n```", "```\nfile { '/tmp/README.md':\n  source => 'https://raw.githubusercontent.com/puppetlabs/puppet/master/README.md',\n}\n```", "```\nls -l /etc/motd\n-rw-r--r-- 1 root root 109 Aug 31 04:03 /etc/motd\n```", "```\nfile { '/etc/owned_by_ubuntu':\n  ensure => present,\n  owner  => 'ubuntu',\n}\nls -l /etc/owned_by_ubuntu\n-rw-r--r-- 1 ubuntu root 0 Aug 31 04:48 /etc/owned_by_ubuntu\n```", "```\nfile { '/etc/owned_by_ubuntu':\n  ensure => present,\n  owner  => 'ubuntu',\n  group  => 'ubuntu',\n}\nls -l /etc/owned_by_ubuntu\n-rw-r--r-- 1 ubuntu ubuntu 0 Aug 31 04:48 /etc/owned_by_ubuntu\n```", "```\nfile { '/etc/owned_by_ubuntu':\n  ensure => present,\n  owner  => 'ubuntu',\n  mode   => '0644',\n}\n```", "```\nfile { '/etc/config_dir':\n  ensure => directory,\n}\n```", "```\nfile { '/etc/config_dir':\n  source  => '/examples/files/config_dir',\n  recurse => true,\n}\nls /etc/config_dir/\n1  2  3\n```", "```\nfile { '/etc/this_is_a_link':\n  ensure => link,\n  target => '/etc/motd',\n}\nls -l /etc/this_is_a_link\nlrwxrwxrwx 1 root root 9 Aug 31 05:05 /etc/this_is_a_link -> /etc/motd\n```", "```\npackage { 'apparmor':\n  ensure => absent,\n}\n```", "```\npackage { 'openssl':\n  ensure => '1.0.2g-1ubuntu4.8',\n}\n```", "```\npackage { 'ruby':\n  ensure => installed,\n}\n\npackage { 'puppet-lint':\n  ensure   => installed,\n  provider => gem,\n}\n```", "```\npuppet-lint /examples/lint_test.pp\nWARNING: indentation of => is not properly aligned (expected in column 11, but found it in column 10) on line 2\n```", "```\nfile { '/tmp/lint.txt':\n  ensure => file,\n  content => \"puppet-lint is your friend\\n\",\n}\n```", "```\npackage { 'r10k':\n  ensure   => installed,\n  provider => puppet_gem,\n}\n```", "```\nservice { 'ntp':\n  ensure    => running,\n  enable    => true,\n  hasstatus => false,\n}\n```", "```\nps ax\n\n```", "```\nservice { 'ntp':\n  ensure    => running,\n  enable    => true,\n  hasstatus => false,\n  pattern   => 'ntpd',\n}\n```", "```\nservice { 'ntp':\n  ensure     => running,\n  enable     => true,\n  hasrestart => true,\n}\n```", "```\nservice { 'ntp':\n  ensure  => running,\n  enable  => true,\n  restart => '/bin/echo Restarting >>/tmp/debug.log && systemctl restart ntp',\n}\n```", "```\ngroup { 'devs':\n  ensure => present,\n  gid    => 3000,\n}\n\nuser { 'hsing-hui':\n  ensure => present,\n  uid    => '3001',\n  home   => '/home/hsing-hui',\n  shell  => '/bin/bash',\n  groups => ['devs'],\n}\n```", "```\nssh_authorized_key { 'john@bitfieldconsulting.com':\n  user => 'ubuntu',\n  type => 'ssh-rsa',\n  key  => 'AAAAB3NzaC1yc2EAAAABIwAAAIEA3ATqENg+GWACa2BzeqTdGnJhNoBer8x6pfWkzNzeM8Zx7/2Tf2pl7kHdbsiTXEUawqzXZQtZzt/j3Oya+PZjcRpWNRzprSmd2UxEEPTqDw9LqY5S2B8og/NyzWaIYPsKoatcgC7VgYHplcTbzEhGu8BsoEVBGYu3IRy5RkAcZik=',\n}\n```", "```\nssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAIEA3ATqENg+GWACa2BzeqTdGnJhNoBer8x6pfWkzNzeM8Zx7/2Tf2pl7kHdbsiTXEUawqzXZQtZzt/j3Oya+PZjcRpWNRzprSmd2UxEEPTqDw9LqY5S2B8og/NyzWaIYPsKoatcgC7VgYHplcTbzEhGu8BsoEVBGYu3IRy5RkAcZik= john@bitfieldconsulting.com\n```", "```\nuser { 'godot':\n  ensure => absent,\n}\n```", "```\ncron { 'run-puppet':\n  command => '/usr/local/bin/run-puppet',\n  hour    => '*',\n  minute  => '*/15',\n}\n```", "```\ncron { 'cron example':\n  command     => '/bin/date +%F',\n  user        => 'ubuntu',\n  environment => ['MAILTO=admin@example.com', 'PATH=/bin'],\n  hour        => '0',\n  minute      => '0',\n  weekday     => ['Saturday', 'Sunday'],\n}\n```", "```\ncron { 'run daily backup':\n  command => '/usr/local/bin/backup',\n  minute  => '0',\n  hour    => fqdn_rand(24, 'run daily backup'),\n}\n\ncron { 'run daily backup sync':\n  command => '/usr/local/bin/backup_sync',\n  minute  => '0',\n  hour    => fqdn_rand(24, 'run daily backup sync'),\n}\n```", "```\nexec { 'install-cat-picture-generator':\n  cwd     => '/tmp/cat-picture-generator',\n  command => '/tmp/cat-picture/generator/configure && /usr/bin/make install',\n  creates => '/usr/local/bin/cat-picture-generator',\n}\n```", "```\nError: /Stage[main]/Main/Exec[install-cat-picture-generator]/returns: change from notrun to 0 failed: Could not find command '/tmp/cat-picture/generator/configure'\n```", "```\nexec { 'say-hello':\n  command => '/bin/echo Hello, this is `whoami` >/tmp/hello-ubuntu.txt',\n  user    => 'ubuntu',\n  creates => '/tmp/hello-ubuntu.txt',\n}\n```", "```\nHello, this is ubuntu\n```", "```\nexec { 'process-incoming-cat-pictures':\n  command => '/usr/local/bin/cat-picture-generator --import /tmp/incoming/*',\n  onlyif  => '/bin/ls /tmp/incoming/*',\n}\n```", "```\nsudo puppet apply -d exec_onlyif.pp\nDebug: Exec[process-incoming-cat-pictures](provider=posix): Executing check '/bin/ls /tmp/incoming/*'\nDebug: Executing: '/bin/ls /tmp/incoming/*'\nDebug: /Stage[main]/Main/Exec[process-incoming-cat-pictures]/onlyif: /tmp/incoming/foo\n```", "```\nfile { '/etc/aliases':\n  content => 'root: john@bitfieldconsulting.com',\n  notify  => Exec['newaliases'],\n}\n\nexec { 'newaliases':\n  command     => '/usr/bin/newaliases',\n  refreshonly => true,\n}\n```"]