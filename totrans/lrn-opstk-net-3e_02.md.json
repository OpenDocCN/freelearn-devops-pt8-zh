["```\nauto eth0\niface eth0 inet static\n    address 10.10.0.100\n    netmask 255.255.255.0\n    gateway 10.10.0.1\n    dns-nameserver 8.8.8.8\nauto eth1\niface eth1 inet static\n    address 10.20.0.100\n    netmask 255.255.255.0\nauto eth2\niface eth2 inet manual \n```", "```\nauto eth0\niface eth0 inet static\n    address 10.10.0.101\n    netmask 255.255.255.0\n    gateway 10.10.0.1\n    dns-nameserver 8.8.8.8\nauto eth1\niface eth1 inet static\n   address 10.20.0.101\n   netmask 255.255.255.0\nauto eth2\niface eth2 inet manual\n```", "```\nauto eth0\niface eth0 inet static\n    address 10.10.0.102\n    netmask 255.255.255.0\n    gateway 10.10.0.1\n dns-nameserver 8.8.8.8\nauto eth1\niface eth1 inet static\n    address 10.20.0.102\n    netmask 255.255.255.0\nauto eth2\niface eth2 inet manual\n```", "```\nauto eth0\niface eth0 inet static\n   address 10.10.0.103\n   netmask 255.255.255.0\n   gateway 10.10.0.1\n   dns-nameserver 8.8.8.8\nauto eth1\niface eth1 inet static\n   address 10.20.0.103\n   netmask 255.255.255.0\nauto eth2\niface eth2 inet manual\n```", "```\nauto eth0\niface eth0 inet static\n   address 10.10.0.104\n   netmask 255.255.255.0\n   gateway 10.10.0.1\n   dns-nameserver 8.8.8.8\nauto eth1\niface eth1 inet static\n   address 10.20.0.104\n   netmask 255.255.255.0\nauto eth2\niface eth2 inet manual\n```", "```\n    # ifdown --all; ifup --all\n```", "```\n# apt update; apt install software-properties-common\n```", "```\n# add-apt-repository cloud-archive:pike\n```", "```\n    # apt update\n    # apt dist-upgrade\n```", "```\n10.10.0.100 controller01.learningneutron.com controller01\n10.10.0.101 compute01.learningneutron.com compute01\n10.10.0.102 compute02.learningneutron.com compute02\n10.10.0.103 compute03.learningneutron.com compute03\n10.10.0.104 snat01.learningneutron.com snat01 \n```", "```\nroot@controller01:~# hostname -f\ncontroller01.learningneutron.com \n```", "```\n # apt install chrony\n```", "```\nallow 10.10.0.0/24 \n```", "```\n# pool 2.debian.pool.ntp.org offline iburst\nserver controller01 iburst \n```", "```\n# systemctl restart chrony\n```", "```\n# reboot\n```", "```\n # apt install python-openstackclient\n```", "```\n # apt install mariadb-server python-pymysql\n```", "```\n[mysqld]\nbind-address = 10.10.0.100 \n```", "```\ndefault-storage-engine = innodb\ninnodb_file_per_table = on\nmax_connections = 4096\ncollation-server = utf8_general_ci\ncharacter-set-server = utf8\n```", "```\n    # systemctl restart mysql\n```", "```\n    # mysql_secure_installation\n```", "```\n # apt install rabbitmq-server\n```", "```\n # rabbitmqctl add_user openstack rabbit \n```", "```\n    # rabbitmqctl set_permissions openstack \".*\" \".*\" \".*\"  \n```", "```\n    # apt install memcached python-memcache\n```", "```\n    # systemctl restart memcached\n```", "```\n    # mysql\n```", "```\nCREATE DATABASE keystone;\nGRANT ALL PRIVILEGES ON keystone.* TO 'keystone'@'localhost' IDENTIFIED BY 'keystone';\nGRANT ALL PRIVILEGES ON keystone.* TO 'keystone'@'%' IDENTIFIED BY 'keystone';\nquit;\n```", "```\n    # apt install keystone apache2 libapache2-mod-wsgi\n```", "```\n[database]\n...\nconnection = mysql+pymysql://keystone:keystone@controller01/keystone \n```", "```\n[token]\n...\nprovider = fernet \n```", "```\n    # su -s /bin/sh -c \"keystone-manage db_sync\" keystone\n```", "```\n # keystone-manage fernet_setup --keystone-user keystone --keystone-group keystone # keystone-manage credential_setup --keystone-user keystone --keystone-group keystone\n```", "```\n # keystone-manage bootstrap --bootstrap-password openstack      --bootstrap-admin-url http://controller01:35357/v3/ \n      --bootstrap-internal-url http://controller01:5000/v3/\n --bootstrap-public-url http://controller01:5000/v3/      --bootstrap-region-id RegionOne\n```", "```\n # sed -i '1s/^/ServerName controller01\\n&/' /etc/apache2/apache2.conf\n```", "```\n # systemctl restart apache2\n```", "```\n # cat >> ~/adminrc <<EOF export OS_PROJECT_DOMAIN_NAME=default export OS_USER_DOMAIN_NAME=default export OS_PROJECT_NAME=admin export OS_USERNAME=admin export OS_PASSWORD=openstack export OS_AUTH_URL=http://controller01:35357/v3 export OS_IDENTITY_API_VERSION=3 EOF\n```", "```\n # cat >> ~/demorc <<EOF export OS_PROJECT_DOMAIN_NAME=default export OS_USER_DOMAIN_NAME=default export OS_PROJECT_NAME=demo export OS_USERNAME=demo export OS_PASSWORD=demo export OS_AUTH_URL=http://controller01:35357/v3 export OS_IDENTITY_API_VERSION=3 EOF\n```", "```\n    # source ~/adminrc\n```", "```\n    # openstack project create --description \"Service Project\" service\n # openstack project create --description \"Demo Project\" demo\n```", "```\n # openstack user create demo --password=demo\n```", "```\n # openstack role create user\n```", "```\n # openstack role add --project demo --user demo user\n```", "```\n # mysql\n```", "```\nCREATE DATABASE glance;\nGRANT ALL PRIVILEGES ON glance.* TO 'glance'@'localhost' IDENTIFIED BY 'glance';\nGRANT ALL PRIVILEGES ON glance.* TO 'glance'@'%' IDENTIFIED BY 'glance';\nquit; \n```", "```\n # openstack user create glance --domain default --password=glance\n```", "```\n # openstack role add --project service --user glance admin\n```", "```\n # openstack service create --name glance \\ --description \"OpenStack Image\" image\n```", "```\n # openstack endpoint create --region RegionOne \\ image public http://controller01:9292 # openstack endpoint create --region RegionOne \\ image internal http://controller01:9292 # openstack endpoint create --region RegionOne \\ image admin http://controller01:9292\n```", "```\n # apt install glance\n```", "```\n[database]\n...\nconnection = mysql+pymysql://glance:glance@controller01/glance\n```", "```\n[database]\n...\nconnection = mysql+pymysql://glance:glance@controller01/glance \n```", "```\n[keystone_authtoken]\n...\nauth_uri = http://controller01:5000\nauth_url = http://controller01:35357\nmemcached_servers = controller01:11211\nauth_type = password\nuser_domain_name = default\nproject_domain_name = default\nproject_name = service\nusername = glance\npassword = glance \n```", "```\n[keystone_authtoken]\n...\nauth_uri = http://controller01:5000\nauth_url = http://controller01:35357\nmemcached_servers = controller01:11211\nauth_type = password\nuser_domain_name = default\nproject_domain_name = default\nproject_name = service\nusername = glance\npassword = glance\n```", "```\n[paste_deploy]\n...\nflavor = keystone\n\n[glance_store]\n...\nstores = file,http\ndefault_store = file\nfilesystem_store_datadir = /var/lib/glance/images  \n```", "```\n[paste_deploy]\n...\nflavor = keystone \n```", "```\n# su -s /bin/sh -c \"glance-manage db_sync\" glance\n```", "```\n# systemctl restart glance-registry glance-api\n```", "```\n# source ~/adminrc\n```", "```\n # mkdir /tmp/images # wget -P /tmp/images http://download.cirros-cloud.net/0.4.0/cirros-0.4.0-x86_64-disk.img\n```", "```\n    # openstack image create \"cirros-0.4.0\" --file /tmp/images/cirros-0.4.0-x86_64-disk.img --disk-format qcow2\n    --container-format bare --public\n```", "```\n # wget -P /tmp/images http://cloud-images.ubuntu.com/xenial/current/xenial-server-cloudimg-amd64-disk1.img\n```", "```\n    # openstack image create \"ubuntu-xenial-16.04\" --file /tmp/images/xenial-server-cloudimg-amd64-disk1.img --disk-format qcow2 --container-format bare --public\n```", "```\n    # mysql\n```", "```\nCREATE DATABASE nova;\nCREATE DATABASE nova_api;\nCREATE DATABASE nova_cell0;\nGRANT ALL PRIVILEGES ON nova.* TO 'nova'@'localhost' IDENTIFIED BY 'nova';\nGRANT ALL PRIVILEGES ON nova.* TO 'nova'@'%' IDENTIFIED BY 'nova';\nGRANT ALL PRIVILEGES ON nova_api.* TO 'nova'@'localhost' IDENTIFIED BY 'nova';\nGRANT ALL PRIVILEGES ON nova_api.* TO 'nova'@'%' IDENTIFIED BY 'nova';\nGRANT ALL PRIVILEGES ON nova_cell0.* TO 'nova'@'localhost' IDENTIFIED BY 'nova';\nGRANT ALL PRIVILEGES ON nova_cell0.* TO 'nova'@'%' IDENTIFIED BY 'nova';\nquit;\n```", "```\n    # source ~/adminrc\n```", "```\n    # openstack user create nova --domain default --password=nova # openstack user create placement \n      --domain default --password=placement\n```", "```\n    # openstack role add --project service --user nova admin # openstack role add --project service --user placement admin\n```", "```\n    # openstack service create --name nova --description \"OpenStack Compute\" compute \n    # openstack service create --name placement\n --description \"Placement API\" placement\n```", "```\n    # openstack endpoint create --region RegionOne \n      compute public http://controller01:8774/v2.1\n # openstack endpoint create --region RegionOne      compute internal http://controller01:8774/v2.1\n # openstack endpoint create --region RegionOne      compute admin http://controller01:8774/v2.1\n # openstack endpoint create --region RegionOne      placement public http://controller01:8778\n # openstack endpoint create --region RegionOne      placement internal http://controller01:8778\n # openstack endpoint create --region RegionOne      placement admin http://controller01:8778\n```", "```\n    # apt install nova-api nova-conductor nova-consoleauth nova-novncproxy nova-scheduler nova-placement-api\n```", "```\n[database]\n...\nconnection = mysql+pymysql://nova:nova@controller01/nova \n[api_database]\n...\nconnection = mysql+pymysql://nova:nova@controller01/nova_api \n```", "```\n[DEFAULT]\n...\ntransport_url = rabbit://openstack:rabbit@controller01 \n```", "```\n[vnc]\n...\nenabled = true\nvncserver_listen = 10.10.0.100\nvncserver_proxyclient_address = 10.10.0.100 \n```", "```\n[api]\n...\nauth_strategy= keystone\n\n[keystone_authtoken]\n...\nauth_uri = http://controller01:5000\nauth_url = http://controller01:35357\nmemcached_servers = controller01:11211\nauth_type = password\nproject_domain_name = Default\nuser_domain_name = Default\nproject_name = service\nusername = nova\npassword = nova \n```", "```\n[glance]\n...\napi_servers = http://controller01:9292 \n```", "```\n[oslo_concurrency]\n...\nlock_path = /var/lib/nova/tmp \n[DEFAULT]\n...\nmy_ip = 10.10.0.100 \n```", "```\n[placement]\n...\nos_region_name = RegionOne\nauth_url = http://controller01:35357/v3\nauth_type = password\nproject_domain_name = Default\nuser_domain_name = Default\nproject_name = service\nusername = placement\npassword = placement\n```", "```\n    # su -s /bin/sh -c \"nova-manage api_db sync\" nova\n```", "```\n    # su -s /bin/sh -c \"nova-manage cell_v2 map_cell0\" nova\n```", "```\n    # su -s /bin/sh -c \"nova-manage cell_v2 create_cell --name=cell1 --verbose\" nova \n```", "```\n    # su -s /bin/sh -c \"nova-manage db sync\" nova\n```", "```\n    # systemctl restart nova-api nova-consoleauth nova-scheduler nova-conductor nova-novncproxy\n```", "```\n    # apt install nova-compute\n```", "```\n[api]\n...\nauth_strategy= keystone\n\n[keystone_authtoken]\n...\nauth_uri = http://controller01:5000\nauth_url = http://controller01:35357\nmemcached_servers = controller01:11211\nauth_type = password\nproject_domain_name = Default\nuser_domain_name = Default\nproject_name = service\nusername = nova\npassword = nova \n```", "```\n[DEFAULT]\n...\ntransport_url = rabbit://openstack:rabbit@controller01 \n```", "```\n[DEFAULT]\n...\nmy_ip = 10.10.0.101\n\n[vnc]\n...\nvncserver_proxyclient_address = 10.10.0.101\nenabled = True\nvncserver_listen = 0.0.0.0\nnovncproxy_base_url = http://controller01:6080/vnc_auto.html \n```", "```\n[DEFAULT]\n...\nmy_ip = 10.10.0.102\n\n[vnc]\n...\nvncserver_proxyclient_address = 10.10.0.102\nenabled = True\nvncserver_listen = 0.0.0.0\nnovncproxy_base_url = http://controller01:6080/vnc_auto.html \n```", "```\n[DEFAULT]\n...\nmy_ip = 10.10.0.103\n\n[vnc]\n...\nvncserver_proxyclient_address = 10.10.0.103\nenabled = True\nvncserver_listen = 0.0.0.0\nnovncproxy_base_url = http://controller01:6080/vnc_auto.html \n```", "```\n[glance]\n...\napi_servers = http://controller01:9292 \n```", "```\n[oslo_concurrency]\n...\nlock_path = /var/lib/nova/tmp \n```", "```\n[placement]\n...\nos_region_name = RegionOne\nauth_url = http://controller01:35357/v3\nauth_type = password\nproject_domain_name = Default\nuser_domain_name = Default\nproject_name = service\nusername = placement\npassword = placement \n```", "```\n    # systemctl restart nova-compute\n```", "```\n    # apt install openstack-dashboard\n```", "```\nOPENSTACK_HOST = \"controller01\" \n```", "```\nOPENSTACK_API_VERSIONS = {\n    \"identity\": 3,\n    \"image\": 2,\n    \"volume\": 2,\n}\n```", "```\nOPENSTACK_KEYSTONE_URL = \"http://%s:5000/v3\" % OPENSTACK_HOST \nOPENSTACK_KEYSTONE_MULTIDOMAIN_SUPPORT = True \nOPENSTACK_KEYSTONE_DEFAULT_DOMAIN = \"Default\" \nOPENSTACK_KEYSTONE_DEFAULT_ROLE = \"user\" \n```", "```\nOPENSTACK_NEUTRON_NETWORK = {\n    'enable_router': False,\n    'enable_quotas': False,\n    'enable_ipv6': False,\n    'enable_distributed_router': False,\n    'enable_ha_router': False,\n    'enable_lb': False,\n    'enable_firewall': False,\n    'enable_vpn': False,\n'enable_fip_topology_check': False,\n} \n```", "```\nDEFAULT_THEME = 'default' \n```", "```\n    # systemctl reload apache2\n```"]