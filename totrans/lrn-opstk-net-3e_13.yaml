- en: Load Balancing Traffic to Instances
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将流量负载均衡到实例
- en: The Neutron load-balancing-as-a-service plugin, known as LBaaS v2, provides
    users with the ability to load balance traffic to applications running on virtual
    instances in the cloud. Neutron provides an API to manage load balancers, listeners,
    pools, members, and health monitors.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: Neutron 的负载均衡即服务（LBaaS v2）插件，允许用户将流量负载均衡到运行在云中虚拟实例上的应用程序。Neutron 提供一个 API 来管理负载均衡器、监听器、池、成员和健康检查器。
- en: 'In this chapter, we will cover some fundamental load balancing concepts, including
    the following:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将介绍一些基本的负载均衡概念，包括以下内容：
- en: Listeners, pools, and pool members
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 监听器、池和池成员
- en: Load balancing algorithms
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 负载均衡算法
- en: Health Monitors
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 健康检查器
- en: Session Persistence
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 会话保持
- en: Neutron uses drivers to interact with hardware or software load balancers. In
    Pike, the reference driver deploys HAProxy within network namespaces. HAProxy
    is a free, open source load balancer that is available for most Linux-based operating
    systems. Octavia is another open source load balancing solution that is compatible
    with the LBaaS v2 API. Rather than use network namespaces, however, Octavia spins
    up and manages a fleet of virtual machines, containers, or bare-metal servers
    known as amphorae that act as load balancers. This allows Octavia to scale horizontally
    and on-demand. Deploying Octavia and other third-party drivers from vendors such
    as F5, Citrix, Radware, and more is possible, but outside the scope of this book.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: Neutron 使用驱动程序与硬件或软件负载均衡器进行交互。在 Pike 版本中，参考驱动程序在网络命名空间内部署 HAProxy。HAProxy 是一个免费的开源负载均衡器，适用于大多数基于
    Linux 的操作系统。Octavia 是另一个兼容 LBaaS v2 API 的开源负载均衡解决方案。然而，Octavia 不使用网络命名空间，而是启动并管理一组虚拟机、容器或裸机服务器，这些服务器被称为
    amphorae，充当负载均衡器。这样，Octavia 可以实现横向扩展和按需扩展。部署 Octavia 和其他第三方驱动程序（如 F5、Citrix、Radware
    等供应商提供的驱动程序）是可能的，但超出了本书的范围。
- en: 'In this chapter, we will work through the following:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将详细讲解以下内容：
- en: Integrating load balancers into the network
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将负载均衡器集成到网络中
- en: Installing and configuring the LBaaS v2 agent
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装并配置 LBaaS v2 代理
- en: Creating a load balancer
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建负载均衡器
- en: Demonstrating load balanced traffic to instances
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 演示流量负载均衡到实例
- en: Fundamentals of load balancing
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 负载均衡基础
- en: A load balancer is an object that represents a virtual IP and is associated
    with a Neutron port. A virtual IP is often exposed to the internet and mapped
    to a domain name to provide access to an internet-facing load balanced service.
    Virtual IPs can also be created for services limited to internal clients. Traffic
    to the virtual IP is distributed among pool members and provides scaling and resiliency
    to the application.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 负载均衡器是一个表示虚拟 IP 的对象，并与 Neutron 端口相关联。虚拟 IP 通常暴露到互联网，并映射到域名，以提供对面向互联网的负载均衡服务的访问。虚拟
    IP 也可以为仅限内部客户端的服务创建。流量将被分配到池成员之间，并为应用程序提供扩展性和弹性。
- en: 'There are four major components to a load balancer in Neutron:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: Neutron 中负载均衡器有四个主要组件：
- en: Pool Member(s)
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 池成员
- en: Pool
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 池
- en: Health Monitor
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 健康检查器
- en: Listener(s)
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 监听器
- en: A pool member is a Layer 4 object that represents the IP address and listening
    port of a service or application. For example, a pool member might be a web server
    with a configured IP address of 192.168.0.2 listening on TCP port 80.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 池成员是一个层 4 对象，表示服务或应用程序的 IP 地址和监听端口。例如，一个池成员可能是一个 Web 服务器，配置的 IP 地址为 192.168.0.2，监听
    TCP 端口 80。
- en: 'A pool is a group of pool members that typically serve identical content. A
    pool composed of web servers may resemble the following membership:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 池是一个池成员的集合，池成员通常提供相同的内容。由 Web 服务器组成的池可能类似于以下成员配置：
- en: Server A:192.168.0.2:80
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 服务器 A:192.168.0.2:80
- en: Server B:192.168.0.4:80
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 服务器 B:192.168.0.4:80
- en: Server C:192.168.0.6:80
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 服务器 C:192.168.0.6:80
- en: A health monitor is an object that represents a health check operation against
    pool member(s) that run(s) at a defined interval. When the health monitor fails,
    the pool member is marked DOWN and is removed from the pool until it passes a
    subsequent check. In the meantime, traffic is directed to healthy members.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 健康检查器是一个对象，表示对池成员进行健康检查操作，该操作按定义的间隔时间运行。当健康检查失败时，池成员会被标记为 DOWN，并从池中移除，直到其通过后续的检查。与此同时，流量将被引导到健康的成员。
- en: A listener is an object that represents a Layer 4 port associated with the Virtual
    IP that listens for incoming connections to the VIP. Load balancers can listen
    for connections on multiple ports, and each port is defined by a listener.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 监听器是一个对象，表示与虚拟 IP 相关联的 4 层端口，用于监听传入到 VIP 的连接。负载均衡器可以在多个端口上监听连接，每个端口由一个监听器定义。
- en: 'The following diagram demonstrates the relationship between these objects:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 下图演示了这些对象之间的关系：
- en: '![](img/dab08903-e6b5-4d98-85bb-467db8178f19.png)'
  id: totrans-28
  prefs: []
  type: TYPE_IMG
  zh: '![](img/dab08903-e6b5-4d98-85bb-467db8178f19.png)'
- en: Load balancing algorithms
  id: totrans-29
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 负载均衡算法
- en: 'In version 2 of the LBaaS API, the following load balancing algorithms can
    be applied to a pool:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 在 LBaaS API 的版本 2 中，可以将以下负载均衡算法应用于池：
- en: Round robin
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 轮询
- en: Least connections
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最少连接
- en: Source IP
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 源 IP
- en: With the round robin algorithm, the load balancer passes each new connection
    to the next server in line. Over time, all connections will be distributed evenly
    across all machines being load balanced. Round robin is the least resource-intensive
    algorithm and has no mechanism to determine when a machine is being overwhelmed
    by connections. To avoid overwhelming a pool member, all members should be equal
    in terms of processing speed, connection speed, and memory.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 使用轮询算法时，负载均衡器会将每个新连接传递给下一个服务器。随着时间的推移，所有连接会均匀分配到所有被负载均衡的机器上。轮询是资源消耗最少的算法，但没有机制判断某台机器是否因连接过多而超负荷。为了避免池成员过载，所有成员在处理速度、连接速度和内存等方面应该相等。
- en: With the least connections algorithm, the load balancer passes a new connection
    to a server that has the least number of current connections. It is considered
    a dynamic algorithm, as the system keeps track of the number of connections attached
    to each server and balances traffic accordingly. Pool members of higher capabilities
    will likely receive more traffic, as they are able to process connections quicker.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 使用最少连接算法时，负载均衡器将新连接传递给当前连接数最少的服务器。这被认为是一种动态算法，因为系统会追踪每个服务器的连接数，并据此平衡流量。性能更高的池成员可能会接收到更多流量，因为它们能更快地处理连接。
- en: With the source IP algorithm, all connections originating from the same source
    IP address are sent to the same pool member. Connections are initially balanced
    using the round robin algorithm and are then tracked in a table for future lookup
    with subsequent connections from the same IP address. This algorithm is useful
    in cases where the application requires clients to persist to a particular server
    for all requests, such as an online shopping cart that stores session information
    on the local web server.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 使用源 IP 算法时，所有来自相同源 IP 地址的连接都会被发送到同一个池成员。连接最初使用轮询算法进行平衡，然后通过表格追踪这些连接，以便后续来自相同
    IP 地址的连接进行查找。该算法适用于需要客户端始终连接到同一服务器的应用场景，比如在线购物车，它会在本地 Web 服务器上存储会话信息。
- en: Monitoring
  id: totrans-37
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 监控
- en: The LBaaS v2 API supports multiple monitor types, including TCP, HTTP, and HTTPS.
    The TCP monitor tests connectivity to pool members at Layer 4, while HTTP and
    HTTPS monitors tests the health of pool members based on Layer 7 HTTP status codes.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: LBaaS v2 API 支持多种监控类型，包括 TCP、HTTP 和 HTTPS。TCP 监控测试连接到池成员的 4 层连通性，而 HTTP 和 HTTPS
    监控基于 7 层 HTTP 状态码测试池成员的健康状况。
- en: Session persistence
  id: totrans-39
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 会话持久性
- en: LBaaS v2 supports session persistence on virtual IPs. Session persistence is
    a method of load balancing that forces multiple client requests of the same protocol
    to be directed to the same node. This feature is commonly used with many web applications
    that do not share application states between pool members.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: LBaaS v2 支持虚拟 IP 上的会话持久性。会话持久性是一种负载均衡方法，它强制相同协议的多个客户端请求被定向到同一个节点。此功能通常用于许多 Web
    应用程序，它们不在池成员之间共享应用状态。
- en: 'The types of session persistence supported with the HAProxy driver include
    the following:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: HAProxy 驱动程序支持的会话持久性类型包括以下几种：
- en: '`SOURCE_IP`'
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`SOURCE_IP`'
- en: '`HTTP_COOKIE`'
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`HTTP_COOKIE`'
- en: '`APP_COOKIE`'
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`APP_COOKIE`'
- en: 'Using the `SOURCE_IP` persistence type configures HAProxy with the following
    settings within the backend pool configuration:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 `SOURCE_IP` 持久性类型会在后端池配置中为 HAProxy 配置以下设置：
- en: '[PRE0]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: The first time a client connects to the virtual IP, HAProxy creates an entry
    in a sticky table based on the client's IP address and sends subsequent connections
    from the same IP address to the same backend pool member. Based on the configuration,
    up to 10,000 sticky entries can exist in the sticky table. This persistence method
    can cause load imbalance between pool members if users connect from behind a proxy
    server that misidentifies multiple clients as a single address.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 客户端首次连接到虚拟 IP 时，HAProxy 会根据客户端的 IP 地址在粘性表中创建一条记录，并将来自相同 IP 地址的后续连接发送到同一个后端池成员。根据配置，粘性表中最多可以存在
    10,000 条粘性记录。如果用户通过代理服务器连接，且该代理错误地将多个客户端识别为单一地址，可能会导致池成员之间的负载不均衡。
- en: 'Using the `HTTP_COOKIE` persistence type configures HAProxy with the following
    settings within the backend pool configuration:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 `HTTP_COOKIE` 持久性类型将在后端池配置中为 HAProxy 配置以下设置：
- en: '[PRE1]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: The first time a client connects to the virtual IP, HAProxy balances the connection
    to the next pool member in line. When the pool member sends its response, HAProxy
    injects a cookie named SRV into the response before sending it to the client.
    The value of the SRV cookie is a unique server identifier. When the client sends
    subsequent requests to the virtual IP, HAProxy strips the cookie from the request
    header and sends the traffic directly to the pool member identified in the cookie.
    This persistence method is recommended over source IP persistence, as it is not
    reliant on the IP address of the client. However, it may not be compatible with
    all clients.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 客户端首次连接到虚拟 IP 时，HAProxy 会将连接平衡到下一个池成员。当池成员发送响应时，HAProxy 会在响应中注入一个名为 SRV 的 cookie，然后将其发送给客户端。SRV
    cookie 的值是一个唯一的服务器标识符。当客户端发送后续请求到虚拟 IP 时，HAProxy 会从请求头中剥离该 cookie，并直接将流量发送到 cookie
    中标识的池成员。与源 IP 持久性方法相比，这种持久性方法更为推荐，因为它不依赖于客户端的 IP 地址。然而，它可能并不与所有客户端兼容。
- en: 'Using the `APP_COOKIE` persistence type configures HAProxy with the following
    settings within the backend pool configuration:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 `APP_COOKIE` 持久性类型将在后端池配置中为 HAProxy 配置以下设置：
- en: '[PRE2]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: When an application cookie is defined in a backend configuration, HAProxy will
    check server responses for the cookie, stores its value in a table, and associates
    it with the server's identifier. Up to 56 characters from the value will be retained.
    On subsequent client connections, HAProxy will look for the cookie in the client's
    request. If a known value is found, the client is directed to the pool member
    associated with the value. Otherwise, the round-robin load balancing algorithm
    is applied. Cookies are automatically removed from memory when they have gone
    unused for a duration longer than three hours.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 当在后端配置中定义了应用程序 cookie 时，HAProxy 会检查服务器的响应，存储 cookie 的值在表中，并将其与服务器的标识符关联。最多会保留
    cookie 值中的 56 个字符。在后续客户端连接时，HAProxy 会查找客户端请求中的 cookie。如果找到已知值，则客户端将被引导到与该值相关联的池成员。否则，将应用轮询负载均衡算法。当
    cookie 长时间未被使用（超过三小时）时，HAProxy 会自动从内存中删除该 cookie。
- en: Integrating load balancers into the network
  id: totrans-54
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将负载均衡器集成到网络中
- en: When using the HAProxy driver, load balancers are implemented in one-arm mode.
    In one-arm mode, the load balancer is not in the path of normal traffic to the
    pool members. The load balancer has a single interface for ingress and egress
    traffic to and from clients and pool members.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 在使用 HAProxy 驱动时，负载均衡器以单臂模式实现。在单臂模式下，负载均衡器不处于流向池成员的正常流量路径中。负载均衡器具有一个单一接口，用于处理来自客户端和池成员的进出流量。
- en: 'A logical diagram of a load balancer in one-arm mode can be seen here:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是单臂模式下负载均衡器的逻辑图：
- en: '![](img/60cfdec5-8b3c-4f89-9c46-e38e1941d9e3.png)'
  id: totrans-57
  prefs: []
  type: TYPE_IMG
  zh: '![](img/60cfdec5-8b3c-4f89-9c46-e38e1941d9e3.png)'
- en: In the preceding diagram a load balancer is configured in one-arm mode and resides
    in the same subnet as the servers it is balancing traffic to.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 在上述图示中，负载均衡器配置为单臂模式，并与其所平衡流量的服务器处于同一子网中。
- en: 'Because a load balancer in one-arm mode is not the gateway for pool members
    it is sending traffic to, it must rely on the use of source NAT to ensure return
    traffic from the members to the client is sent back through the load balancer.
    An example of the traffic flow can be seen in the following diagram:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 由于单臂模式下的负载均衡器不是池成员的网关，因此必须依赖源 NAT 来确保来自池成员的返回流量能通过负载均衡器返回到客户端。以下图示展示了流量的示例：
- en: '![](img/5c860b6a-cf64-436a-a20a-62af77724aeb.png)'
  id: totrans-60
  prefs: []
  type: TYPE_IMG
  zh: '![](img/5c860b6a-cf64-436a-a20a-62af77724aeb.png)'
- en: In the preceding diagram, the load balancer receives a request from the client
    and forwards it to web1\. The load balancer will modify the source IP of the request
    to its own address, 192.168.200.12, before forwarding the request to the pool
    member. This ensures that the member sends the response back to the load balancer,
    which will then rewrite the destination IP as the client address. If the server
    were to send the response directly to the client, the client would reject the
    packet.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 在上述示意图中，负载均衡器接收到来自客户端的请求并将其转发到 web1。负载均衡器将在转发请求到池成员之前修改请求的源 IP 为其自身的地址 192.168.200.12。这样可以确保池成员将响应发送回负载均衡器，然后负载均衡器将目标
    IP 重写为客户端地址。如果服务器直接将响应发送到客户端，客户端将拒绝该数据包。
- en: Neutron configures HAProxy to send an `HTTP ``X-Forwarded-For` header to the
    pool member, which allows the member to see the original client address. Without
    this header, all traffic will be identified as coming from the load balancer,
    which may skew application reporting data and persistence efforts.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: Neutron 配置 HAProxy 以向池成员发送`HTTP ``X-Forwarded-For`头，这样池成员可以看到原始客户端地址。如果没有这个头，所有流量将被标识为来自负载均衡器，这可能会扭曲应用程序报告数据和持久性设置。
- en: Alternatives to one-arm mode include routed mode and transparent mode. In routed
    mode, the load balancer acts as a gateway between the client and pool member.
    The source addresses of packets do not need to be manipulated in most cases, as
    the load balancer servers as the gateway for pool members.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 除了单臂模式外，还可以使用路由模式和透明模式。在路由模式下，负载均衡器充当客户端和池成员之间的网关。大多数情况下，数据包的源地址无需更改，因为负载均衡器作为池成员的网关。
- en: In transparent mode, the load balancer acts as a network bridge between two
    VLANs configured with the same subnet(s). Using this mode allows users to introduce
    a load balancer to the network with minimal disruption, as pool members do not
    need to change their gateway.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 在透明模式下，负载均衡器充当配置有相同子网的两个VLAN之间的网络桥接。使用此模式可以让用户将负载均衡器引入网络，且对现有环境影响最小，因为池成员无需更改其网关。
- en: There is currently no way to change the way an HAProxy-based load balancer is
    integrated into the network. Some third-party drivers, however, may not be limited
    to one-arm mode and may function in any mode.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 当前没有办法更改基于 HAProxy 的负载均衡器如何集成到网络中。不过，某些第三方驱动可能不限于单臂模式，且可以在任何模式下工作。
- en: Network namespaces
  id: totrans-66
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 网络命名空间
- en: Neutron relies on network namespaces to provide individual load balancers when
    using the HAProxy driver. Every load balancer has a corresponding network namespace.
    Load balancers are scheduled to LBaaS v2 agents in the environment that are responsible
    for creating a corresponding network namespace and appropriate configuration.
    Namespaces used for load balancers are prefaced with `qlbaas` in the `ip netns
    list` output.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 当使用 HAProxy 驱动时，Neutron 依赖于网络命名空间为每个负载均衡器提供单独的实例。每个负载均衡器都有一个对应的网络命名空间。负载均衡器在环境中被调度到
    LBaaS v2 代理，这些代理负责创建相应的网络命名空间并进行适当的配置。用于负载均衡器的命名空间在`ip netns list`输出中以`qlbaas`为前缀。
- en: Installing LBaaS v2
  id: totrans-68
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装 LBaaS v2
- en: The `neutron-lbaasv2-agent` service typically runs on one or more network nodes.
    In this environment, the service will be installed on `controller01`.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: '`neutron-lbaasv2-agent`服务通常在一个或多个网络节点上运行。在此环境中，服务将安装在`controller01`上。'
- en: 'Issue the following command on the controller node to install the LBaaS v2
    agent and its dependencies, including HAProxy:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 在控制节点上执行以下命令，以安装 LBaaS v2 代理及其依赖项，包括 HAProxy：
- en: '[PRE3]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Configuring the Neutron LBaaS agent service
  id: totrans-72
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 配置 Neutron LBaaS 代理服务
- en: Neutron stores the LBaaS v2 agent configuration in the `/etc/neutron/lbaas_agent.ini` file.
    The most common configuration options will be covered in the upcoming sections.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: Neutron 将 LBaaS v2 代理配置存储在`/etc/neutron/lbaas_agent.ini`文件中。最常用的配置选项将在接下来的章节中讨论。
- en: Defining an interface driver
  id: totrans-74
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 定义接口驱动
- en: 'Just like the previously installed agents, the Neutron LBaaS v2 agent must
    be configured to use an interface driver that corresponds to the chosen networking
    driver. In this configuration, there are two options:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 与之前安装的代理一样，Neutron LBaaS v2 代理必须配置为使用与所选网络驱动相对应的接口驱动。在此配置中，有两个选项：
- en: Linux bridge
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Linux 桥接
- en: Open vSwitch
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Open vSwitch
- en: Update the Neutron LBaaS agent configuration file node at `/etc/neutron/lbaas_agent.ini` on
    the controller to use one of the following drivers.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 更新控制节点上`/etc/neutron/lbaas_agent.ini`的 Neutron LBaaS 代理配置文件，使用以下驱动之一。
- en: 'For Linux bridge:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 对于 Linux 桥接：
- en: '[PRE4]'
  id: totrans-80
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'For Open vSwitch:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 对于 Open vSwitch：
- en: '[PRE5]'
  id: totrans-82
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: In this book, we specified that the controller node runs the Linux bridge agent.
    Therefore, the LBaaS v2 agent should be configured to use the Linux bridge interface
    driver.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 本书中指定了控制节点运行 Linux 桥接代理。因此，LBaaS v2 代理应配置为使用 Linux 桥接接口驱动程序。
- en: Defining a device driver
  id: totrans-84
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 定义设备驱动程序
- en: To manage a load balancer, the Neutron LBaaS v2 agent must be configured to
    use a device driver that provides the interface between the Neutron API and the
    programming of the load balancer itself.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 要管理负载均衡器，Neutron LBaaS v2 代理必须配置为使用提供 Neutron API 与负载均衡器编程之间接口的设备驱动程序。
- en: 'Update the Neutron LBaaS v2 agent configuration file node at `/etc/neutron/lbaas_agent.ini` on
    the controller to use the HAProxy device driver:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 更新位于`/etc/neutron/lbaas_agent.ini`的 Neutron LBaaS v2 代理配置文件节点，以使用 HAProxy 设备驱动程序：
- en: '[PRE6]'
  id: totrans-87
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Defining a user group
  id: totrans-88
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 定义用户组
- en: 'Depending on the operating system in use, including Ubuntu 16.04 LTS, which
    is used throughout this book, the LBaaS v2 agent may need to be configured to
    operate HAProxy with a certain user group name. On the `controller01` node, update
    the LBaaS v2 configuration file with the following configuration:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 根据所使用的操作系统（包括本书中使用的 Ubuntu 16.04 LTS），可能需要将 LBaaS v2 代理配置为以某个用户组名称操作 HAProxy。在
    `controller01` 节点上，使用以下配置更新 LBaaS v2 配置文件：
- en: '[PRE7]'
  id: totrans-90
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Configuring Neutron
  id: totrans-91
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 配置 Neutron
- en: In addition to configuring the LBaaS agent, Neutron must be configured to use
    an LBaaS service plugin and driver before the API can be utilized to create LBaaS
    objects.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 除了配置 LBaaS 代理之外，在使用 API 创建 LBaaS 对象之前，Neutron 还必须配置为使用 LBaaS 服务插件和驱动程序。
- en: Defining a service plugin
  id: totrans-93
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 定义服务插件
- en: 'On the `controller01` node, add the LBaaS v2 service plugin to the existing `service_plugins` list
    found in the Neutron configuration file at `/etc/neutron/neutron.conf`:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 在 `controller01` 节点上，将 LBaaS v2 服务插件添加到 Neutron 配置文件 `/etc/neutron/neutron.conf`
    中现有的 `service_plugins` 列表中：
- en: '[PRE8]'
  id: totrans-95
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Be sure to append to the existing list of plugins, rather than replacing the
    list content, to avoid issues with the API and existing network objects.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 确保将插件附加到现有的插件列表中，而不是替换列表内容，以避免与 API 和现有网络对象发生问题。
- en: Defining a service provider
  id: totrans-97
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 定义服务提供者
- en: 'Since the Kilo release of OpenStack, many advanced service configuration options
    have moved out of the main Neutron configuration file into their own files. On
    the controller01 node, create or update the Neutron LBaaS configuration file at `/etc/neutron/neutron_lbaas.conf`
    and define the HAProxy service provider driver for LBaaS:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 自 OpenStack 的 Kilo 版本以来，许多高级服务配置选项已从主要的 Neutron 配置文件中移出，转而放入各自的文件中。在 controller01
    节点上，创建或更新位于 `/etc/neutron/neutron_lbaas.conf` 的 Neutron LBaaS 配置文件，并为 LBaaS 定义
    HAProxy 服务提供者驱动程序：
- en: '[PRE9]'
  id: totrans-99
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Updating the database schema
  id: totrans-100
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 更新数据库模式
- en: Before restarting the Neutron API server to provide the LBaaS API, the database
    schema must be updated to support load balancing objects.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 在重启 Neutron API 服务器以提供 LBaaS API 之前，必须更新数据库模式，以支持负载均衡对象。
- en: 'On the `controller01` node, run the following command to run database migrations:'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 在 `controller01` 节点上，运行以下命令以执行数据库迁移：
- en: '[PRE10]'
  id: totrans-103
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Restarting the Neutron LBaaS agent and API service
  id: totrans-104
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 重启 Neutron LBaaS 代理和 API 服务
- en: 'Once the database migration is complete, the neutron-lbaasv2-agent and neutron-server services
    must be restarted for the changes to take effect. Issue the following commands
    on the controller node to restart the services:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦数据库迁移完成，必须重启 `neutron-lbaasv2-agent` 和 `neutron-server` 服务，以使更改生效。请在控制节点上执行以下命令以重启服务：
- en: '[PRE11]'
  id: totrans-106
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Use the `openstack network agent list` command to verify that the agent is
    running and has checked in:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 `openstack network agent list` 命令验证代理是否正在运行并已签到：
- en: '![](img/8bf33b2d-d86a-4ae1-8a58-19d45d29593f.png)'
  id: totrans-108
  prefs: []
  type: TYPE_IMG
  zh: '![](img/8bf33b2d-d86a-4ae1-8a58-19d45d29593f.png)'
- en: If you encounter any issues, be sure to check the LBaaS v2 agent log found at
    `/var/log/neutron/neutron-lbaasv2-agent.log` before proceeding.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 如果遇到任何问题，请务必在继续操作之前检查位于`/var/log/neutron/neutron-lbaasv2-agent.log`的 LBaaS v2
    代理日志。
- en: Load balancer management in the CLI
  id: totrans-110
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在 CLI 中管理负载均衡器
- en: Neutron offers a number of commands that can be used to create and manage listeners,
    virtual IPs, pools, members, and health monitors for load balancing purposes.
    As of the Pike release of OpenStack, however, load balancer-related commands are
    not available in the openstack client. Instead, the neutron client or API should
    be used.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: Neutron 提供了一些命令，用于创建和管理负载均衡目的的监听器、虚拟 IP、池、成员和健康监控器。然而，从 OpenStack 的 Pike 版本开始，负载均衡相关的命令在
    openstack 客户端中不可用。相反，应使用 neutron 客户端或 API。
- en: 'The workflow to create a basic load balancer is as follows:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 创建基本负载均衡器的工作流程如下：
- en: Create a load balancer object
  id: totrans-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建负载均衡器对象
- en: Create and associate a pool
  id: totrans-114
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建并关联池
- en: Create and associate pool member(s)
  id: totrans-115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建并关联池成员（可选）
- en: Create and associate health monitor(s) (optional)
  id: totrans-116
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建并关联健康检查器（可选）
- en: Create and associate a listener
  id: totrans-117
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建并关联监听器
- en: Managing load balancers in the CLI
  id: totrans-118
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在CLI中管理负载均衡器
- en: 'A load balancer is an object that occupies a Neutron port and has an IP assigned
    from a subnet that acts as a Virtual IP. The following commands are used to manage
    load balancer objects in the CLI:'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 负载均衡器是占用Neutron端口并从子网分配IP作为虚拟IP的对象。以下命令用于在CLI中管理负载均衡器对象：
- en: '| **Load Balancer Management Commands** | **Description** |'
  id: totrans-120
  prefs: []
  type: TYPE_TB
  zh: '| **负载均衡器管理命令** | **描述** |'
- en: '| `lbaas-loadbalancer-create` | Creates a load balancer |'
  id: totrans-121
  prefs: []
  type: TYPE_TB
  zh: '| `lbaas-loadbalancer-create` | 创建负载均衡器 |'
- en: '| `lbaas-loadbalancer-delete` | Deletes a given load balancer |'
  id: totrans-122
  prefs: []
  type: TYPE_TB
  zh: '| `lbaas-loadbalancer-delete` | 删除指定负载均衡器 |'
- en: '| `lbaas-loadbalancer-list` | Lists load balancers that belong to a given tenant
    |'
  id: totrans-123
  prefs: []
  type: TYPE_TB
  zh: '| `lbaas-loadbalancer-list` | 列出属于指定租户的负载均衡器 |'
- en: '| `lbaas-loadbalancer-list-on-agent` | Lists the load balancers on a load balancer
    v2 agent |'
  id: totrans-124
  prefs: []
  type: TYPE_TB
  zh: '| `lbaas-loadbalancer-list-on-agent` | 列出负载均衡器v2代理上的负载均衡器 |'
- en: '| `lbaas-loadbalancer-show` | Shows information of a given load balancer |'
  id: totrans-125
  prefs: []
  type: TYPE_TB
  zh: '| `lbaas-loadbalancer-show` | 显示指定负载均衡器的信息 |'
- en: '| `lbaas-loadbalancer-stats` | Retrieves stats for a given load balancer |'
  id: totrans-126
  prefs: []
  type: TYPE_TB
  zh: '| `lbaas-loadbalancer-stats` | 获取指定负载均衡器的统计信息 |'
- en: '| `lbaas-loadbalancer-status` | Retrieves the status for a given load balancer
    |'
  id: totrans-127
  prefs: []
  type: TYPE_TB
  zh: '| `lbaas-loadbalancer-status` | 获取指定负载均衡器的状态 |'
- en: '| `lbaas-loadbalancer-update` | Updates a given load balancer |'
  id: totrans-128
  prefs: []
  type: TYPE_TB
  zh: '| `lbaas-loadbalancer-update` | 更新指定负载均衡器 |'
- en: '| `lbaas-agent-hosting-loadbalancer` | Gets the lbaas v2 agent hosting a load
    balancer |'
  id: totrans-129
  prefs: []
  type: TYPE_TB
  zh: '| `lbaas-agent-hosting-loadbalancer` | 获取托管负载均衡器的lbaas v2代理 |'
- en: Creating load balancers in the CLI
  id: totrans-130
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在CLI中创建负载均衡器
- en: 'To create a load balancer, use the `neutron lbaas-loadbalancer-create` command
    shown here:'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 要创建负载均衡器，请使用以下命令：`neutron lbaas-loadbalancer-create`：
- en: '[PRE12]'
  id: totrans-132
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: The `--tenant-id` argument is optional and can be used to associate the load
    balancer with a project other than the creator.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: '`--tenant-id`参数是可选的，可以用来将负载均衡器与非创建者的项目关联。'
- en: The `--description` argument is optional and can be used to provide a description
    for the load balancer.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: '`--description`参数是可选的，可以用来为负载均衡器提供描述。'
- en: The `--name` argument is optional and can be used to specify a name for the
    load balancer.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: '`--name`参数是可选的，可以用来为负载均衡器指定一个名称。'
- en: The `--admin-state-down` argument is optional and can be used to set the load
    balancer in a DOWN state at creation.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: '`--admin-state-down`参数是可选的，可以用来在创建时将负载均衡器设置为DOWN状态。'
- en: The `--provider` argument is optional and can be used to specify the load balancer
    provider driver in lieu of the default. The default provider in this environment
    is HAProxy.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: '`--provider`参数是可选的，可以用来指定负载均衡器提供程序驱动程序，而不是使用默认的提供程序。此环境中的默认提供程序是HAProxy。'
- en: The `--vip-address` argument is optional and can be used to specify a particular
    IP address for the VIP.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: '`--vip-address`参数是可选的，可以用来指定VIP的特定IP地址。'
- en: The `VIP_SUBNET` argument is used to specify the subnet from which the load
    balancer VIP will be procured.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: '`VIP_SUBNET`参数用于指定从中获取负载均衡器VIP的子网。'
- en: Deleting load balancers in the CLI
  id: totrans-140
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 删除CLI中的负载均衡器
- en: 'To delete a load balancer, use the `neutron lbaas-loadbalancer-delete` command
    shown here:'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 要删除负载均衡器，请使用以下命令：`neutron lbaas-loadbalancer-delete`：
- en: '[PRE13]'
  id: totrans-142
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: The `LOADBALANCER` argument specifies the name or ID or the load balancer to
    delete. Multiple load balancers can be deleted simultaneously using a space-separated
    list.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: '`LOADBALANCER`参数指定要删除的负载均衡器的名称或ID。可以使用空格分隔的列表同时删除多个负载均衡器。'
- en: Listing load balancers in the CLI
  id: totrans-144
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在CLI中列出负载均衡器
- en: 'To list all load balancers, use the `neutron lbaas-loadbalancer-list` command
    shown here:'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 要列出所有负载均衡器，请使用以下命令：`neutron lbaas-loadbalancer-list`：
- en: '[PRE14]'
  id: totrans-146
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: Showing load balancer details in the CLI
  id: totrans-147
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在CLI中显示负载均衡器详情
- en: 'To show the details of a load balancer, use the `neutron lbaas-loadbalancer-show`
    command shown here:'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 要显示负载均衡器的详细信息，请使用以下命令：`neutron lbaas-loadbalancer-show`：
- en: '[PRE15]'
  id: totrans-149
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: The `LOADBALANCER` argument specifies the name or ID or the load balancer to
    show.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: '`LOADBALANCER`参数指定要显示的负载均衡器的名称或ID。'
- en: Showing load balancer statistics in the CLI
  id: totrans-151
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在CLI中显示负载均衡器统计信息
- en: 'To show the statistics of a load balancer, use the `neutron lbaas-loadbalancer-stats`
    command shown here:'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 要显示负载均衡器的统计信息，请使用以下命令：`neutron lbaas-loadbalancer-stats`：
- en: '[PRE16]'
  id: totrans-153
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: The `LOADBALANCER` argument specifies the name or ID or the load balancer to
    show.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: '`LOADBALANCER` 参数指定要显示的负载均衡器的名称或 ID。'
- en: Showing the load balancer's status in the CLI
  id: totrans-155
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在命令行界面（CLI）显示负载均衡器的状态
- en: 'To show the status of a load balancer, use the `neutron lbaas-loadbalancer-status`
    command shown here:'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 要显示负载均衡器的状态，使用如下命令：`neutron lbaas-loadbalancer-status`。
- en: '[PRE17]'
  id: totrans-157
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: The `LOADBALANCER` argument specifies the name or ID or the load balancer to
    show.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: '`LOADBALANCER` 参数指定要显示的负载均衡器的名称或 ID。'
- en: Updating a load balancer in the CLI
  id: totrans-159
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在 CLI 中更新负载均衡器
- en: 'To update the attributes of a load balancer, use the `neutron lbaas-loadbalancer-update` command
    shown here:'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 要更新负载均衡器的属性，使用如下命令：`neutron lbaas-loadbalancer-update`。
- en: '[PRE18]'
  id: totrans-161
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: The `--description` argument is optional and can be used to update the description
    of the load balancer.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: '`--description` 参数是可选的，可用于更新负载均衡器的描述。'
- en: The `--name` argument is optional and can be used to update the name of a load
    balancer.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: '`--name` 参数是可选的，可用于更新负载均衡器的名称。'
- en: The `LOADBALANCER` argument specifies the name or ID or the load balancer to
    update.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: '`LOADBALANCER` 参数指定要更新的负载均衡器的名称或 ID。'
- en: Managing pools in the CLI
  id: totrans-165
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在 CLI 中管理池
- en: A pool is a set of devices, such as web servers, that are grouped together to
    receive and process traffic. When traffic is sent to a virtual IP, the load balancer
    sends the request to any of the servers that are members of that pool.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 池是一组设备，例如 Web 服务器，这些设备被组合在一起，用于接收和处理流量。当流量被发送到虚拟 IP 时，负载均衡器将请求发送到该池中的任何一台服务器。
- en: 'The following commands are used to manage load balancer pools in the CLI:'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 以下命令用于在 CLI 中管理负载均衡器池：
- en: '| **Pool Commands** | **Description** |'
  id: totrans-168
  prefs: []
  type: TYPE_TB
  zh: '| **池命令** | **描述** |'
- en: '| `lbaas-pool-create` | Creates a pool |'
  id: totrans-169
  prefs: []
  type: TYPE_TB
  zh: '| `lbaas-pool-create` | 创建一个池 |'
- en: '| `lbaas-pool-delete` | Deletes a given pool |'
  id: totrans-170
  prefs: []
  type: TYPE_TB
  zh: '| `lbaas-pool-delete` | 删除指定池 |'
- en: '| `lbaas-pool-list` | Lists pools that belong to a given tenant |'
  id: totrans-171
  prefs: []
  type: TYPE_TB
  zh: '| `lbaas-pool-list` | 列出属于指定租户的池 |'
- en: '| `lbaas-pool-show` | Shows the information of a given pool |'
  id: totrans-172
  prefs: []
  type: TYPE_TB
  zh: '| `lbaas-pool-show` | 显示指定池的信息 |'
- en: '| `lbaas-pool-update` | Updates a given pool |'
  id: totrans-173
  prefs: []
  type: TYPE_TB
  zh: '| `lbaas-pool-update` | 更新指定池 |'
- en: Creating a pool in the CLI
  id: totrans-174
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在 CLI 中创建池
- en: 'To create a pool, use the `neutron lbaas-pool-create` command shown here:'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 要创建池，使用如下命令：`neutron lbaas-pool-create`。
- en: '[PRE19]'
  id: totrans-176
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: '[PRE20]'
  id: totrans-177
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: The `--tenant-id` argument is optional and can be used to associate the pool
    with a project other than the creator. The tenant or project ID specified should
    match the respective load balancer.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: '`--tenant-id` 参数是可选的，可用于将池与除创建者之外的项目关联。指定的租户或项目 ID 应与相应的负载均衡器匹配。'
- en: The `--description` argument is optional and can be used to provide a description
    for the pool.
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: '`--description` 参数是可选的，可用于为池提供描述。'
- en: The `--name` argument is optional and can be used to set a name for the pool.
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: '`--name` 参数是可选的，可用于为池设置名称。'
- en: The `--lb-algorithm` argument is required and is used to specify the load balancing
    algorithm used to distribute traffic among the pool members. Possible options
    include `ROUND_ROBIN`, `LEAST_CONNECTIONS`, and `SOURCE_IP`.
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: '`--lb-algorithm` 参数是必需的，用于指定分配流量到池成员时使用的负载均衡算法。可选的算法包括 `ROUND_ROBIN`、`LEAST_CONNECTIONS`
    和 `SOURCE_IP`。'
- en: The `--admin-state-down` argument is optional and can be used to set the pool
    in a DOWN state upon creation.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: '`--admin-state-down` 参数是可选的，可用于在创建池时将其设置为 DOWN 状态。'
- en: The `--listener` argument is optional and is used to associate the pool with
    a listener.
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: '`--listener` 参数是可选的，用于将池与监听器关联。'
- en: The `--loadbalancer` argument is optional and can be used to specify the associated
    load balancer.
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: '`--loadbalancer` 参数是可选的，可用于指定关联的负载均衡器。'
- en: The `--protocol` argument is required and is used to specify the protocol for
    balancing. Possible options include HTTP, HTTPS, and TCP.
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: '`--protocol` 参数是必需的，用于指定负载均衡协议。可选的协议包括 HTTP、HTTPS 和 TCP。'
- en: The `--session-persistence` argument is optional and is used to specify the
    session persistence method and/or cookie type.
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: '`--session-persistence` 参数是可选的，用于指定会话保持方法和/或 Cookie 类型。'
- en: Deleting a pool in the CLI
  id: totrans-187
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在 CLI 中删除池
- en: 'To delete a pool, use the `neutron lbaas-pool-delete` command shown here:'
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 要删除池，使用如下命令：`neutron lbaas-pool-delete`。
- en: '[PRE21]'
  id: totrans-189
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: The `POOL` argument specifies the name or ID or the pool to delete. Multiple
    pools can be deleted simultaneously using a space-separated list.
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: '`POOL` 参数指定要删除的池的名称或 ID。可以通过空格分隔的列表一次删除多个池。'
- en: Listing pools in the CLI
  id: totrans-191
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在 CLI 中列出池
- en: 'To list all pools, use the `neutron lbaas-pool-list` command shown here:'
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 要列出所有池，使用如下命令：`neutron lbaas-pool-list`。
- en: '[PRE22]'
  id: totrans-193
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: Showing pool details in the CLI
  id: totrans-194
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在 CLI 中显示池的详细信息
- en: 'To show the details of a pool, use the `neutron lbaas-pool-show` command shown
    here:'
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 要显示池的详细信息，请使用如下所示的 `neutron lbaas-pool-show` 命令：
- en: '[PRE23]'
  id: totrans-196
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: The `POOL` argument specifies the name or ID or the pool to show.
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: '`POOL` 参数指定要显示的池的名称或 ID。'
- en: Updating a pool in the CLI
  id: totrans-198
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在 CLI 中更新池
- en: 'To update a pool, use the `neutron lbaas-pool-update` command shown here:'
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 要更新池，使用如下所示的 `neutron lbaas-pool-update` 命令：
- en: '[PRE24]'
  id: totrans-200
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: The `--admin-state-up` argument is optional and can be used to change the state
    of a pool.
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: '`--admin-state-up` 参数是可选的，可以用来更改池的状态。'
- en: The `--session-persistence` argument is optional and is used to modify the session
    persistence method and/or cookie type.
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: '`--session-persistence` 参数是可选的，用于修改会话持久性方法和/或 cookie 类型。'
- en: The `--no-session-persistence` argument is optional and is used to remove session
    persistence from the pool.
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: '`--no-session-persistence` 参数是可选的，用于从池中移除会话持久性。'
- en: The `--description` argument is optional and can be used to update the description
    of the pool.
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: '`--description` 参数是可选的，用于更新池的描述。'
- en: The `--name` argument is optional and can be used to update the name of the
    pool.
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: '`--name` 参数是可选的，用于更新池的名称。'
- en: The `--lb-algorithm` argument is optional and is used to modify the load balancing
    algorithm used to distribute traffic among the pool members.
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: '`--lb-algorithm` 参数是可选的，用于修改负载均衡算法，该算法用于在池成员之间分配流量。'
- en: The `POOL` argument specifies the name or ID or the pool to update.
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: '`POOL` 参数指定要更新的池的名称或 ID。'
- en: Managing pool members in the CLI
  id: totrans-208
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在 CLI 中管理池成员
- en: 'The following commands are used to manage pool members in the CLI:'
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 以下命令用于在 CLI 中管理池成员：
- en: '| **Pool Member Command** | **Description** |'
  id: totrans-210
  prefs: []
  type: TYPE_TB
  zh: '| **池成员命令** | **描述** |'
- en: '| `lbaas-member-create` | Creates a member |'
  id: totrans-211
  prefs: []
  type: TYPE_TB
  zh: '| `lbaas-member-create` | 创建一个成员 |'
- en: '| `lbaas-member-delete` | Deletes a given member |'
  id: totrans-212
  prefs: []
  type: TYPE_TB
  zh: '| `lbaas-member-delete` | 删除给定成员 |'
- en: '| `lbaas-member-list` | Lists members that belong to a given pool |'
  id: totrans-213
  prefs: []
  type: TYPE_TB
  zh: '| `lbaas-member-list` | 列出属于给定池的成员 |'
- en: '| `lbaas-member-show` | Shows information of a given member |'
  id: totrans-214
  prefs: []
  type: TYPE_TB
  zh: '| `lbaas-member-show` | 显示给定成员的信息 |'
- en: '| `lbaas-member-update` | Updates a given member |'
  id: totrans-215
  prefs: []
  type: TYPE_TB
  zh: '| `lbaas-member-update` | 更新给定成员 |'
- en: Creating pool members in the CLI
  id: totrans-216
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在 CLI 中创建池成员
- en: 'To create a pool member, use the `neutron lbaas-member-create` command as follows:'
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 要创建池成员，使用如下所示的 `neutron lbaas-member-create` 命令：
- en: '[PRE25]'
  id: totrans-218
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: The `--tenant-id` argument is optional and can be used to associate the pool
    member with a project other than the creator. The tenant or project ID specified
    should match the respective load balancer.
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: '`--tenant-id` 参数是可选的，用于将池成员与创建者以外的项目关联。指定的租户或项目 ID 应该与相应的负载均衡器匹配。'
- en: The `--name` argument is optional and can be used to set the name of the pool
    member.
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: '`--name` 参数是可选的，用于设置池成员的名称。'
- en: The `--weight` argument allows you to associate a weight with the pool member.
    When set, a pool member may receive more or less traffic than other members in
    the same pool. For example, a pool member with a weight of 2 will receive twice
    the amount of traffic as a pool member with a weight of 1\. A pool member with
    a weight of 3 will receive three times the traffic as a pool member with a weight
    of 1, and so on.
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: '`--weight` 参数允许您为池成员关联一个权重。设置后，池成员可能会比同池中的其他成员接收更多或更少的流量。例如，一个权重为 2 的池成员将接收比权重为
    1 的池成员多两倍的流量。一个权重为 3 的池成员将接收比权重为 1 的池成员多三倍的流量，以此类推。'
- en: The `--admin-state-down` argument is optional and can be used to set the pool
    member DOWN on creation.
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: '`--admin-state-down` 参数是可选的，可以在创建时将池成员设置为 DOWN 状态。'
- en: The `--subnet` argument is required and is used to specify the subnet of the
    pool member.
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: '`--subnet` 参数是必需的，用于指定池成员的子网。'
- en: The `--address` argument is required and is used to specify the IP address of
    the pool member. The IP address must fall within the specified subnet CIDR.
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: '`--address` 参数是必需的，用于指定池成员的 IP 地址。IP 地址必须位于指定的子网 CIDR 范围内。'
- en: The `--protocol-port` argument is required and is used to specify the listening
    port of the application being balanced. For example, if you are balancing HTTP
    traffic, the listening port specified would be 80\. For SSL traffic, the port
    specified would be 443\. In most cases, the VIP associated with the pool will
    utilize the same application port number.
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: '`--protocol-port` 参数是必需的，用于指定正在负载均衡的应用程序的监听端口。例如，如果您正在负载均衡 HTTP 流量，指定的监听端口将是
    80。如果是 SSL 流量，指定的端口将是 443。在大多数情况下，关联池的 VIP 将使用相同的应用程序端口号。'
- en: The `POOL` argument is required and associates the pool member with the specified
    pool.
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: '`POOL` 参数是必需的，用于将池成员与指定的池关联。'
- en: Deleting pool members
  id: totrans-227
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'To delete a pool member, use the `neutron lbaas-member-delete` command shown
    here:'
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE26]'
  id: totrans-229
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: The `MEMBER` argument specifies the name or ID of the pool member to delete
    from the specified pool. Multiple pool members can be deleted simultaneously using
    a space-separated list.
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
- en: Listing pool members
  id: totrans-231
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'To obtain a list of pool members for a particular pool, use the `neutron lbaas-member-list` command
    shown here:'
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE27]'
  id: totrans-233
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: Showing pool member details
  id: totrans-234
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'To show the details of a pool member, use the `neutron lbaas-member-show` command
    shown here:'
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE28]'
  id: totrans-236
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: The `MEMBER` argument represents the ID or name of the member of the specified
    pool.
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
- en: Updating a pool member
  id: totrans-238
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'To update the attributes of a pool member, use the `neutron lbaas-member-update`
    command as follows:'
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE29]'
  id: totrans-240
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: The `--admin-state-up` argument is optional and can be used to change the state
    of a pool member.
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
- en: The `--name` argument is optional and can be used to update the name of the
    pool member.
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
- en: The `--weight` argument is optional and can be used to update the weight of
    the pool member.
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
- en: The `MEMBER` argument is required and represents the ID or name of the member
    of the specified pool.
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
- en: Managing health monitors in the CLI
  id: totrans-245
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: LBaaS in Neutron provides the ability to monitor the health of pool members
    as a method of ensuring the availability of an application. If a pool member is
    not in a healthy state, Neutron can pull a member out of rotation, limiting the
    impact of issues between the client and the application.
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
- en: 'The following commands are used to manage health monitors in the CLI:'
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
- en: '| **Health Monitor Commands** | **Description** |'
  id: totrans-248
  prefs: []
  type: TYPE_TB
- en: '| `lbaas-healthmonitor-create` | Creates a health monitor |'
  id: totrans-249
  prefs: []
  type: TYPE_TB
- en: '| `lbaas-healthmonitor-delete` | Deletes a given health monitor |'
  id: totrans-250
  prefs: []
  type: TYPE_TB
- en: '| `lbaas-healthmonitor-list` | Lists health monitors that belong to a given
    tenant |'
  id: totrans-251
  prefs: []
  type: TYPE_TB
- en: '| `lbaas-healthmonitor-show` | Shows the information of a given health monitor
    |'
  id: totrans-252
  prefs: []
  type: TYPE_TB
- en: '| `lbaas-healthmonitor-update` | Updates a given health monitor |'
  id: totrans-253
  prefs: []
  type: TYPE_TB
- en: Creating a health monitor in the CLI
  id: totrans-254
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'To create a health monitor, use the `neutron lbaas-healthmonitor-create` command
    shown here:'
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE30]'
  id: totrans-256
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: The `--tenant-id` argument is optional and can be used to associate the health
    monitor with a project other than the creator. The tenant or project ID specified
    should match the respective load balancer.
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
- en: The `--delay` argument is required and is used to specify the period between
    each health check sent to members (in seconds). A common starting value is 5 seconds.
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
- en: The `--name` argument is optional and can be used to set the name of the health
    monitor.
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
- en: The `--timeout` argument is required and is used to specify the number of seconds
    for a monitor to wait for a connection to be established. The value must be less
    than the delay value.
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
- en: The `--http-method` argument is optional and is used in conjunction with `--expected-codes` and `--url-path`.
    It is used to specify the type of HTTP request being made. Common types include
    `GET` and `POST`. The default value is `GET`.
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
- en: The `--url-path` argument is optional and is used in conjunction with `--expected-codes`
    and `--http-method`. When specified, the system will perform an HTTP request defined
    by `--http-method` for the URL against the pool member. The default value is root
    or /.
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
- en: The `--max-retries` argument is required and is used to specify the maximum
    number of consecutive failures before a pool member is marked as DOWN. A common
    starting value is 3 retries.
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
- en: The `--expected-codes` argument is optional and allows you to specify the HTTP
    status code(s) that indicate that a pool member is working as expected when the
    monitor sends an HTTP request to the pool member for the specified URL. For example,
    if a `GET` request for a URL is sent to a pool member, the server is expected
    to return a 200 OK status upon successful retrieval of the page. If 200 is listed
    as an expected code, the monitor would mark the pool member as UP. As a result,
    the pool member would be eligible to receive connections. If a 500 status code
    were returned, it could indicate that the server is not properly processing connections.
    The health monitor would mark the pool member as DOWN and temporarily remove it
    from the pool. The default value is 200.
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
- en: 'The `--type` arguments is required and is used to specify the type of monitor
    being configured. The four types include the following:'
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
- en: 'PING: The simplest of all monitor types, PING uses ICMP to confirm connectivity
    to pool members.'
  id: totrans-266
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The PING type is not supported by the HAProxy driver and results in the same
    behaviour as the TCP monitor type.
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
- en: 'TCP: This instructs the load balancer to send a TCP SYN packet to the pool
    member. Upon receiving a SYN ACK back, the load balancer resets the connection.
    This type of monitor is commonly referred to as a half-open TCP monitor.'
  id: totrans-268
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'HTTP: This instructs the monitor to initiate an HTTP request to a pool member
    based on the `expected_codes`, `url_path`, and `http_method` attributes described
    here.'
  id: totrans-269
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'HTTPS: This instructs the monitor to initiate an HTTPS request to a pool member
    based on the `expected_codes`, `url_path`, and `http_method` attributes described
    here.'
  id: totrans-270
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `--pool` argument is required and is used to associate the health monitor
    with the given pool. Only one health monitor per pool is allowed.
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
- en: Deleting a health monitor in the CLI
  id: totrans-272
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'To delete a health monitor, use the `neutron lbaas-healthmonitor-delete` command
    shown here:'
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE31]'
  id: totrans-274
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: The `HEALTHMONITOR` argument specifies the name or ID of the health monitor
    to delete. Multiple health monitors can be deleted simultaneously using a space-separated
    list.
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
- en: Listing health monitors in the CLI
  id: totrans-276
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'To obtain a list of health monitors, use the `neutron lbaas-healthmonitor-list` command
    shown here:'
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE32]'
  id: totrans-278
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: Showing health monitor details
  id: totrans-279
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'To show the details of a health monitor, use the `neutron lbaas-healthmonitor-show`
    command shown here:'
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE33]'
  id: totrans-281
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: The details returned include delay, expected codes, HTTP method, max retries,
    pools, timeout, type, and URL path.
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
- en: Updating a health monitor
  id: totrans-283
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'To update the attributes of a health monitor, use the `neutron lbaas-healthmonitor-update`
    command as follows:'
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE34]'
  id: totrans-285
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: Updateable attributes include delay, expected codes, HTTP method, max retries,
    timeout, and URL path.
  id: totrans-286
  prefs: []
  type: TYPE_NORMAL
- en: Managing listeners in the CLI
  id: totrans-287
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The following commands are used to manage listeners in the CLI:'
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
- en: '| **Listener Commands** | **Description** |'
  id: totrans-289
  prefs: []
  type: TYPE_TB
- en: '| `lbaas-listener-create` | Creates a listener |'
  id: totrans-290
  prefs: []
  type: TYPE_TB
- en: '| `lbaas-listener-delete` | Deletes a given listener |'
  id: totrans-291
  prefs: []
  type: TYPE_TB
- en: '| `lbaas-listener-list` | Lists listeners that belong to a given tenant |'
  id: totrans-292
  prefs: []
  type: TYPE_TB
- en: '| `lbaas-listener-show` | Shows the information of a given listener |'
  id: totrans-293
  prefs: []
  type: TYPE_TB
- en: '| `lbaas-listener-update` | Updates a given listener |'
  id: totrans-294
  prefs: []
  type: TYPE_TB
- en: Creating listeners in the CLI
  id: totrans-295
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'To create a listener, use the `neutron lbaas-listener-create` command shown
    here:'
  id: totrans-296
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE35]'
  id: totrans-297
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: The `--tenant-id` argument is optional and can be used to associate the listener
    with a project other than the creator. The tenant or project ID specified should
    match the respective load balancer.
  id: totrans-298
  prefs: []
  type: TYPE_NORMAL
- en: The `--description` argument is optional and can be used to provide a description
    for the listener.
  id: totrans-299
  prefs: []
  type: TYPE_NORMAL
- en: The `--connection-limit` argument is optional and can be used to limit connections
    per second to the listener. The default is unlimited (-1).
  id: totrans-300
  prefs: []
  type: TYPE_NORMAL
- en: The `--default-pool` argument is optional and sets the default pool for the
    listener.
  id: totrans-301
  prefs: []
  type: TYPE_NORMAL
- en: The `--admin-state-down` argument is optional and can be used to set the listener
    in a DOWN state at creation.
  id: totrans-302
  prefs: []
  type: TYPE_NORMAL
- en: The `--name` argument is optional and can be used to set a name for the listener.
  id: totrans-303
  prefs: []
  type: TYPE_NORMAL
- en: The `--loadbalancer` argument is optional and can be used to specify the associated
    load balancer.
  id: totrans-304
  prefs: []
  type: TYPE_NORMAL
- en: The `--protocol` argument is required and is used to specify the protocol for
    the listener. Options include `TCP`, `HTTP`, `HTTPS`, and `TERMINATED_HTTPS`.
  id: totrans-305
  prefs: []
  type: TYPE_NORMAL
- en: The `--protocol-port` argument is required and is used to specify the port for
    the listener.
  id: totrans-306
  prefs: []
  type: TYPE_NORMAL
- en: Deleting listeners in the CLI
  id: totrans-307
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'To delete a load balancer, use the `neutron lbaas-loadbalancer-delete` command
    shown here:'
  id: totrans-308
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE36]'
  id: totrans-309
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: The `LISTENER` argument specifies the name or ID or the listener to delete.
    Multiple listeners can be deleted simultaneously by using a space-separated list.
  id: totrans-310
  prefs: []
  type: TYPE_NORMAL
- en: Listing listeners in the CLI
  id: totrans-311
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'To list all listeners, use the `neutron lbaas-listener-list` command shown
    here:'
  id: totrans-312
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE37]'
  id: totrans-313
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: Showing listener details in the CLI
  id: totrans-314
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'To show the details of a listener, use the `neutron lbaas-listener-show` command
    shown here:'
  id: totrans-315
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE38]'
  id: totrans-316
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: The `LISTENER` argument specifies the name or ID or the listener to show.
  id: totrans-317
  prefs: []
  type: TYPE_NORMAL
- en: Updating a listener in the CLI
  id: totrans-318
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'To update the attributes of a listener, use the `neutron lbaas-listener-update` command
    shown here:'
  id: totrans-319
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE39]'
  id: totrans-320
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: The `--description` argument is optional and can be used to update the description
    of the listener.
  id: totrans-321
  prefs: []
  type: TYPE_NORMAL
- en: The `--connection-limit` argument is optional and can be used to update the
    connection limit.
  id: totrans-322
  prefs: []
  type: TYPE_NORMAL
- en: The `--default-pool` argument is optional and can be used to update the default
    pool of the listener.
  id: totrans-323
  prefs: []
  type: TYPE_NORMAL
- en: The `--name` argument is option and can be used to set a name for the listener.
  id: totrans-324
  prefs: []
  type: TYPE_NORMAL
- en: The `--admin-state-up` argument is optional and can be used to set the listener's
    state.
  id: totrans-325
  prefs: []
  type: TYPE_NORMAL
- en: The `LISTENER` argument specifies the name or ID or the listener to update.
  id: totrans-326
  prefs: []
  type: TYPE_NORMAL
- en: Building a load balancer
  id: totrans-327
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'To demonstrate the creation and use of load balancers in Neutron, this section
    is dedicated to building a functional load balancer based on the following scenario:'
  id: totrans-328
  prefs: []
  type: TYPE_NORMAL
- en: '"A project has a simple Neutron network architecture composed of a router attached
    to both an external provider network and internal tenant network. The user would
    like to load balance HTTP traffic between two instances, each running a web server
    on port 80\. Each instance has been configured with an index.html page containing
    a unique server identifier."'
  id: totrans-329
  prefs: []
  type: TYPE_NORMAL
- en: 'A diagram of the requested topology can be seen here:'
  id: totrans-330
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/8aa9cedf-40b5-493b-90c6-04f97553c8ba.png)'
  id: totrans-331
  prefs: []
  type: TYPE_IMG
- en: This demonstration assumes that two instances named web1 and web2 have been
    deployed in the environment and are connected to a project network. The network
    is connected to a Neutron router that provides outbound access and inbound access
    via floating IPs. Concepts explained in earlier chapters can be used to build
    this topology.
  id: totrans-332
  prefs: []
  type: TYPE_NORMAL
- en: 'To eliminate the installation and configuration of a web server, you can mimic
    the behavior of one by using the `SimpleHTTPServer` Python module on the instances,
    as shown here:'
  id: totrans-333
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE40]'
  id: totrans-334
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: Repeat the mentioned commands for the second instance, substituting web2 for
    web1 in the `index.html` file.
  id: totrans-335
  prefs: []
  type: TYPE_NORMAL
- en: Creating a load balancer
  id: totrans-336
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The first step to building a functional load balancer is to first create the
    load balancer object. With the neutron client, create a load balancer object with
    the following attributes:'
  id: totrans-337
  prefs: []
  type: TYPE_NORMAL
- en: 'Name: `LB_WEB`'
  id: totrans-338
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Subnet ID: <Subnet ID of the pool members>'
  id: totrans-339
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The following command can be used:'
  id: totrans-340
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE41]'
  id: totrans-341
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: 'The output will resemble the following:'
  id: totrans-342
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/3d4d2c64-d28d-4b8f-8ba0-f259384caab8.png)'
  id: totrans-343
  prefs: []
  type: TYPE_IMG
- en: When a load balancer is created, OpenStack assigns an IP address known as a
    virtual IP, or VIP. The VIP will be used by clients to access the load-balanced
    application. Creating a load balancer object is only the first step in load balancing
    traffic to instances.
  id: totrans-344
  prefs: []
  type: TYPE_NORMAL
- en: Creating a pool
  id: totrans-345
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Pools are associated with load balancers and are objects that represent a collection
    of instances that receive traffic sent to the VIP. With the neutron client, create
    a pool with the following attributes:'
  id: totrans-346
  prefs: []
  type: TYPE_NORMAL
- en: 'Name: `WEB_POOL`'
  id: totrans-347
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Load balancing method: `ROUND_ROBIN`'
  id: totrans-348
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Protocol: HTTP'
  id: totrans-349
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Subnet ID: <Subnet ID where pool members reside>'
  id: totrans-350
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The following command can be used:'
  id: totrans-351
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE42]'
  id: totrans-352
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: 'The output will resemble the following:'
  id: totrans-353
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/049eaf3f-adae-4d27-9606-6d77c7bccd9a.png)'
  id: totrans-354
  prefs: []
  type: TYPE_IMG
- en: Creating pool members
  id: totrans-355
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The next step to building a functional load balancer is to create and associate
    pool members with the pool. Pool members are objects that represent a backend
    application listening on a particular IP and port.
  id: totrans-356
  prefs: []
  type: TYPE_NORMAL
- en: 'In this environment, there are two instances eligible for use in the pool:'
  id: totrans-357
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/dd9ee459-1bf2-4b0e-a02e-be71c659f30c.png)'
  id: totrans-358
  prefs: []
  type: TYPE_IMG
- en: 'With the neutron client, create pool members with the following attributes:'
  id: totrans-359
  prefs: []
  type: TYPE_NORMAL
- en: '| **Name** | **Address** | **Port** | **Pool** |'
  id: totrans-360
  prefs: []
  type: TYPE_TB
- en: '| web1 | 192.168.200.9 | 80 | `POOL_WEB` |'
  id: totrans-361
  prefs: []
  type: TYPE_TB
- en: '| web2 | 192.168.200.7 | 80 | `POOL_WEB` |'
  id: totrans-362
  prefs: []
  type: TYPE_TB
- en: 'The following screenshot demonstrates the process of creating the first pool
    member:'
  id: totrans-363
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/d71cf013-196f-4168-801d-2d076d78c99c.png)'
  id: totrans-364
  prefs: []
  type: TYPE_IMG
- en: 'Repeat the process shown in the preceding screenshot to create the second pool
    member, as shown here:'
  id: totrans-365
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/289f753e-3452-43b3-b99c-253a9470f246.png)'
  id: totrans-366
  prefs: []
  type: TYPE_IMG
- en: 'The `neutron lbaas-member-list` command can be used to return the pool members
    for the `POOL_WEB` pool:'
  id: totrans-367
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/ac020f8d-26ce-4856-aee4-55879eb625f2.png)'
  id: totrans-368
  prefs: []
  type: TYPE_IMG
- en: Creating a health monitor
  id: totrans-369
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: To provide high availability of an application to clients, it is recommended
    to create and apply a health monitor to a pool. Without a monitor, the load balancer
    will continue to send traffic to members that may not be available.
  id: totrans-370
  prefs: []
  type: TYPE_NORMAL
- en: 'Using the `neutron lbaas-healthmonitor-create` command, create a health monitor
    with the following attributes:'
  id: totrans-371
  prefs: []
  type: TYPE_NORMAL
- en: 'Name: `MONITOR_WEB`'
  id: totrans-372
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Delay: `5`'
  id: totrans-373
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Max retries:`3`
  id: totrans-374
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Timeout: `4`'
  id: totrans-375
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Type: `TCP`'
  id: totrans-376
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Pool: `POOL_WEB`'
  id: totrans-377
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](img/c5a28c88-67c5-495b-895d-7a3182eb08d0.png)'
  id: totrans-378
  prefs: []
  type: TYPE_IMG
- en: Creating a listener
  id: totrans-379
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The last step in creating a function load balancer is to create the listener.
    Using the `neutron lbaas-listener-create` command, create a listener with the
    following attributes:'
  id: totrans-380
  prefs: []
  type: TYPE_NORMAL
- en: 'Name: `LISTENER_WEB`'
  id: totrans-381
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Port: `80`'
  id: totrans-382
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Protocol: `HTTP`'
  id: totrans-383
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Pool: `POOL_WEB`'
  id: totrans-384
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](img/82c57729-641d-4686-8e3d-90c168536365.png)'
  id: totrans-385
  prefs: []
  type: TYPE_IMG
- en: Multiple listeners can be created for each load balancer, allowing users to
    balance traffic for multiple protocols and applications on the same Virtual IP.
  id: totrans-386
  prefs: []
  type: TYPE_NORMAL
- en: The LBaaS network namespace
  id: totrans-387
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'A listing of the network namespaces on the host running the LBaaS v2 agent
    reveals a network namespace that corresponds to the load balancer we just created:'
  id: totrans-388
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/fb08f1d1-2b03-40c5-aff6-5dcc35912979.png)'
  id: totrans-389
  prefs: []
  type: TYPE_IMG
- en: 'The IP configuration within the namespace reveals an interface that corresponds
    to the subnet of the virtual IP:'
  id: totrans-390
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/b1346693-1084-42d0-9372-ec3b44c0ca3c.png)'
  id: totrans-391
  prefs: []
  type: TYPE_IMG
- en: Neutron creates an HAProxy configuration file specific to every load balancer
    that is created by users. The load balancer configuration files can be found in
    the `/var/lib/neutron/lbaas/v2/` directory on the host(s) running the LBaaS v2
    agent.
  id: totrans-392
  prefs: []
  type: TYPE_NORMAL
- en: 'The configuration file for this load balancer built by Neutron can be seen
    in the following screenshot:'
  id: totrans-393
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/5b03b7e2-6369-4d0d-b303-896c46cec8f0.png)'
  id: totrans-394
  prefs: []
  type: TYPE_IMG
- en: Confirming load balancer functionality
  id: totrans-395
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'From within the `qlbaas` namespace, confirm direct connectivity to `web1` and
    `web2` by using curl:'
  id: totrans-396
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/b7beb5f0-3f0f-46d3-86bd-690126021913.png)'
  id: totrans-397
  prefs: []
  type: TYPE_IMG
- en: 'By connecting to the VIP address rather than the individual pool members, you
    can observe the default round-robin load balancing algorithm in effect:'
  id: totrans-398
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/b2d15168-8d9e-465e-9fad-b384eb413ea4.png)'
  id: totrans-399
  prefs: []
  type: TYPE_IMG
- en: With round-robin load balancing, every connection is evenly distributed among
    the two pool members.
  id: totrans-400
  prefs: []
  type: TYPE_NORMAL
- en: Observing health monitors
  id: totrans-401
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'A packet capture on `web1` reveals that the load balancer is performing TCP
    health checks every 5 seconds:'
  id: totrans-402
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/9c8d2ceb-a751-430d-ada7-f234b6e4d829.png)'
  id: totrans-403
  prefs: []
  type: TYPE_IMG
- en: 'In the preceding output, the load balancer is initiating a connection every
    5 seconds and performing the health check prescribed by the health monitor: "a
    GET request: against/".'
  id: totrans-404
  prefs: []
  type: TYPE_NORMAL
- en: 'To observe the monitor removing a pool member from eligibility, stop the web
    service on `web1` and observe the packet captures on `web1` and logs on the `controller`
    node:'
  id: totrans-405
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/000019a5-b95f-4dfa-92db-e685f8aa2bfd.png)'
  id: totrans-406
  prefs: []
  type: TYPE_IMG
- en: 'In the preceding output, the web service is stopped and connections to port
    `80` are refused. Immediately following the third failure, the load balancer marks
    the pool member as `DOWN`:'
  id: totrans-407
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/bb02ad35-3f36-4c76-9b98-0ddc49c545a4.png)'
  id: totrans-408
  prefs: []
  type: TYPE_IMG
- en: 'While `web1` is down, all subsequent connections to the VIP are sent to `web2`:'
  id: totrans-409
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/e5ed0060-1ecb-4989-812d-e365583f7a0e.png)'
  id: totrans-410
  prefs: []
  type: TYPE_IMG
- en: 'After restarting the web service on `web1`, the load balancer places the server
    back in the pool upon the next successful health check:'
  id: totrans-411
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/f8d45c44-ce0e-4145-a7ef-f17523058617.png)'
  id: totrans-412
  prefs: []
  type: TYPE_IMG
- en: Connecting to the virtual IP externally
  id: totrans-413
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: To connect to a virtual IP externally, a floating IP must be associated with
    the VIP since the virtual IP exists within a subnet behind the router and is not
    reachable directly.
  id: totrans-414
  prefs: []
  type: TYPE_NORMAL
- en: 'Using the `openstack floating ip create` command, assign a floating IP to be
    used with the virtual IP:'
  id: totrans-415
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/af964d0b-5353-41db-8b15-86234e9603b7.png)'
  id: totrans-416
  prefs: []
  type: TYPE_IMG
- en: 'A test from a workstation to the floating IP confirms external connectivity
    to the load balancer and its pool members:'
  id: totrans-417
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/9d5cf858-b4d5-4ef0-87d6-398ec2ca1221.png)'
  id: totrans-418
  prefs: []
  type: TYPE_IMG
- en: If the connection is not successful, be sure to confirm security groups allow
    connections to port 80.
  id: totrans-419
  prefs: []
  type: TYPE_NORMAL
- en: Load balancer management in the dashboard
  id: totrans-420
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Out of the box, the LBaaS panels for load balancer management in Horizon are
    not installed. To install the panels, perform the following:'
  id: totrans-421
  prefs: []
  type: TYPE_NORMAL
- en: 'On the controller node, install the `python-neutron-lbaas-dashboard` package:'
  id: totrans-422
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE43]'
  id: totrans-423
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: 'Then, update the OpenStack Dashboard configuration file at `/etc/openstack-dashboard/local_settings.py`
    to enable the panels. Search for `enable_lb` in the `OPENSTACK_NEUTRON_NETWORK`
    dictionary and change the value from False to True:'
  id: totrans-424
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE44]'
  id: totrans-425
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: 'Lastly, restart the Apache service:'
  id: totrans-426
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE45]'
  id: totrans-427
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: 'Once the panels have been installed and activated, load balancers can be managed
    from the Project panel by clicking on Network | Load Balancers in the menu on
    the left-hand side of the screen:'
  id: totrans-428
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/1d8086f0-e818-4d13-beea-0c61960ca6b7.png)'
  id: totrans-429
  prefs: []
  type: TYPE_IMG
- en: In Horizon, load balancers are created and managed as a single entity that includes
    pool, members, and monitors. This is unlike LBaaS v1, where members and monitors
    may have been managed separately in their own panel.
  id: totrans-430
  prefs: []
  type: TYPE_NORMAL
- en: Creating a load balancer in the dashboard
  id: totrans-431
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'To create a load balancer, perform the following steps:'
  id: totrans-432
  prefs: []
  type: TYPE_NORMAL
- en: 'Click on the Create Load Balancer button within the Load Balancers panel. A
    wizard will appear that resembles the one shown in the following screenshot:'
  id: totrans-433
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/add02b45-07c5-4816-9403-ba6677215122.png)'
  id: totrans-434
  prefs: []
  type: TYPE_IMG
- en: 'From the Load Balancer Details panel, you can enter a name for the load balancer,
    a description, an IP address, and select the respective subnet for the Virtual
    IP:'
  id: totrans-435
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/764a655d-6ccc-457e-b3f0-2559648c02d4.png)'
  id: totrans-436
  prefs: []
  type: TYPE_IMG
- en: 'From the Listener panel, you can enter a name for the listener, a description,
    and choose the protocol and port:'
  id: totrans-437
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/a9f8919c-a7a7-440b-a440-d26b2ab09761.png)'
  id: totrans-438
  prefs: []
  type: TYPE_IMG
- en: 'From the Pool Details panel, you can enter a name for the pool, a description,
    and select the load balancing method:'
  id: totrans-439
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/65fc8a79-4c9e-4aaa-b98c-2c8e0edf7f95.png)'
  id: totrans-440
  prefs: []
  type: TYPE_IMG
- en: 'From the Pool Members panel, you can select the pool members that will make
    up the pool:'
  id: totrans-441
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/2e8fd671-c741-4e2c-b301-92c63595c928.png)'
  id: totrans-442
  prefs: []
  type: TYPE_IMG
- en: 'Click the Add button next to the pool member to add it to the pool:'
  id: totrans-443
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/3c61baa6-9c5c-4161-be50-354d71015fa9.png)'
  id: totrans-444
  prefs: []
  type: TYPE_IMG
- en: 'From the Monitor Details panel, you can set the monitor type, interval, retries,
    and timeout values:'
  id: totrans-445
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/74b97bfc-d11a-4a03-aef1-74eb09915024.png)'
  id: totrans-446
  prefs: []
  type: TYPE_IMG
- en: 'Once the load balancer has been configured, click the blue Create Load Balancer
    button to complete the wizard. The load balancer will appear in the list of load
    balancers:'
  id: totrans-447
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/6ddcf652-12e8-4001-b769-2f78b16b7fa7.png)'
  id: totrans-448
  prefs: []
  type: TYPE_IMG
- en: Assigning a floating IP to the load balancer
  id: totrans-449
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'To assign a floating IP to a load balancer within the Horizon dashboard:'
  id: totrans-450
  prefs: []
  type: TYPE_NORMAL
- en: 'Click the arrow under the Actions menu next to the load balancer and select
    Associate Floating IP:'
  id: totrans-451
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/ba43f384-9fa6-4e67-9072-dda1382b23fd.png)'
  id: totrans-452
  prefs: []
  type: TYPE_IMG
- en: 'A wizard will pop up that allows you to select an existing floating IP or a
    network from which a new one can be created:'
  id: totrans-453
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/b858df0d-e6d9-4117-84f3-c4aaf758a99a.png)'
  id: totrans-454
  prefs: []
  type: TYPE_IMG
- en: Once a floating IP or network has been chosen, click on the blue Associate button
    to associate the floating IP with the virtual IP of the load balancer.
  id: totrans-455
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The load balancer details will be updated to reflect the new floating IP.
  id: totrans-456
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  id: totrans-457
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Load-balancing-as-a-Service provides users with the ability to scale their application
    programmatically through the Neutron API. Users can balance traffic to pools consisting
    of multiple application servers and can provide high availability of their application
    through the use of intelligent health monitors. The LBaaS v2 API even supports
    SSL offloading with certificates managed by Barbican, another OpenStack project,
    as well as certificate bundles and SNI support.
  id: totrans-458
  prefs: []
  type: TYPE_NORMAL
- en: The HAProxy driver offers functionality that can address basic load balancing
    needs, but may not be enough for most production environments. The load balancers
    are not highly-available and may present a weakness in the application's network
    architecture. The use of Octavia over the HAProxy driver is recommended for production-grade
    clouds and is compatible with the LBaaS v2 API.
  id: totrans-459
  prefs: []
  type: TYPE_NORMAL
- en: More information on Octavia and how it may be implemented can be found at the
    following URL: [https://docs.openstack.org/octavia/pike/reference/introduction.html](https://docs.openstack.org/octavia/pike/reference/introduction.html).
  id: totrans-460
  prefs: []
  type: TYPE_NORMAL
- en: In the next chapter, we will take a look at a few other advanced Neutron features,
    including 802.1q VLAN tagging (vlan-aware-vms) and BGP speaker functionality.
  id: totrans-461
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将介绍一些其他高级的Neutron功能，包括802.1q VLAN标记（vlan-aware-vms）和BGP对等功能。
