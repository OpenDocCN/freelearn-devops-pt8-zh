- en: Installing OpenStack
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Manually installing, configuring, and maintaining OpenStack clouds can be an
    arduous task. Many vendors provide downloadable cloud software based on OpenStack
    that provides deployment and management strategies using Chef, Puppet, Ansible,
    and other tools.
  prefs: []
  type: TYPE_NORMAL
- en: 'This chapter will take you step by step through a package-based installation
    of the following OpenStack components on the Ubuntu 16.04 LTS operating system:'
  prefs: []
  type: TYPE_NORMAL
- en: OpenStack Identity (Keystone)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: OpenStack Image Service (Glance)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: OpenStack Compute (Nova)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: OpenStack Dashboard (Horizon)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The installation process documented within this chapter is based on the *OpenStack
    Installation Guide* found at [http://docs.openstack.org/](http://docs.openstack.org/).
    If you wish to install OpenStack on a different operating system, the guides available
    at that site provide instructions for doing so.
  prefs: []
  type: TYPE_NORMAL
- en: 'If you''d rather download and install a third-party cloud distribution based
    on OpenStack, try one of the following URLs:'
  prefs: []
  type: TYPE_NORMAL
- en: OpenStack-Ansible:  [https://docs.openstack.org/openstack-ansible/](https://docs.openstack.org/openstack-ansible/)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Red Hat RDO:  [http://openstack.redhat.com/](http://openstack.redhat.com/)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kolla: [https://docs.openstack.org/kolla-ansible/latest/](https://docs.openstack.org/kolla-ansible/latest/)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Once installed, many of the concepts and examples used throughout this book
    should still apply to the above distributions, but they may require extra effort
    to implement.
  prefs: []
  type: TYPE_NORMAL
- en: System requirements
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: OpenStack components are intended to run on standard hardware, ranging from
    desktop machines to enterprise-grade servers. For optimal performance, the processors
    of the `compute` nodes need to support virtualization technologies such as Intel's
    VT-x or AMD's AMD-V.
  prefs: []
  type: TYPE_NORMAL
- en: 'This book assumes OpenStack will be installed on servers that meet the following
    minimum requirements:'
  prefs: []
  type: TYPE_NORMAL
- en: '| **Server** | **Hardware requirements** |'
  prefs: []
  type: TYPE_TB
- en: '| All | Processor: 64-bit x86CPU count: 2-4Memory: 4+ GB RAMDisk space: 32+
    GBNetwork: 3x 1-Gbps network interface cards |'
  prefs: []
  type: TYPE_TB
- en: While machines that fail to meet these minimum requirements are capable of installation
    based on the documentation included in this book, these minimums have been set
    to ensure a successful experience. Additional memory and storage is highly recommended
    when creating multiple virtual machine instances for demonstration purposes. Virtualization
    products such as VMware ESXi, VMware Fusion, or VirtualBox may be used in lieu
    of physical hardware, but will require additional configuration to the environment
    and to OpenStack that is outside the scope of this book. If virtualizing the environment,
    consider exposing hardware virtualization extensions for better performance.
  prefs: []
  type: TYPE_NORMAL
- en: Operating system requirements
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'OpenStack can be installed on the following Linux distributions: CentOS, Red
    Hat Enterprise Linux, openSUSE, SUSE Linux Enterprise Server, and Ubuntu. This
    book assumes that the Ubuntu 16.04 LTS server operating system has been installed
    on all hosts prior to installation of OpenStack. You can find Ubuntu Server at
    the following URL: [http://www.ubuntu.com/download/server](http://www.ubuntu.com/download/server).'
  prefs: []
  type: TYPE_NORMAL
- en: 'In order to support all of the networking features discussed in this book,
    the following minimum kernel version is recommended: `4.13.0-45-generic`.'
  prefs: []
  type: TYPE_NORMAL
- en: Initial network configuration
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'To understand how networking should initially be configured on each host, please
    refer to the following diagram:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/1effdc54-7fb1-4547-ab01-8c02063634fb.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 2.1
  prefs: []
  type: TYPE_NORMAL
- en: In *figure 2.1*, three interfaces are cabled to each host. The `eth0` interface
    will serve as the management interface for OpenStack services and API access while
    `eth1` will be used for overlay network traffic between hosts. On the `controller`
    node, `eth2` will be used for external network traffic to instances through Neutron
    routers. If VLAN tenant networks are used in lieu of overlay networks, then `eth2`
    will be configured on the `compute` nodes to support those networks.
  prefs: []
  type: TYPE_NORMAL
- en: At a minimum, the management interface should be configured with an IP address
    that has outbound access to the internet. Internet access is required to download
    OpenStack packages from the Ubuntu package repository. Inbound access to the management
    address of the servers from a trusted network via SSH is recommended.
  prefs: []
  type: TYPE_NORMAL
- en: Example networks
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Throughout the book, there will be examples of configuring and using various
    OpenStack services. The following table provides the VLANs and associated networks
    used for those services:'
  prefs: []
  type: TYPE_NORMAL
- en: '| **VLAN name** | **VLAN ID** | **Network** |'
  prefs: []
  type: TYPE_TB
- en: '| MGMT_NET | 10 | 10.10.0.0/24 |'
  prefs: []
  type: TYPE_TB
- en: '| OVERLAY_NET | 20 | 10.20.0.0/24 |'
  prefs: []
  type: TYPE_TB
- en: '| GATEWAY_NET | 30 | 10.30.0.0/24 |'
  prefs: []
  type: TYPE_TB
- en: '| PROJECT_NET40 | 40 | TBD |'
  prefs: []
  type: TYPE_TB
- en: '| PROJECT_NET41 | 41 | TBD |'
  prefs: []
  type: TYPE_TB
- en: '| PROJECT_NET42 | 42 | TBD |'
  prefs: []
  type: TYPE_TB
- en: '| PROJECT_NET43 | 43 | TBD |'
  prefs: []
  type: TYPE_TB
- en: 'The following tables provide the IP addresses and VLAN IDs recommended for
    each host interface should you choose to follow along with the examples:'
  prefs: []
  type: TYPE_NORMAL
- en: '| **Host Name** | **Interface** | **IP address** | **Switchport** | **VLAN
    ID** |'
  prefs: []
  type: TYPE_TB
- en: '| controller01 | eth0 | 10.10.0.100 | Access Port | VLAN 10(Untagged) |'
  prefs: []
  type: TYPE_TB
- en: '| controller01 | eth1 | 10.20.0.100 | Access Port | VLAN 20(Untagged) |'
  prefs: []
  type: TYPE_TB
- en: '| controller01 | eth2 | None | Trunk Port | VLAN 30, 40-44(Tagged) |'
  prefs: []
  type: TYPE_TB
- en: '| **Host Name** | **Interface** | **IP address** | **Switchport** | **VLAN
    ID** |'
  prefs: []
  type: TYPE_TB
- en: '| compute01 | eth0 | 10.10.0.101 | Access Port | VLAN 10(Untagged) |'
  prefs: []
  type: TYPE_TB
- en: '| compute01 | eth1 | 10.20.0.101 | Access Port | VLAN 20(Untagged) |'
  prefs: []
  type: TYPE_TB
- en: '| compute01 | eth2 | None | Trunk Port | VLAN 30, 40-44 (Tagged) |'
  prefs: []
  type: TYPE_TB
- en: '| **Host Name** | **Interface** | **IP address** | **Switchport** | **VLAN
    ID** |'
  prefs: []
  type: TYPE_TB
- en: '| compute02 | eth0 | 10.10.0.102 | Access Port | VLAN 10(Untagged) |'
  prefs: []
  type: TYPE_TB
- en: '| compute02 | eth1 | 10.20.0.102 | Access Port | VLAN 20(Untagged) |'
  prefs: []
  type: TYPE_TB
- en: '| compute02 | eth2 | None | Trunk Port | VLAN 30, 40-44 (Tagged) |'
  prefs: []
  type: TYPE_TB
- en: '| **Host Name** | **Interface** | **IP address** | **Switchport** | **VLAN
    ID** |'
  prefs: []
  type: TYPE_TB
- en: '| compute03 | eth0 | 10.10.0.103 | Access Port | VLAN 10(Untagged) |'
  prefs: []
  type: TYPE_TB
- en: '| compute03 | eth1 | 10.20.0.103 | Access Port | VLAN 20(Untagged) |'
  prefs: []
  type: TYPE_TB
- en: '| compute03 | eth2 | None | Trunk Port | VLAN 30, 40-44 (Tagged) |'
  prefs: []
  type: TYPE_TB
- en: '| **Host Name** | **Interface** | **IP address** | **Switchport** | **VLAN
    ID** |'
  prefs: []
  type: TYPE_TB
- en: '| snat01 | eth0 | 10.10.0.104 | Access Port | VLAN 10(Untagged) |'
  prefs: []
  type: TYPE_TB
- en: '| snat01 | eth1 | 10.20.0.104 | Access Port | VLAN 20(Untagged) |'
  prefs: []
  type: TYPE_TB
- en: '| snat01 | eth2 | None | Trunk Port | VLAN 30, 40-44 (Tagged) |'
  prefs: []
  type: TYPE_TB
- en: To avoid loss of connectivity due to an interface misconfiguration or other
    mishap, out-of-band management access to the servers or some other mechanism is
    highly recommended.
  prefs: []
  type: TYPE_NORMAL
- en: Interface configuration
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Ubuntu 16.04 LTS uses configuration files found in `/etc/network/interfaces.d/`
    or the file`/etc/network/interfaces` that describe how network interfaces should
    be configured.
  prefs: []
  type: TYPE_NORMAL
- en: Using a text editor, update the network interface file on each host as follows.
  prefs: []
  type: TYPE_NORMAL
- en: 'For `controller01`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'For `compute01`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'For `compute02`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'For `compute03`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'For `snat01`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'The `eth2` interface will be used in a network bridge described in further
    detail in upcoming chapters. To activate the changes, cycle the interfaces using
    the `ifdown` and `ifup` commands on each node:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: For more information on configuring network interfaces, please refer to the
    Ubuntu man page at the following URL: [http://manpages.ubuntu.com/manpages/xenial/man5/interfaces.5.html](http://manpages.ubuntu.com/manpages/xenial/man5/interfaces.5.html)
  prefs: []
  type: TYPE_NORMAL
- en: Initial steps
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Before we can install OpenStack, some work must be done to prepare each system
    for a successful installation.
  prefs: []
  type: TYPE_NORMAL
- en: Permissions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: OpenStack services can be installed either as a root user or as a user with
    `sudo` permissions. The latter may require the user to be added to the `sudoers`
    file on each host. For tips on configuring `sudoers`, please visit the following
    URL: [https://help.ubuntu.com/community/RootSudo.](https://help.ubuntu.com/community/RootSudo)
  prefs: []
  type: TYPE_NORMAL
- en: For this installation, all commands should be run as the root user unless specified
    otherwise.
  prefs: []
  type: TYPE_NORMAL
- en: Configuring the OpenStack repository
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'When installing versions of OpenStack that are newer than what the operating
    system shipped with, Ubuntu uses the Ubuntu Cloud Archive (UCA). To enable the
    Cloud Archive repository, update the `apt` cache and download and install the `software-properties-common`
    package on all hosts:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: 'Once installed, the OpenStack Pike repository should be added as an apt source
    on all hosts:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: Upgrading the system
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Before installing OpenStack, it is imperative that the kernel and other system
    packages on each node be upgraded to the latest version provided by Ubuntu for
    the 16.04 LTS release using the Cloud Archive. Issue the following `apt` commands
    on each node:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: Setting the hostnames
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Before installing OpenStack, ensure that each node in the environment has been
    configured with its proper hostname. Use the `hostnamectl` command on each host
    to set the hostname accordingly:'
  prefs: []
  type: TYPE_NORMAL
- en: '| **Host** | **Command** |'
  prefs: []
  type: TYPE_TB
- en: '| `controller01` | `hostnamectl set-hostname controller01` |'
  prefs: []
  type: TYPE_TB
- en: '| `compute01` | `hostnamectl set-hostname compute01` |'
  prefs: []
  type: TYPE_TB
- en: '| `compute02` | `hostnamectl set-hostname compute02` |'
  prefs: []
  type: TYPE_TB
- en: '| `compute03` | `hostnamectl set-hostname compute03` |'
  prefs: []
  type: TYPE_TB
- en: '| `snat01` | `hostnamectl set-hostname snat01` |'
  prefs: []
  type: TYPE_TB
- en: 'To simplify communication between hosts, it is recommended that DNS or a local
    name resolver be used to resolve hostnames. Using a text editor, update the `/etc/hosts`
    file on each node to include the management IP address and hostname of all nodes:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: 'On each node, use the `hostname -f` command to verify that the fully qualified
    host name is properly reflected:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: Installing and configuring Network Time Protocol
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: A time synchronization program such as Network Time Protocol (**NTP**) is a
    requirement, as OpenStack services depend on consistent and synchronized time
    between hosts.
  prefs: []
  type: TYPE_NORMAL
- en: For Nova Compute, having synchronized time helps to avoid problems when scheduling
    VM launches on `compute` nodes. Other services can experience similar issues when
    the time is not synchronized.
  prefs: []
  type: TYPE_NORMAL
- en: 'To install `chrony`, an NTP implementation, issue the following commands on
    all nodes in the environment:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: 'On the `controller` node, add the following line to the `/etc/chrony/chrony.conf`
    file to allow other hosts in the environment to synchronize their time against
    the controller:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: 'On the other nodes, comment out any `pool` lines in the `/etc/chrony/chrony.conf`
    file and add the following line to direct them to synchronize their time against
    the controller:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: 'On each host, restart the `chrony` service:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: Rebooting the system
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Reboot each host before proceeding with the installation:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: Installing OpenStack
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The steps in this section document the installation of OpenStack services including
    Keystone, Glance, Nova, and Horizon on a single controller and three `compute`
    nodes. Neutron, the OpenStack Networking service, will be installed in the next
    chapter.
  prefs: []
  type: TYPE_NORMAL
- en: 'Prepare for the configuration of various services by installing the OpenStack
    command-line client, `python-openstackclient`, on the `controller` node with the
    following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: Installing and configuring the MySQL database server
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'On the `controller` node, use `apt` to install the MySQL database service and
    related Python packages:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE17]'
  prefs: []
  type: TYPE_PRE
- en: If prompted, set the password to `openstack`.
  prefs: []
  type: TYPE_NORMAL
- en: Insecure passwords are used throughout the book to simplify the configuration
    and demonstration of concepts and are not recommended for production environments.
    Visit [http://www.strongpasswordgenerator.org ](http://www.strongpasswordgenerator.org)to
    generate strong passwords for your environment.
  prefs: []
  type: TYPE_NORMAL
- en: 'Once installed, create and edit the `/etc/mysql/mariadb.conf.d/99-openstack.cnf`
    configuration file. Add the `[mysqld]` block and the `bind-address` definition.
    Doing so will allow connectivity to MySQL from other hosts in the environment.
    The value for `bind-address` should be the management IP of the controller node:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE18]'
  prefs: []
  type: TYPE_PRE
- en: 'In addition to adding the `bind-address` definition, add the following options
    to the `[mysqld]`section as well:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE19]'
  prefs: []
  type: TYPE_PRE
- en: 'Save and close the file, then restart the `mysql` service:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE20]'
  prefs: []
  type: TYPE_PRE
- en: 'The MySQL secure installation utility is used to build the default MySQL database
    and to set a password for the MySQL root user. The following command will begin
    the MySQL installation and configuration process:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE21]'
  prefs: []
  type: TYPE_PRE
- en: During the MySQL installation process, you will be prompted to enter a password
    and change various settings. The default root password may not yet be set. When
    prompted, set a root password of `openstack`. A more secure password suitable
    for your environment is highly recommended.
  prefs: []
  type: TYPE_NORMAL
- en: Answer `[Y]es` to the remaining questions to exit the configuration process.
    At this point, the MySQL server has been successfully installed on the `controller`
    node.
  prefs: []
  type: TYPE_NORMAL
- en: Installing and configuring the messaging server
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '**Advanced Message Queue Protocol** (**AMQP**) is the messaging technology
    powering most OpenStack-based clouds. Components such as Nova, Cinder, and Neutron
    communicate internally and between one another using a message bus. The following
    are instructions for installing RabbitMQ, an AMQP broker.'
  prefs: []
  type: TYPE_NORMAL
- en: 'On the `controller` node, install the messaging server:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE22]'
  prefs: []
  type: TYPE_PRE
- en: 'Add a user to RabbitMQ named `openstack` with a password of `rabbit` as shown
    in the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE23]'
  prefs: []
  type: TYPE_PRE
- en: 'Set RabbitMQ permissions to allow configuration, read, and write access for
    the `openstack` user:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE24]'
  prefs: []
  type: TYPE_PRE
- en: At this point, the installation and configuration of RabbitMQ is complete.
  prefs: []
  type: TYPE_NORMAL
- en: Installing and configuring memcached
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The `memcached` service is used to cache common data and objects in RAM to reduce
    the numbers of times they are read from disk and it is used by various OpenStack
    services.
  prefs: []
  type: TYPE_NORMAL
- en: 'On the `controller` node, install `memcached`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE25]'
  prefs: []
  type: TYPE_PRE
- en: 'Edit the `/etc/memcached.conf` file and replace the default listener address
    with the IP address of the `controller` node:'
  prefs: []
  type: TYPE_NORMAL
- en: 'From: `127.0.0.1`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'To: `10.10.0.100`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Restart the `memcached` service:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE26]'
  prefs: []
  type: TYPE_PRE
- en: Installing and configuring the identity service
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Keystone is the identity service for OpenStack and is used to authenticate and
    authorize users and services in the OpenStack cloud. Keystone should only be installed
    on the `controller` node and will be covered in the following sections.
  prefs: []
  type: TYPE_NORMAL
- en: Configuring the database
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Using the `mysql` client, create the Keystone database and associated user:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE27]'
  prefs: []
  type: TYPE_PRE
- en: 'Enter the following SQL statements at the `MariaDB [(none)] >` prompt:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE28]'
  prefs: []
  type: TYPE_PRE
- en: Installing Keystone
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Since the Kilo release of OpenStack, the Keystone project has used the Apache
    HTTP server with `mod_wsgi` to serve requests to the Identity API on ports `5000`
    and `35357`.
  prefs: []
  type: TYPE_NORMAL
- en: 'Run the following command to install the Keystone packages on the `controller`
    node:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE29]'
  prefs: []
  type: TYPE_PRE
- en: 'Update the `[database]` section in the `/etc/keystone/keystone.conf` file to
    configure Keystone to use MySQL as its database. In this installation, the username
    and password will be `keystone.` You will need to overwrite the existing connection
    string with the following value on one line:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE30]'
  prefs: []
  type: TYPE_PRE
- en: Configuring tokens and drivers
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Keystone supports customizable token providers that can be defined within the
    `[token]` section of the configuration file. Keystone provides UUID, PKI, and
    Fernet token providers. In this installation, the Fernet token provider will be
    used. Update the `[token]` section in the `/etc/keystone/keystone.conf` file accordingly:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE31]'
  prefs: []
  type: TYPE_PRE
- en: 'Populate the Keystone database using the `keystone-manage` utility:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE32]'
  prefs: []
  type: TYPE_PRE
- en: 'Initialize the Fernet key repositories with the following commands:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE33]'
  prefs: []
  type: TYPE_PRE
- en: Bootstrap the Identity service
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Using the `keystone-manage` command, bootstrap the service catalog with Identity
    endpoints. In this environment, the password for the `admin` user will be `openstack`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE34]'
  prefs: []
  type: TYPE_PRE
- en: Configuring the Apache HTTP server
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Using `sed`, add the `ServerName` option to the Apache configuration file that
    references the short name of the `controller` node:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE35]'
  prefs: []
  type: TYPE_PRE
- en: 'Restart the Apache web service for the changes to take effect:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE36]'
  prefs: []
  type: TYPE_PRE
- en: Setting environment variables
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'To avoid having to provide credentials every time you run an OpenStack command,
    create a file containing environment variables that can be loaded at any time.
    The following commands will create a file named `adminrc` containing environment
    variables for the `admin` user:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE37]'
  prefs: []
  type: TYPE_PRE
- en: 'The following commands will create a file named `demorc` containing environment
    variables for the `demo` user:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE38]'
  prefs: []
  type: TYPE_PRE
- en: 'Use the `source` command to load the environment variables from the file:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE39]'
  prefs: []
  type: TYPE_PRE
- en: The `demo` user doesn't exist yet but will be created in the following sections.
  prefs: []
  type: TYPE_NORMAL
- en: Defining services and API endpoints in Keystone
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Each OpenStack service that is installed should be registered with the Identity
    service so that its location on the network can be tracked. There are two commands
    involved in registering a service:'
  prefs: []
  type: TYPE_NORMAL
- en: '`openstack service create`: Describes the service that is being created'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`openstack endpoint create`: Associates API endpoints with the service'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The OpenStack Identity service and endpoint were created during the bootstrap
    process earlier in this chapter. You can verify the objects were created using
    the `openstack endpoint list` and `openstack service list` commands as shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/d7daca5f-6761-4c07-ab18-3ad03b9ce9b4.png)'
  prefs: []
  type: TYPE_IMG
- en: 'The IDs of resources within an OpenStack cloud are unique and will vary between
    environments, so don''t worry if yours don''t match those shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/8b9c711f-033a-458b-a1e2-6635b1493603.png)'
  prefs: []
  type: TYPE_IMG
- en: Defining users, projects, and roles in Keystone
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Once the installation of Keystone is complete, it is necessary to set up domains,
    users, projects, roles, and endpoints that will be used by various OpenStack services.
  prefs: []
  type: TYPE_NORMAL
- en: In this installation, the `default` domain will be used.
  prefs: []
  type: TYPE_NORMAL
- en: 'In Keystone, a project (or tenant) represents a logical group of users to which
    resources are assigned. The terms project and tenant are used interchangeably
    throughout various OpenStack services, but project is the preferred term. Resources
    are assigned to projects and not directly to users. An `admin` project, user,
    and role were created during the Keystone bootstrap process. Create a `demo` project
    for regular users and a `service` project for other OpenStack services to use:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE40]'
  prefs: []
  type: TYPE_PRE
- en: 'Next, create a regular user called `demo`. Specify a secure password for the
    `demo` user:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE41]'
  prefs: []
  type: TYPE_PRE
- en: 'Create the `user` role:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE42]'
  prefs: []
  type: TYPE_PRE
- en: 'Lastly, add the `user` role to the `demo` user in the `demo` project:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE43]'
  prefs: []
  type: TYPE_PRE
- en: Installing and configuring the image service
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Glance is the image service for OpenStack. It is responsible for storing images
    and snapshots of instances, and for providing images to `compute` nodes when instances
    are created.
  prefs: []
  type: TYPE_NORMAL
- en: Configuring the database
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Using the `mysql` client, create the Glance database and associated user:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE44]'
  prefs: []
  type: TYPE_PRE
- en: 'Enter the following SQL statements at the `MariaDB [(none)] >` prompt:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE45]'
  prefs: []
  type: TYPE_PRE
- en: Defining the Glance user, service, and endpoints
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Using the `openstack` client, create the Glance user:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE46]'
  prefs: []
  type: TYPE_PRE
- en: 'Add the `admin` role to the `glance` user in the `service` project:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE47]'
  prefs: []
  type: TYPE_PRE
- en: 'Next, create the `glance` service entity:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE48]'
  prefs: []
  type: TYPE_PRE
- en: 'Lastly, create the Glance endpoints:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE49]'
  prefs: []
  type: TYPE_PRE
- en: Installing and configuring Glance components
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'To install Glance, run the following command from the `controller` node:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE50]'
  prefs: []
  type: TYPE_PRE
- en: 'Update the database connection string in the `glance-api` configuration file
    found at `/etc/glance/glance-api.conf` to use the MySQL Glance database:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE51]'
  prefs: []
  type: TYPE_PRE
- en: 'Repeat the process for the `glance-registry` configuration file found at `/etc/glance/glance-registry.conf`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE52]'
  prefs: []
  type: TYPE_PRE
- en: Configuring authentication settings
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Both the `glance-api` and `glance-registry` service configuration files must
    be updated with the appropriate authentication settings before the services will
    operate.
  prefs: []
  type: TYPE_NORMAL
- en: 'Update the `[keystone_authtoken]` settings in the `glance-api` configuration
    file found at `/etc/glance/glance-api.conf`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE53]'
  prefs: []
  type: TYPE_PRE
- en: 'Repeat the process for the `glance-registry` configuration file found at `/etc/glance/glance-registry.conf`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE54]'
  prefs: []
  type: TYPE_PRE
- en: Configuring additional settings
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Update the `glance-api` configuration file found at `/etc/glance/glance-api.conf`
    with the following additional settings:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE55]'
  prefs: []
  type: TYPE_PRE
- en: 'Next, update the `glance-registry` configuration file found at `/etc/glance/glance-registry.conf`
    with the following additional settings:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE56]'
  prefs: []
  type: TYPE_PRE
- en: 'When both files have been updated, populate the Glance database using the `glance-manage`
    utility:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE57]'
  prefs: []
  type: TYPE_PRE
- en: 'Lastly, restart the `Glance` services with the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE58]'
  prefs: []
  type: TYPE_PRE
- en: Verifying the Glance image service installation
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Source the `adminrc` script to set or update the environment variables:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE59]'
  prefs: []
  type: TYPE_PRE
- en: 'To verify that Glance was installed and configured properly, download a test
    image from the internet and verify it can be uploaded to the image server:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE60]'
  prefs: []
  type: TYPE_PRE
- en: 'Upload the image to Glance using the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE61]'
  prefs: []
  type: TYPE_PRE
- en: 'Verify the image exists in Glance using the `openstack image list` command
    shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/d9808b2c-5e0b-48c3-877c-260199e6a987.png)'
  prefs: []
  type: TYPE_IMG
- en: Installing additional images
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The CirrOS image is limited in functionality and is recommended only for testing
    network connectivity and basic Compute services. Multiple vendors provide cloud-ready
    images for use with OpenStack, including the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '| **Canonical - Ubuntu ** | [http://cloud-images.ubuntu.com/](http://cloud-images.ubuntu.com/)
    |'
  prefs: []
  type: TYPE_TB
- en: '| **Red Hat - CentOS** | [http://cloud.centos.org/centos/](http://cloud.centos.org/centos/)
    |'
  prefs: []
  type: TYPE_TB
- en: 'To install the Ubuntu 16.04 LTS image, download the file to `/tmp/images` and
    upload it to Glance:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE62]'
  prefs: []
  type: TYPE_PRE
- en: 'Use the `openstack image create` command to upload the new image:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE63]'
  prefs: []
  type: TYPE_PRE
- en: 'Another look at the image list shows the new Ubuntu image is available for
    use:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/eea1c42a-47a3-429c-9910-4327fd092934.png)'
  prefs: []
  type: TYPE_IMG
- en: Installing and configuring the Compute service
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: OpenStack Compute is a collection of services that enable cloud operators and
    users to launch virtual machine instances. Most services run on the `controller`
    node, with the exception of the `nova-compute` service, which runs on the `compute`
    nodes and is responsible for launching the virtual machine instances on those
    nodes.
  prefs: []
  type: TYPE_NORMAL
- en: Configuring the database
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Using the `mysql` client on the `controller` node, create the Nova database(s)
    and associated user(s):'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE64]'
  prefs: []
  type: TYPE_PRE
- en: 'Enter the following SQL statements at the `MariaDB [(none)] >` prompt:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE65]'
  prefs: []
  type: TYPE_PRE
- en: Defining the Nova user, service, and endpoints
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Source the `adminrc` credentials as shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE66]'
  prefs: []
  type: TYPE_PRE
- en: 'Using the `openstack` client, create both the `nova` and `placement` users:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE67]'
  prefs: []
  type: TYPE_PRE
- en: 'Add the `admin` role to the `nova` and `placement` users in the `service` project:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE68]'
  prefs: []
  type: TYPE_PRE
- en: 'Next, create the `compute` and `placement` service entities:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE69]'
  prefs: []
  type: TYPE_PRE
- en: 'Lastly, create the `compute` and `placement` endpoints:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE70]'
  prefs: []
  type: TYPE_PRE
- en: Installing and configuring controller node components
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Execute the following command on the `controller` node to install the various
    `Compute` services used by the controller:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE71]'
  prefs: []
  type: TYPE_PRE
- en: 'Update the `[database]` and `[api_database]` sections of the Nova configuration
    file found at `/etc/nova/nova.conf` with the following database connection strings:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE72]'
  prefs: []
  type: TYPE_PRE
- en: 'Update the `[DEFAULT]` section of the Nova configuration file to configure
    Nova to use the RabbitMQ message broker:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE73]'
  prefs: []
  type: TYPE_PRE
- en: The VNC Proxy is an OpenStack component that allows users to access their instances
    through VNC clients. VNC stands for **Virtual Network Computing**, and is a graphical
    desktop sharing system that uses the Remote Frame Buffer protocol to control another
    computer over a network. The controller must be able to communicate with `compute`
    nodes for VNC services to work properly through the Horizon dashboard or other
    VNC clients.
  prefs: []
  type: TYPE_NORMAL
- en: 'Update the `[vnc]` section of the Nova configuration file to configure the
    appropriate VNC settings for the `controller` node:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE74]'
  prefs: []
  type: TYPE_PRE
- en: Configuring authentication settings
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Update the Nova configuration file at `/etc/nova/nova.conf` with the following
    Keystone-related attribute:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE75]'
  prefs: []
  type: TYPE_PRE
- en: Additional controller tasks
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Update the Nova configuration file at `/etc/nova/nova.conf` to specify the
    location of the Glance API:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE76]'
  prefs: []
  type: TYPE_PRE
- en: 'Update the Nova configuration file to set the lock file path for Nova services
    and specify the IP address of the `controller` node:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE77]'
  prefs: []
  type: TYPE_PRE
- en: 'Configure the `[placement]` section within `/etc/nova/nova.conf`. Be sure to
    comment out any existing `os_region_name` configuration:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE78]'
  prefs: []
  type: TYPE_PRE
- en: 'Populate the `nova-api` database using the `nova-manage` utility:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE79]'
  prefs: []
  type: TYPE_PRE
- en: 'Register the `cell0` database using the `nova-manage` utility:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE80]'
  prefs: []
  type: TYPE_PRE
- en: 'Create the `cell1` cell:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE81]'
  prefs: []
  type: TYPE_PRE
- en: 'Populate the `nova` database using the `nova-manage` utility:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE82]'
  prefs: []
  type: TYPE_PRE
- en: 'Lastly, restart the controller-based Compute services for the changes to take
    effect:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE83]'
  prefs: []
  type: TYPE_PRE
- en: Installing and configuring compute node components
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Once the `Compute` services have been configured on the `controller` node, at
    least one other host must be configured as a `compute` node. The `compute` node
    receives requests from the `controller` node to host virtual machine instances.
  prefs: []
  type: TYPE_NORMAL
- en: 'On the `compute` nodes, install the `nova-compute` package and related packages.
    These packages provide virtualization support services to the `compute` node:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE84]'
  prefs: []
  type: TYPE_PRE
- en: 'Update the Nova configuration file at `/etc/nova/nova.conf` on the `compute`
    nodes with the following Keystone-related settings:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE85]'
  prefs: []
  type: TYPE_PRE
- en: 'Next, update the `[DEFAULT]` section of the Nova configuration file to configure
    Nova to use the RabbitMQ message broker:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE86]'
  prefs: []
  type: TYPE_PRE
- en: Then, update the Nova configuration file to provide remote console access to
    instances through a proxy on the `controller` node. The remote console is accessible
    through the Horizon dashboard. The IP configured as `my_ip` should be the respective
    management IP of each `compute` node.
  prefs: []
  type: TYPE_NORMAL
- en: '`Compute01`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE87]'
  prefs: []
  type: TYPE_PRE
- en: '`Compute02`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE88]'
  prefs: []
  type: TYPE_PRE
- en: '`Compute03`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE89]'
  prefs: []
  type: TYPE_PRE
- en: Additional compute tasks
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Update the Nova configuration file at `/etc/nova/nova.conf` to specify the
    location of the Glance API:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE90]'
  prefs: []
  type: TYPE_PRE
- en: 'Update the Nova configuration file to set the lock file path for `Nova` services:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE91]'
  prefs: []
  type: TYPE_PRE
- en: 'Configure the `[placement]` section within `/etc/nova/nova.conf`. Be sure to
    comment out any existing `os_region_name` configuration:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE92]'
  prefs: []
  type: TYPE_PRE
- en: 'Restart the `nova-compute` service on all `compute` nodes:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE93]'
  prefs: []
  type: TYPE_PRE
- en: Adding the compute node(s) to the cell database
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'When compute services are started for the first time on a `compute` node, the
    node is registered via the Nova Placement API. To verify the `compute` node(s)
    are registered, use the `openstack compute service list` command as shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/92a4b63f-82d2-4095-a36c-382dbab74ddc.png)'
  prefs: []
  type: TYPE_IMG
- en: Installing the OpenStack Dashboard
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The OpenStack Dashboard, also known as Horizon, provides a web-based user interface
    to OpenStack services including Compute, Networking, Storage, and Identity, among
    others.
  prefs: []
  type: TYPE_NORMAL
- en: 'To add Horizon to the environment, install the following package on the `controller`
    node:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE94]'
  prefs: []
  type: TYPE_PRE
- en: Updating the host and API version configuration
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Edit the `/etc/openstack-dashboard/local_settings.py` file and change the `OPENSTACK_HOST` value
    from its default to the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE95]'
  prefs: []
  type: TYPE_PRE
- en: 'Set the API versions with the following dictionary:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE96]'
  prefs: []
  type: TYPE_PRE
- en: Configuring Keystone settings
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Edit the `/etc/openstack-dashboard/local_settings.py` file and replace the
    following Keystone-related configuration options with these values:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE97]'
  prefs: []
  type: TYPE_PRE
- en: Modifying network configuration
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The stock Horizon configuration enables certain network functionality that
    has not yet been implemented. As a result, you will experience errors in the dashboard
    that may impact usability. For now, disable all network functions in the dashboard
    by setting the following configuration:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE98]'
  prefs: []
  type: TYPE_PRE
- en: Uninstalling default Ubuntu theme (optional)
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'By default, installations of the OpenStack Dashboard on Ubuntu include a theme
    that has been customized by Canonical. To remove the theme, update the `/etc/openstack-dashboard/local_settings.py` file
    and replace the `DEFAULT_THEME` value with `default` instead of `ubuntu`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE99]'
  prefs: []
  type: TYPE_PRE
- en: The examples in this book assume the default theme is in place.
  prefs: []
  type: TYPE_NORMAL
- en: Reloading Apache
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Once the above changes have been made, reload the Apache web server configuration
    using the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE100]'
  prefs: []
  type: TYPE_PRE
- en: Testing connectivity to the dashboard
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: From a machine that has access to the management network of the `controller01` node,
    open the following URL in a web browser: [http://controller01/horizon/.](http://controller01/horizon/)
  prefs: []
  type: TYPE_NORMAL
- en: The API network is reachable from my workstation and the `/etc/hosts` file on
    my client workstation has been updated to include the same hostname-to-IP mappings
    configured earlier in this chapter.
  prefs: []
  type: TYPE_NORMAL
- en: The following screenshot demonstrates a successful connection to the dashboard.
    The username and password were created in the *Defining users, projects, and roles
    in Keystone* section earlier in this chapter. In this installation, the domain
    is `Default`, the username is `admin,` and the password is `openstack`.
  prefs: []
  type: TYPE_NORMAL
- en: Familiarizing yourself with the dashboard
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Once you have successfully logged in, the dashboard defaults to the Identity panel.
    Project-related tasks can be completed in the Project panel, while users with
    the `admin` role will find an Admin panel that allows for administrative tasks
    to be completed:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/4004c6df-de06-40d9-94c1-bd5b43c59395.png)'
  prefs: []
  type: TYPE_IMG
- en: 'By navigating to the System Information page within the Admin / System panel,
    we can see services listed that correspond to those installed earlier in this
    chapter:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/a6c19155-c30e-4f8c-92db-2fd750a53567.png)'
  prefs: []
  type: TYPE_IMG
- en: 'The OpenStack Dashboard allows users to make changes within any project for
    which they have permissions. The menu located to the right of the OpenStack logo
    is a drop-down menu that allows users to select the project they''d like to work
    with:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/9832a490-2327-4046-847d-d0e0b528b299.png)'
  prefs: []
  type: TYPE_IMG
- en: Only projects to which the user is assigned will be listed. If the user has
    the `admin` role, additional cloud-wide changes can be made within the Admin panel.
    Using the Horizon dashboard to perform networking functions will be covered in
    later chapters.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: At this point in the installation, the OpenStack Identity, Image, Dashboard,
    and Compute services have been successfully deployed across the nodes of the cloud.
    The environment is not ready to host instances just yet, as OpenStack Networking
    services have not been installed or configured. If issues arise during the installation
    of services described in this chapter, be sure to check the log messages found
    in `/var/log/nova/`, `/var/log/glance/`, `/var/log/apache2/`, and `/var/log/keystone/` for
    assistance in troubleshooting. For additional information regarding the installation
    process, feel free to check out the documentation available the OpenStack website
    at the following URL: [http://docs.openstack.org](http://docs.openstack.org).
  prefs: []
  type: TYPE_NORMAL
- en: In the next chapter, we will begin the installation of Neutron networking services
    and discover additional information about the internal architecture of OpenStack
    Networking.
  prefs: []
  type: TYPE_NORMAL
