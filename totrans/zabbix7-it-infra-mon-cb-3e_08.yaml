- en: '8'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '8'
- en: Setting Up Zabbix Proxies
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置Zabbix代理
- en: You can’t preach about Zabbix without actually preaching about the use of Zabbix
    **proxies** – a nice addition at first, but a no-brainer by now. Anyone who’s
    expecting to set up a Zabbix environment of a medium/larger size will need proxies.
    The main reason to use proxies is scalability, as Zabbix proxies offload the data
    collection and preprocessing load from the Zabbix server. This way, we can scale
    up our Zabbix environment further and with greater ease. Furthermore, proxies
    can provide an additional layer of security by collecting data in a local network
    and then sending it to the Zabbix server, splitting your data collection access
    requirements between hosts instead of consolidating it on a single Zabbix server.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 你不能谈论Zabbix而不谈论Zabbix **代理**——最初它是一个不错的补充，但现在已经是必不可少的了。任何期望设置中型或大型Zabbix环境的人都需要代理。使用代理的主要原因是可扩展性，因为Zabbix代理将数据收集和预处理的负担从Zabbix服务器上卸载出去。这样，我们可以进一步扩展Zabbix环境，而且更为轻松。此外，代理还可以通过在本地网络中收集数据，然后将其发送到Zabbix服务器，为你提供额外的安全层，分散你对数据收集的访问需求，而不是将其集中在单个Zabbix服务器上。
- en: In this chapter, we will first learn how to set up a Zabbix proxy. We will then
    learn how to work with passive and active Zabbix proxies, and also how to monitor
    hosts with either form of the Zabbix proxy. Zabbix 7 also introduces the possibility
    of adding proxies in a load-balancing pool together, which we will also discover
    in this chapter. We will also cover some Zabbix network discovery using the proxies,
    and we’ll learn how to monitor Zabbix proxies to keep them healthy. After these
    recipes, you’ll have no more excuses for not setting up the proxies, as we’ll
    cover most of the possible forms of proxy use in this chapter.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将首先学习如何设置Zabbix代理。然后我们将学习如何使用被动和主动Zabbix代理，以及如何使用这两种形式的Zabbix代理来监控主机。Zabbix
    7还引入了将代理添加到负载均衡池中的功能，我们将在本章中介绍这个新特性。我们还将讨论一些使用代理进行的Zabbix网络发现，并学习如何监控Zabbix代理以保持其健康。在这些教程完成后，你将没有更多的借口不去设置代理，因为我们将在本章中涵盖代理使用的几乎所有可能形式。
- en: 'So, let’s go through the following recipes and check out how to work with Zabbix
    proxies:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，让我们一起来浏览以下教程，看看如何使用Zabbix代理：
- en: Setting up a Zabbix proxy
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设置Zabbix代理
- en: Working with passive Zabbix proxies
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用被动Zabbix代理
- en: Working with active Zabbix proxies
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用主动Zabbix代理
- en: Monitoring hosts with a Zabbix proxy
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Zabbix代理监控主机
- en: Encrypting your Zabbix proxy connection with pre-shared keys
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用预共享密钥加密Zabbix代理连接
- en: Setting up Zabbix proxy load balancing
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设置Zabbix代理负载均衡
- en: Using discovery with Zabbix proxies
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Zabbix代理进行发现
- en: Monitoring your Zabbix proxies
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 监控你的Zabbix代理
- en: Technical requirements
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: We are going to need several new Linux hosts for this chapter, as we’ll be building
    them as Zabbix proxies.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 本章我们将需要几个新的Linux主机，因为我们将把它们作为Zabbix代理来构建。
- en: 'Set up two proxies by installing your preferred RHEL-based or Ubuntu Linux
    distribution on the following two new hosts:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 在以下两个新主机上安装你喜欢的RHEL或Ubuntu Linux发行版，来设置两个代理：
- en: '**lar-book-proxy-passive**'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**lar-book-proxy-passive**'
- en: '**lar-book-proxy-active**'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**lar-book-proxy-active**'
- en: 'You’ll also need the Zabbix server, with at least one monitored host. We’ll
    be using the following new host to monitor with a Zabbix agent installed:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 你还需要一个Zabbix服务器，至少有一个被监控的主机。我们将使用以下新主机，并在其上安装Zabbix代理进行监控：
- en: '[PRE0]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Setting up a Zabbix proxy
  id: totrans-20
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置Zabbix代理
- en: Setting up a Zabbix proxy can be quite daunting if you don’t have a lot of experience
    with Linux, but the task is quite simple once you get the hang of it. We will
    install a Zabbix proxy on our `lar-book-proxy-passive` server; you can repeat
    the task on `lar-book-proxy-active`.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你没有太多Linux经验，设置Zabbix代理可能会让人感到不知所措，但一旦掌握了它，任务其实非常简单。我们将在`lar-book-proxy-passive`服务器上安装Zabbix代理；你可以在`lar-book-proxy-active`上重复这个任务。
- en: Getting ready
  id: totrans-22
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: Make sure to have a new empty Linux host, with your distribution of choice ready
    and installed. We won’t need our Zabbix server in this recipe yet.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 确保有一台新的空Linux主机，并准备好并安装你选择的发行版。我们在这个教程中还不需要Zabbix服务器。
- en: How to do it…
  id: totrans-24
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: Let’s start by logging in to the **command-line interface** (**CLI**) of our
    new **lar-book-proxy-passive** host.
  id: totrans-25
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们从登录到新**lar-book-proxy-passive**主机的**命令行界面**（**CLI**）开始。
- en: 'Now, execute the following command to add the Zabbix repository. For RHEL-based
    systems, use the following:'
  id: totrans-26
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，执行以下命令来添加Zabbix仓库。对于基于RHEL的系统，使用以下命令：
- en: '[PRE1]'
  id: totrans-27
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'For Ubuntu systems, use the following:'
  id: totrans-28
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对于Ubuntu系统，使用以下命令：
- en: '[PRE2]'
  id: totrans-29
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Now, install the Zabbix proxy by executing the following command.
  id: totrans-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，通过执行以下命令安装 Zabbix 代理。
- en: 'RHEL-based systems, use the following:'
  id: totrans-31
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对于基于 RHEL 的系统，请使用以下命令：
- en: '[PRE3]'
  id: totrans-32
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Ubuntu systems, use the following:'
  id: totrans-33
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对于 Ubuntu 系统，请使用以下命令：
- en: '[PRE4]'
  id: totrans-34
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Tip
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 提示
- en: On RHEL-based servers, don’t forget to set **Security-Enhanced Linux** (**SELinux**)
    to permissive or allow Zabbix proxy in SELinux for production. For lab environments,
    it is fine to set SELinux to permissive, but in production, I would recommend
    leaving it enabled. For Ubuntu systems, in a lab environment, we can disable AppArmor.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 在基于 RHEL 的服务器上，不要忘记将 **SELinux** 设置为宽松模式或者为生产环境允许 Zabbix 代理运行。对于实验室环境，可以将 SELinux
    设置为宽松模式，但在生产环境中，建议保持启用状态。对于 Ubuntu 系统，在实验室环境中，我们可以禁用 AppArmor。
- en: 'Now, edit the Zabbix proxy configuration by executing the following command:'
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，通过执行以下命令编辑 Zabbix 代理配置：
- en: '[PRE5]'
  id: totrans-38
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: ProxyMode=1
  id: totrans-39
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: ProxyMode=1
- en: '[PRE6]'
  id: totrans-40
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Change the following line to your Zabbix server address:'
  id: totrans-41
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将以下行更改为您的 Zabbix 服务器地址：
- en: '[PRE7]'
  id: totrans-42
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Important note
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: When working with a Zabbix server in **high availability** (**HA**), make sure
    to add the Zabbix server IP addresses here for every single node in your cluster.
    The proxy will only be sending data to the active node. Keep in mind that HA nodes
    are delimited by a semi-colon (**;**) instead of a comma (**,**).
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 在与 Zabbix 服务器一起使用 **高可用性** (**HA**) 时，请确保为集群中每个节点添加 Zabbix 服务器 IP 地址。代理将仅向活动节点发送数据。请注意，HA
    节点之间用分号 (**;**) 而不是逗号 (**,**）分隔。
- en: 'Change the following line to your proxy hostname:'
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将以下行更改为您的代理主机名：
- en: '[PRE8]'
  id: totrans-46
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: DBName=/tmp/zabbix_proxy.sqlite3
  id: totrans-47
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: DBName=/tmp/zabbix_proxy.sqlite3
- en: '[PRE9]'
  id: totrans-48
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'You can now enable the Zabbix proxy and start it with the following two commands:'
  id: totrans-49
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您现在可以使用以下两个命令启用 Zabbix 代理并启动它：
- en: '[PRE10]'
  id: totrans-50
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'You should want to check that the Zabbix proxy logs are not showing any errors,
    with the following command:'
  id: totrans-51
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您应该检查 Zabbix 代理日志是否没有显示任何错误，使用以下命令：
- en: '[PRE11]'
  id: totrans-52
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE11]'
- en: How it works…
  id: totrans-53
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作原理…
- en: 'There are three versions of Zabbix proxy to work with:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 有三个版本的 Zabbix 代理可供使用：
- en: '**zabbix-proxy-mysql**'
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**zabbix-proxy-mysql**'
- en: '**zabbix-proxy-pgsql**'
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**zabbix-proxy-pgsql**'
- en: '**zabbix-proxy-sqlite3**'
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**zabbix-proxy-sqlite3**'
- en: We’ve just done the setup for the `zabbix-proxy-sqlite3` package, which is the
    easiest method if you ask me. The `sqlite3` version of Zabbix proxy makes it possible
    for us to set up a Zabbix proxy with great ease as we don’t actually need to worry
    too much about database setup and maintenance.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 我们刚刚完成了 `zabbix-proxy-sqlite3` 包的设置，这是我认为最简单的方法。如果您问我的话，`sqlite3` 版本的 Zabbix
    代理使我们能够轻松设置 Zabbix 代理，因为我们实际上不需要过多担心数据库的设置和维护。
- en: Please do note that the `sqlite3` versions might not be suited to Zabbix proxies
    with a very high load as `sqlite3` cannot be further scaled up. You get more options
    to scale a `mysql` or `postgresql` database when using Zabbix proxy by the fine-tuning
    mechanisms available in those database types. However, since the idea behind proxies
    in most cases is dividing the load between proxies, I find it easier to add the
    SQLite3 proxy once my database has reached its capacity.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，`sqlite3` 版本可能不适合负载非常高的 Zabbix 代理，因为 `sqlite3` 无法进一步扩展。在使用 Zabbix 代理时，使用
    `mysql` 或 `postgresql` 数据库可以获得更多的扩展选项，通过这些数据库类型的微调机制。然而，由于在大多数情况下代理的理念是在多个代理之间分配负载，所以一旦我的数据库达到容量上限，我发现添加
    SQLite3 代理更容易。
- en: Tip
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 提示
- en: Always pick the right type of Zabbix proxy for what you expect to need in the
    future. Although it is easy to switch proxies later, don’t go too easy on this
    choice as you might save yourself hours in the future.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 对于将来的需求，始终选择正确类型的 Zabbix 代理。虽然稍后可以轻松切换代理，但在此选择上不要太随意，因为您可能会在未来节省数小时的时间。
- en: 'The amazing part about the `sqlite3` version is that if we run into database
    issues, it’s very easy to just remove the database by running the following:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: '`sqlite3` 版本的惊人之处在于，如果我们遇到数据库问题，只需运行以下命令即可轻松删除数据库：'
- en: '[PRE12]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: With this, the `sqlite3` Zabbix proxy then automatically creates a new database
    on startup, and we’re all ready to start collecting again. Do note that we might
    lose some information that is in the proxy database though, which functions as
    a cache that might contain data still to be sent to Zabbix. If the data hasn’t
    been sent to Zabbix yet and you delete the database, that’s when you will lose
    the metrics still in the database.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 有了这个，`sqlite3` Zabbix 代理会在启动时自动创建一个新的数据库，我们现在可以开始重新收集数据了。请注意，我们可能会丢失一些仍在代理数据库中的数据，这些数据作为一个缓存可能包含尚未发送到
    Zabbix 的数据。如果数据尚未发送到 Zabbix 并且您删除数据库，则会丢失仍在数据库中的度量标准。
- en: 'In Zabbix 7, however, the proxy database concept has been changed slightly,
    by the addition of an in-memory cache. By default, proxies in Zabbix 7 will now
    run in one of three modes:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，在 Zabbix 7 中，代理数据库的概念有所变化，增加了内存缓存。默认情况下，Zabbix 7 中的代理将以以下三种模式之一运行：
- en: Hybrid (default for new installations)
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 混合模式（新安装的默认设置）
- en: Memory
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 内存
- en: Disk (default for existing installations)
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 磁盘（现有安装的默认设置）
- en: We can adjust this setting by editing `ProxyBufferMode=` in the Zabbix proxy
    configuration file.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以通过编辑 Zabbix 代理配置文件中的`ProxyBufferMode=`来调整此设置。
- en: This means that a Zabbix proxy will now buffer metrics to be sent in memory
    instead of in the database by default. This is only in the case that the Zabbix
    proxy memory cache is full with the proxy start buffering data to the database.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 这意味着 Zabbix 代理现在将默认将待发送的指标缓存在内存中，而不是缓存在数据库中。只有在 Zabbix 代理内存缓存已满的情况下，代理才会开始将数据缓存在数据库中。
- en: One last thing to keep in mind is that, in hybrid mode, we can still restart
    the Zabbix proxy safely; however, upon restarting, the Zabbix proxy process data
    will be flushed into the database. In memory mode, however, this is not the cache
    and data will be lost upon restarting the Zabbix proxy process.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 需要记住的最后一点是，在混合模式下，我们仍然可以安全地重启 Zabbix 代理；但是，重启时，Zabbix 代理进程的数据将会被刷新到数据库中。而在内存模式下，这不是缓存，数据会在重启
    Zabbix 代理进程时丢失。
- en: There’s more…
  id: totrans-72
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多…
- en: 'More information about installing Zabbix proxies can be found here:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 更多关于安装 Zabbix 代理的信息可以在这里找到：
- en: '[https://www.zabbix.com/documentation/current/manual/installation/install_from_packages](https://www.zabbix.com/documentation/current/manual/installation/install_from_packages)'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://www.zabbix.com/documentation/current/manual/installation/install_from_packages](https://www.zabbix.com/documentation/current/manual/installation/install_from_packages)'
- en: Choose the distribution you are using, and you can find the guides for all the
    different variants of proxy installations.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 选择你正在使用的发行版，你可以在这里找到所有不同代理安装变体的指南。
- en: Working with passive Zabbix proxies
  id: totrans-76
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用被动 Zabbix 代理
- en: Now that we have installed our Zabbix proxy in the previous recipe, we can start
    working with it. Let’s start by setting up our passive Zabbix proxy in the frontend
    and see what we can do with it from the start.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经在前面的步骤中安装了 Zabbix 代理，我们可以开始使用它了。让我们先从在前端设置我们的被动 Zabbix 代理开始，看看我们从一开始能做些什么。
- en: Getting ready
  id: totrans-78
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备就绪
- en: You will need the `lar-book-proxy-passive` host for this recipe ready and installed
    with Zabbix proxy. We will also be using our Zabbix server in this recipe again.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 你需要为此步骤准备好并安装好 `lar-book-proxy-passive` 主机，并且我们将再次在此步骤中使用 Zabbix 服务器。
- en: How to do it…
  id: totrans-80
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: 'Let’s start by logging in to our Zabbix frontend and navigating to **Administration**
    | **Proxies**:'
  id: totrans-81
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们从登录 Zabbix 前端并导航到**管理** | **代理**开始：
- en: '![Figure 8.1 – Administration | Proxies page, without proxies](img/B18275_08_001.jpg)'
  id: totrans-82
  prefs: []
  type: TYPE_IMG
  zh: '![图 8.1 – 管理 | 代理页面，没有代理](img/B18275_08_001.jpg)'
- en: Figure 8.1 – Administration | Proxies page, without proxies
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 图 8.1 – 管理 | 代理页面，没有代理
- en: Our **Proxies** page is where we do all frontend proxy-related configuration.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的**代理**页面是进行所有前端代理相关配置的地方。
- en: Let’s add a new proxy with the blue **Create proxy** button in the top-right
    corner.
  id: totrans-85
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们通过右上角的蓝色**创建代理**按钮添加一个新代理。
- en: 'This will show us to the **Create proxy** popup, where we will fill out the
    following information:'
  id: totrans-86
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这将展示给我们**创建代理**的弹出窗口，在这里我们将填写以下信息：
- en: "![Figure 8.2 – Administration | Proxies, Create proxy popup, lar-book-proxy-passive\uFEFF\
    ](img/B19803_08_02.jpg)"
  id: totrans-87
  prefs: []
  type: TYPE_IMG
  zh: "![图 8.2 – 管理 | 代理，创建代理弹出窗口，lar-book-proxy-passive\uFEFF](img/B19803_08_02.jpg)"
- en: Figure 8.2 – Administration | Proxies, Create proxy popup, lar-book-proxy-passive
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 图 8.2 – 管理 | 代理，创建代理弹出窗口，lar-book-proxy-passive
- en: 'Before clicking the blue **Add** button, let’s take a look at the **Encryption**
    tab:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 在点击蓝色的**添加**按钮之前，让我们先看一下**加密**标签页：
- en: '![Figure 8.3 – Administration | Proxies, Create proxy popup Encryption tab,
    lar-book-proxy-passive](img/B19803_08_03.jpg)'
  id: totrans-90
  prefs: []
  type: TYPE_IMG
  zh: '![图 8.3 – 管理 | 代理，创建代理弹出窗口加密标签页，lar-book-proxy-passive](img/B19803_08_03.jpg)'
- en: Figure 8.3 – Administration | Proxies, Create proxy popup Encryption tab, lar-book-proxy-passive
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 图 8.3 – 管理 | 代理，创建代理弹出窗口加密标签页，lar-book-proxy-passive
- en: By default, **No encryption** is checked here, which we’ll address in another
    recipe. For now, leave it set to **No encryption**.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，这里勾选了**无加密**，我们将在另一个步骤中处理这个问题。目前，保持它设置为**无加密**。
- en: Important note
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: 'A lot of valuable information is exchanged between Zabbix servers and Zabbix
    proxies. If you are working with insecure networks or just need an extra layer
    of security, use Zabbix proxy encryption. You can find more information on Zabbix
    encryption here: [https://www.zabbix.com/documentation/current/en/manual/encryption](https://www.zabbix.com/documentation/current/en/manual/encryption).'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Zabbix 服务器和 Zabbix 代理之间交换了大量有价值的信息。如果你正在使用不安全的网络，或者只是需要额外的安全层，可以使用 Zabbix
    代理加密。你可以在这里找到更多关于 Zabbix 加密的信息：[https://www.zabbix.com/documentation/current/en/manual/encryption](https://www.zabbix.com/documentation/current/en/manual/encryption)。
- en: 'Before we move on, there’s one more tab in our Zabbix proxy creation popup
    that we need to have a look at – **Timeouts**:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 在继续之前，我们还需要看一眼 Zabbix 代理创建弹窗中的另一个标签 – **超时**：
- en: '![Figure 8.4 – Administration | Proxies, Create proxy popup Timeouts tab, lar-book-proxy-passive](img/B19803_08_04.jpg)'
  id: totrans-96
  prefs: []
  type: TYPE_IMG
  zh: '![图 8.4 – 管理 | 代理，创建代理弹窗中的超时标签，lar-book-proxy-passive](img/B19803_08_04.jpg)'
- en: Figure 8.4 – Administration | Proxies, Create proxy popup Timeouts tab, lar-book-proxy-passive
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 图 8.4 – 管理 | 代理，创建代理弹窗中的超时标签，lar-book-proxy-passive
- en: We won’t change anything on the **Timeouts** tab here, but since Zabbix 7, it
    is possible to override global timeouts for various types of item checks, allowing
    us to significantly tweak our Zabbix setup to avoid timeout performance issues.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在这里不会更改**超时**标签页的任何内容，但自 Zabbix 7 起，可以覆盖不同类型项目检查的全局超时，允许我们显著调整 Zabbix 设置，以避免超时性能问题。
- en: Now, click the blue **Add** button, which will take us back to our proxy overview
    page.
  id: totrans-99
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，点击蓝色的**添加**按钮，这将把我们带回到代理概览页面。
- en: 'The **Last seen (age)** part of your newly added proxy should now show a time
    value, instead of **Never**:'
  id: totrans-100
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 新添加的代理的**最后见到（时间）**部分现在应该显示一个时间值，而不是**从未**：
- en: "![Figure 8.5 – Administration | Proxies page, Last see\uFEFF\uFEFFn (age)](img/B19803_08_05.jpg)"
  id: totrans-101
  prefs: []
  type: TYPE_IMG
  zh: '![图 8.5 – 管理 | 代理页面，最后见到（时间）](img/B19803_08_05.jpg)'
- en: Figure 8.5 – Administration | Proxies page, Last seen (age)
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 图 8.5 – 管理 | 代理页面，最后见到（时间）
- en: How it works…
  id: totrans-103
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的…
- en: Adding proxies isn’t the hardest task after we’ve already done the installation
    part. After the steps we took in this recipe, we are ready to start monitoring
    with this proxy.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 在完成安装部分后，添加代理并不是最难的任务。在本步骤中完成的操作后，我们已准备好使用此代理开始监控。
- en: 'The proxy we just added is a `10051`:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 我们刚刚添加的代理是 `10051`：
- en: '![Figure 8.6 – Diagram showing an active proxy connection](img/B19803_08_06.JPG)'
  id: totrans-106
  prefs: []
  type: TYPE_IMG
  zh: '![图 8.6 – 显示活跃代理连接的示意图](img/B19803_08_06.JPG)'
- en: Figure 8.6 – Diagram showing an active proxy connection
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 图 8.6 – 显示活跃代理连接的示意图
- en: Once the passive proxy knows what to monitor, every time the Zabbix server polls
    for data, data is sent back within the same TCP connection. This means that the
    connection is always initiated from the Zabbix server side. Once it’s set up,
    the Zabbix server will keep sending configuration changes and it will keep polling
    for new data.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦被动代理知道要监控什么，每当 Zabbix 服务器轮询数据时，数据会通过同一 TCP 连接返回。这意味着连接始终是由 Zabbix 服务器端发起的。一旦设置完成，Zabbix
    服务器将不断发送配置更改，并持续轮询新的数据。
- en: Working with active Zabbix proxies
  id: totrans-109
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用活跃 Zabbix 代理
- en: We now know how to install and add proxies. Let’s set up our active proxy, like
    we did with the passive proxy in the previous recipe, and see how it works.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在知道如何安装和添加代理。让我们设置我们的活跃代理，就像在前面的步骤中设置被动代理一样，看看它是如何工作的。
- en: Getting ready
  id: totrans-111
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: You will need the `lar-book-proxy-active` host for this recipe, ready and installed
    with Zabbix proxy, as set up in the first recipe of this chapter. We will also
    be using our Zabbix server in this recipe.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 你将需要在本步骤中使用`lar-book-proxy-active`主机，它已经准备好并安装了 Zabbix 代理，如本章第一个步骤所设置。我们还将在本步骤中使用我们的
    Zabbix 服务器。
- en: How to do it…
  id: totrans-113
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: 'Let’s start by logging in to our Zabbix frontend and navigating to **Administration**
    | **Proxies**:'
  id: totrans-114
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们从登录到 Zabbix 前端开始，导航到**管理** | **代理**：
- en: '![Figure 8.7 – Administration | Proxies page, no active proxies](img/B18275_08_001.jpg)'
  id: totrans-115
  prefs: []
  type: TYPE_IMG
  zh: '![图 8.7 – 管理 | 代理页面，无活跃代理](img/B18275_08_001.jpg)'
- en: Figure 8.7 – Administration | Proxies page, no active proxies
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 图 8.7 – 管理 | 代理页面，无活跃代理
- en: Our **Proxies** page is where we do all configurations that are proxy related.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的**代理**页面是进行所有与代理相关配置的地方。
- en: Let’s add a new proxy by clicking the blue **Create proxy** button in the top-right
    corner.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 通过点击右上角的蓝色**创建代理**按钮，我们来添加一个新的代理。
- en: 'This will open the **Create proxy** popup, where we will fill out the following
    information:'
  id: totrans-119
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这将打开**创建代理**弹窗，在这里我们将填写以下信息：
- en: '![Figure 8.8 – Administration | Proxies, Create proxy popup, lar-book-proxy-active](img/B19803_08_08.jpg)'
  id: totrans-120
  prefs: []
  type: TYPE_IMG
  zh: '![图 8.8 – 管理 | 代理，创建代理弹窗，lar-book-proxy-active](img/B19803_08_08.jpg)'
- en: Figure 8.8 – Administration | Proxies, Create proxy popup, lar-book-proxy-active
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 图 8.8 – 管理 | 代理，创建代理弹窗，lar-book-proxy-active
- en: Tip
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 提示
- en: The **Proxy address** field is actually optional for our active proxy. You do
    not have to add this for the Zabbix proxy to function, but it is recommended to
    keep things clear. Adding the **Proxy address** field also functions as a sort
    of whitelist in this case, as only the IP address listed will be allowed to connect.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: '**代理地址**字段对于我们的主动代理来说实际上是可选的。您不必添加此项即可让 Zabbix 代理正常工作，但为了保持清晰，建议添加。添加**代理地址**字段也起到了一种白名单的作用，只有列出的
    IP 地址才能连接。'
- en: 'Before clicking the blue **Add** button, let’s take a look at the **Encryption**
    tab:'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 在点击蓝色的**添加**按钮之前，先来看一下**加密**标签：
- en: '![Figure 8.9 – Administration | Proxies, Create proxy popup Encryption tab,
    lar-book-proxy-active](img/B19803_08_09.jpg)'
  id: totrans-125
  prefs: []
  type: TYPE_IMG
  zh: '![图 8.9 – 管理 | 代理，创建代理弹窗加密标签，lar-book-proxy-active](img/B19803_08_09.jpg)'
- en: Figure 8.9 – Administration | Proxies, Create proxy popup Encryption tab, lar-book-proxy-active
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 图 8.9 – 管理 | 代理，创建代理弹窗加密标签，lar-book-proxy-active
- en: By default, **No encryption** is checked here, which we’ll leave be for this
    recipe.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，**不加密**是选中的，我们在这个步骤中保持不变。
- en: 'Before we move on, there’s one more tab in our Zabbix proxy creation popup
    that we need to have a look at – **Timeouts**:'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 在继续之前，我们需要查看 Zabbix 代理创建弹窗中的另一个标签——**超时**：
- en: '![Figure 8.10 – Administration | Proxies, Create proxy popup Timeouts tab,
    lar-book-proxy-passive](img/B19803_08_10.jpg)'
  id: totrans-129
  prefs: []
  type: TYPE_IMG
  zh: '![图 8.10 – 管理 | 代理，创建代理弹窗超时标签，lar-book-proxy-passive](img/B19803_08_10.jpg)'
- en: Figure 8.10 – Administration | Proxies, Create proxy popup Timeouts tab, lar-book-proxy-passive
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 图 8.10 – 管理 | 代理，创建代理弹窗超时标签，lar-book-proxy-passive
- en: We won’t change anything on the **Timeouts** tab here, but since Zabbix 7, it
    is possible to override global timeouts for various types of item checks, allowing
    us to significantly tweak our Zabbix setup to avoid timeout performance issues.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在这里不会更改**超时**标签中的任何内容，但从 Zabbix 7 开始，您可以覆盖各种类型项目检查的全局超时，这使得我们能够显著调整 Zabbix
    设置，以避免超时性能问题。
- en: Now, click the blue **Add** button, which will take us back to the proxy overview
    page.
  id: totrans-132
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，点击蓝色的**添加**按钮，这将把我们带回代理概览页面。
- en: 'Log in to the CLI and check the configuration with the following command:'
  id: totrans-133
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 登录 CLI 并使用以下命令检查配置：
- en: '[PRE13]'
  id: totrans-134
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE13]'
- en: ProxyMode=0
  id: totrans-135
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: ProxyMode=0
- en: '[PRE14]'
  id: totrans-136
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'Change the following line to your proxy hostname:'
  id: totrans-137
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将以下行更改为您的代理主机名：
- en: '[PRE15]'
  id: totrans-138
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'Then, restart the proxy:'
  id: totrans-139
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，重启代理：
- en: '[PRE16]'
  id: totrans-140
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE16]'
- en: The **Last seen (age)** part of your newly added proxy should now show a time
    value, instead of **Never**.
  id: totrans-141
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您新添加的代理的**最后一次见面（年龄）**部分现在应该显示一个时间值，而不是**从未**。
- en: '![Figure 8.11 – Administration | proxies page, Last seen (age)](img/B19803_08_11.jpg)'
  id: totrans-142
  prefs: []
  type: TYPE_IMG
  zh: '![图 8.11 – 管理 | 代理页面，最后一次见面（年龄）](img/B19803_08_11.jpg)'
- en: Figure 8.11 – Administration | proxies page, Last seen (age)
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 图 8.11 – 管理 | 代理页面，最后一次见面（年龄）
- en: Depending on your setting in the proxy configuration file, the **Last seen (age)**
    part may take a while to change.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 根据您在代理配置文件中的设置，**最后一次见面（年龄）**部分可能需要一些时间才能更新。
- en: How it works…
  id: totrans-145
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的……
- en: If you followed the *Working with passive Zabbix proxies* recipe from this chapter,
    the steps are about the same, except for the part where we add the proxy mode.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您跟随了本章中的*使用被动 Zabbix 代理*步骤，操作大致相同，唯一不同的是我们添加代理模式的部分。
- en: The proxy we just added is an active proxy that works by requesting a configuration
    from the Zabbix server on port `10051`.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 我们刚刚添加的代理是一个主动代理，通过在端口`10051`上向 Zabbix 服务器请求配置来工作。
- en: '![Figure 8.12 – Diagram showing an active proxy connection](img/B19803_08_12.jpg)'
  id: totrans-148
  prefs: []
  type: TYPE_IMG
  zh: '![图 8.12 – 显示主动代理连接的示意图](img/B19803_08_12.jpg)'
- en: Figure 8.12 – Diagram showing an active proxy connection
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 图 8.12 – 显示主动代理连接的示意图
- en: The Zabbix proxy keeps requesting configuration changes, and it keeps sending
    any newly collected data to the Zabbix server every second or it sends out a heartbeat
    if no data is available.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: Zabbix 代理会不断请求配置更改，并且每秒将新收集的数据发送到 Zabbix 服务器，或者如果没有数据可用，则发送心跳。
- en: Important note
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: It is recommended to use active Zabbix proxies, as we can use them to reduce
    the load on our Zabbix server. Use the passive proxy only when you have a good
    reason to do so.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 推荐使用主动 Zabbix 代理，因为它可以帮助我们减少 Zabbix 服务器的负载。只有在有充分理由时，才使用被动代理。
- en: Monitoring hosts with Zabbix proxy
  id: totrans-153
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Zabbix 代理监控主机
- en: We have our `active` and `passive` Zabbix proxies ready to use, so it’s now
    time to add some hosts to them. Setting up the Zabbix frontend to monitor hosts
    with Zabbix proxies works in about the same way as monitoring directly from the
    Zabbix server. The backend and design change completely though, which I’ll explain
    in the *How it works…* section of this recipe.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经准备好`主动`和`被动`Zabbix代理，所以现在可以向它们添加一些主机。通过Zabbix前端设置来监控主机与Zabbix代理的操作方式与直接从Zabbix服务器监控的方式大致相同。不过，后端和设计完全改变，我将在本步骤的*如何工作…*部分详细解释。
- en: Getting ready
  id: totrans-155
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: Make sure you have your `lar-book-proxy-passive` passive proxy and your `lar-book-proxy-active`
    active proxy ready by following all of the previous recipes in this chapter.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 请确保按照本章之前的所有步骤准备好`lar-book-proxy-passive`被动代理和`lar-book-proxy-active`主动代理。
- en: You will also need your Zabbix server and at least two hosts to monitor. We
    will be using `lar-book-agent_snmp` and `lar-book-agent` in the example, but any
    host with an active and passive Zabbix agent will work.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 您还需要准备好Zabbix服务器和至少两个需要监控的主机。我们将在示例中使用`lar-book-agent_snmp`和`lar-book-agent`，但任何具有主动和被动Zabbix代理的主机都可以使用。
- en: How to do it…
  id: totrans-158
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: We’ll configure a host on both our active and our passive proxies to show you
    what the difference is between these two. Let’s start with the passive proxy.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在我们的主动代理和被动代理上配置一个主机，向您展示这两者之间的区别。让我们从被动代理开始。
- en: Passive proxy
  id: totrans-160
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 被动代理
- en: Let’s start this recipe by logging in to our Zabbix frontend and navigating
    to **Data collection** | **Hosts**.
  id: totrans-161
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们通过登录Zabbix前端并导航到**数据收集** | **主机**来开始这一步骤。
- en: Let’s add the host with the passive agent to our passive proxy. In my case,
    this is the `lar-book-agent_snmp` host.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们将具有被动代理的主机添加到我们的被动代理中。在我的情况下，这个主机是`lar-book-agent_snmp`。
- en: 'Click on the `lar-book-agent_snmp` host and change the `lar-book-proxy-passive`,
    as in the following screenshot:'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 点击`lar-book-agent_snmp`主机，并将其更改为`lar-book-proxy-passive`，如下所示的截图：
- en: '![Figure 8.13 – Configuration | Hosts, Edit host page for host lar-book-agent_snmp](img/B19803_08_13.jpg)'
  id: totrans-164
  prefs: []
  type: TYPE_IMG
  zh: '![图 8.13 – 配置 | 主机，编辑主机页面，主机 lar-book-agent_snmp](img/B19803_08_13.jpg)'
- en: Figure 8.13 – Configuration | Hosts, Edit host page for host lar-book-agent_snmp
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 图 8.13 – 配置 | 主机，编辑主机页面，主机 lar-book-agent_snmp
- en: Now, click on the blue **Update** button. Our host will now be monitored by
    the Zabbix proxy.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，点击蓝色的**更新**按钮。我们的主机现在将由Zabbix代理进行监控。
- en: Important note
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: Due to the configuration update interval and the fact we just switched the monitoring
    source to a proxy, we can see the SNMP icon turn gray temporarily.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 由于配置更新的时间间隔，以及我们刚刚将监控源切换到代理，我们可以看到SNMP图标暂时变灰。
- en: Active proxy
  id: totrans-169
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 主动代理
- en: Let’s do the same for our other **lar-book-agent** host by navigating back to
    **Data** **collection|** **Hosts**.
  id: totrans-170
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对我们的另一个**lar-book-agent**主机执行相同操作，通过导航回**数据收集** | **主机**。
- en: 'Click on the **lar-book-agent** host and change the **Monitored by proxy**
    field to **lar-book-proxy-active**, as in the following screenshot:'
  id: totrans-171
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**lar-book-agent**主机，并将**由代理监控**字段更改为**lar-book-proxy-active**，如下所示的截图：
- en: '![Figure 8.14 – Configuration | Hosts, Edit host page for host lar-book-agent](img/B19803_08_14.jpg)'
  id: totrans-172
  prefs: []
  type: TYPE_IMG
  zh: '![图 8.14 – 配置 | 主机，编辑主机页面，主机 lar-book-agent](img/B19803_08_14.jpg)'
- en: Figure 8.14 – Configuration | Hosts, Edit host page for host lar-book-agent
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 图 8.14 – 配置 | 主机，编辑主机页面，主机 lar-book-agent
- en: Now, click on the blue **Update** button.
  id: totrans-174
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，点击蓝色的**更新**按钮。
- en: 'On the CLI of our monitored Linux host, the **lar-book-agent** host, execute
    the following command:'
  id: totrans-175
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在我们被监控的Linux主机（**lar-book-agent**主机）的CLI中，执行以下命令：
- en: '[PRE17]'
  id: totrans-176
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'When working with an active Zabbix agent, we need to make sure to add the proxy
    IP address to the following line:'
  id: totrans-177
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当使用主动Zabbix代理时，我们需要确保将代理的IP地址添加到以下行中：
- en: '[PRE18]'
  id: totrans-178
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE18]'
- en: Our host will now be monitored by the Zabbix proxy once the proxy has received
    its new configuration data and the agent has executed the checks.
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦代理收到新的配置数据并且代理执行了检查，我们的主机将会被Zabbix代理监控。
- en: How it works…
  id: totrans-180
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何工作…
- en: Monitoring hosts with a Zabbix proxy in passive or active mode works in the
    same way from the frontend. We merely configure which host is monitored by which
    proxy in our Zabbix frontend, and it will be done.
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 使用Zabbix代理在被动或主动模式下监控主机，在前端的操作是相同的。我们只需在Zabbix前端配置哪个主机由哪个代理进行监控，其他工作就会自动完成。
- en: 'Let’s take a look at how our **Simple Network Management Protocol** (**SNMP**)
    agent is now monitored by the passive proxy:'
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来看一下我们的**简单网络管理协议**（**SNMP**）代理现在如何被被动代理监控：
- en: '![Figure 8.15 – A completely passive Zabbix setup with proxy](img/B19803_08_15.jpg)'
  id: totrans-183
  prefs: []
  type: TYPE_IMG
  zh: '![图 8.15 – 一个完全被动的 Zabbix 配置，带代理](img/B19803_08_15.jpg)'
- en: Figure 8.15 – A completely passive Zabbix setup with proxy
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 图 8.15 – 一个完全被动的 Zabbix 配置，带代理
- en: Our passive Zabbix proxy now collects data from our SNMP agent, and after this
    is collected, the Zabbix server collects this data from our Zabbix proxy. Sounds
    like a whole process already, right?
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的被动 Zabbix 代理现在从 SNMP 代理那里收集数据，收集完成后，Zabbix 服务器从 Zabbix 代理那里获取这些数据。听起来已经是一个完整的过程了，对吧？
- en: 'Let’s look at our active Zabbix proxy setup:'
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来看一下我们的激活 Zabbix 代理配置：
- en: '![Figure 8.16 – A completely active Zabbix setup with proxy](img/B19803_08_16.jpg)'
  id: totrans-187
  prefs: []
  type: TYPE_IMG
  zh: '![图 8.16 – 一个完全激活的 Zabbix 配置，带代理](img/B19803_08_16.jpg)'
- en: Figure 8.16 – A completely active Zabbix setup with proxy
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 图 8.16 – 一个完全激活的 Zabbix 配置，带代理
- en: Our active Zabbix proxy receives data from our active Zabbix agent and then
    sends this data to our Zabbix server. We’ve eliminated the part where the passive
    proxy is waiting to be polled in this proxy setup altogether. Furthermore, we
    only have to allow firewall connections going toward the proxy or server, meaning
    this could provide additional security.
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的激活 Zabbix 代理接收来自激活 Zabbix 代理的数据，然后将这些数据发送到 Zabbix 服务器。在这个代理配置中，我们已经完全消除了被动代理等待轮询的部分。此外，我们只需要允许防火墙连接到代理或服务器，这也可以提供额外的安全性。
- en: 'There are some of the reasons I would always recommend working with active
    proxies – and even active agents – as much as possible. If we look at the following
    screenshot, we can see a setup that you might see at a company:'
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 这是我总是建议尽可能使用激活代理——甚至是激活代理——的一些原因。如果我们看一下下面的截图，我们会看到一个你可能在公司中看到的配置：
- en: '![Figure 8.17 – An active Zabbix proxy setup with different monitored types](img/B19803_08_17.jpg)'
  id: totrans-191
  prefs: []
  type: TYPE_IMG
  zh: '![图 8.17 – 一个带有不同监控类型的激活 Zabbix 代理配置](img/B19803_08_17.jpg)'
- en: Figure 8.17 – An active Zabbix proxy setup with different monitored types
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 图 8.17 – 一个带有不同监控类型的激活 Zabbix 代理配置
- en: Fortunately, we have the option of using a lot of different combinations of
    setups. It is perfectly possible – and even logical – to combine your checks from
    a proxy, just as much as it would be with a Zabbix server. We can monitor all
    types from our proxy, whether it’s a Zabbix agent, SNMP, or even **Java Management
    Extensions** (**JMX**) and the **Intelligent Platform Management** **Interface**
    (**IPMI**).
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 幸运的是，我们可以使用多种不同组合的配置选项。通过代理组合你的检查是完全可能的——甚至是合逻辑的——就像直接通过 Zabbix 服务器一样。我们可以通过代理监控所有类型的设备，无论是
    Zabbix 代理、SNMP，甚至是**Java 管理扩展**（**JMX**）和**智能平台管理** **接口**（**IPMI**）。
- en: Tip
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 提示
- en: When designing a new Zabbix hosting infrastructure, start with adding proxies
    to your design if possible. This way, you don’t have to change a lot later. It’s
    easy to add and change proxies, but it’s harder to go from just using the Zabbix
    server to using Zabbix proxies in your design.
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 在设计新的 Zabbix 托管基础设施时，尽可能在设计中添加代理。这样，你以后就不必做太多更改。添加和更改代理很容易，但如果只使用 Zabbix 服务器，想要改为在设计中使用
    Zabbix 代理就会更加困难。
- en: There’s more…
  id: totrans-196
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多内容……
- en: We now have a solid setup with some proxies up and running. We’ve figured out
    the difference between active and passive proxies and how they affect monitoring.
    But why would we build a setup like this? Well, Zabbix proxies are great for many
    environments – not just the big ones, but even sometimes in the smallest ones.
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经有了一个稳定的配置，代理也已经启动运行。我们已经弄清楚了激活和被动代理的区别，以及它们如何影响监控。那么，我们为什么要构建这样的配置呢？其实，Zabbix
    代理适用于许多环境——不仅仅是大型环境，有时在小型环境中也同样有效。
- en: We can use Zabbix proxies to offload polling and preprocessing from our main
    Zabbix server, thus keeping the server clear for handling data such as when writing
    to the Zabbix database.
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用 Zabbix 代理将轮询和预处理任务从主 Zabbix 服务器上分担出去，从而让服务器保持清晰，以便处理诸如写入 Zabbix 数据库之类的数据。
- en: We can use Zabbix proxies to monitor offsite locations, such as when you’re
    a **managed service provider** (**MSP**) and want to monitor a customer network.
    We simply place a proxy on-site and monitor it. We can use industry-standard techniques
    such as monitoring through a **virtual private network** (**VPN**) or simply set
    up a connection using built-in Zabbix proxy encryption.
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用 Zabbix 代理来监控远程站点，例如当你是一个**托管服务提供商**（**MSP**）并希望监控客户网络时。我们只需在现场放置一个代理进行监控。我们可以使用行业标准的技术，比如通过**虚拟专用网络**（**VPN**）进行监控，或者直接通过
    Zabbix 代理的内置加密设置连接。
- en: When the connection to the remote site goes down, our proxy will keep collecting
    data on-site and send this to our Zabbix server when the connection comes back
    up. By default, Zabbix will keep the data on disk for one hour, which is specified
    by the `ProxyOfflineBuffer=` parameter in the Zabbix proxy configuration file.
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 当与远程站点的连接断开时，我们的代理将继续在本地收集数据，并在连接恢复时将其发送到我们的 Zabbix 服务器。默认情况下，Zabbix 会将数据保存在磁盘上一个小时，这由
    Zabbix 代理配置文件中的 `ProxyOfflineBuffer=` 参数指定。
- en: We can also use the Zabbix proxy to bypass firewall complications. When we place
    a proxy behind a firewall in a monitored network, we only need one firewall rule
    between the Zabbix server and the Zabbix proxy. Our Zabbix proxy then monitors
    the different hosts and sends the collected data in one stream to the Zabbix server.
    This means we don’t have to poke holes for ports `161`, `162`, `10050`, and `10051`,
    Java, API ports, and many more through our firewall.
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还可以使用 Zabbix 代理绕过防火墙问题。当我们将代理放置在受监控网络中的防火墙后面时，只需要在 Zabbix 服务器和 Zabbix 代理之间配置一个防火墙规则。然后，我们的
    Zabbix 代理监控不同的主机，并将收集到的数据以单一流的形式发送到 Zabbix 服务器。这意味着我们不需要在防火墙上为端口 `161`、`162`、`10050`、`10051`、Java、API
    端口等开通端口。
- en: With this, you have loads of options to use Zabbix proxies already.
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 通过这个，你已经有了很多选项可以使用 Zabbix 代理。
- en: See also
  id: totrans-203
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另见
- en: 'Check out this interesting blog post about some more cool hidden benefits of
    Zabbix proxies: [https://blog.zabbix.com/hidden-benefits-of-zabbix-proxy/9359/](https://blog.zabbix.com/hidden-benefits-of-zabbix-proxy/9359/).'
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 查看这篇有趣的博客文章，了解 Zabbix 代理的一些更多隐藏好处：[https://blog.zabbix.com/hidden-benefits-of-zabbix-proxy/9359/](https://blog.zabbix.com/hidden-benefits-of-zabbix-proxy/9359/)。
- en: Encrypting your Zabbix proxy connection with pre-shared keys
  id: totrans-205
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用预共享密钥加密你的 Zabbix 代理连接
- en: For additional security, it’s recommended to make sure your Zabbix proxy is
    connecting over the network encrypted. The simple reason for this is to make sure
    that any possible intruder on your network cannot see all the data sent between
    the Zabbix server and Zabbix proxy from your network in plain text.
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 为了提高安全性，建议确保 Zabbix 代理通过加密的网络连接。这样做的简单原因是，确保网络中的任何潜在入侵者无法以明文形式看到 Zabbix 服务器和
    Zabbix 代理之间传输的所有数据。
- en: Image you have macros configured with important passwords. These macros will
    flow over the network in plain text if you do not encrypt the connection between
    the Zabbix server and proxy.
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 想象一下，如果你配置了包含重要密码的宏。如果没有加密 Zabbix 服务器与代理之间的连接，这些宏将以明文形式通过网络传输。
- en: Getting ready
  id: totrans-208
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: For this recipe, we will need our Zabbix server and a connected proxy of either
    the passive or active type.
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 对于本食谱，我们需要一个 Zabbix 服务器和一个连接的代理，可以是被动或主动类型。
- en: How to do it…
  id: totrans-210
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作……
- en: 'Let’s get started on the CLI of our proxy, where we need to make some configuration
    changes:'
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们开始在代理的命令行界面（CLI）上进行一些配置更改：
- en: 'First things first, let’s edit the Zabbix proxy configuration file:'
  id: totrans-212
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，让我们编辑 Zabbix 代理的配置文件：
- en: '[PRE19]'
  id: totrans-213
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'We will find the following and edit the following variables:'
  id: totrans-214
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们将找到以下内容并编辑以下变量：
- en: '[PRE20]'
  id: totrans-215
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE20]'
- en: '`TLSConnect` is used for active proxy connections and `TLSAccept` is used for
    passive proxy connections. It is smart, however, to set both parameters at all
    times, as then we will always ensure an encrypted connection.'
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: '`TLSConnect` 用于主动代理连接，而 `TLSAccept` 用于被动代理连接。然而，始终设置这两个参数是明智的，因为这样我们可以始终确保加密连接。'
- en: Important note
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: In the example, I’m setting the identity to the hostname of the proxy for simplicity’s
    sake. If the PSK identity and PSK itself are a unique combination every time,
    you can use anything though. *Do not* use the same PSK with a different identity,
    as this will result in errors and the proxy won’t connect.
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个例子中，为了简化起见，我将身份设置为代理的主机名。如果每次 PSK 身份和 PSK 本身都是唯一组合，你也可以使用任何值。*不要*使用相同的 PSK
    但更改身份，这样会导致错误，代理将无法连接。
- en: Save your proxy configuration file and exit.
  id: totrans-219
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 保存你的代理配置文件并退出。
- en: 'We will create a new file, the `/etc/zabbix` folder, which contains the PSK.
    To do that, execute the following command:'
  id: totrans-220
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 我们将创建一个新的文件，位于 `/etc/zabbix` 文件夹中，包含 PSK。为此，执行以下命令：
- en: '[PRE21]'
  id: totrans-221
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'This will create the file with the new pre-shared key. You can make sure it
    was created correctly with the following command:'
  id: totrans-222
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这将创建包含新预共享密钥的文件。你可以通过以下命令确保它已正确创建：
- en: '[PRE22]'
  id: totrans-223
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'It should look as follows:'
  id: totrans-224
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 它应该如下所示：
- en: '![Figure 8.18 – Created proxy PSK file](img/B19803_08_18.jpg)'
  id: totrans-225
  prefs: []
  type: TYPE_IMG
  zh: '![图 8.18 – 创建的代理 PSK 文件](img/B19803_08_18.jpg)'
- en: Figure 8.18 – Created proxy PSK file
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 图 8.18 – 创建的代理 PSK 文件
- en: 'Now, let’s make sure only the Zabbix proxy can read this PSK file:'
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE23]'
  id: totrans-228
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: '3. Restart your Zabbix proxy to make the changes take effect:'
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE24]'
  id: totrans-230
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 4. Now, it’s time to move on to the frontend. Navigate to **Administration**
    | **Proxies**.
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
- en: 'You will probably see that the proxy is no longer connected and the **Last
    seen (age)** value is getting higher. Edit the proxy on which you are adding encryption
    and go to the encryption tab. For an active proxy, it will look as follows:'
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 8.19 – lar-book-proxy-active PSK settings](img/B19803_08_19.jpg)'
  id: totrans-233
  prefs: []
  type: TYPE_IMG
- en: Figure 8.19 – lar-book-proxy-active PSK settings
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
- en: For a passive proxy, make sure **Connections to proxy** is set to **PSK**, and
    for the active proxy, select **PSK** as the option we’d like to use for **Connections**
    **from proxy**.
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
- en: Fill in the **PSK identity** and **PSK** as set up in *Steps 2* and *6* of this
    recipe.
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
- en: 5. Now, click on **Update** and your proxy should connect again.
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
- en: How it works…
  id: totrans-238
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: After setting up your active or passive Zabbix proxy encryption, not much will
    change. Your proxy will still connect to or be connected from the Zabbix server.
    The thing that changes is that the Zabbix server and proxy will now use encryption
    when communicating with each other.
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 8.20 – Encrypted proxies connections](img/B19803_08_20.jpg)'
  id: totrans-240
  prefs: []
  type: TYPE_IMG
- en: Figure 8.20 – Encrypted proxies connections
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
- en: The method we have used utilizes a pre-shared key-based encryption method. Although
    this provides a relatively safe method of adding encryption to these connections,
    there’s always the chance of a pre-shared key leaking somehow. Since a pre-shared
    key never expires, that would create a permanent hole in your security that only
    patches whenever you are going to change the pre-shared key. In practice, this
    is usually never.
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
- en: One of the benefits of utilizing certificate-based encryption methods is that
    certificates expire. This does mean for an added layer of security, but at the
    same time it means that you will be regularly forced to update your encryption
    settings or risk losing the connection between the Zabbix proxy and server.
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
- en: Setting up Zabbix proxy load balancing
  id: totrans-244
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Long awaited and finally implemented, Zabbix has finally introduced proxy high
    availability and load balancing. This completes all the required functionality
    to truly make Zabbix a product that is highly reliable even in cases of outages.
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
- en: It also means that Zabbix is now a lot easier to scale, utilizing the load balancing
    on proxies to divide the load between available proxies.
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  id: totrans-247
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: For this recipe, we will utilize the active and passive proxy we’ve set up in
    earlier recipes in this chapter. Besides that, all we need is the Zabbix setup
    and a host to monitor for which we will use a Zabbix agent in active mode.
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
- en: How to do it…
  id: totrans-249
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Let’s get started on the frontend, where we should already have two (or more)
    Zabbix proxies available:'
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
- en: Navigate to **Administration** | **Proxies** and make sure you have two proxies
    available. It does not matter what the proxy mode is, as we can combine active
    and passive proxies in proxy load balancing.
  id: totrans-251
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 8.21 – Administration | Proxies page with the two proxies we will
    use for load balancing](img/B19803_08_21.jpg)'
  id: totrans-252
  prefs: []
  type: TYPE_IMG
- en: Figure 8.21 – Administration | Proxies page with the two proxies we will use
    for load balancing
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
- en: Next, let’s navigate to **Administration** | **Proxy groups** to define our
    first proxy load balancing and high availability group.
  id: totrans-254
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'In the top-right corner, click on the **Create proxy group** button. This will
    open the following pop-up window:'
  id: totrans-255
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 8.22 – Administration | Proxy groups, New proxy group popup](img/B19803_08_22.jpg)'
  id: totrans-256
  prefs: []
  type: TYPE_IMG
- en: Figure 8.22 – Administration | Proxy groups, New proxy group popup
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
- en: Here, we basically just have to give the proxy group a name and we will be done
    for now. Let’s name this group **lar-proxy-group**. Then, we can press the **Add**
    button to finish adding this proxy group.
  id: totrans-258
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Now, navigate back to **Administration** | **Proxies**, and let’s add our two
    proxies to the new proxy group.
  id: totrans-259
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on a proxy and add it to the proxy group by filling in the **Proxy group**
    parameter or by using the **Select** button.
  id: totrans-260
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 8.23 – Administration | Proxies, add proxy group to a proxy](img/B19803_08_23.jpg)'
  id: totrans-261
  prefs: []
  type: TYPE_IMG
- en: Figure 8.23 – Administration | Proxies, add proxy group to a proxy
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
- en: Do this for all proxies we want to add to the group.
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
- en: Also, make sure to fill in the **Address for active agents** parameter as when
    we work with active agents, we’ll need to know where to connect to on each proxy.
  id: totrans-264
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'We’ll do the same for our second proxy:'
  id: totrans-265
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 8.24 – Administration | Proxies, add proxy group to a proxy](img/B19803_08_24.jpg)'
  id: totrans-266
  prefs: []
  type: TYPE_IMG
- en: Figure 8.24 – Administration | Proxies, add proxy group to a proxy
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
- en: 'Now, let’s add a new host to be monitored by this proxy group. I will use a
    new host called **lar-book-proxyha-test**. When creating the host, make sure to
    add the **Proxy group** parameter like this:'
  id: totrans-268
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 8.25 – Data collection | Hosts, Edit or create host popup window](img/B19803_08_25.jpg)'
  id: totrans-269
  prefs: []
  type: TYPE_IMG
- en: Figure 8.25 – Data collection | Hosts, Edit or create host popup window
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
- en: 'In the agent configuration file for the host we are adding, let’s change some
    parameters. If it’s a Linux host, edit the configuration file:'
  id: totrans-271
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE25]'
  id: totrans-272
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'Now, edit the following two parameters:'
  id: totrans-273
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE26]'
  id: totrans-274
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE26]'
- en: With two proxies active and configured as part of a proxy group and a host monitored
    by that proxy, we are now done and ready to load balance our hosts between the
    proxies
  id: totrans-275
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: How it works…
  id: totrans-276
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: As you can see, proxy load balancing and high availability is a pretty straightforward
    setup and there’s not much complexity to work with. We simply add our proxies
    to a group and Zabbix will take care of the rest for us.
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
- en: In our case, we’ve added two proxies to the group, an active and a passive proxy.
    These two proxies will now work together, load balancing the load of the hosts
    between them.
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 8.26 – Our proxy group working normally](img/B19803_08_26.jpg)'
  id: totrans-279
  prefs: []
  type: TYPE_IMG
- en: Figure 8.26 – Our proxy group working normally
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
- en: Our active agent `lar-book-proxyha-test` host will connect to one of the two
    proxies on the defined IP address under the `ServerActive=` parameter. Because
    we entered **Address for active agents** under the proxy configuration in the
    Zabbix frontend, all the proxies in the proxy group also know the address for
    redirecting checks to in case load balancing needs to be done.
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
- en: Our Zabbix proxy group will now make sure to load balance the hosts, even if
    they are in active mode. In case there is an outage, the proxy group will need
    to recalculate the load balancing.
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 8.27 – Our proxy group after an outage](img/B19803_08_27.jpg)'
  id: totrans-283
  prefs: []
  type: TYPE_IMG
- en: Figure 8.27 – Our proxy group after an outage
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
- en: The host will now be redirected to a different proxy in the proxy group for
    further monitoring. This is why we do not even need any floating IPs or virtual
    IPs to redirect active agent checks, as our proxies can take care of it for us.
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
- en: Do keep the proxy parameters in mind, however, to make sure our proxy group
    is functioning optimally. If you have 4 proxies in a proxy group and set `1`,
    make sure to configure every single proxy in the group to be able to handle the
    full load of all hosts in the proxy group. Otherwise, your monitoring performance
    will still be compromised.
  id: totrans-286
  prefs: []
  type: TYPE_NORMAL
- en: This is also true the other way around; if we have a proxy group of 4 proxies
    and we set `3`, the whole proxy group will go down if we lose just two proxies.
    Make sure to find the correct balance between the number of proxies in a group
    and the minimum proxies required for the group to handle the full load of monitoring.
  id: totrans-287
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 8.28 – Our proxy group settings](img/B19803_08_28.jpg)'
  id: totrans-288
  prefs: []
  type: TYPE_IMG
- en: Figure 8.28 – Our proxy group settings
  id: totrans-289
  prefs: []
  type: TYPE_NORMAL
- en: Furthermore, we can change the **Failover period** value to determine how fast
    a failover needs to happen.
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
- en: Important note
  id: totrans-291
  prefs: []
  type: TYPE_NORMAL
- en: Keep in mind that if you’re working with certain other checks, you might need
    to do some additional configuration with things such as floating IPs or virtual
    IPs. For a check with SNMP traps, for example, you might need to send your traps
    to all proxies in a group if supported by your device, adding additional load
    to the network.
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
- en: Using discovery with Zabbix proxies
  id: totrans-293
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In [*Chapter 7*](B19803_07.xhtml#_idTextAnchor1318), *Using Discovery for Automatic
    Creation*, we talked about Zabbix and discovery. It is a very good idea to edit
    your discovery rules if you followed along with that chapter. Let’s see how this
    would work in this recipe.
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  id: totrans-295
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You’ll need to have finished [*Chapter 7*](B19803_07.xhtml#_idTextAnchor1318),
    *Using Discovery for Automatic Creation*, or have some discovery rules and active
    agent autoregistration set up.
  id: totrans-296
  prefs: []
  type: TYPE_NORMAL
- en: I’ll be using the `lar-book-lnx-agent-auto`, `lar-book-disc-lnx`, and `lar-book-disc-win`
    hosts in this example. We will also need our Zabbix server.
  id: totrans-297
  prefs: []
  type: TYPE_NORMAL
- en: How to do it…
  id: totrans-298
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Let’s start with editing our discovery rule and then move on to editing our
    active agent to autoregister to the proxy.
  id: totrans-299
  prefs: []
  type: TYPE_NORMAL
- en: Discovery rules
  id: totrans-300
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Starting with Zabbix discovery rules, let’s look at how to make sure we do
    this from the Zabbix proxy:'
  id: totrans-301
  prefs: []
  type: TYPE_NORMAL
- en: 'Log in to the CLI of **lar-book-disc-lnx** and edit the **/etc/zabbix/ zabbix_agent2.conf**
    file. Edit the following lines to include our Zabbix proxy address:'
  id: totrans-302
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE27]'
  id: totrans-303
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'Restart your Zabbix agent by executing the following command:'
  id: totrans-304
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE28]'
  id: totrans-305
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'Now, make sure to log in to **lar-book-disc-win** and edit the **C:\Program
    Files\Zabbix agent\zabbix_agent2** file. Edit the following lines to include our
    Zabbix proxy address:'
  id: totrans-306
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE29]'
  id: totrans-307
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE29]'
- en: Important note
  id: totrans-308
  prefs: []
  type: TYPE_NORMAL
- en: On the **ServerActive** lines in our configuration files, make sure to only
    include the Zabbix proxy we want to send data to. The Zabbix agent will actively
    try to send data to all our Zabbix proxies or Zabbix servers listed here, so we
    should only list the one we want to use.
  id: totrans-309
  prefs: []
  type: TYPE_NORMAL
- en: 'Restart your Zabbix agent by executing the following commands in the Windows
    command line:'
  id: totrans-310
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE30]'
  id: totrans-311
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE30]'
- en: Or, use the Windows **Services** window to restart the agent.
  id: totrans-312
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Next, navigate to **Data collection** | **Hosts** and delete the discovered
    hosts:'
  id: totrans-313
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE31]'
  id: totrans-314
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE31]'
- en: We do this to prevent duplicate hosts.
  id: totrans-315
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Now, navigate to **Data collection** | **Discovery**.
  id: totrans-316
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Click on **Discover Zabbix Agent hosts** and change the **Discovered by proxy**
    field, as shown in the following screenshot:'
  id: totrans-317
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 8.29 – Alerts | Actions, Discovery Actions by proxy lar-book-proxy-active](img/8.29.jpg)'
  id: totrans-318
  prefs: []
  type: TYPE_IMG
- en: Figure 8.29 – Alerts | Actions, Discovery Actions by proxy lar-book-proxy-active
  id: totrans-319
  prefs: []
  type: TYPE_NORMAL
- en: Click on the blue **Update** button, and that’s all there is to editing your
    discovery rule to be monitored by a proxy.
  id: totrans-320
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'You can now check out your newly discovered hosts under **Configuration** |
    **Hosts** and see that they are monitored by the proxy:'
  id: totrans-321
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: "![Figure 8.30 – Data collection | Hosts page with our discovered ho\uFEFFsts](img/B19803_08_30.jpg)"
  id: totrans-322
  prefs: []
  type: TYPE_IMG
- en: Figure 8.30 – Data collection | Hosts page with our discovered hosts
  id: totrans-323
  prefs: []
  type: TYPE_NORMAL
- en: Active agent autoregistration
  id: totrans-324
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Moving on to active agent autoregistration, let’s see how we can do this from
    our Zabbix proxy:'
  id: totrans-325
  prefs: []
  type: TYPE_NORMAL
- en: Start by navigating to `lar-book-lnx-agent-auto` host CLI.
  id: totrans-326
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Edit the Zabbix agent configuration file with the following command:'
  id: totrans-327
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE32]'
  id: totrans-328
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'Make sure to edit the following line to the Zabbix proxy address instead of
    the Zabbix server address:'
  id: totrans-329
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE33]'
  id: totrans-330
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'Restart the Zabbix agent:'
  id: totrans-331
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE34]'
  id: totrans-332
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE34]'
- en: 'We can now see our host autoregister to the Zabbix proxy instead of the Zabbix
    server:'
  id: totrans-333
  prefs: []
  type: TYPE_NORMAL
- en: "![Figure 8.31 – Data collection | Hosts\uFEFF\uFEFF page with our two auto\
    \ \uFEFFregistered hosts](img/B19803_08_30.jpg)"
  id: totrans-334
  prefs: []
  type: TYPE_IMG
- en: Figure 8.31 – Data collection | Hosts page with our two auto registered hosts
  id: totrans-335
  prefs: []
  type: TYPE_NORMAL
- en: How it works…
  id: totrans-336
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Discovery with a Zabbix proxy works the same as discovery with a Zabbix server.
    The only thing that changes is the location of where we are registering to or
    discovering from.
  id: totrans-337
  prefs: []
  type: TYPE_NORMAL
- en: If you want to learn more about the process of discovery and autoregistration,
    check out [*Chapter 7*](B19803_07.xhtml#_idTextAnchor1318), *Using Discovery for
    Automatic Creation*, if you haven’t already.
  id: totrans-338
  prefs: []
  type: TYPE_NORMAL
- en: Monitoring your Zabbix proxies
  id: totrans-339
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: A lot of Zabbix users – or even monitoring users in general – forget a very
    important part of their monitoring. They forget to monitor the monitoring infrastructure.
    I want to make sure that when you set up Zabbix proxies, you also know how to
    monitor the health of these proxies.
  id: totrans-340
  prefs: []
  type: TYPE_NORMAL
- en: Let’s check out how to do so in this recipe.
  id: totrans-341
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  id: totrans-342
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: For this recipe, we will need our new `lar-book-proxy-active` Zabbix proxy.
    We will also need our Zabbix server to monitor the Zabbix proxy.
  id: totrans-343
  prefs: []
  type: TYPE_NORMAL
- en: How to do it…
  id: totrans-344
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: We are going to build some monitoring in our Zabbix frontend, but we’ll also
    check the integrated monitoring options for Zabbix proxies. Let’s start by building
    our own.
  id: totrans-345
  prefs: []
  type: TYPE_NORMAL
- en: Monitoring the proxy with Zabbix
  id: totrans-346
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'We can monitor our Zabbix proxy with the Zabbix proxy itself to make sure we
    know exactly what’s going on:'
  id: totrans-347
  prefs: []
  type: TYPE_NORMAL
- en: Let’s start by logging in to our **lar-book-proxy-active** Zabbix proxy CLI.
  id: totrans-348
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Issue the following command to install Zabbix agent 2 for RHEL-based systems:'
  id: totrans-349
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE35]'
  id: totrans-350
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE35]'
- en: 'For Ubuntu, issue this command:'
  id: totrans-351
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE36]'
  id: totrans-352
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE36]'
- en: 'Edit the Zabbix agent configuration file by issuing the following command:'
  id: totrans-353
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE37]'
  id: totrans-354
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE37]'
- en: 'Edit the following lines to point toward **localhost**:'
  id: totrans-355
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE38]'
  id: totrans-356
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE38]'
- en: 'Also, make sure to add the hostname to the Zabbix agent file:'
  id: totrans-357
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE39]'
  id: totrans-358
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE39]'
- en: Now, log in to the Zabbix frontend and navigate to **Data collection** | **Hosts**.
  id: totrans-359
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Click on the blue **Create host** button in the top-right corner and add the
    following host:'
  id: totrans-360
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 8.32 – Data collection | Hosts, Create host popup, lar-book-proxy-active](img/B19803_08_32.jpg)'
  id: totrans-361
  prefs: []
  type: TYPE_IMG
- en: Figure 8.32 – Data collection | Hosts, Create host popup, lar-book-proxy-active
  id: totrans-362
  prefs: []
  type: TYPE_NORMAL
- en: Take extra care at the **Monitored by proxy** field – we want to monitor from
    the proxy because we are doing Zabbix internal checks, which need to be handled
    by the Zabbix daemon that received this configuration.
  id: totrans-363
  prefs: []
  type: TYPE_NORMAL
- en: 'Before clicking the blue **Add** button, make sure to add **Templates**. Add
    the following templates to the host:'
  id: totrans-364
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: "![Figure 8.33 – Data collection | Hosts, Create host popup temp\uFEFFlates\
    \ for host lar-book-proxy-active](img/B19803_08_33.jpg)"
  id: totrans-365
  prefs: []
  type: TYPE_IMG
- en: Figure 8.33 – Data collection | Hosts, Create host popup templates for host
    lar-book-proxy-active
  id: totrans-366
  prefs: []
  type: TYPE_NORMAL
- en: We can now click the blue **Add** button to create the host.
  id: totrans-367
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Now, navigate to **Monitoring** | **Latest data** and add the following filters:'
  id: totrans-368
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 8.34 – Monitoring | Latest data page with filters, host lar-book-proxy-active](img/B19803_08_34.jpg)'
  id: totrans-369
  prefs: []
  type: TYPE_IMG
- en: Figure 8.34 – Monitoring | Latest data page with filters, host lar-book-proxy-active
  id: totrans-370
  prefs: []
  type: TYPE_NORMAL
- en: 'We can now see our Zabbix proxy statistics, such as the number of processed
    values and utilization of certain internal processes:'
  id: totrans-371
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 8.35 – Monitoring | Latest data page with data from our Zabbix proxy](img/B19803_08_35.jpg)'
  id: totrans-372
  prefs: []
  type: TYPE_IMG
- en: Figure 8.35 – Monitoring | Latest data page with data from our Zabbix proxy
  id: totrans-373
  prefs: []
  type: TYPE_NORMAL
- en: Monitoring the proxy remotely from our Zabbix server
  id: totrans-374
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'We can also monitor our Zabbix proxy remotely from our Zabbix server, so, let’s
    see how that works:'
  id: totrans-375
  prefs: []
  type: TYPE_NORMAL
- en: 'Let’s start by logging in to our **lar-book-proxy-active** host CLI and editing
    the following file:'
  id: totrans-376
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE40]'
  id: totrans-377
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE40]'
- en: 'Edit the following lines to match your Zabbix server address (every node in
    a Zabbix server HA cluster):'
  id: totrans-378
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE41]'
  id: totrans-379
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE41]'
- en: 'Also, edit the following file:'
  id: totrans-380
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE42]'
  id: totrans-381
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE42]'
- en: 'Edit the following line to match your Zabbix server address:'
  id: totrans-382
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE43]'
  id: totrans-383
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE43]'
- en: Now, navigate to the Zabbix frontend and go to **Data collection** | **Hosts**.
  id: totrans-384
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Click on the blue **Create host** button in the top-right corner and add the
    following host:'
  id: totrans-385
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: "![Figure 8.36 – Data collection | Hosts, Create host po\uFEFFpup, lar-book-proxy-active_remotely](img/B19803_08_36.jpg)"
  id: totrans-386
  prefs: []
  type: TYPE_IMG
- en: Figure 8.36 – Data collection | Hosts, Create host popup, lar-book-proxy-active_remotely
  id: totrans-387
  prefs: []
  type: TYPE_NORMAL
- en: 'Before clicking the blue **Add** button, make sure to add the right **Templates**.
    Add the following templates to the host:'
  id: totrans-388
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 8.37 – Data collection | Hosts, create new host popup templates, lar-book-proxy-active_
    remotely](img/B19803_08_37.jpg)'
  id: totrans-389
  prefs: []
  type: TYPE_IMG
- en: Figure 8.37 – Data collection | Hosts, create new host popup templates, lar-book-proxy-active_
    remotely
  id: totrans-390
  prefs: []
  type: TYPE_NORMAL
- en: We can now click the blue `lar-book-proxy-active_remotely` host.
  id: totrans-391
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Go to **Macros** and add the following two macros:'
  id: totrans-392
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 8.38 – Data collection | Hosts, Edit host popup, Macros tab, lar-book-proxy-active_remotely](img/B19803_08_38.jpg)'
  id: totrans-393
  prefs: []
  type: TYPE_IMG
- en: Figure 8.38 – Data collection | Hosts, Edit host popup, Macros tab, lar-book-proxy-active_remotely
  id: totrans-394
  prefs: []
  type: TYPE_NORMAL
- en: Now, click on the blue **Update** button, and that’s it for this host.
  id: totrans-395
  prefs: []
  type: TYPE_NORMAL
- en: 'If we navigate to **Monitoring** | **Latest data** and check the items for
    this host, we can see data coming in:'
  id: totrans-396
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 8.39 – Monitoring | Latest data page for host lar-book-proxy-active_remotely](img/B19803_08_39.jpg)'
  id: totrans-397
  prefs: []
  type: TYPE_IMG
- en: Figure 8.39 – Monitoring | Latest data page for host lar-book-proxy-active_remotely
  id: totrans-398
  prefs: []
  type: TYPE_NORMAL
- en: Monitoring the proxy from the Zabbix frontend
  id: totrans-399
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Let’s start this off by navigating to **Administration** | **Queue**.
  id: totrans-400
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Use the drop-down menu to go to **Queue overview** **by proxy**:'
  id: totrans-401
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 8.40 – Administration | Queue menu](img/B19803_08_40.jpg)'
  id: totrans-402
  prefs: []
  type: TYPE_IMG
- en: Figure 8.40 – Administration | Queue menu
  id: totrans-403
  prefs: []
  type: TYPE_NORMAL
- en: 'This will bring us to the page shown in the following screenshot:'
  id: totrans-404
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 8.41 – Administration | Queue overview by proxy page](img/B19803_08_41.jpg)'
  id: totrans-405
  prefs: []
  type: TYPE_IMG
- en: Figure 8.41 – Administration | Queue overview by proxy page
  id: totrans-406
  prefs: []
  type: TYPE_NORMAL
- en: Let’s see how this works in the next section of our recipe.
  id: totrans-407
  prefs: []
  type: TYPE_NORMAL
- en: How it works…
  id: totrans-408
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Monitoring your Zabbix proxies is an important task, thus we need to make sure
    that whenever we add a new Zabbix proxy, we are taking care of it like we would
    any other host.
  id: totrans-409
  prefs: []
  type: TYPE_NORMAL
- en: Monitoring the proxy with Zabbix
  id: totrans-410
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: By adding the Zabbix proxy as a host, we can make sure the Linux system that
    is running our Zabbix proxy is healthy. We also make sure that the Zabbix proxy
    applications running on this server are in good health.
  id: totrans-411
  prefs: []
  type: TYPE_NORMAL
- en: Besides having the right triggers in these templates, we also get a load of
    options to troubleshoot issues with the Zabbix proxy.
  id: totrans-412
  prefs: []
  type: TYPE_NORMAL
- en: The Zabbix proxy works just like the Zabbix server when it comes to monitoring.
    This means that just as with the Zabbix server, we need to keep the proxies in
    great health by tweaking the Zabbix proxy configuration file to our needs.
  id: totrans-413
  prefs: []
  type: TYPE_NORMAL
- en: Scaling your proxies becomes a lot easier once you figure out what’s going on
    with them. So, this is why we make sure to always monitor them. We monitor them
    from the proxy itself to make sure that we get the right information with the
    Zabbix internal checks.
  id: totrans-414
  prefs: []
  type: TYPE_NORMAL
- en: Monitoring the proxy remotely from our Zabbix server
  id: totrans-415
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Now, when we monitor with **Remote Zabbix proxy health**, things go a little
    differently. Instead of doing our checks from the Zabbix proxy itself, we do them
    remotely from the Zabbix server by defining the Zabbix proxy address and port
    in the macros. The Zabbix internal check type will still be used for this, executing
    the checks from the Zabbix server to the Zabbix proxy remotely in this case.
  id: totrans-416
  prefs: []
  type: TYPE_NORMAL
- en: On top of that, it is of course still recommended that we also keep our Zabbix
    agent running in either passive or active mode.
  id: totrans-417
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 8.42 – Zabbix agent running on Zabbix proxy monitored by Zabbix server](img/B19803_08_42.jpg)'
  id: totrans-418
  prefs: []
  type: TYPE_IMG
- en: Figure 8.42 – Zabbix agent running on Zabbix proxy monitored by Zabbix server
  id: totrans-419
  prefs: []
  type: TYPE_NORMAL
- en: This way, our Zabbix server is the one requesting and receiving information.
    Even when the proxy is having issues, the checks will still be done by the Zabbix
    server.
  id: totrans-420
  prefs: []
  type: TYPE_NORMAL
- en: We can use this template as a way to keep a closer eye on our proxy if we suspect
    issues with internal checks being performed locally, or we can use this template
    to bypass certain firewall setups. Both are valid reasons.
  id: totrans-421
  prefs: []
  type: TYPE_NORMAL
- en: Monitoring the proxy from the Zabbix frontend
  id: totrans-422
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: From the frontend, we can use the **Administration** | **Queue** page to monitor
    our proxies. The Zabbix **Queue** page is an important page, but a lot of new
    users neither know nor fully utilize this page.
  id: totrans-423
  prefs: []
  type: TYPE_NORMAL
- en: 'When a part of Zabbix starts performing poorly, such as our example Zabbix
    proxy here, that’s when we can see stuff happening in the queue. There are six
    options on the Zabbix **Queue** page:'
  id: totrans-424
  prefs: []
  type: TYPE_NORMAL
- en: '**5 seconds**'
  id: totrans-425
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**10 seconds**'
  id: totrans-426
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**30 seconds**'
  id: totrans-427
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**1 minute**'
  id: totrans-428
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**5 minutes**'
  id: totrans-429
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**More than** **10 minutes**'
  id: totrans-430
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: What the options in the **Queue** mean is that the Zabbix proxy has been waiting
    on receiving a value that’s configured more than expected. I would state that
    anything up to one minute doesn’t necessarily have to be an issue, but this depends
    on the type of check. The **5 minutes** or **More than 10 minutes** options can
    mean serious performance issues with your Zabbix proxy, and you would have to
    troubleshoot this issue. Make sure to keep a good eye on the Zabbix queue when
    you suspect issues, which are also included as triggers in the templates we added
    to monitor our Zabbix proxies.
  id: totrans-431
  prefs: []
  type: TYPE_NORMAL
