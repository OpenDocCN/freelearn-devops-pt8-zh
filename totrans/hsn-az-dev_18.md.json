["```\n{\n    \"location\": \"West Europe\",\n    \"tags\": {\n        \"$type\": \"Microsoft.WindowsAzure.Management.Common.Storage.CasePreservedDictionary, Microsoft.WindowsAzure.Management.Common.Storage\"\n    },\n    \"properties\": {\n        \"name\": \"handsonazure-euw-webapp-autoscale\",\n        \"enabled\": true,\n        \"targetResourceUri\": \"/subscriptions/1a2d5d1c-dee5-4deb-a93a-366cc83feb46/resourceGroups/handsonazure-euw-rg/providers/Microsoft.Web/serverfarms/handsonazure-euw-appserviceplan\",\n        \"profiles\": [\n            {\n                \"name\": \"Auto created scale condition\",\n                \"capacity\": {\n                    \"minimum\": \"1\",\n                    \"maximum\": \"10\",\n                    \"default\": \"1\"\n                },\n                \"rules\": [\n                    {\n                        \"scaleAction\": {\n                            \"direction\": \"Increase\",\n                            \"type\": \"ChangeCount\",\n                            \"value\": \"1\",\n                            \"cooldown\": \"PT5M\"\n                        },\n                        \"metricTrigger\": {\n                            \"metricName\": \"CpuPercentage\",\n                            \"metricNamespace\": \"\",\n                            \"metricResourceUri\": \"/subscriptions/1a2d5d1c-dee5-4deb-a93a-366cc83feb46/resourceGroups/handsonazure-euw-rg/providers/Microsoft.Web/serverFarms/handsonazure-euw-appserviceplan\",\n                            \"operator\": \"GreaterThan\",\n                            \"statistic\": \"Average\",\n                            \"threshold\": 70,\n                            \"timeAggregation\": \"Average\",\n                            \"timeGrain\": \"PT1M\",\n                            \"timeWindow\": \"PT10M\"\n                        }\n                    }\n                ]\n            }\n        ],\n        \"notifications\": [],\n        \"targetResourceLocation\": \"West Europe\"\n    },\n    \"id\": \"/subscriptions/1a2d5d1c-dee5-4deb-a93a-366cc83feb46/resourceGroups/handsonazure-euw-rg/providers/microsoft.insights/autoscalesettings/handsonazure-euw-webapp-autoscale\",\n    \"name\": \"handsonazure-euw-webapp-autoscale\",\n    \"type\": \"Microsoft.Insights/autoscaleSettings\"\n}\n```", "```\npublic const int DefaultMaxWorkers = 100;\npublic const int DefaultBusyWorkerLoadFactor = 80;\npublic const double DefaultMaxBusyWorkerRatio = 0.8;\npublic const int DefaultFreeWorkerLoadFactor = 20;\npublic const double DefaultMaxFreeWorkerRatio = 0.3;\npublic static readonly TimeSpan DefaultWorkerUpdateInterval = TimeSpan.FromSeconds(10);\npublic static readonly TimeSpan DefaultWorkerPingInterval = TimeSpan.FromSeconds(300);\npublic static readonly TimeSpan DefaultScaleCheckInterval = TimeSpan.FromSeconds(10);\npublic static readonly TimeSpan DefaultManagerCheckInterval = TimeSpan.FromSeconds(60);\npublic static readonly TimeSpan DefaultStaleWorkerCheckInterval = TimeSpan.FromSeconds(120);\n```", "```\n\"resources\":[\n    {\n      \"type\":\"Microsoft.Compute/virtualMachineScaleSets\",\n      \"apiVersion\":\"2017-03-30\",\n      \"name\":\"[parameters('<scale-set-name>')]\",\n      \"location\":\"[resourceGroup().location]\",\n      \"sku\":{\n        \"name\":\"[parameters('<sku>')]\",\n        \"tier\":\"<tier>\",\n        \"capacity\":\"[parameters('<capacity>')]\"\n      }\n    }\n]\n```", "```\nvar vmScaleSet = AzureClient.VirtualMachineScaleSets.GetById(ScaleSetId);\nvar capacity = (int)Math.Min(MaximumNodeCount, vmScaleSet.Capacity + 1);\nvmScaleSet.Update().WithCapacity(capacity).Apply(); \n```", "```\nvmScaleSet.update().withCapacity(capacity).apply();\n```", "```\nawait client.ClusterManager.DeactivateNodeAsync(node.NodeName, NodeDeactivationIntent.RemoveNode);\nscaleSet.Update().WithCapacity(capacity).Apply(); \nawait client.ClusterManager.RemoveNodeStateAsync(node.NodeName);\n```", "```\nusing (var client = new FabricClient())\n{\n    var node = (await client.QueryManager.GetNodeListAsync())\n        .Where(n => n.NodeType.Equals(NodeTypeToScale, StringComparison.OrdinalIgnoreCase))\n        .Where(n => n.NodeStatus == System.Fabric.Query.NodeStatus.Up)\n        .OrderByDescending(n =>\n        {\n            var instanceIdIndex = n.NodeName.LastIndexOf(\"_\");\n            var instanceIdString = n.NodeName.Substring(instanceIdIndex + 1);\n            return int.Parse(instanceIdString);\n        })\n        .FirstOrDefault();\n}\n```"]