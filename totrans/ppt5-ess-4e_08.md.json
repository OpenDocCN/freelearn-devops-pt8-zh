["```\nclass site::mysql_server01 { \n  class { 'mysql': server_id => '1', ... } \n} \nclass site::mysql_server02 { \n  class { 'mysql': server_id => '2', ... } \n} \n...  \nclass site::mysql_aux01 { \n  class { 'mysql': server_id => '101', ... } \n} \n# and so forth ... \n```", "```\nnode 'xndp12-sql09.example.net' { \n  class { 'site::mysql_server': \n    mysql_server_id => '103', \n  } \n} \n```", "```\nclass site::mysql_server( \n  String $mysql_server_id \n) { \n  class { 'mysql':  \n    server_id => $mysql_server_id,  \n    ... \n  } \n} \n```", "```\n$mysql_config_table = { \n  'xndp12-sql01.example.net' => { \n    server_id   => '1', \n    buffer_pool => '12G', \n  }, \n  ... \n} \n```", "```\nclass site::mysql_server( \n  $config = $mysql_config_table[$::certname] \n) { \n  class { 'mysql': \n    server_id => $config['server_id'],  \n    ... \n  } \n} \n```", "```\n$crypt_key_xndp12 = 'xneFGl%23ndfAWLN34a0t9w30.zges4'\n$config = {\n'xndp12-stor01.example.net' => { $crypt_key =>\n  $crypt_key_xndp12, … },\n'xndp12-stor02.example.net' => { $crypt_key =>\n  $crypt_key_xndp12, … },\n 'xndp12-sql01.example.net' => { $crypt_key =>\n  $crypt_key_xndp12, … },\n...\n}\n```", "```\n[mysql]\nbuffer_pool=15G\nlog_file_size=500M\n...\n[xndp12-sql01.example.net]\npsk=xneFGl%23ndfAWLN34a0t9w30.zges4\nserver_id=1\n```", "```\n# /etc/puppetlabs/puppet/hiera.yaml\n:backends:\n  - yaml\n:hierarchy: \n  - node/%{::clientcert}\n  - role/%{::role}\n  - location/%{::datacenter}\n  - common\n:yaml: \n  :datadir: /etc/puppetlabs/code/environments/%{::environment}/hieradata\n```", "```\n# /etc/puppetlabs/code/environments/production/hieradata/common.yaml\nreporting::server: stats01.example.net\nreporting::server_port: 9033\n```", "```\n# /etc/puppetlabs/code/environments/production/hieradata/role/postgres.yaml \nreporting::plugins: \n  - iops \n  - cpuload \n```", "```\n#/etc/puppetlabs/.../hieradata/node/stats01.example.net.yaml \nreporting::server: localhost \n```", "```\n$plugins = hiera('reporting::plugins') \n```", "```\n$plugins = hiera('reporting::plugins', []) \n```", "```\n$plugins = hiera('reporting::plugins', [], 'global-overrides') \n```", "```\n@@cacti_device { $::fqdn: \n  ip => hiera('snmp_address', $::ipaddress), \n} \n```", "```\n$max_threads = hiera('max_threads') \nif $max_threads !~ Integer { \n    fail \"The max_threads value must be an integer number\" \n}\n```", "```\ndefine logrotate::config( \n  Integer $rotations = hiera('logrotate::rotations', 7) \n) { \n  # regular define code here \n} \n```", "```\nlogrotate::config { '/var/log/cacti.log': rotations => 12 } \n```", "```\n# node/cacti01.example.net.yaml \ncacti::redirect: false \n```", "```\n# common.yaml \napache::default_ssl_cert: /etc/puppetlabs/puppet/ssl/certs/%{::clientcert}.pem \napache::default_ssl_key: /etc/puppetlabs/puppet/ssl/private_keys/%{::clientcert}.pem \napache::purge_configs: false \n```", "```\n# role/httpsec.yaml \napache::purge_configs: true \napache::server_tokens: Minimal \napache::server_signature: off \napache::trace_enable: off \n```", "```\n# node/sec02-sxf12.yaml \napache::default_ssl_cert: /opt/ssl/custom.pem \napache::default_ssl_key: /opt/ssl/custom.key \napache::trace_enable: extended \n```", "```\n$nat_port = hiera('site::net::nat_port') \n@@firewall { \"650 forward port ${nat_port} to ${::fqdn}\": \n  proto       => 'tcp', \n  dport       => $nat_port,  \n  destination => hiera('site::net::nat_ip'), \n  jump        => 'DNAT', \n  todest      => $::ipaddress, \n  tag         => hiera('site::net::firewall_segment'), \n}\n```", "```\n# stor03.example.net.yaml \nsite::net::nat_port: 12020 \n... \n# role/storage.yaml \nsite::net::nat_ip: 198.58.119.126 \n... \n# location/portland.yaml \nsite::net::firewall_segment: segment04 \n... \n```", "```\n@@site::maintenance_script {\"/usr/local/bin/maint-${::fqdn}\": \n  address => hiera('site::net::nat_ip'), \n  port    => hiera('site::net::nat_port'), \n}\n```", "```\nif hiera('site::net::nat_ip', false) { \n  @@firewall { \"200 NAT ports for ${::fqdn}\": \n    port        => hiera_array('site::net::nat_ports'), \n    proto       => 'tcp', \n    destination => hiera('site::net::nat_ip'), \n    jump        => 'DNAT', \n    todest      => $::ipaddress, \n  } \n} \n```", "```\nif hiera('feature_flag_A', undef) != undef { ... }\n```", "```\n# common.yaml \nnat_ports: 22 \n```", "```\n# role-webserver.yaml \nnat_ports: [ 80, 443 ] \n```", "```\n# tbt-backend-test.example.net.yaml \nnat_ports:  \n  - 5973 \n  - 5974 \n  - 5975 \n  - 6630 \n```", "```\n# common.yaml \nhaproxy_settings: \n  log_socket: /dev/log \n  log_level: info \n  user: haproxy \n  group: haproxy \n  daemon: true \n```", "```\n# role/webserver.yaml \nhaproxy_settings: \n  user: www-data \n  group: www-data \n```", "```\n{ 'log_socket' =>'/dev/log', 'log_level' => 'info', \n'user' => 'www-data', 'group' => 'www-data', 'daemon' => true } \n```", "```\n# role/webserver.yaml \nhaproxy::user: www-data \nhaproxy::group: www-data \n```", "```\nif hiera('use_caching_proxy', false) { \n    include nginx \n} \n```", "```\nroot@puppetmaster # hiera -c /etc/puppetlabs/code/hiera.yaml demo::atoms  \n```", "```\nroot@puppetmaster # hiera -c /etc/puppetlabs/code/hiera.yaml demo::atoms \n::clientcert=int01-web01.example.net ::role=webserver ::location=ny  \n```", "```\nroot@puppetmaster # hiera -d -c ...\n```", "```\nservices: \n  apache2: \n    enable: true \n    ensure: running \n  syslog-ng: \n    enable: false \n```", "```\n$resource_hash.each |$res_title,$attributes| { \n  service { $res_title: \n    ensure => $attributes['ensure'], \n    enable => $attributes['enable'], \n  } \n} \n```", "```\n$resource_hash = hiera('services', {}) \ncreate_resources('service', $resource_hash) \n```", "```\npuppet resource -y service \n```", "```\nhiera_include('classes') \n```", "```\n# common.yaml \nclasses: \n  - ssh \n  - syslog \n... \n# role-webserver.yaml \nclasses: \n  - apache \n  - logrotate \n  - syslog \n```", "```\n# /etc/puppetlabs/puppet/hiera.yaml \n:backends: \n  - yaml \n:hierarchy:  \n  - node/%{::clientcert} \n  - role/%{::role} \n  - location/%{::datacenter} \n  - common \n:yaml:  \n  :datadir: /etc/puppetlabs/code/environments/%{::environment\n     }/hieradata \n```", "```\n# /etc/puppetlabs/code/environments/production/hiera.yaml \n--- \nversion: 5 \n# specify the default datadir and yaml backend \ndefaults: \n  datadir: hieradata \n  data_hash: yaml_data \n# build hierarchy. Note that paths need the file ending! \nhierarchy: \n  - name: \"Per-node data\" \n    path: \"node/%{::clientcert}.yaml\" \n  - name: \"Per-role data\" \n    path: \"role/%{::role}.yaml\" \n  - name: \"Per-location data\" \n    path: \"location/%{::datacenter}.yaml\" \n  - name: \"Common data\" \n    path: 'common.yaml' \n\n```", "```\nroot@puppetmaster # hiera -c /etc/puppetlabs/code/hiera.yaml demo::atoms \n::clientcert=int01-web01.example.net ::role=webserver ::location=ny  \n```", "```\nroot@puppetmaster\n**# puppet lookup demo::atoms -node int01-web01.example.net**  \n```"]