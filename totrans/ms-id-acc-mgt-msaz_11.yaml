- en: Deploying Additional Applications on Azure AD
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Providing the correct authentication to your application is essential, particularly
    if you want to allow authentication only to users from your **Azure Active Directory**
    (**Azure AD**), or from any other Azure AD. Azure AD provides two concepts to
    give your users the required authentication.
  prefs: []
  type: TYPE_NORMAL
- en: In this chapter, we'll introduce you to the idea of single-tenant and multi-tenant
    applications and what's different between them. Furthermore, we'll discuss roles
    and claims in a single-tenant app that we move to a multi-tenant app, and you
    can test the transition between the two models. We'll also deploy a multi-tenant
    app that uses OpenID Connect. In all the different labs, you'll learn what you
    need from an application vendor to integrate the application into your environment.
    You'll be able to ask the right questions and take your deployment in the right
    direction.
  prefs: []
  type: TYPE_NORMAL
- en: 'We''ll divide the chapter into the following sections:'
  prefs: []
  type: TYPE_NORMAL
- en: Preparing your lab environment
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: What defines a single- and multi-tenant application
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deploying a single-tenant application, including roles and claims
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Moving the single-tenant app to a multi-tenant scenario
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deploying a multi-tenant app with OpenID Connect
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: As usual, we'll do a lot of practical tasks. Let's organize the prerequisites
    to handle the labs in your demo environment.
  prefs: []
  type: TYPE_NORMAL
- en: Preparing your lab environment
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In this chapter, you can use any machine that has Visual Studio installed.
    In our case, we installed it on the **YD1APP01** server. This should be your perfect
    development environment. You will use **Azure AD1: yourdomain1.onmicrosoft.com** during
    this lab, and one test guest user from another tenant and a test user from any
    other Azure AD to test multi-tenant applications. Furthermore, you will need to
    use the code examples from the code package to use it in your Visual Studio to
    configure and run the applications:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/321ae050-3c23-482d-b159-b3ec9dee23a6.png)'
  prefs: []
  type: TYPE_IMG
- en: Lab environment overview
  prefs: []
  type: TYPE_NORMAL
- en: After preparing our lab environment, we can directly jump into the first section
    of the chapter, which describes single- and multi-tenant applications.
  prefs: []
  type: TYPE_NORMAL
- en: What defines single- and multi-tenant applications
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'On the face of it, there''s a simple explanation of what a single-tenant or
    a multi-tenant application is. We can say that single-tenant apps are only available
    in the tenant they were registered. On the other hand, multi-tenant apps are available
    to users in both your home tenant and in other tenants:'
  prefs: []
  type: TYPE_NORMAL
- en: Single-tenant applications are primarily used if you want to isolate your application
    from everyone and provide access only to your internal users
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Multi-tenant applications are used when you want to provide the app to your
    internal staff, guest users, and Microsoft personal account users in a collaboration
    scenario, for example
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: We highly recommend reviewing [https://docs.microsoft.com/en-us/azure/active-directory/develop/howto-convert-app-to-be-multi-tenant](https://docs.microsoft.com/en-us/azure/active-directory/develop/howto-convert-app-to-be-multi-tenant) to
    find the differences between the endpoints that are used in both scenarios.
  prefs: []
  type: TYPE_NORMAL
- en: Deploying a single-tenant application including roles and claims
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this section, we'll deploy Microsoft's sample, `WebApp-RoleClaims-DotNet.sln`,
    as a single-tenant configuration. We start with this setting and move the application
    to a multi-tenant application in the next part. The tracker app provides the following
    application roles, which we can use to test the role/claims topic. First, we can
    use the admin role to perform all actions. With the writer role, you're empowered
    to create tasks in the application. To change the status of a task, you can assign
    the approver role. To view the tasks and their associated states, we can map the
    observer role.
  prefs: []
  type: TYPE_NORMAL
- en: 'With the following steps, we''ll configure Azure AD for our application:'
  prefs: []
  type: TYPE_NORMAL
- en: Open the Azure portal: [https://portal.azure.com](https://portal.azure.com).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Navigate to the Azure AD blade.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click App registrations.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Create +New application registration:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/3f10a3df-0769-4df3-8350-4503999fe439.png)'
  prefs: []
  type: TYPE_IMG
- en: New app registration
  prefs: []
  type: TYPE_NORMAL
- en: Provide a name.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Add the Sign-on URL, `https://localhost:44322/`:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/274b99c5-148c-4a79-aebe-5f5710fd5145.png)'
  prefs: []
  type: TYPE_IMG
- en: App settings dialog
  prefs: []
  type: TYPE_NORMAL
- en: 'Provide the App ID URI in the format `https://181031inovitdemos.onmicrosoft.com/trackerapp`:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/4fca9888-4de1-4769-9ede-1d97fe7cd514.png)'
  prefs: []
  type: TYPE_IMG
- en: Additional app settings dialog
  prefs: []
  type: TYPE_NORMAL
- en: Provide the Logout URL, `https://localhost:44322/Account/EndSession`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Leave the other settings as the defaults:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/9f925c98-ff94-432a-8f05-d1db1cce812c.png)'
  prefs: []
  type: TYPE_IMG
- en: Logout URL configuration
  prefs: []
  type: TYPE_NORMAL
- en: 'Check the Reply URLs; they need to look like the following figure:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/3470ac25-8ff0-4f14-afaa-2d5e0062f70b.png)'
  prefs: []
  type: TYPE_IMG
- en: Reply URL configuration
  prefs: []
  type: TYPE_NORMAL
- en: 'Under Required permissions, click Add:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/b9e65e6f-fee7-4614-98d0-45f2154ced9f.png)'
  prefs: []
  type: TYPE_IMG
- en: Permission configuration
  prefs: []
  type: TYPE_NORMAL
- en: 'Select the Microsoft Graph API:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/f3e3880a-5283-43fc-95e3-337cfdc0ab49.png)'
  prefs: []
  type: TYPE_IMG
- en: Choosing the Microsoft Graph API
  prefs: []
  type: TYPE_NORMAL
- en: 'Select the following permissions:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Sign in and read user profile
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Read directory data
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: You can use the Microsoft Graph permission reference [https://docs.microsoft.com/en-us/graph/permissions-reference](https://docs.microsoft.com/en-us/graph/permissions-reference) to
    learn more about this topic.
  prefs: []
  type: TYPE_NORMAL
- en: 'The selected permissions should look like the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/993ae024-549e-4cc1-96ab-63068e0f2a5a.png)'
  prefs: []
  type: TYPE_IMG
- en: Assigning the two needed scopes
  prefs: []
  type: TYPE_NORMAL
- en: Save and click Grant Permissions.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Open the Manifest of the application:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/5e3e52c9-7fef-4ced-92ce-b553ce48eabb.png)'
  prefs: []
  type: TYPE_IMG
- en: Configuring the Manifest
  prefs: []
  type: TYPE_NORMAL
- en: Configure the roles of the following figure in the `appRoles` section with the
    configuration code of the code package.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'The result in your manifest should look like this:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/a5da5ced-2d13-41f7-8c48-8bcb825ee0c6.png)'
  prefs: []
  type: TYPE_IMG
- en: Adding the app roles
  prefs: []
  type: TYPE_NORMAL
- en: Save the manifest.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Copy the app ID to Notepad.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Navigate to your Azure AD tenant's Properties.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Copy the Directory ID to Notepad:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/48e45e78-417a-4e42-a631-614b3af06e1e.png)'
  prefs: []
  type: TYPE_IMG
- en: Getting the Directory ID
  prefs: []
  type: TYPE_NORMAL
- en: Open your Visual Studio and the solution file from the code package named `WebApp-RoleClaims-DotNet.sln`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Open the `web.config` file of the solution and do the following:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Enter the app ID on the `ida:ClientId` value
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Enter the Directory ID on the `ida:TenantId` value
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The following result is expected:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/22631920-bbad-4e8e-a429-c1e6d02731e6.png)'
  prefs: []
  type: TYPE_IMG
- en: Modifying the web.config file
  prefs: []
  type: TYPE_NORMAL
- en: Press *F5* in Visual Studio to build and run the application.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Sign in as Don Hall:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/ea70e42f-22a3-452c-bb09-33b32b7a9642.png)'
  prefs: []
  type: TYPE_IMG
- en: Testing sign-in functionality
  prefs: []
  type: TYPE_NORMAL
- en: Consent to application.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Click Accept:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/fd545083-2507-40fa-87c6-defb7d36b5f8.png)'
  prefs: []
  type: TYPE_IMG
- en: OAuth consent
  prefs: []
  type: TYPE_NORMAL
- en: 'Go back to Visual Studio and review the role implementation in the `TaskController.cs`
    file:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/96278c91-08e9-48c6-8492-8eee967bd5d0.png)'
  prefs: []
  type: TYPE_IMG
- en: Reviewing the role implementation in the code
  prefs: []
  type: TYPE_NORMAL
- en: Don Hall will be signed in.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Click About to view the actual roles; no roles are assigned:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/e180636a-415d-425a-aa9b-67aae44f8cfa.png)'
  prefs: []
  type: TYPE_IMG
- en: Viewing the actual app roles
  prefs: []
  type: TYPE_NORMAL
- en: Go back to your application and assign roles to several test users.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Click Add user:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/7dfc7226-0619-4db6-93dc-ef84baa60037.png)'
  prefs: []
  type: TYPE_IMG
- en: Assigning users and groups
  prefs: []
  type: TYPE_NORMAL
- en: 'Assign the role you want to test:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/e53bbc8f-8210-437b-b448-91fe5d9c0749.png)'
  prefs: []
  type: TYPE_IMG
- en: Select the appropriate role
  prefs: []
  type: TYPE_NORMAL
- en: 'In my case, I used two accounts, as you can see in the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/a4efd321-9742-47ec-8d31-59255d8ffe86.png)'
  prefs: []
  type: TYPE_IMG
- en: Role assignment result
  prefs: []
  type: TYPE_NORMAL
- en: 'Try to sign in with your users; I started with Ye Xu (Admin role assigned):'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/48f7c0ec-df67-4d9a-9a97-1a58b63c7b22.png)'
  prefs: []
  type: TYPE_IMG
- en: Testing sign-in functionality
  prefs: []
  type: TYPE_NORMAL
- en: 'Accept the user consent:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/1cd1d7a4-48e3-4315-a1e8-7ed31bf35625.png)'
  prefs: []
  type: TYPE_IMG
- en: Checking and approving the OAuth consent
  prefs: []
  type: TYPE_NORMAL
- en: 'Click About to view the assigned role. We can see Ye Xu has the Admin role
    assigned:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/3c09d085-339c-4df8-9b2b-38919f191073.png)'
  prefs: []
  type: TYPE_IMG
- en: Check your current role
  prefs: []
  type: TYPE_NORMAL
- en: 'Try the user with a different role, in my case Dan Jump (Writer role assigned):'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/cda0ddcf-0ce4-4939-8fe6-1a0473409cd4.png)'
  prefs: []
  type: TYPE_IMG
- en: Testing with the second test user
  prefs: []
  type: TYPE_NORMAL
- en: 'Accept the consent:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/7b1e8a0f-9c0f-47d7-8dce-66d39b134d7f.png)'
  prefs: []
  type: TYPE_IMG
- en: Checking and approving the OAuth consent
  prefs: []
  type: TYPE_NORMAL
- en: 'You will see the `Writer` role is correctly assigned:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/958dec4a-c3b9-48de-ac19-618d0a8c7426.png)'
  prefs: []
  type: TYPE_IMG
- en: View your current role
  prefs: []
  type: TYPE_NORMAL
- en: 'Try to sign in with a user that''s not part of the organization (one from another
    Azure AD):'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/6dd9e320-8a99-4995-9fdc-7c0812330afc.png)'
  prefs: []
  type: TYPE_IMG
- en: Test with a guest user account
  prefs: []
  type: TYPE_NORMAL
- en: 'Remember, we''re using a single-tenant configuration at the moment. The user
    gets an error message and can''t sign in:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/9c3f2d69-af11-455e-9910-adc0e578cd81.png)'
  prefs: []
  type: TYPE_IMG
- en: Review the error messages
  prefs: []
  type: TYPE_NORMAL
- en: Our demo app is running and working with role assignments for users of our own
    Azure AD tenant. Other users from other Azure AD tenants can't access the application
    right now.
  prefs: []
  type: TYPE_NORMAL
- en: 'We highly recommend working through the following guidance to customize claims
    in Azure AD for other protocols, such as SAML:'
  prefs: []
  type: TYPE_NORMAL
- en: Enterprise role app management: [https://docs.microsoft.com/en-us/azure/active-directory/develop/active-directory-enterprise-app-role-management](https://docs.microsoft.com/en-us/azure/active-directory/develop/active-directory-enterprise-app-role-management)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: SAML claims customization: [https://docs.microsoft.com/en-us/azure/active-directory/develop/active-directory-saml-claims-customization](https://docs.microsoft.com/en-us/azure/active-directory/develop/active-directory-saml-claims-customization)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Claims mapping: [https://docs.microsoft.com/en-us/azure/active-directory/develop/active-directory-claims-mapping](https://docs.microsoft.com/en-us/azure/active-directory/develop/active-directory-claims-mapping)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Configuring optional claims: [https://docs.microsoft.com/en-us/azure/active-directory/develop/active-directory-optional-claims](https://docs.microsoft.com/en-us/azure/active-directory/develop/active-directory-optional-claims)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Next, we'll move the app to a multi-tenant configuration.
  prefs: []
  type: TYPE_NORMAL
- en: Moving the single-tenant app to a multi-tenant scenario
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In this section, we''ll reconfigure the application to work as a multi-tenant
    application that you can use from other Azure AD tenants or a Microsoft personal
    account. With the following configuration we migrate the application:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Open the `Startup.cs` file in your solution:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Comment the `ConfigureAuth(app)` line
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Uncomment the `ConfigureMultitenantAuth(app)` line:'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](img/78eb8bf8-85e9-4657-867f-3ab6b683b34d.png)'
  prefs: []
  type: TYPE_IMG
- en: Modifying the code for multi-tenant usage
  prefs: []
  type: TYPE_NORMAL
- en: 'Change the `ida:TenantId` value to our Azure AD domain name:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/3e5c9f7d-fdf8-455c-8eb5-d51a164c3c3d.png)'
  prefs: []
  type: TYPE_IMG
- en: Changing the tenant ID
  prefs: []
  type: TYPE_NORMAL
- en: Press *F5* in Visual Studio to build and run the app.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'A new app will be available in Azure AD, but the users don''t have roles assigned:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/23b9da50-8496-4a1e-8c41-22ddcf322104.png)'
  prefs: []
  type: TYPE_IMG
- en: Check the role assignment for the newly created app
  prefs: []
  type: TYPE_NORMAL
- en: 'Reassign the roles to the users:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/d5ff0940-45f2-4223-91e5-d84593f6c204.png)'
  prefs: []
  type: TYPE_IMG
- en: Reassign roles
  prefs: []
  type: TYPE_NORMAL
- en: Test logging in with your users and check the application.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Test logging in with a user from another Azure AD or a Microsoft personal account.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'You should be able to log in:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/3278717c-6c88-48d1-a3cc-3651651a50dc.png)'
  prefs: []
  type: TYPE_IMG
- en: Check the login with the guest user account
  prefs: []
  type: TYPE_NORMAL
- en: You can find more information about this process at [https://docs.microsoft.com/en-us/azure/active-directory/develop/howto-convert-app-to-be-multi-tenant](https://docs.microsoft.com/en-us/azure/active-directory/develop/howto-convert-app-to-be-multi-tenant)[.](https://bit.ly/2zuyOT6)
  prefs: []
  type: TYPE_NORMAL
- en: In this section, we reconfigured the application to work as a multi-tenant app
    and we were victorious! Just note that you need to invite the Microsoft personal
    account as a guest user to work with your app. Next, we'll deploy another multi-tenant
    app with OpenID Connect to show you another implementation.
  prefs: []
  type: TYPE_NORMAL
- en: Deploying another multi-tenant app with OpenID Connect
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In this section, we''ll install a multi-tenant app that works with OpenID Connect
    as an authentication protocol. Working through this sample will help you to deploy
    the correct app registration inside your Azure AD, and you''ll learn what exactly
    needs to be configured in the application to use your Azure AD as an authentication
    provider:'
  prefs: []
  type: TYPE_NORMAL
- en: Open the Azure portal: [https://portal.azure.com](https://portal.azure.com).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Navigate to the Azure AD blade.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click App registrations.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Click +New application registration:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/cc84b054-5081-49b1-a4bc-13e383d82979.png)'
  prefs: []
  type: TYPE_IMG
- en: Create a new app registration
  prefs: []
  type: TYPE_NORMAL
- en: 'Provide an application name and the sign-on URL, `https://localhost:44302/`:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/9d14d671-95ca-4446-9798-344b6c7a5444.png)'
  prefs: []
  type: TYPE_IMG
- en: Provide the app properties
  prefs: []
  type: TYPE_NORMAL
- en: Copy the Application ID to Notepad.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Click Settings:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/a4b7750e-f5df-4ecd-baa3-dc4a11bbe0a7.png)'
  prefs: []
  type: TYPE_IMG
- en: Get the app configuration data
  prefs: []
  type: TYPE_NORMAL
- en: 'Provide the App ID URI in the format `https://181031inovitdemos.onmicrosoft.com/MTTodoWebApp`:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/e0488640-7171-4023-9e4a-ec7a77022380.png)'
  prefs: []
  type: TYPE_IMG
- en: Adding the App ID URI
  prefs: []
  type: TYPE_NORMAL
- en: Provide the Logout URL. The Home page URL should already be filled in.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Provide the URL in the format `https://localhost:44302/Account/EndSession`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Click Multi-tenanted: Yes to use the app as a multi-tenant application:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/039b1796-2bf5-4fba-b2e5-49858854508d.png)'
  prefs: []
  type: TYPE_IMG
- en: Using the multi-tenant option
  prefs: []
  type: TYPE_NORMAL
- en: 'Configure the correct permissions for the application. Click Add in the Required
    permissions section:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/6a2a2b32-4b82-43cd-95c2-a89b49dbb9b6.png)'
  prefs: []
  type: TYPE_IMG
- en: Grant the required permissions
  prefs: []
  type: TYPE_NORMAL
- en: 'Choose the Microsoft Graph API:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/66168d5c-2f69-4fcb-8748-cf3a22fa0328.png)'
  prefs: []
  type: TYPE_IMG
- en: Use the Microsoft Graph API
  prefs: []
  type: TYPE_NORMAL
- en: 'Assign the Sign in and read user profile permission:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/708cf974-ccc1-4f78-af66-f9b83c8eda46.png)'
  prefs: []
  type: TYPE_IMG
- en: Scope assignment
  prefs: []
  type: TYPE_NORMAL
- en: 'Click Grant permissions that you grant the permissions:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/6f804de4-4aac-46d8-a2ba-b0d95baf60b7.png)'
  prefs: []
  type: TYPE_IMG
- en: Grant permission dialog
  prefs: []
  type: TYPE_NORMAL
- en: Generate a key and call it `Key1`, with a duration of 2 years.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Click Save and copy the generated key value to Notepad:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/32a43412-6dab-4ead-a7f2-df0d441e1e7b.png)'
  prefs: []
  type: TYPE_IMG
- en: Secret key generation
  prefs: []
  type: TYPE_NORMAL
- en: Provide the Reply URLs.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'The following values need to be configured:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '`https://localhost:44302/`'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '`https://localhost:44302/Onboarding/ProcessCode`'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Here''s the configuration:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/6b3267b2-57c4-4640-84c7-79a5d8757dad.png)'
  prefs: []
  type: TYPE_IMG
- en: Reply URLs configuration
  prefs: []
  type: TYPE_NORMAL
- en: Open Visual Studio and the `WebApp-MultiTenant-OpenIDConnect-DotNet.sln` solution
    file.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Open the `web.config` file of the solution.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Copy the `Key1` value to the `ida:Password` section.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Copy the application ID to the `ida:ClientID` section.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'The modified code should look like this:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/f2b73cf2-c6de-4531-a8a2-e024fddd7c4f.png)'
  prefs: []
  type: TYPE_IMG
- en: Code modification result
  prefs: []
  type: TYPE_NORMAL
- en: Test the multi-tenant functionality. Press *F5* in Visual Studio to build the
    solution.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The application should start.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Click Sign Up:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/5961567e-117c-415a-9a62-9b8fa84b7396.png)'
  prefs: []
  type: TYPE_IMG
- en: App Sign up process
  prefs: []
  type: TYPE_NORMAL
- en: Sign Up with the user Don Hall to see the expected behavior.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'You are logged in, as you can see:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/e9a4b70e-8372-4786-a6a0-2e6f87bd4bd0.png)'
  prefs: []
  type: TYPE_IMG
- en: Successfully logging in to the application
  prefs: []
  type: TYPE_NORMAL
- en: 'Create a test item to test the app''s functionality. This isn''t the critical
    part; we focus on the authentication:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/bd78752e-7abe-43c0-b810-f436937115cf.png)'
  prefs: []
  type: TYPE_IMG
- en: Task creation dialog
  prefs: []
  type: TYPE_NORMAL
- en: Try to sign up with your an Azure B2B guest user; you'll need to consent as
    a user to the app.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Use the admin consent in the sign-up process:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/3de6857a-a23e-4b0b-b62a-481696cbd27a.png)'
  prefs: []
  type: TYPE_IMG
- en: Checking and accepting the OAuth consent
  prefs: []
  type: TYPE_NORMAL
- en: 'Accept the consent, and you should be logged in:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/96ea2bcc-b340-4e27-b113-80739779c5c2.png)'
  prefs: []
  type: TYPE_IMG
- en: Successfully logging in to the application
  prefs: []
  type: TYPE_NORMAL
- en: Test the application with another user from any Azure AD tenant and you'll get
    the same experience.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Well done! We also see with this multi-tenant application and OpenID Connect
    implementation.
  prefs: []
  type: TYPE_NORMAL
- en: 'A final tip: configure the Graph Explorer for your tenant to work with the
    Microsoft Graph API, and gather more information about this topic. Visit [https://developer.microsoft.com/en-us/graph/graph-explorer](https://developer.microsoft.com/en-us/graph/graph-explorer)[ and
    log in as a global admin to your Azure AD:](https://developer.microsoft.com/en-us/graph/graph-explorer)'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/01411cae-6f9c-4539-af6d-8c2477cbc9fa.png)'
  prefs: []
  type: TYPE_IMG
- en: Microsoft Graph Explorer application
  prefs: []
  type: TYPE_NORMAL
- en: With all this experience, you can now start analyzing and extending the solutions.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, you learned about single- and multi-tenant applications and
    the differences between them. You handled both application types in your environment.
    Furthermore, you discovered roles and claims in both application types, so now
    you can provide a **role-based access control** (**RBAC**) scenario. With all
    the other applications you've deployed, you now understand the differences between
    the different protocols, such as SAML2.0, OAuth2 with the different flow types,
    and OpenID Connect. You also learned how the **System for Cross-domain Identity
    Management** (**SCIM**) helps you to provision users (synchronizing) from Azure
    AD to the application.
  prefs: []
  type: TYPE_NORMAL
- en: In the next chapter, you'll learn how to provide a cloud-based identity management
    life cycle. We'll focus on how to provide secure and usable authentication and
    identity management to your users.
  prefs: []
  type: TYPE_NORMAL
