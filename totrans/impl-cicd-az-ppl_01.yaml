- en: '1'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '1'
- en: Understanding Azure Pipelines
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解 Azure Pipelines
- en: This book will be one of your favorite books in the Microsoft DevOps world as
    it provides a comprehensive guide to learning all about **Azure Pipelines** and
    will allow you to become an experienced Azure DevOps engineer. An Azure DevOps
    engineer is an individual who is responsible for designing and implementing **continuous
    integration and continuous deployment** (**CI/CD**) pipelines using the Azure
    Pipelines service, which is a component of **Azure DevOps**. Azure DevOps is a
    group of Microsoft services that help a project team achieve the project’s goal.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本书将成为你在 Microsoft DevOps 世界中的最爱之一，因为它提供了全面的指南，帮助你学习关于 **Azure Pipelines** 的所有知识，并使你成为一名经验丰富的
    Azure DevOps 工程师。Azure DevOps 工程师负责设计和实施使用 Azure Pipelines 服务的 **持续集成和持续部署**（**CI/CD**）管道，Azure
    Pipelines 是 **Azure DevOps** 的一个组件。Azure DevOps 是一组 Microsoft 服务，旨在帮助项目团队实现项目目标。
- en: 'In this chapter, you will be introduced to the CI/CD and Azure DevOps concepts
    in greater detail and will learn about the advantages of using Azure Pipelines
    to create CI/CD pipelines for the application deployment process. More specifically,
    in this chapter, you will learn about the following topics:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你将更详细地了解 CI/CD 和 Azure DevOps 的概念，并学习使用 Azure Pipelines 创建 CI/CD 管道以支持应用程序部署过程的优势。更具体地说，本章将介绍以下主题：
- en: What is CI/CD?
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 什么是 CI/CD？
- en: Introducing Azure DevOps
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 介绍 Azure DevOps
- en: Introducing Azure Pipelines and its components
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 介绍 Azure Pipelines 及其组件
- en: Comparing Azure Pipelines with other CI/CD tools
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将 Azure Pipelines 与其他 CI/CD 工具进行比较
- en: Setting up agent pools
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设置代理池
- en: Creating a **personal access** **token** (**PAT**)
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建 **个人访问** **令牌**（**PAT**）
- en: Setting up and updating self-host agents
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设置和更新自托管代理
- en: Setting up deployment groups
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设置部署组
- en: Technical requirements
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: You can find the code for this chapter at [https://github.com/PacktPublishing/Implementing-CI-CD-Using-Azure-Pipelines/tree/main/ch01](https://github.com/PacktPublishing/Implementing-CI-CD-Using-Azure-Pipelines/tree/main/ch01).
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在 [https://github.com/PacktPublishing/Implementing-CI-CD-Using-Azure-Pipelines/tree/main/ch01](https://github.com/PacktPublishing/Implementing-CI-CD-Using-Azure-Pipelines/tree/main/ch01)
    找到本章的代码。
- en: What is CI/CD?
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 什么是 CI/CD？
- en: CI/CD is the workflow process for automation development and deployment that
    developers should know about to improve their skills.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: CI/CD 是开发人员应了解的自动化开发和部署的工作流过程，旨在提升技能。
- en: CI is the workflow process for automating the process of building and testing
    code whenever a team member commits changes to Git, which is a form of version
    control that’s run on a source control repository platform such as Azure Repos,
    GitHub, GitLab, and others. CI creates a modern culture for all developers to
    share their code, including unit tests, by merging all changes into a shared version
    control repository after finishing a small task. CI runs based on committing code
    triggers to grab the latest code from the shared version control repository to
    build, test, and validate any branch that they commit. Using CI allows you to
    rapidly discover error code issues and correct them to ensure all developer code
    is of good quality.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: CI 是自动化构建和测试代码的工作流过程，每当团队成员提交更改到 Git 时，就会触发该过程。Git 是一种版本控制工具，运行在源代码控制平台上，如 Azure
    Repos、GitHub、GitLab 等。CI 为所有开发人员创造了一种现代化文化，鼓励大家分享代码，包括单元测试，通过将所有更改合并到共享版本控制库中，完成一个小任务后就提交。CI
    基于提交代码触发器运行，从共享版本控制库中获取最新代码来构建、测试并验证任何他们提交的分支。使用 CI 可以迅速发现错误代码问题并加以修正，确保所有开发人员的代码质量良好。
- en: CD involves automating the process of building, testing, configuring, and deploying
    from the CI workflow process to specific environments, such as QA, staging, and
    production.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: CD 涉及将 CI 工作流过程自动化，构建、测试、配置并部署到特定环境，如 QA、预生产和生产环境。
- en: 'This workflow is illustrated in the following figure:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 以下图示说明了此工作流：
- en: '![Figure 1.1 – CI/CD diagram](img/B18875_01_01.jpg)'
  id: totrans-19
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.1 – CI/CD 图示](img/B18875_01_01.jpg)'
- en: Figure 1.1 – CI/CD diagram
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.1 – CI/CD 图示
- en: CI/CD reduces human error and the routine operation of the manual build, test,
    and deploy stages for any developer. It helps the developer focus only on application
    development.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: CI/CD 减少了人为错误，并自动化了手动构建、测试和部署阶段，帮助开发人员专注于应用程序开发。
- en: This book will focus on the CI/CD tool **Azure Pipelines**, which is a comprehensive
    service for DevOps and a part of the ecosystem of services in **Azure DevOps**.
    Before we look at this further, let’s introduce Azure DevOps.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 本书将重点介绍CI/CD工具**Azure Pipelines**，这是一个综合性的DevOps服务，也是**Azure DevOps**生态系统中的一部分。在深入了解这一工具之前，我们先来介绍一下Azure
    DevOps。
- en: Introducing Azure DevOps
  id: totrans-23
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍Azure DevOps
- en: 'Many CI/CD tools are used to support modern software development, such as Azure
    Pipelines, GitLab CI/CD, GitHub Actions, and Bitbucket Pipelines. One of the most
    widely used is Azure Pipelines; this is a part of **Azure DevOps**, which consists
    of the following five services:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 许多CI/CD工具用于支持现代软件开发，如Azure Pipelines、GitLab CI/CD、GitHub Actions和Bitbucket Pipelines。最广泛使用的工具之一是Azure
    Pipelines，它是**Azure DevOps**的一部分，包含以下五个服务：
- en: '**Azure Boards** is an Azure DevOps sub-service that’s used to track all tasks
    related to a project conveniently in one place. It is suitable for teamwork. It
    helps with collaboration because it supports Kanban boards, backlogs, team dashboards,
    and custom reporting, which can create a connection between the tasks and source
    version repositories such as GitHub or Azure Repos.'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Azure Boards**是Azure DevOps的一个子服务，便于在一个地方跟踪与项目相关的所有任务。它适合团队协作。它支持Kanban看板、待办事项、团队仪表板和自定义报告，能够在任务和源代码版本库（如GitHub或Azure
    Repos）之间建立联系，从而促进协作。'
- en: '`https://dev.azure.com/{your-organization}`). This book will focus on this
    service due to this benefit.'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`https://dev.azure.com/{your-organization}`）。本书将重点关注此服务，因为它具备这样的优势。'
- en: '**Azure Repos** is an Azure DevOps sub-service for controlling the version
    of the source code. It is easy to manage code in one place. Easy maintenance can
    also help you define rules so that you can deploy code safely to desired environments,
    such as merge checks or static code analysis after the team creates the pull request.
    The examples in this book will use Azure Repos.'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Azure Repos**是Azure DevOps的一个子服务，用于控制源代码的版本。它使得在一个地方管理代码变得简单。便捷的维护还可以帮助你定义规则，从而安全地将代码部署到所需的环境中，例如团队创建拉取请求后进行合并检查或静态代码分析。本书中的示例将使用Azure
    Repos。'
- en: '**Azure Test Plans** is an Azure DevOps sub-service that helps test or quality
    assurance teams write use case scenarios to easily deliver the test results to
    the customer. The tester or quality assurance team creates **system integration
    testing** (**SIT**) and **user acceptance testing** (**UAT**) on Azure Test Plans.
    It can display test results as dashboard reports and include comments or feedback.
    Azure Test Plans also helps the team understand the test process of the project
    on the same page.'
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Azure Test Plans**是Azure DevOps的一个子服务，帮助测试或质量保证团队编写用例场景，轻松将测试结果交付给客户。测试人员或质量保证团队可以在Azure
    Test Plans上创建**系统集成测试**（**SIT**）和**用户验收测试**（**UAT**）。它可以将测试结果显示为仪表板报告，并包含评论或反馈。Azure
    Test Plans还帮助团队在同一页面上了解项目的测试过程。'
- en: '**Azure Artifacts** is an Azure DevOps sub-service that enables developers
    to share and manage all their packages that result from building code in one place.
    Developers can publish packages to their feeds and share them within the same
    team, organization, and even publicly. Developers can also load the packages from
    different public repositories such as [https://www.nuget.org/](https://www.nuget.org/)
    or [https://www.npmjs.com/](https://www.npmjs.com/). Azure Artifacts also supports
    multiple package types, such as NuGet, npm, Python, Maven, and Universal Packages.'
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Azure Artifacts**是Azure DevOps的一个子服务，允许开发者在一个地方共享和管理所有由构建代码生成的包。开发者可以将包发布到他们的源，并在同一团队、组织内甚至公开分享。开发者还可以从不同的公共仓库加载包，如[https://www.nuget.org/](https://www.nuget.org/)或[https://www.npmjs.com/](https://www.npmjs.com/)。Azure
    Artifacts还支持多种包类型，如NuGet、npm、Python、Maven和Universal Packages。'
- en: All these services fall under the umbrella of Azure DevOps, which covers the
    necessary development process for a project. You don’t need to use additional
    services for development.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 所有这些服务都属于Azure DevOps的范畴，涵盖了项目所需的开发流程。你无需使用其他额外的服务来进行开发。
- en: Introducing Azure Pipelines and its components
  id: totrans-31
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍Azure Pipelines及其组件
- en: Azure Pipelines is a CI/CD platform for building, testing, and deploying your
    code to a live application. First, let’s take a look at its key components.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: Azure Pipelines是一个用于构建、测试和将代码部署到实时应用程序的CI/CD平台。首先，我们来看看它的关键组件。
- en: Exploring the key components
  id: totrans-33
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 探索关键组件
- en: 'There are some key concepts that you need to understand when creating an Azure
    pipeline:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 在创建Azure管道时，你需要理解一些关键概念：
- en: An **agent** is the software that runs a job within a server. It can be a Microsoft-hosted
    agent or a self-hosted agent.
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个**代理**是运行作业的服务器上的软件。它可以是 Microsoft 托管的代理，也可以是自托管的代理。
- en: A **pipeline** is a workflow process for CI/CD for your application development.
    It can define your idea of how to build, test, integrate, and deploy your project.
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个**流水线**是您应用程序开发的 CI/CD 工作流过程。它可以定义如何构建、测试、集成和部署您的项目。
- en: A **trigger** is an action that calls a pipeline to run.
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个**触发器**是调用流水线运行的操作。
- en: 'A **stage** is a flow of defined jobs in a pipeline, and each stage can have
    one or more jobs. The benefit of using a stage is that you can rerun job(s) under
    it. This means you do not need to rerun the whole pipeline. For example, let’s
    say the developer creates a pipeline containing two stages: the **build stage**
    and the **deployment stage**. If the deployment stage fails, then they can only
    rerun the failed job under the deployment stage.'
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个**阶段**是流水线中定义的作业流，每个阶段可以包含一个或多个作业。使用阶段的好处是，您可以重新运行该阶段下的作业，而无需重新运行整个流水线。例如，假设开发人员创建了一个包含两个阶段的流水线：**构建阶段**和**部署阶段**。如果部署阶段失败，则可以只重新运行部署阶段下失败的作业。
- en: A **job** is a group of one or more steps set in a stage. It is useful when
    you need to run a set of steps in a different operating system environment.
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个**作业**是一组在一个阶段中设置的一个或多个步骤。当您需要在不同操作系统环境中运行一组步骤时，它很有用。
- en: 'A **step** can be a task or script and is the smallest piece of a pipeline:'
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个**步骤**可以是一个任务或脚本，是流水线中的最小单元：
- en: A **task** is a pre-defined script that your idea can define.
  id: totrans-41
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个**任务**是一个预定义的脚本，您可以通过它来定义您的想法。
- en: A **script** is an action that uses the **command-line interface** (**CLI**),
    PowerShell, or Bash. It depends on the operating system agent that you choose
    for a job. For example, if you use a command line to run on a Linux agent, it
    will use a bash script. PowerShell runs on a macOS agent and will use a PowerShell
    core for cross-platform scripts.
  id: totrans-42
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个**脚本**是一个使用**命令行界面**（**CLI**）、PowerShell 或 Bash 的操作。它取决于您为工作选择的操作系统代理。例如，如果您选择在
    Linux 代理上使用命令行运行，它将使用 Bash 脚本。PowerShell 在 macOS 代理上运行，并将使用 PowerShell 核心来进行跨平台脚本。
- en: A **target** is a destination of the pipeline. It can be Azure Artifacts, an
    Azure resource service (such as Azure App Services, Azure Functions, Azure Container
    Apps, Azure Kubernetes Services, and so on), or invoke a REST API such as webhooks
    on Microsoft Teams.
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个**目标**是流水线的目的地。它可以是 Azure Artifacts，一个 Azure 资源服务（例如 Azure App Services、Azure
    Functions、Azure Container Apps、Azure Kubernetes Services 等），或者调用一个 REST API，例如
    Microsoft Teams 上的 Webhook。
- en: 'Now, let’s look at how these components interact with each other:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们来看一下这些组件是如何相互作用的：
- en: '![Figure 1.2 – Key components](img/B18875_01_02.jpg)'
  id: totrans-45
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.2 – 关键组件](img/B18875_01_02.jpg)'
- en: Figure 1.2 – Key components
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.2 – 关键组件
- en: This section described the meaning of and relationship between key objects.
    Before we take a more in-depth look at the different aspects of this platform,
    let’s learn how we can start using it.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 本节描述了关键对象的含义及其关系。在我们更深入地了解平台的不同方面之前，先来学习如何开始使用它。
- en: Signing up for Azure Pipelines
  id: totrans-48
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 注册 Azure Pipelines
- en: 'Two methods can be used for signing up:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 可以使用两种方法注册：
- en: '`https://dev.azure.com/{your-organization}`.'
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`https://dev.azure.com/{your-organization}`。'
- en: '`{your-organization}`.'
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`{your-organization}`。'
- en: Once you’ve signed up for an Azure Pipelines account, you are ready to create
    a new project for building your code and release the built code to the live application.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 注册 Azure Pipelines 账户后，您就可以创建一个新项目，用于构建您的代码并将构建后的代码发布到生产应用程序。
- en: Creating a new project
  id: totrans-53
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 创建新项目
- en: 'Creating a new project is the first step after you sign up, before creating
    any CI/CD pipeline. Upon creating a project, you can set project visibility:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 创建新项目是注册后的第一步，在创建任何 CI/CD 流水线之前。创建项目后，您可以设置项目可见性：
- en: '![Figure 1.3 – Creating a new project](img/B18875_01_03.jpg)'
  id: totrans-55
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.3 – 创建新项目](img/B18875_01_03.jpg)'
- en: Figure 1.3 – Creating a new project
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.3 – 创建新项目
- en: You can enter a project name and select **Visibility**, then click **Create
    project**.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以输入项目名称并选择**可见性**，然后点击**创建项目**。
- en: Inviting team members
  id: totrans-58
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 邀请团队成员
- en: 'When you need to work with a team, you must add a new member by inviting one
    or more team members. Follow these steps to invite a team member:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 当您需要与团队合作时，必须通过邀请一个或多个团队成员来添加新成员。请按照以下步骤邀请团队成员：
- en: 'Click on your project’s name in the web portal and click **Project settings**:'
  id: totrans-60
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 Web 门户中点击您的项目名称，然后点击**项目设置**：
- en: '![Figure 1.4 – Project settings](img/B18875_01_04.jpg)'
  id: totrans-61
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.4 – 项目设置](img/B18875_01_04.jpg)'
- en: Figure 1.4 – Project settings
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.4 – 项目设置
- en: 'Select **Teams** | **Add**:'
  id: totrans-63
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择**团队** | **添加**：
- en: '![Figure 1.5 – Adding a new team member](img/B18875_01_05.jpg)'
  id: totrans-64
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.5 – 添加新团队成员](img/B18875_01_05.jpg)'
- en: Figure 1.5 – Adding a new team member
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.5 – 添加新团队成员
- en: 'Enter the email addresses of your team members and click **Save**:'
  id: totrans-66
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输入团队成员的电子邮件地址并点击**保存**：
- en: '![Figure 1.6 – Inviting team members](img/B18875_01_06.jpg)'
  id: totrans-67
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.6 – 邀请团队成员](img/B18875_01_06.jpg)'
- en: Figure 1.6 – Inviting team members
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.6 – 邀请团队成员
- en: Now that you’ve invited your collaborators to join your project, let’s delve
    into how we can start using this service.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您已经邀请了合作者加入项目，我们来深入了解如何开始使用此服务。
- en: Creating Azure pipelines
  id: totrans-70
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建 Azure 管道
- en: 'There are two ways to create Azure pipelines:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 创建 Azure 管道有两种方法：
- en: 'Using the **Classic interface** (create Azure pipelines from the web Azure
    DevOps portal) while following these basic steps:'
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用**经典界面**（从 Web Azure DevOps 门户创建 Azure 管道），同时按照以下基本步骤进行操作：
- en: Configure Azure Pipelines to use your Azure Repos Git repository.
  id: totrans-73
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 配置 Azure Pipelines 以使用您的 Azure Repos Git 仓库。
- en: Use Azure Pipelines to create and configure your build and release pipeline
    using drag and drop from the Azure DevOps portal.
  id: totrans-74
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 Azure Pipelines 在 Azure DevOps 门户中通过拖放创建并配置您的构建和发布管道。
- en: Push your code to your version control repository. The pipeline will be automatically
    initiated by the default trigger and the defined tasks will be executed.
  id: totrans-75
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将代码推送到您的版本控制库。管道将通过默认触发器自动启动，定义的任务将会执行。
- en: Using `azure-pipelines.yml` file by defining your custom build.
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过定义自定义构建，使用`azure-pipelines.yml`文件。
- en: Push your code to your version control repository. This action runs the default
    trigger.
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将代码推送到您的版本控制库。此操作会运行默认触发器。
- en: 'Let’s illustrate the Azure Pipelines YAML method for ease of understanding:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 为了便于理解，我们来说明 Azure Pipelines YAML 方法：
- en: '![Figure 1.7 – Azure Pipelines YAML steps](img/B18875_01_07.jpg)'
  id: totrans-79
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.7 – Azure Pipelines YAML 步骤](img/B18875_01_07.jpg)'
- en: Figure 1.7 – Azure Pipelines YAML steps
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.7 – Azure Pipelines YAML 步骤
- en: There are different pipeline features available for both these methods, with
    some available for both and others only featuring in one. We’ll look at these
    in detail in the next section.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 这两种方法都有不同的管道功能可用，其中有些适用于两者，而其他一些仅适用于其中一种。我们将在下一部分详细介绍这些功能。
- en: Feature availability
  id: totrans-82
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 功能可用性
- en: 'Some pipeline features are only available when using the classic interface
    or YAML. The following table displays which features are available for which of
    these methods:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 某些管道功能仅在使用经典界面或 YAML 时可用。下表显示了哪些功能适用于这些方法中的哪一种：
- en: '| **Feature** | **YAML** | **Classic** | **Description** |'
  id: totrans-84
  prefs: []
  type: TYPE_TB
  zh: '| **功能** | **YAML** | **经典** | **描述** |'
- en: '| --- | --- | --- | --- |'
  id: totrans-85
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- | --- |'
- en: '| Agents | Yes | Yes | To define the resource where the pipeline can run. |'
  id: totrans-86
  prefs: []
  type: TYPE_TB
  zh: '| 代理 | 是 | 是 | 用于定义管道可以运行的资源。 |'
- en: '| Approvals | Yes | Yes | To define the validation steps for additional checking
    before completing a deployment stage. |'
  id: totrans-87
  prefs: []
  type: TYPE_TB
  zh: '| 审批 | 是 | 是 | 用于定义额外验证步骤，在完成部署阶段之前进行检查。 |'
- en: '| Artifacts | Yes | Yes | To define the library packages for publishing or
    consuming different package types. |'
  id: totrans-88
  prefs: []
  type: TYPE_TB
  zh: '| 工件 | 是 | 是 | 用于定义发布或消费不同类型包的库包。 |'
- en: '| Caching | Yes | Yes | To define an additional task to reduce the build time
    by allowing outputs or downloaded dependencies to store them on the agents and
    reuse them again. |'
  id: totrans-89
  prefs: []
  type: TYPE_TB
  zh: '| 缓存 | 是 | 是 | 用于定义额外任务，通过允许在代理上存储输出或下载的依赖项并再次重用它们，来减少构建时间。 |'
- en: '| Conditions | Yes | Yes | To define the specific conditions before running
    a job. |'
  id: totrans-90
  prefs: []
  type: TYPE_TB
  zh: '| 条件 | 是 | 是 | 用于定义在运行作业之前的特定条件。 |'
- en: '| Container jobs | Yes | No | To define the specific jobs to run in a container.
    |'
  id: totrans-91
  prefs: []
  type: TYPE_TB
  zh: '| 容器作业 | 是 | 否 | 用于定义在容器中运行的特定作业。 |'
- en: '| Demands | Yes | Yes | To define the specific pipeline to ensure requirements
    are met before a pipeline stage is run. |'
  id: totrans-92
  prefs: []
  type: TYPE_TB
  zh: '| 需求 | 是 | 是 | 用于定义特定管道，以确保在管道阶段运行之前满足要求。 |'
- en: '| Dependencies | Yes | Yes | To define specific requirements for validation
    before running the next job or stage. |'
  id: totrans-93
  prefs: []
  type: TYPE_TB
  zh: '| 依赖关系 | 是 | 是 | 用于定义在运行下一个作业或阶段之前的特定验证要求。 |'
- en: '| Deployment groups | No | Yes | To define a logical group for the code that
    will be deployed to the target machines. |'
  id: totrans-94
  prefs: []
  type: TYPE_TB
  zh: '| 部署组 | 否 | 是 | 用于定义将部署到目标机器的代码的逻辑组。 |'
- en: '| Deployment group jobs | Yes | Yes | To define a job to release to a deployment
    group. |'
  id: totrans-95
  prefs: []
  type: TYPE_TB
  zh: '| 部署组作业 | 是 | 是 | 用于定义发布到部署组的作业。 |'
- en: '| Deployment jobs | Yes | No | To define the deployment steps. |'
  id: totrans-96
  prefs: []
  type: TYPE_TB
  zh: '| 部署作业 | 是 | 否 | 用于定义部署步骤。 |'
- en: '| Environment | Yes | No | To define a collection of resources targeted for
    deployment. |'
  id: totrans-97
  prefs: []
  type: TYPE_TB
  zh: '| 环境 | 是 | 否 | 定义一组面向部署的资源。 |'
- en: '| Gates | Yes | Yes | To support automatic collection and evaluation of external
    health signals before completing a release stage. Available with classic release
    only. |'
  id: totrans-98
  prefs: []
  type: TYPE_TB
  zh: '| 网关 | 是 | 是 | 支持在完成发布阶段之前自动收集和评估外部健康信号。仅适用于经典发布。 |'
- en: '| Jobs | Yes | Yes | To define the execution sequence of a set of steps. |'
  id: totrans-99
  prefs: []
  type: TYPE_TB
  zh: '| 作业 | 是 | 是 | 定义一组步骤的执行顺序。 |'
- en: '| Service connections | Yes | Yes | To define a connection to a remote service
    required to execute tasks in a job. |'
  id: totrans-100
  prefs: []
  type: TYPE_TB
  zh: '| 服务连接 | 是 | 是 | 定义连接到执行作业中任务所需的远程服务。 |'
- en: '| Service containers | Yes | No | To define a service that you can use to manage
    the life cycle of a containerized service. |'
  id: totrans-101
  prefs: []
  type: TYPE_TB
  zh: '| 服务容器 | 是 | 否 | 定义一个服务，你可以用它来管理容器化服务的生命周期。 |'
- en: '| Stages | Yes | Yes | To define flow jobs within a pipeline. |'
  id: totrans-102
  prefs: []
  type: TYPE_TB
  zh: '| 阶段 | 是 | 是 | 定义流水线中的作业流。 |'
- en: '| Task groups | No | Yes | To define a set of sequence tasks as a single reusable
    task. |'
  id: totrans-103
  prefs: []
  type: TYPE_TB
  zh: '| 任务组 | 否 | 是 | 定义一组顺序任务，作为一个可重用的任务。 |'
- en: '| Tasks | Yes | Yes | To define the building blocks that construct a pipeline.
    |'
  id: totrans-104
  prefs: []
  type: TYPE_TB
  zh: '| 任务 | 是 | 是 | 定义构建流水线的基本单元。 |'
- en: '| Templates | Yes | No | To define reusable content, logic, and parameters.
    |'
  id: totrans-105
  prefs: []
  type: TYPE_TB
  zh: '| 模板 | 是 | 否 | 定义可重用的内容、逻辑和参数。 |'
- en: '| Triggers | Yes | Yes | To define a specific event that causes a pipeline
    to run. |'
  id: totrans-106
  prefs: []
  type: TYPE_TB
  zh: '| 触发器 | 是 | 是 | 定义一个特定事件，触发流水线的运行。 |'
- en: '| Variables | Yes | Yes | To define a value for data replacement and pass it
    to the pipeline. |'
  id: totrans-107
  prefs: []
  type: TYPE_TB
  zh: '| 变量 | 是 | 是 | 定义数据替换的值，并将其传递给流水线。 |'
- en: '| Variable groups | Yes | Yes | To define the storage of values that you want
    to control and make available across multiple pipelines. |'
  id: totrans-108
  prefs: []
  type: TYPE_TB
  zh: '| 变量组 | 是 | 是 | 定义你希望控制并在多个流水线之间共享的值存储。 |'
- en: Table 1.1 – Pipeline features
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 表 1.1 – 流水线功能
- en: Apart from these features, there are source version control repositories that
    Azure Pipelines can connect to. We’ll look at these in detail in the next section.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 除了这些功能外，Azure Pipelines 还可以连接到源版本控制仓库。我们将在下一节中详细讨论这些仓库。
- en: Availability of source version control repositories
  id: totrans-111
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 源版本控制仓库的可用性
- en: 'YAML pipelines only support some version control repositories. The following
    table displays which version control repositories can support which method:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: YAML 流水线仅支持某些版本控制仓库。下表展示了哪些版本控制仓库支持哪种方法：
- en: '| **Repository** | **YAML** | **Classic Interface** |'
  id: totrans-113
  prefs: []
  type: TYPE_TB
  zh: '| **仓库** | **YAML** | **经典界面** |'
- en: '| --- | --- | --- |'
  id: totrans-114
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| Azure Repos | Yes | Yes |'
  id: totrans-115
  prefs: []
  type: TYPE_TB
  zh: '| Azure Repos | 是 | 是 |'
- en: '| GitHub | Yes | Yes |'
  id: totrans-116
  prefs: []
  type: TYPE_TB
  zh: '| GitHub | 是 | 是 |'
- en: '| GitHub Enterprise Server | Yes | Yes |'
  id: totrans-117
  prefs: []
  type: TYPE_TB
  zh: '| GitHub Enterprise Server | 是 | 是 |'
- en: '| Bitbucket Cloud | Yes | Yes |'
  id: totrans-118
  prefs: []
  type: TYPE_TB
  zh: '| Bitbucket Cloud | 是 | 是 |'
- en: '| Bitbucket Server | No | Yes |'
  id: totrans-119
  prefs: []
  type: TYPE_TB
  zh: '| Bitbucket Server | 否 | 是 |'
- en: '| Subversion | No | Yes |'
  id: totrans-120
  prefs: []
  type: TYPE_TB
  zh: '| Subversion | 否 | 是 |'
- en: Table 1.2 – Comparing repositories
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 表 1.2 – 比较仓库
- en: In this section, we discussed all the available features of Azure Pipelines.
    In the next section, we will convert the key components of Azure Pipelines into
    a YAML structure to manage it better.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们讨论了 Azure Pipelines 的所有可用功能。在下一节中，我们将把 Azure Pipelines 的关键组件转换成 YAML
    结构，以便更好地管理。
- en: Understanding the YAML structure of Azure Pipelines
  id: totrans-123
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 理解 Azure Pipelines 的 YAML 结构
- en: 'Usually, creating a file called `azure-pipelines.yml` will help you remember
    which YAML file is used for `azure-pipelines` in the source code repository. The
    basic Azure Pipelines YAML structure is as follows:'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，创建一个名为 `azure-pipelines.yml` 的文件可以帮助你记住哪个 YAML 文件用于源代码仓库中的 `azure-pipelines`。基本的
    Azure Pipelines YAML 结构如下：
- en: '![Figure 1.8 – azure-pipelines.yml file](img/B18875_01_08.jpg)'
  id: totrans-125
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.8 – azure-pipelines.yml 文件](img/B18875_01_08.jpg)'
- en: Figure 1.8 – azure-pipelines.yml file
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.8 – azure-pipelines.yml 文件
- en: 'The `azure-pipelines.yml` file in this example contains a typical structure:'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 本示例中的 `azure-pipelines.yml` 文件包含一个典型的结构：
- en: There are two stages, `stage1` and `stage2`, and each stage contains a `job`
    step.
  id: totrans-128
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 有两个阶段，`stage1` 和 `stage2`，每个阶段包含一个 `job` 步骤。
- en: '*Lines 1-2* show the pipeline runs when the developer pushes changes on the
    main (`master`) branch.'
  id: totrans-129
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*第 1-2 行* 显示开发人员在主 (`master`) 分支推送更改时，流水线会运行。'
- en: '*Lines 8-9* and *21-22* show the pipeline uses a Microsoft-hosted agent with
    the `windows-latest` operating system image.'
  id: totrans-130
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*第 8-9 行* 和 *第 21-22 行* 显示流水线使用了一个 Microsoft 托管的代理，操作系统镜像为 `windows-latest`。'
- en: '*Line 11* is a pre-created script for using the NuGet library. You can access
    this script in the `ch1` folder in this book’s GitHub repository.'
  id: totrans-131
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*第 11 行* 是一个预创建的脚本，用于使用 NuGet 库。你可以在本书 GitHub 仓库中的 `ch1` 文件夹找到这个脚本。'
- en: '*Line 12* is a pre-created script for using the NuGet command line.'
  id: totrans-132
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*第12行*是一个用于使用NuGet命令行的预创建脚本。'
- en: '*Line 15* is a command line to run the `echo` command.'
  id: totrans-133
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*第15行*是运行`echo`命令的命令行。'
- en: '*Line 24* is a PowerShell Core script that is cross-platform.'
  id: totrans-134
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*第24行*是一个跨平台的PowerShell Core脚本。'
- en: As you can see, the basic YAML structure is rather simple to understand. Once
    you’ve prepared the YAML file, you can see the status for running it. We will
    discuss this in the next section.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 正如您所看到的，基本的YAML结构相当简单易懂。准备好YAML文件后，您可以查看运行状态。我们将在下一节讨论这一点。
- en: Viewing the Azure pipelines' status
  id: totrans-136
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 查看Azure管道的状态
- en: 'The Azure pipelines'' status is displayed on the Azure DevOps web portal under
    the running pipeline:'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: Azure管道的状态显示在Azure DevOps Web门户中的运行管道下：
- en: '![Figure 1.9 – The Azure pipelines'' status](img/B18875_01_09.jpg)'
  id: totrans-138
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.9 – Azure管道的状态](img/B18875_01_09.jpg)'
- en: Figure 1.9 – The Azure pipelines' status
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.9 – Azure管道的状态
- en: 'Clicking on the current pipeline status row will take you to the historical
    status of the pipeline. Two colors are used to indicate the status: green and
    red. These indicate successful and failed pipelines, respectively.'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 单击当前管道状态行将带您查看管道的历史状态。使用两种颜色来指示状态：绿色和红色。分别表示成功和失败的管道。
- en: This section described all the components and their relationships. In the next
    section, you will understand the key differences between Azure Pipelines and other
    commonly used CI/CD tools.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 本节描述了所有组件及其关系。在下一节中，您将了解Azure Pipelines与其他常用CI/CD工具之间的关键区别。
- en: Comparing Azure Pipelines with other CI/CD tools
  id: totrans-142
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 比较Azure Pipelines与其他CI/CD工具
- en: 'Azure Pipelines has different features compared to other CI/CD services currently
    on the market. Let’s take a closer look:'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 与目前市场上的其他CI/CD服务相比，Azure Pipelines具有不同的特点。让我们仔细看一下：
- en: '| **Features** | **Azure Pipelines** | **GitHub Actions** | **GitLab CI** |
    **Bitbucket Pipelines** |'
  id: totrans-144
  prefs: []
  type: TYPE_TB
  zh: '| **功能** | **Azure Pipelines** | **GitHub Actions** | **GitLab CI** | **Bitbucket
    Pipelines** |'
- en: '| --- | --- | --- | --- | --- |'
  id: totrans-145
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- | --- | --- |'
- en: '| `if` expression | X | X | - | - |'
  id: totrans-146
  prefs: []
  type: TYPE_TB
  zh: '| `if` 表达式 | X | X | - | - |'
- en: '| Loop statement | X | - | - | - |'
  id: totrans-147
  prefs: []
  type: TYPE_TB
  zh: '| 循环语句 | X | - | - | - |'
- en: '| Online service – CI/CD minutes free usage per month | 1,800 | 2,000 | 400
    | 50 |'
  id: totrans-148
  prefs: []
  type: TYPE_TB
  zh: '| 在线服务 – 每月免费CI/CD分钟数 | 1,800 | 2,000 | 400 | 50 |'
- en: '| Online service – free package storage (GB) | 2 | 0.5 | 5 | 1 |'
  id: totrans-149
  prefs: []
  type: TYPE_TB
  zh: '| 在线服务 – 免费包存储 (GB) | 2 | 0.5 | 5 | 1 |'
- en: '| Self-hosted agents | X | X | X | X |'
  id: totrans-150
  prefs: []
  type: TYPE_TB
  zh: '| 自托管代理 | X | X | X | X |'
- en: '| Free users | 5 | Unlimited | Unlimited | 5 |'
  id: totrans-151
  prefs: []
  type: TYPE_TB
  zh: '| 免费用户 | 5 | 无限 | 无限 | 5 |'
- en: Table 1.3 – CI/CD tools comparison
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 表 1.3 – CI/CD工具比较
- en: This will help you understand the important factors to consider when you’re
    trying to decide on the right tool for your CI/CD platform.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 这将帮助您了解在选择适合您的CI/CD平台的工具时需要考虑的重要因素。
- en: Before you start to build a pipeline for application deployment, we must prepare
    the necessary agent pools, as demonstrated in the next section.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 在开始为应用程序部署构建管道之前，我们必须准备好必要的代理池，如下一节所示。
- en: Setting up agent pools
  id: totrans-155
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置代理池
- en: 'Before using Azure Pipelines to build code and deploy code, you need at least
    one **build agent**. There are two build agent types: **Microsoft-hosted build
    agent**, which is included by default, and **self-hosted build agent**. Each agent
    type will be located under an **agent pool**, which is a collection of build and
    release agents.'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 在使用Azure Pipelines构建代码和部署代码之前，您需要至少一个**构建代理**。有两种构建代理类型：**微软托管构建代理**，默认包含，和**自托管构建代理**。每种代理类型将位于一个**代理池**下，代理池是构建和发布代理的集合。
- en: A Microsoft-hosted build agent will be located under an agent pool called **Azure
    Pipelines**. You can create a new agent pool for self-hosted build agents and
    assign them under it.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 一个由微软托管的构建代理将位于名为**Azure Pipelines**的代理池下。您可以为自托管构建代理创建一个新的代理池，并将其分配到该池下。
- en: 'To create pools, follow these steps:'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 创建代理池，请按照以下步骤操作：
- en: 'Click on your project name in the web portal and click **Project settings**
    | **Agent pools** | **Add pool**:'
  id: totrans-159
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在Web门户中单击您的项目名称，然后单击**项目设置** | **代理池** | **添加代理池**：
- en: '![Figure 1.10 – Adding a pool](img/B18875_01_10.jpg)'
  id: totrans-160
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.10 – 添加代理池](img/B18875_01_10.jpg)'
- en: Figure 1.10 – Adding a pool
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.10 – 添加代理池
- en: 'Enter the information shown in the following screenshot and then click **Create**:'
  id: totrans-162
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输入以下截图所示的信息，然后点击**创建**：
- en: '![Figure 1.11 – Creating an agent pool](img/B18875_01_11.jpg)'
  id: totrans-163
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.11 – 创建代理池](img/B18875_01_11.jpg)'
- en: Figure 1.11 – Creating an agent pool
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.11 – 创建代理池
- en: 'Finally, you will see the new agent pool:'
  id: totrans-165
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，您将看到新的代理池：
- en: '![Figure 1.12 – Displaying the new agent pool](img/B18875_01_12.jpg)'
  id: totrans-166
  prefs: []
  type: TYPE_IMG
  zh: '![图1.12 – 显示新的代理池](img/B18875_01_12.jpg)'
- en: Figure 1.12 – Displaying the new agent pool
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.12 – 显示新的代理池
- en: Once you’ve finished creating the new agent pool, you can start creating and
    setting up the self-hosted agent under a new agent pool. The following section
    will show you how to create a **personal access** **token** (**PAT**).
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 完成新代理池的创建后，你可以在新的代理池下开始创建和设置自托管代理。接下来的部分将指导你如何创建**个人访问** **令牌**（**PAT**）。
- en: Creating a PAT
  id: totrans-169
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建PAT
- en: 'Before you can create self-hosted agents on your server or machine, you must
    create a PAT. To do this, follow these instructions:'
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 在你的服务器或机器上创建自托管代理之前，必须先创建一个PAT。请按照以下说明操作：
- en: 'Go to the **Settings** menu under your personal icon and click on **Personal**
    **access tokens**:'
  id: totrans-171
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 转到个人图标下的**设置**菜单，然后点击**个人** **访问令牌**：
- en: '![Figure 1.13 – Creating PATs](img/B18875_01_13.jpg)'
  id: totrans-172
  prefs: []
  type: TYPE_IMG
  zh: '![图1.13 – 创建PAT](img/B18875_01_13.jpg)'
- en: Figure 1.13 – Creating PATs
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.13 – 创建PAT
- en: 'Click on **New Token**:'
  id: totrans-174
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**新建令牌**：
- en: '![Figure 1.14 – New Token](img/B18875_01_14.jpg)'
  id: totrans-175
  prefs: []
  type: TYPE_IMG
  zh: '![图1.14 – 新建令牌](img/B18875_01_14.jpg)'
- en: Figure 1.14 – New Token
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.14 – 新建令牌
- en: 'Enter the required information:'
  id: totrans-177
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输入所需的相关信息：
- en: '**Name**: Enter the name you need'
  id: totrans-178
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**名称**：输入你需要的名称'
- en: '**Organization**: Select an organization you will link to'
  id: totrans-179
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**组织**：选择你将要关联的组织'
- en: '**Expiration (UTC)**: There are four choices – 30 days, 60 days, 90 days, and
    custom-defined but under 2 years'
  id: totrans-180
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**过期时间（UTC）**：有四个选项——30天、60天、90天，以及自定义定义但不超过2年'
- en: '**Scopes**: Select **Custom defined** | **Agents Pools** with **Read & manage**
    | **Auditing** with **Read** **Audit Log**:'
  id: totrans-181
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**作用域**：选择**自定义定义** | **代理池**，并选中**读取和管理** | **审计**，并勾选**读取** **审计日志**：'
- en: '![Figure 1.15 – Entering the required information](img/B18875_01_15.jpg)'
  id: totrans-182
  prefs: []
  type: TYPE_IMG
  zh: '![图1.15 – 输入所需信息](img/B18875_01_15.jpg)'
- en: Figure 1.15 – Entering the required information
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.15 – 输入所需信息
- en: 'Copy the PAT before clicking on the **Close** button as you won’t be able to
    see it again:'
  id: totrans-184
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在点击**关闭**按钮之前，请复制PAT，因为你将无法再次查看它：
- en: '![Figure 1.16 – Copying the PAT](img/B18875_01_16.jpg)'
  id: totrans-185
  prefs: []
  type: TYPE_IMG
  zh: '![图1.16 – 复制PAT](img/B18875_01_16.jpg)'
- en: Figure 1.16 – Copying the PAT
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.16 – 复制PAT
- en: Now, you are ready to set up a self-hosted agent.
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，你已经准备好设置自托管代理。
- en: Setting up self-hosted agents
  id: totrans-188
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置自托管代理
- en: 'After you’ve created a PAT, you can create a new self-hosted agent under a
    new agent pool. To do this, follow these steps:'
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 创建PAT后，你可以在新的代理池下创建一个新的自托管代理。按照以下步骤操作：
- en: 'Click on **PacktAzureDevOps** | **Agent pools** | **General**:'
  id: totrans-190
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**PacktAzureDevOps** | **代理池** | **常规**：
- en: '![Figure 1.17 – Entering a new agent pool](img/B18875_01_17.jpg)'
  id: totrans-191
  prefs: []
  type: TYPE_IMG
  zh: '![图1.17 – 输入新的代理池](img/B18875_01_17.jpg)'
- en: Figure 1.17 – Entering a new agent pool
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.17 – 输入新的代理池
- en: 'Click on **New agent**:'
  id: totrans-193
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**新建代理**：
- en: '![Figure 1.18 – Entering a new agent](img/B18875_01_18.jpg)'
  id: totrans-194
  prefs: []
  type: TYPE_IMG
  zh: '![图1.18 – 输入新的代理](img/B18875_01_18.jpg)'
- en: Figure 1.18 – Entering a new agent
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.18 – 输入新的代理
- en: 'You can download a self-hosted agent based on your operating system. Three
    operating system options will show you how to download and set them up:'
  id: totrans-196
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你可以根据操作系统下载自托管代理。以下三种操作系统选项将指导你如何下载并设置它们：
- en: '**Windows users** can download build agent software from the **Windows** tab.
    There are two options, as shown in the following screenshot: Windows 64-bit (**x64**)
    and Windows 32-bit (**x86**):'
  id: totrans-197
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Windows用户**可以从**Windows**标签页下载构建代理软件。以下截图展示了两个选项：Windows 64位（**x64**）和Windows
    32位（**x86**）：'
- en: '![Figure 1.19 – The Windows agent for setting up a file](img/B18875_01_19.jpg)'
  id: totrans-198
  prefs: []
  type: TYPE_IMG
  zh: '![图1.19 – 设置文件的Windows代理](img/B18875_01_19.jpg)'
- en: Figure 1.19 – The Windows agent for setting up a file
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.19 – 设置文件的Windows代理
- en: To set up a Windows agent, you need to run on PowerShell as an administrator.
  id: totrans-200
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 要设置Windows代理，你需要以管理员身份在PowerShell中运行。
- en: '**Mac users** can download build agent software from the **macOS** tab:'
  id: totrans-201
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Mac用户**可以从**macOS**标签页下载构建代理软件：'
- en: '![Figure 1.20 – macOS agent](img/B18875_01_20.jpg)'
  id: totrans-202
  prefs: []
  type: TYPE_IMG
  zh: '![图1.20 – macOS代理](img/B18875_01_20.jpg)'
- en: Figure 1.20 – macOS agent
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.20 – macOS代理
- en: You don’t need to use the `bash` command in the administrator role to set up
    the macOS agent.
  id: totrans-204
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设置macOS代理时，管理员角色下不需要使用`bash`命令。
- en: '**Linux users** can download build agent software from the **Linux** tab. There
    are four options for computer architecture – **x64**, **ARM**, **ARM64**, and
    **RHEL6**:'
  id: totrans-205
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Linux用户**可以从**Linux**标签页下载构建代理软件。计算机架构有四个选项：**x64**、**ARM**、**ARM64**和**RHEL6**：'
- en: '![Figure 1.21 – Linux agent](img/B18875_01_21.jpg)'
  id: totrans-206
  prefs: []
  type: TYPE_IMG
  zh: '![图1.21 – Linux代理](img/B18875_01_21.jpg)'
- en: Figure 1.21 – Linux agent
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.21 – Linux代理
- en: You don’t need to use a `root` user for installation to set up a Linux agent.
  id: totrans-208
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装 Linux 代理时，你不需要使用 `root` 用户。
- en: 'After configuring the agent in each operating system, you must enter the following
    information:'
  id: totrans-209
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在配置每个操作系统中的代理之后，你必须输入以下信息：
- en: '[PRE0]'
  id: totrans-210
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '![Figure 1.22 – The agent status dashboard](img/B18875_01_22.jpg)'
  id: totrans-211
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.22 – 代理状态仪表板](img/B18875_01_22.jpg)'
- en: Figure 1.22 – The agent status dashboard
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.22 – 代理状态仪表板
- en: 'You can see the **Online** status of the build agent that has already been
    created:'
  id: totrans-213
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你可以看到已经创建的构建代理的**在线**状态：
- en: '![Figure 1.23 – The action menu of the agent](img/B18875_01_23.jpg)'
  id: totrans-214
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.23 – 代理的操作菜单](img/B18875_01_23.jpg)'
- en: Figure 1.23 – The action menu of the agent
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.23 – 代理的操作菜单
- en: You can delete the agent and **u**pdate to a new version of the agent by clicking
    on the button with the ellipses or three dots.
  id: totrans-216
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你可以通过点击带有省略号或三个点的按钮来删除代理并**更新**到代理的新版本。
- en: You are now ready to create the build and deployment on the `agent01` build
    agent. However, you need to set up the deployment group so that you can deploy
    your application on a local web server such as Microsoft **Internet and Information
    Services** (**IIS**). We’ll do this in the next section.
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，你已经准备好在 `agent01` 构建代理上创建构建和部署。然而，你需要设置部署组，以便在本地 web 服务器上部署应用程序，如 Microsoft
    **互联网信息服务**（**IIS**）。我们将在下一节中进行设置。
- en: Setting up deployment groups
  id: totrans-218
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置部署组
- en: '**Deployment groups** are logical agent groupings for application deployment
    on target machines based on environments – they are typically named based on your
    project needs and promotion levels before they go to production. Agents are installed
    in each environment. Each agent under the deployment groups supports only Windows
    and Linux.'
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: '**部署组**是基于环境对目标机器进行应用程序部署的逻辑代理分组 —— 它们通常根据项目需求和推广级别命名，在应用程序进入生产之前进行部署。每个环境中都安装有代理。部署组下的每个代理仅支持
    Windows 和 Linux。'
- en: 'These deployment groups can be divided based on environments, such as development
    (*Dev*), quality assurance (*QA*), user acceptance testing (*UAT*), and production
    (*Prod*), as shown in the following figure:'
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 这些部署组可以根据环境进行划分，例如开发（*Dev*）、质量保证（*QA*）、用户验收测试（*UAT*）和生产（*Prod*），如下图所示：
- en: '![Figure 1.24 – Deployment groups concept](img/B18875_01_24.jpg)'
  id: totrans-221
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.24 – 部署组概念](img/B18875_01_24.jpg)'
- en: Figure 1.24 – Deployment groups concept
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.24 – 部署组概念
- en: 'To create a deployment group, follow these instructions:'
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 要创建部署组，请按照以下说明进行操作：
- en: 'Navigate to **Pipelines** | **Deployment groups** | **Groups** | **Add a**
    **deployment group**:'
  id: totrans-224
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到 **Pipelines** | **部署组** | **组** | **添加一个** **部署组**：
- en: '![Figure 1.25 – Adding a deployment group](img/B18875_01_25.jpg)'
  id: totrans-225
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.25 – 添加部署组](img/B18875_01_25.jpg)'
- en: Figure 1.25 – Adding a deployment group
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.25 – 添加部署组
- en: 'Enter the required information and click **Create**:'
  id: totrans-227
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输入所需信息并点击**创建**：
- en: '![Figure 1.26 – Entering deployment group information](img/B18875_01_26.jpg)'
  id: totrans-228
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.26 – 输入部署组信息](img/B18875_01_26.jpg)'
- en: Figure 1.26 – Entering deployment group information
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.26 – 输入部署组信息
- en: 'After creating the deployment group, you must set up the deployment agent under
    your deployment group. There are two operating systems the deployment agents support:'
  id: totrans-230
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建部署组后，你必须在你的部署组下设置部署代理。部署代理支持两种操作系统：
- en: '**Windows users** can install an agent of the deployment group by copying the
    PowerShell script and running it with an administrator command prompt:'
  id: totrans-231
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Windows 用户**可以通过复制 PowerShell 脚本并以管理员命令提示符运行它，来安装部署组的代理：'
- en: '![  Figure 1.27 – Script to deploy an agent on Windows](img/B18875_01_27.jpg)'
  id: totrans-232
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.27 – 在 Windows 上部署代理的脚本](img/B18875_01_27.jpg)'
- en: Figure 1.27 – Script to deploy an agent on Windows
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.27 – 在 Windows 上部署代理的脚本
- en: '**Linux users** can install an agent of the deployment group by copying the
    bash shell script and running it with an administrator command prompt:'
  id: totrans-234
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Linux 用户**可以通过复制 bash shell 脚本并以管理员命令提示符运行它，来安装部署组的代理：'
- en: '![  Figure 1.28 – Script to deploy an agent on Linux](img/B18875_01_28.jpg)'
  id: totrans-235
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.28 – 在 Linux 上部署代理的脚本](img/B18875_01_28.jpg)'
- en: Figure 1.28 – Script to deploy an agent on Linux
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.28 – 在 Linux 上部署代理的脚本
- en: 'After setting up the agent for deployment groups, you will see that the build
    agent of the deployment group is online:'
  id: totrans-237
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在为部署组设置好代理后，你将看到该部署组的构建代理已经在线：
- en: '![Figure 1.29 – The deployment agent is online](img/B18875_01_29.jpg)'
  id: totrans-238
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.29 – 部署代理已在线](img/B18875_01_29.jpg)'
- en: Figure 1.29 – The deployment agent is online
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.29 – 部署代理已在线
- en: After setting up the build and deployment agent on a self-hosted computer, you
    are ready to create your first Azure pipeline.
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 在自托管计算机上设置构建和部署代理后，你已准备好创建你的第一个Azure流水线。
- en: Summary
  id: totrans-241
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, you learned about the key concepts involved in CI/CD, which
    is a part of the Azure DevOps service from Microsoft. You learned about the basic
    structure of Azure Pipelines YAML and the difference between Azure Pipelines and
    other services currently on the market. You also learned about the fundamentals
    of Azure Pipelines, which will help you prepare your CI/CD pipelines for all real-world
    scenarios discussed later in this book. Finally, you learned how to set up agent
    pools, deployment groups, and self-hosted agents to prepare for the hands-on projects
    in the following chapters.
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你学习了与CI/CD相关的关键概念，这是微软Azure DevOps服务的一部分。你了解了Azure Pipelines YAML的基本结构，以及Azure
    Pipelines与市场上其他服务的区别。你还学习了Azure Pipelines的基本原理，这将帮助你为本书后续章节中讨论的所有实际场景准备CI/CD流水线。最后，你学习了如何设置代理池、部署组和自托管代理，为接下来的实操项目做好准备。
- en: In the next chapter, you will apply the knowledge you’ve gained from this chapter
    to basic concepts and features and learn how to create a pipeline.
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，你将把本章学到的知识应用到基本概念和功能上，学习如何创建流水线。
