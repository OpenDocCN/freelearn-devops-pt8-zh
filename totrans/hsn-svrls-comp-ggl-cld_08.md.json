["```\nnpm install @google-cloud/functions-framework\nnpm install pug\n```", "```\nmkdir data && mkdir views\n```", "```\n.\n├── data\n├── node_modules\n├── package.json\n├── package-lock.json\n└── views\n```", "```\n  0 { \n  1   \"name\": \"marvel-website\", \n  2   \"version\": \"1.0.0\", \n  3   \"description\": \"This is an example website built on Cloud Functions with Nodejs\", \n  4   \"main\": \"index.js\", \n  5   \"scripts\": { \n  6     \"start\":\"functions-framework --target=filmAPI\", \n  7     \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\" \n  8   }, \n  9   \"author\": \"Rich Rose\", \n 10   \"license\": \"ISC\", \n 11   \"dependencies\": { \n 12     \"@google-cloud/functions-framework\": \"^1.2.1\", \n 13     \"pug\": \"^2.0.4\" \n 14   } \n 15 }\n```", "```\n{\n  \"movies\": [\n  {\n    \"title\": \"Iron Man\",\n    \"director\": \"Jon Favreau\",\n    \"release\": \"2008\",\n    \"description\": \"Iron Man\",\n    \"bgImage\": \"https://upload.wikimedia.org/wikipedia/en/7/70/Ironmanposter.JPG\"\n  }, \n```", "```\n  {\n    \"title\": \"The Incredible Hulk\",\n    \"director\": \"Louis Leterrier\",\n    \"release\": \"2008\",\n    \"description\": \"The Incredible Hulk\",\n    \"bgImage\": \"https://upload.wikimedia.org/wikipedia/en/8/88/The_Incredible_Hulk_poster.jpg\"\n  },\n```", "```\n  {\n    \"title\": \"Iron Man 2\",\n    \"director\": \"Jon Favreau\",\n    \"release\": \"2010\",\n    \"description\": \"Iron Man 2\",\n    \"bgImage\": \"https://upload.wikimedia.org/wikipedia/en/e/ed/Iron_Man_2_poster.jpg\"\n  },\n```", "```\n  {\n    \"title\": \"Thor\",\n    \"director\": \"Kenneth Branagh\",\n    \"release\": \"2011\",\n    \"description\": \"Thor\",\n    \"bgImage\": \"https://upload.wikimedia.org/wikipedia/en/f/fc/Thor_poster.jpg\"\n  },\n```", "```\n  {\n    \"title\": \"Captain America: The First Avenger\",\n    \"director\": \"Joe Johnston\",\n    \"release\": \"2011\",\n    \"description\": \"Captain America: The First Avenger\",\n    \"bgImage\": \"https://upload.wikimedia.org/wikipedia/en/3/37/Captain_America_The_First_Avenger_poster.jpg\"\n  },\n```", "```\n {\n    \"title\": \"The Avengers\",\n    \"director\": \"Joss Whedon\",\n    \"release\": \"2012\",\n    \"description\": \"Marvel's The Avengers\",\n    \"bgImage\": \"https://upload.wikimedia.org/wikipedia/en/f/f9/TheAvengers2012Poster.jpg\"\n  }\n  ]\n}\n```", "```\n#message\nhtml\n  head\n    style.\n      .header {\n         text-align: center;\n         font-family: roboto;\n      }\n```", "```\n      .card {\n         box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);\n         max-width: 600px;\n         margin: auto;\n         text-align: center;\n         font-family: roboto;\n      }\n```", "```\n      .release {\n         color: grey;\n         font-size: 22px;\n      }\n```", "```\n     .description {\n         color: black;\n         font-size: 18px;\n         padding: 8px;\n      }\n```", "```\n body\n\n    div.header\n      H1 Functions Framework Example\n      H3 Google Cloud - Cloud Functions\n    div.card\n      img(src=items.bgImage style=\"width:100%\")\n      h1 #{items.title}\n      div.release\n        h3 Released: #{items.release} <br>\n        h3 Director: #{items.director} <br>\n      div.description\n        p #{items.description}\n```", "```\n├── data\n│ └── films.json\n├── node_modules\n├── package.json\n├── package-lock.json\n└── views\n    └── index.pug\n```", "```\n  0 // Define dependencies \n  1 var data = require('./data/films.json'); \n  2 var pug = require('pug'); \n```", "```\n  3 \n  4 // Function: marvelFilm Detail \n  5 // Description: Show the information for the film selected \n  6 function filmDetail(req, res, movieRef) { \n  7   // Define the view to be displayed \n  8   const pugInputFile = pug.compileFile('views/index.pug'); \n  9 \n 10   // Create the HTML view \n 11   res.status(200).send(pugInputFile({ \n 12     // Pass data object [movies] to Pug \n 13     items : data.movies[movieRef] \n 14   })); \n 15 } \n```", "```\n 16 \n 17 // Entrypoint: marvelFilmAPI \n 18 // Description: This is the Cloud Function endpoint \n 19 exports.filmAPI= (req, res) => { \n 20   // Define the default view to be displayed \n 21   let filmNum = req.query.film || '00'; \n 22 \n 23   // Translate string to int \n 24   var movieRef = parseInt(filmNum, 10); \n 25 \n 26   // Simple validation \n 27   if (movieRef > 5 || movieRef < 0) \n 28     movieRef = 0; \n 29 \n 30   // Display the relevant film \n 31   filmDetail(req, res, movieRef); \n 32 }; \n```", "```\ngcloud beta functions deploy … \\\n--max-instances 4\n```", "```\ngcloud iam service-accounts create publicCloudFunction\n```", "```\ngcloud functions add-iam-policy-binding SaveData \\\n--member='serviceAccount:publicCloudFunction@projectid.iam.gserviceaccount.com' \\\n--role='roles/cloudfunctions.invoker'\n```", "```\ngcloud functions deploy …\\\n--service-account account-privilege@projectid.iam.gserviceaccount.com\n```", "```\ngcloud iam service-accounts create saveData\n```", "```\ngcloud projects add-iam-policy-binding projectid \\\n--member='serviceAccount:saveData@projectid.gserviceaccount.com' \\\n--role='roles/cloudsql.client'\n```", "```\ngcloud functions deploy saveData \\\n--service-account saveData@projectid.gserviceaccount.com\n```"]