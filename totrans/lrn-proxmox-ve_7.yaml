- en: Chapter 7. Securing Proxmox VE
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '|   | "Abstraction may be discovered or produced, may be material or immaterial,
    but abstraction is what every hack produces and affirms....To hack is to produce
    or apply the abstract to information and the possibility of new worlds" |   |'
  id: totrans-1
  prefs: []
  type: TYPE_TB
- en: '|   | -- *A Hacker Manifesto, McKenzie Wark* |'
  id: totrans-2
  prefs: []
  type: TYPE_TB
- en: '|   | *"Putting it bluntly, virtualization is deception."* |   |'
  id: totrans-3
  prefs: []
  type: TYPE_TB
- en: '|   | -- *Data Center Virtualization Essentials, Gustavo Alessandro Andrade
    Santana* |'
  id: totrans-4
  prefs: []
  type: TYPE_TB
- en: '|   | *"The enemy knows the system being used..."* |   |'
  id: totrans-5
  prefs: []
  type: TYPE_TB
- en: '|   | -- *Shannon''s Maxim* |'
  id: totrans-6
  prefs: []
  type: TYPE_TB
- en: '|   | *"Security through obscurity is not an answer."* |   |'
  id: totrans-7
  prefs: []
  type: TYPE_TB
- en: '|   | -- *Information Security: Principles and Practices, Merkow and Breithaupt*
    |'
  id: totrans-8
  prefs: []
  type: TYPE_TB
- en: '|   | *"Containers have quickly become a popular cloud-optimization strategy
    for enterprises, however, what do we really know about the security implications?"*
    |   |'
  id: totrans-9
  prefs: []
  type: TYPE_TB
- en: '|   | -- *Kowsik Guruswamy* |'
  id: totrans-10
  prefs: []
  type: TYPE_TB
- en: The end goal of this chapter is to support you in mitigating threats to the
    security of your Proxmox VE infrastructure.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
- en: We start by enumerating and articulating the potential benefits of virtualization
    on infrastructure security.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
- en: However, these benefits must not be relied on unconditionally or discussed uncritically;
    we must qualify them here.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
- en: Moreover, we must expose the potential security risks virtualization can inject
    into the infrastructure.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
- en: Ultimately, this chapter commits to providing strategies for mitigating security
    threats to our Proxmox VE hosts and guests.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
- en: Security assurance is, of course, a sprawling field, and often includes not
    only threat mitigation, but also policy making, monitoring, incident response,
    and forensics. Our focus here is exclusively on mitigating vulnerabilities specific to
    Proxmox VE hosts.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
- en: 'Towards that end, then, the goals of security are defined here in accordance
    with tradition:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
- en: Maintaining the *confidentiality* of a system
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Assuring its *integrity*
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Providing consistent *availability* of services
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![Securing Proxmox VE](img/B01784_07_01-3.png)'
  id: totrans-21
  prefs: []
  type: TYPE_IMG
- en: Security triad
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
- en: 'The preceding illustration suggests that these three points are not isolated:
    the whole picture consists of three mutual relationships: one between confidentiality
    and integrity; one between confidentiality and availability; and, finally, one
    between integrity and availability. Too much or too little emphasis on one point
    distorts our Platonic triangle, a symbolic representation of our impossible ideal.'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
- en: 'Given our end goal—mitigating threats—this chapter proceeds along the following
    vector:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
- en: Examining the potential security rewards of virtualization
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Interrogating those rewards and exploring the potential vulnerabilities virtualization
    introduces
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Acting directly to mitigate threats
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Security benefits of virtualization
  id: totrans-28
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Introducing well-planned, deliberate, and well-executed virtualization into
    an infrastructure delivers some very compelling security benefits.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
- en: Note
  id: totrans-30
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '|   | "The abstraction of IT resources that masks the physical nature and boundaries
    of those resources..." |   |'
  id: totrans-31
  prefs: []
  type: TYPE_TB
- en: '|   | -- *Virtualization as defined by Gartner''s IT Glossary ([http://www.gartner.com/it-glossary/virtualization](http://www.gartner.com/it-glossary/virtualization)).*
    |'
  id: totrans-32
  prefs: []
  type: TYPE_TB
- en: 'Let''s be clear about one thing with regard to this common trope representing
    virtualization as a deceptive masquerade: security through obscurity does not
    work. The use of secrecy for the design or implementation of a system to provide
    security is a failing proposition.'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
- en: In enumerating the security benefits of virtualization, this section purposefully
    avoids suggesting that abstraction and the obfuscation it permits are an effective
    security strategy.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
- en: 'We''ll see as the chapter develops that none of the security rewards promised
    by virtualization advocates can be realized without a good understanding of networking,
    systems administration, type 2 hypervisors, VMs, and containers. The following
    is also required:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
- en: Rigorous planning based in part on defense in depth
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Flawless realization of those plans
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Excellent management throughout the lifecycle of all guests.
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Given all of the preceding, there are very clear security benefits to virtualization
    with Proxmox VE:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
- en: Reduction of the physical attack surface
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: VM isolation
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ability to restore to prior states
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Hardware abstraction
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Network segmentation support
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Encapsulation and portability
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Physical security
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fine privilege control
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Integrated firewalls
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Attack surface reduction
  id: totrans-49
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Moving to a virtual infrastructure reduces your physical attack surface in accordance
    with your virtual machine density. The more physical servers we convert to Proxmox
    VE guests, in conjunction with how densely we pack guests onto our Proxmox VE
    hosts, the fewer servers there are to ensure protection from potentially devastating
    physical attacks, for example.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
- en: Virtualization has an inherent potential to reduce the attack surface of an
    infrastructure in several ways; we'll focus here on how it reduces the number
    of physical hosts providing services.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
- en: '![Attack surface reduction](img/B01784_07_02-3.png)'
  id: totrans-52
  prefs: []
  type: TYPE_IMG
- en: Visualizing attack vectors and the attack surface
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
- en: Where we were once protecting, say, 15 machines from physical attack, there
    might be one or two physical Proxmox VE hosts to protect, for example.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
- en: We have to be critical here and realize this can open up new vulnerabilities
    and frustrating problems to resolve.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
- en: 'The Proxmox VE host becomes monolithic, so:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
- en: If there's an unpatched vulnerability in Debian 8, PVE, or KVM and QEMU, the
    confidentiality, integrity, and availability of all the virtual machines hosted
    by that instance are also threatened.
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: If an attacker gains physical access to the PVE host or hosts, the security
    and sanctity of all guests, both containers and virtual machines, are most certainly
    in doubt. If that's troubling, consider too that your snapshots and backups may
    have disappeared.
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: There's no doubt virtualization reduces the overall attack surface of your infrastructure,
    and in several ways; however, as articulated previously, this does not relieve
    us of any burdens, it just gives those burdens higher stakes while making them
    less complex to address.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
- en: Isolation
  id: totrans-60
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Virtualization encourages isolation. One VM doesn't naturally affect another
    VM, even if it is on the same host.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
- en: This tendency toward isolation suggests that destructive malware infecting a
    virtual server won't necessarily escape and spread to other virtual servers, even
    when they share a host.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
- en: If there's an oversight however, such as naively sharing data between two guests,
    or (worse) sharing data between a guest and the host, attacks can be devastating. Therefore,
    resist the temptation to create file shares among VMs on PVE; for the sake of
    security, do not share files between a Proxmox VE host and any of its guests.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
- en: Here the importance of documenting your infrastructure and writing a well-deliberated
    and well-enforced security policy is clear.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
- en: Availability of prior states
  id: totrans-65
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In the event an attack against a Proxmox VE guest succeeds, the guest can be
    rolled back to a prior state via backups or snapshots, effectively minimizing
    the time it takes to recover from an attack. (Note, however, that any data or
    information that changed between the time of the selected backup and the moment
    it is restored will be lost during a rollback.)
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
- en: '![Availability of prior states](img/B01784_07_03-3.png)'
  id: totrans-67
  prefs: []
  type: TYPE_IMG
- en: Rolling back involves applying a former version of a guest's storage file to
    the virtual machine or container
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
- en: So, it's logical that the ability to restore to a prior state isn't an unconditional
    advantage of virtualization, even if it's an integrated feature of Proxmox VE;
    snapshots and backups must be integral to the well-thought out and executed lifecycle
    of the PVE guests and part of a well-defined and enforced policy.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
- en: Hardware abstraction
  id: totrans-70
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: A fundamentally compelling characteristic of full virtualization is the abstraction
    of a computer from the physical hardware.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
- en: Imagine that a Proxmox VE guest with a well-organized trove of information collected
    over months is compromised and its hard drive destroyed in an attack that would
    have rendered physical storage unsalvageable—destruction of storage on a virtual
    disk does no damage to the physical storage that hosted it. When prior states
    are available to restore from, a snapshot or a backup can be restored onto the
    same hardware.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
- en: Without condition, damage dealt to virtual components has no effect on the physical
    host. This is an inherent reward for abstraction.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
- en: Segmentation
  id: totrans-74
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: If an infrastructure is to be virtualized with Proxmox VE, take advantage of
    the network segmentation technologies it supports, such as VLAN tags, bridges,
    IPs masquerading with NAT, and per-guest firewalls. Use these technologies to
    make VMs or containers available to a limited population of users with legitimate
    business needs that call for a limited level of access.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
- en: '![Segmentation](img/B01784_07_04-4.png)'
  id: totrans-76
  prefs: []
  type: TYPE_IMG
- en: Visualizing segmentation and trust zones with Proxmox VE
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
- en: To make the most of this valuable potential, think rigorously about sufficient
    trust zones as you plan your infrastructure.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
- en: Note
  id: totrans-79
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: A trust zone is a network segment within which data flows relatively unrestricted,
    while data flowing in and out of the trust zone is subject to stronger restrictions.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  id: totrans-81
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '**Open vSwitch**'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
- en: As an alternative to the bridges, bonds, and VLAN interfaces native to Linux,
    Proxmox VE supports Open vSwitch.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
- en: Open vSwitch is an open source, software implementation of a distributed, multilayer
    switch. It's production-ready and designed with virtualization specifically in
    mind.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
- en: To learn more about Open vSwitch, including features and potential drawbacks,
    visit its website at [http://openvswitch.org](http://openvswitch.org). To learn
    more about Proxmox VE's support of Open vSwitch, visit the Proxmox wiki at [https://pve.proxmox.com/wiki/Open_vSwitch](https://pve.proxmox.com/wiki/Open_vSwitch).
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
- en: Encapsulation and portability
  id: totrans-86
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: As described in [Chapter 5](ch05.html "Chapter 5. Working with Virtual Disks"), *Working
    with Virtual Disks*, with full virtualization all information on virtual servers,
    including boot disks, is saved as a file; this is an example of encapsulation.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
- en: Invaluably, encapsulation serves the portability of the VM; even as an attacker
    works to compromise a PVE host, its guests can be moved, without halting, to another
    host in a cluster. Live migration—migrating an active guest from one PVE host
    to another in the same cluster—helps assure availability even in the case of an
    ongoing attack against a host.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  id: totrans-89
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '**On Clustering and High Availability**'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
- en: For more on these topics, see *Mastering Proxmox, Proxmox High Availability*,
    and *Proxmox Cookbook* from Packt Publishing.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
- en: Physical security
  id: totrans-92
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: When an attacker gains access to a physical server, the availability, confidentiality,
    and integrity it should demonstrate are absolutely in doubt.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
- en: To put it bluntly (and to appropriate a phrase from Scott Culp), if an attacker
    has physical access to your Proxmox VE host, it's not your host anymore.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
- en: As described previously, a very powerful benefit of virtualization is that the
    number of physical hosts decreases as the services they provided move to VMs or
    containers, effectively reducing the attack vectors, since the fewer machines
    there are to find physical space for, the fewer there are to gain illegitimate
    access to.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
- en: Nevertheless, include in your policy the procedures by which the PVE hosts,
    the storage, and the intermediate distribution frame (that is, the wiring closet)
    are to be physically secured against illegitimate access, and enforce the policy
    consistently and without exception; this means you've mitigated a potentially
    devastating threat.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
- en: Fine privilege control
  id: totrans-97
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: With defense in depth and the principle of least-privilege in mind, consider
    the fine control of user access and restrictions that's realized when each service
    is moved to a discrete VM or container—in contrast to keeping multiple services
    running on a single physical server.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
- en: In a virtual infrastructure, a user privileged to access one service is not
    explicitly privileged to another as we can imagine they would be if the services
    were shared on a single hardware server. We can restrict access to Debian, finely
    define a user's role in relation to each VM and container via the PVE web interface,
    and further refine privileges on the guest OS level and the application level.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
- en: '![Fine privilege control](img/B01784_07_06-3.png)'
  id: totrans-100
  prefs: []
  type: TYPE_IMG
- en: Some layers to consider in the practice of "defense in depth"
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
- en: By default, the Proxmox VE management interface is authorized through GNU/Linux's
    default authentication system (**PAM**), and root is the only user. However, the
    authentication system for the web interface can be changed from PAM to PVE's system,
    to Active Directory, or to LDAP.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
- en: Whatever the authentication mechanism, specific users can be assigned different
    roles, or privileges, for each individual VM or container.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  id: totrans-104
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '**PVE User Management**'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
- en: 'To learn more about PVE''s user management features, see the user management
    page of the Proxmox wiki: [https://pve.proxmox.com/wiki/User_Management](https://pve.proxmox.com/wiki/User_Management).'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
- en: There are a host of predefined roles for users or groups that ship with PVE;
    and we can create new roles with different privileges and restrictions as necessary.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
- en: PVE firewall features
  id: totrans-108
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Proxmox VE provides flexible firewall features based on iptables.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
- en: These features can be configured via the administration interface or the command
    line to provide several layers of protection, as this allows rulesets to accept
    and reject traffic per guest server, per PVE host, and for an entire cluster.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
- en: Note
  id: totrans-111
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: To learn more about the Proxmox VE firewall, visit the official documentation
    at [https://pve.proxmox.com/wiki/Proxmox_VE_Firewall](https://pve.proxmox.com/wiki/Proxmox_VE_Firewall),
    where detailed configuration examples are available.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
- en: It's rather critical that PVE be protected by a firewall.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
- en: 'Proxmox VE 3.4 relies on the following ports:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
- en: 8006 (web interface)
  id: totrans-115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 85 (pvedaemon—configured to listen only on 127.0.0.1)
  id: totrans-116
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 5900-5999 (VNC web console)
  id: totrans-117
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 22 (sshd; used for cluster actions as well as a means to access a remote shell)
  id: totrans-118
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 5404, 5405 UDP (CMAN multicast—if you run a cluster)
  id: totrans-119
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Proxmox VE 4.0 saw some changes to Proxmox VE''s port usage:'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
- en: 8006 (web interface)
  id: totrans-121
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 85 (pvedaemon-configured to listen only on 127.0.0.1)
  id: totrans-122
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 5900-5999 (VNC web console)
  id: totrans-123
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 3128 (SPICE console)
  id: totrans-124
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 22 (SSH access-now optional)
  id: totrans-125
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 111 (rpcbind)
  id: totrans-126
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 5404, 5405 UDP (corosync multicast if you run a cluster)
  id: totrans-127
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Use your firewall experience to restrict access to these ports from subnets
    and IP ranges that don't have a legitimate need to access them.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
- en: Aggravated vulnerabilities
  id: totrans-129
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Virtualization's potential security benefits are certainly compelling, but many
    are quite conditional and altogether they are certainly no panacea.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
- en: Moreover, virtualization introduces new threats to an infrastructure—threats
    that otherwise either wouldn't be a concern at all or are exacerbated by virtualization.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
- en: 'This section calls attention to vulnerabilities that are historically problematic
    for virtual infrastructures:'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
- en: Denial of service attacks
  id: totrans-133
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: VM escape and hyper jumping
  id: totrans-134
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Server sprawl
  id: totrans-135
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Growing complexity
  id: totrans-136
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Denial of service attacks
  id: totrans-137
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**Denial of service** (**DoS**) attacks come in a wide variety of flavors.
    However, the immediate intent is the same: overwhelming a network, and its administrators,
    by generating large amounts of illegitimate traffic.'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
- en: '**Distributed denial of service** (**DDoS**) and DoS attacks are cheap, effective,
    and increasingly common. On the surface, they seem to be most effective at rendering
    services unavailable or unusable. More insidious, perhaps, is that, by keeping
    administrators'' hands full as they cope with illegitimate traffic, other attacks
    can be launched without attracting their immediate attention.'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
- en: Unfortunately, DoS attacks are particularly powerful against virtual infrastructures,
    wherein overwhelmed virtual hosts will certainly threaten the availability of
    virtual guests and the services they provide.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
- en: '![Denial of service attacks](img/B01784_07_07-3.png)'
  id: totrans-141
  prefs: []
  type: TYPE_IMG
- en: Visualizing a DDoS attack
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
- en: 'In addition, research published in 2013 found that DoS attacks are significantly
    more potent where virtual machines are involved:'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
- en: '|   | *"[Under] DoS attack, the performance of a web server hosted in a VM
    can degrade by up to 23%, while that of a nonvirtualized server hosted on the
    same hardware degrades by only 8%. Even with relatively light attacks, the file
    system and memory access performance of hypervisor-based virtualization degrades
    at a much higher rate than their nonvirtualized counterparts."* |   |'
  id: totrans-144
  prefs: []
  type: TYPE_TB
- en: '|   | -- *Performance of Virtual Machines Under Networked Denial of Service
    Attacks: Experiments and Analysis, Shea and Liu, [http://www.cs.sfu.ca/~jcliu/Papers/PerformanceofVirtualMachines.pdf](http://www.cs.sfu.ca/~jcliu/Papers/PerformanceofVirtualMachines.pdf)*
    |'
  id: totrans-145
  prefs: []
  type: TYPE_TB
- en: Clearly, in some areas, we may take solace in some security benefits of virtualization;
    however, DoS and DDoS attacks are one threat we cannot turn away from.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
- en: When migrating services from physical machines to Proxmox VE guests, work to
    define and deploy not only preventative measures, but also rapid response protocols.
    This calls for the implementation of monitoring and alert systems, as well as
    a firewall configuration that deliberately takes such attacks into consideration.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
- en: Each type of DoS attack has its own array of detection and mitigation strategies.
    To mitigate against SYN flooding attacks, for example, see section three of [http://tools.ietf.org/html/rfc4987](http://tools.ietf.org/html/rfc4987).
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
- en: VM escape and hyper jumping
  id: totrans-149
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**Virtual machine escape** occurs when an attacker successfully "breaks out"
    of a virtual machine and interacts with the host operating system.'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: '**虚拟机逃逸**发生在攻击者成功“突破”虚拟机并与主机操作系统交互时。'
- en: In a similar vein, **VM jumping**, or hyper jumping as it is sometimes referred
    to, is the process of gaining illegitimate access to a virtual machine via another
    virtual machine.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 同样地，**虚拟机跳跃**，有时也称为超跳，是通过另一个虚拟机非法访问虚拟机的过程。
- en: Presumably encapsulated and isolated environments, virtual machines run operating
    systems that shouldn't know that they are virtualized; there should be no way
    to break out of the virtual machine to interact directly with the parent hypervisor.
    For the same reasons, it should be impossible to illegitimately access a virtual
    machine through another virtual machine.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 可以推测，封装和隔离的环境中，虚拟机运行的操作系统不应该知道它们是虚拟化的；不应该有任何方式能让虚拟机突破虚拟化，与父级虚拟机监控程序直接交互。出于相同的原因，通过另一个虚拟机非法访问虚拟机应该是不可能的。
- en: VM escape exploits are particularly devastating since the hypervisor controls
    the execution of all of the virtual machines and containers on the host. Consequently,
    an attacker that can gain access to the hypervisor can then win control over every
    guest running on the PVE host; since the hypervisor is between the physical hardware
    and the guest operating system, a successful VM escape will enable attackers to
    simply circumvent security controls implemented on the virtual machine.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 虚拟机逃逸漏洞特别具有毁灭性，因为虚拟机监控程序控制着主机上所有虚拟机和容器的执行。因此，能够访问虚拟机监控程序的攻击者将能够控制在PVE主机上运行的所有虚拟机；由于虚拟机监控程序位于物理硬件和虚拟机操作系统之间，成功的虚拟机逃逸将使攻击者能够简单地绕过在虚拟机上实施的安全控制。
- en: VM escapes and hyper jumping should be an intellectual exercise, a fascinating
    theoretical problem. Unfortunately, that's simply not the case.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 虚拟机逃逸和虚拟机跳跃本应是一个智力练习，是一个迷人的理论性问题。不幸的是，事实并非如此。
- en: 'During the production of this book, for example, several VM escape vulnerabilities
    have emerged. Perhaps the vulnerability that captured the most attention was the
    one dubbed *VENOM* by researchers ([http://venom.crowdstrike.com/](http://venom.crowdstrike.com/)):'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，在本书的制作过程中，已经出现了几种虚拟机逃逸漏洞。或许最引人注目的漏洞是被研究人员称为*VENOM*的漏洞（[http://venom.crowdstrike.com/](http://venom.crowdstrike.com/)）：
- en: '*"VENOM, CVE-2015-3456, is a security vulnerability in the virtual floppy drive
    code used by many computer virtualization platforms. This vulnerability may allow
    an attacker to escape from the confines of an affected virtual machine (VM) guest
    and potentially obtain code-execution access to the host. Absent mitigation, this
    VM escape could open access to the host system and all other VMs running on that
    host, potentially giving adversaries significant elevated access to the host''s
    local network and adjacent systems.*'
  id: totrans-156
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '*“VENOM，CVE-2015-3456，是一个存在于许多计算机虚拟化平台使用的虚拟软盘驱动程序中的安全漏洞。该漏洞可能允许攻击者突破受影响虚拟机（VM）的限制，进而可能获得对主机的代码执行访问权限。如果没有采取缓解措施，这种虚拟机逃逸可能会打开对主机系统及该主机上运行的所有其他虚拟机的访问权限，从而可能使攻击者获得对主机本地网络及相邻系统的显著权限。”*'
- en: '*"Exploitation of the VENOM vulnerability can expose access to corporate intellectual
    property (IP), in addition to sensitive and personally identifiable information
    (PII), potentially impacting the thousands of organizations and millions of end
    users that rely on affected VMs for the allocation of shared computing resources,
    as well as connectivity, storage, security, and privacy."*'
  id: totrans-157
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '*“VENOM漏洞的利用可能暴露企业知识产权（IP）的访问权限，除此之外，还可能泄露敏感的个人身份信息（PII），并可能影响成千上万的组织和依赖受影响虚拟机（VM）分配共享计算资源的数百万终端用户，此外还可能影响连接性、存储、安全性和隐私。”*'
- en: '![VM escape and hyper jumping](img/B01784_07_09-3.png)'
  id: totrans-158
  prefs: []
  type: TYPE_IMG
  zh: '![虚拟机逃逸与虚拟机跳跃](img/B01784_07_09-3.png)'
- en: Venom attack scenario
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: Venom攻击场景
- en: Unfortunately, the many "computer virtualization platforms" invoked by the disclosure
    included all QEMU-based platforms; this includes Proxmox VE.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 不幸的是，披露中提到的许多“计算机虚拟化平台”包括了所有基于QEMU的虚拟化平台；这也包括Proxmox VE。
- en: 'In the case of VENOM, a patch was available from Debian the same day the vulnerability
    was disclosed. A PVE administrator simply had to upgrade, in Debian fashion, and
    then restart guest virtual machines:'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 对于VENOM漏洞，Debian在漏洞披露当天就发布了补丁。PVE管理员只需要按照Debian的方式升级，然后重启虚拟机：
- en: '[PRE0]'
  id: totrans-162
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: After a shutdown and restart of all VMs on the Proxmox VE host, the vulnerability
    was gone. There was no need to even reboot the PVE host.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
- en: Note
  id: totrans-164
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The bug was introduced unknowingly in the QEMU source when the QEMU Floppy Drive
    Controller was introduced in 2004.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
- en: So it seems virtualization's celebrated isolation is not absolute.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
- en: 'From VENOM, we can learn some direct preventative actions that can be taken
    to mitigate emerging VM escape vulnerabilities:'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
- en: Keep Proxmox VE and Debian routinely patched. There are a variety of ways to
    automate the patching process; we'll walk through one method in the next section.
    Since Proxmox VE is patched through the same mechanism as Debian, patches to both
    are applied simultaneously.
  id: totrans-168
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Patch operating systems and applications running on virtual machines and containers.
    On Debian and Ubuntu guests, use the apt tool; on Microsoft Windows and Server
    guests, set a reasonable Windows Update policy to ensure urgent updates are applied.
  id: totrans-169
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Don''t* install virtual machine features you do not need. Doing so increases
    your attack surface unnecessarily. Be particularly attentive to what virtual devices
    are attached to your VM; if you don''t need a virtual optical drive or floppy
    disk drive on the VM, either deliberately avoid installing them or remove them
    from the VM when you no longer need them.'
  id: totrans-170
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Avoid running software and services that are not essential to your guests' primary
    roles.
  id: totrans-171
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: However, weigh the benefits of running endpoint security software on a virtual
    machine; in his September 2015 article, "The Curious Case of the Escaping Virtual
    Machine," Bunmi Sowandi suggests that such software will detect malicious code
    trying to run in a VM before it has a chance to "escape". ([http://vmturbo.com/about-virtualization/the-curious-case-of-the-escaping-virtual-machine/](http://vmturbo.com/about-virtualization/the-curious-case-of-the-escaping-virtual-machine/))
  id: totrans-172
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: As we learned from VENOM, the best protection against VM escape and hyper jumping
    exploits is routine and well-thought out patch management.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
- en: Virtualization sprawl
  id: totrans-174
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In the context of virtual infrastructure, sprawl refers to the tendency of virtual
    servers to proliferate faster than administrators can properly manage. Sprawl
    encourages poor management decisions, hasty undeliberated action, sloppy configuration
    mistakes, and missed opportunities to mitigate threats.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
- en: From a security perspective, therefore, virtualization sprawl presents dire
    problems as administrators miss security patches, fail to harden services, and
    perhaps expose the network, the hypervisors, and storage nodes unnecessarily.
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
- en: 'A helpful article on the Hewlett Packard site suggests some best practices
    to reduce the impact of sprawl effectively. Like many security issues explored
    in this chapter, the suggested solution is excellent planning, deliberated deployment,
    and writing and enforcing a security policy that includes VM lifecycle management.
    The article ([http://h30499.www3.hp.com/t5/Grounded-in-the-Cloud/5-ways-to-get-control-of-virtualization-sprawl/ba-p/6170959](http://h30499.www3.hp.com/t5/Grounded-in-the-Cloud/5-ways-to-get-control-of-virtualization-sprawl/ba-p/6170959))
    puts particular emphasis on the following:'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
- en: Whenever possible, create VMs and containers from "golden images" that include
    patches, patch policy, audit policies, software, and software policies
  id: totrans-178
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![Virtualization sprawl](img/B01784_07_10-3.png)'
  id: totrans-179
  prefs: []
  type: TYPE_IMG
- en: End-to-end lifecycle and policy management for VMs and VM template
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
- en: Proactively update policy-based enforcement on VMs as well as VM templates (and
    containers and container templates)
  id: totrans-181
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![Virtualization sprawl](img/B01784_07_11-3.png)'
  id: totrans-182
  prefs: []
  type: TYPE_IMG
- en: Systematically manage the lifecycle and compliance of virtual servers from end
    to end (including, for example, routine snapshots or backups, and applying patches
    and upgrades)
  id: totrans-183
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The article is insistent on conveying two messages successfully:'
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
- en: A well-thought-out security policy, which administrators can realistically comply
    with, is absolutely essential for keeping sprawl in check
  id: totrans-185
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tasks that can be automated must be automated
  id: totrans-186
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Virtualization sprawl encourages disorder; tame it with automation driven by
    a well-thought-out policy that's followed in the practice of daily administration.
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
- en: At war with complexity
  id: totrans-188
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '|   | *"A network architecture should be as clean and simple to understand
    as it can be. It should be possible to briefly...draw a few simple pictures to
    illustrate that design...."**"Having a clear understanding of the traffic flow
    on your network puts you in control of it. Not understanding the network puts
    you at the mercy of its vagaries."* |   |'
  id: totrans-189
  prefs: []
  type: TYPE_TB
- en: '|   | -- *The Practice of System and Network Administration, 2E 2007* |'
  id: totrans-190
  prefs: []
  type: TYPE_TB
- en: Given that virtualization encourages sprawl and given that secure virtual infrastructures
    demand segmentation, it's not entirely surprising that virtualization encourages
    problematic network complexity.
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
- en: As network complexity goes up, so too does the pain that administrators suffer,
    since they must keep accurate documentation, troubleshoot connectivity problems
    on the fly, and sometimes provide actionable information for third-party support
    providers.
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
- en: The "chaos approach" encouraged by infrastructure virtualization is not a reliable
    model to use in a network where the availability of every component matters (*The
    Practice of System and Network Administration*).
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
- en: To limit network complexity, consider that the campus' network architects, engineers,
    and administrators should all be able to sketch, without aids, the key features
    and basic structure of the network topology.
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
- en: According to Limoncelli, Hogan, and Chalup, the network architecture is neither
    clean enough, comprehensible enough, nor simple enough if this network map can't
    be relatively easily rendered. Maps of the physical and logical networks should
    absolutely be part of the system documentation and revised to reflect any modifications
    from the previous topology.
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
- en: Taking the risk of sounding redundant squarely in the face, the best way to
    tame network complexity is to ensure the network can be explained and diagrammed,
    logically and physically, without the support of additional resources. If that's
    not the case, re-evaluate the architecture and see where it can be simplified
    without sacrificing security.
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
- en: Taking action
  id: totrans-197
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'If you''re not yet virtualizing infrastructure, or you''re not otherwise in
    a position to develop a strategic security policy, there''re tactics you can take
    in the meantime to mitigate some threats to your Proxmox virtual environment:'
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
- en: Secure the bootloader
  id: totrans-199
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: If possible, lock down the BIOS/UEFI
  id: totrans-200
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Absolutely prohibit remote access to Proxmox VE's user interfaces
  id: totrans-201
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Disable root access via SSH; consider prohibiting sudo access as well
  id: totrans-202
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Use Fail2ban to prevent brute-force attacks
  id: totrans-203
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Rely on key-based SSH authentication
  id: totrans-204
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Maintain security patches for Proxmox VE and its guests
  id: totrans-205
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Consider an enterprise support subscription
  id: totrans-206
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The practical procedures that follow are a strong (and immediate) complement
    to the less concrete strategies articulated previously.
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
- en: This concluding section thus walks through these immediate tactical mitigation
    objectives to provide immediate support as you come to terms with Proxmox VE.
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
- en: Protecting the boot process
  id: totrans-209
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In this section, we work to assure that OS and application-level authentication
    isn't rendered useless by an attacker with physical access who can thoroughly
    bypass these mechanisms.
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
- en: 'We can think of booting as a four-stage process:'
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
- en: '![Protecting the boot process](img/B01784_07_12-3.png)'
  id: totrans-212
  prefs: []
  type: TYPE_IMG
- en: A generic boot process
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
- en: 'During this process, the system can be vulnerable:'
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
- en: An unsecured BIOS can be directed to boot from an attacker's storage device,
    allowing them to compromise the confidentiality and integrity of data stored on
    the Proxmox VE host and interfere with the availability of the services and virtual
    servers the host has intended to provide.
  id: totrans-215
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: By manipulating an unsecured bootloader, attackers can gain root access to a
    machine and compromise its confidentiality, integrity, and availability.
  id: totrans-216
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Using either method, the attacker effectively owns the machine. Let's do our
    best to lock down the BIOS/UEFI on our hosts and GRUB 2.0, the bootloader for
    Proxmox VE 3.4 and 4.1.
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  id: totrans-218
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: To learn more about the Debian bootstrap process, visit [https://www.debian.org/doc/manuals/debian-reference/ch03.en.html#_an_overview_of_the_boot_strap_process](https://www.debian.org/doc/manuals/debian-reference/ch03.en.html#_an_overview_of_the_boot_strap_process).
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
- en: Locking down the bootloader
  id: totrans-220
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'OS-level authentication restrictions can be very simply defeated on an otherwise
    secure Proxmox VE machine by manipulating GRUB 2, Proxmox VE''s bootloader. See,
    for example, [http://linuxconfig.org/ubuntu-14-04-lost-password-recovery](http://linuxconfig.org/ubuntu-14-04-lost-password-recovery),
    wherein the process is fully articulated. The gist of an attack looks like this:'
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
- en: Reboot and enter the GRUB 2 menu immediately after startup.
  id: totrans-222
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Modify the boot options.
  id: totrans-223
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Boot the system based on your modifications.
  id: totrans-224
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Change the root password of the system.
  id: totrans-225
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Shutdown and restart.
  id: totrans-226
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Login with the new password.
  id: totrans-227
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: For an experienced GNU/Linux administrator, it's likely a familiar process;
    it's identical to how we reset a lost root password.
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
- en: GRUB 2 offers extensive customization, and with it, the power to disable access
    to GRUB 2 options generally, as well as to specific menu options.
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
- en: We will walk through the universal protection of GRUB 2 menu entries to enable
    access by a single superuser with an unencrypted password. This will prohibit
    attackers as well as sloppy or disgruntled colleagues from editing a GRUB entry
    or accessing a GRUB command line.
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
- en: 'To follow this procedure, you must:'
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
- en: Have root privileges
  id: totrans-232
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Determine a superuser name and password to be used (we will use the name `admin`
    and the password `pve`)
  id: totrans-233
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Edit GRUB configuration files from the command line
  id: totrans-234
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Update the GRUB 2 configuration with the update-grub command
  id: totrans-235
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Let''s get started:'
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
- en: 'Log into a shell on your Proxmox VE host; if PVE is configured with an IP address
    of 192.168.1.200, access a shell via SSH from a workstation on the same network:'
  id: totrans-237
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE1]'
  id: totrans-238
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Open `/etc/grub.d/00_header` using a plaintext editor; this example uses `nano`
    as the editor:'
  id: totrans-239
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE2]'
  id: totrans-240
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Append the following lines to the bottom of the text:'
  id: totrans-241
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE3]'
  id: totrans-242
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Save the document and exit the editor; in `nano`, use  *Ctrl* +*X*, then *Y*,
    and then  *Enter* to return to a shell prompt.
  id: totrans-243
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Open `/etc/grub.d/10_linux` in `nano`:'
  id: totrans-244
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE4]'
  id: totrans-245
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Seek the following group of lines in `/etc/grub.d/10_linux`:'
  id: totrans-246
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE5]'
  id: totrans-247
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'In the last line, insert `--unrestricted` between `${CLASS}` and `\$menuentry;`
    the resultant line appears as follows:'
  id: totrans-248
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE6]'
  id: totrans-249
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Save the revised document and exit the editor; in `nano`, use  **Ctrl** +  **X**
    to exit, press  **Y** to confirm, and then press  **Enter** to return to a shell
    prompt.
  id: totrans-250
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Finally, prompt GRUB 2 to reconfigure itself based on the changes:'
  id: totrans-251
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE7]'
  id: totrans-252
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: When you reboot, you should find that PVE will start normally if left uninterrupted.
    However, if you try to edit a menu entry, boot from a submenu, or access a GRUB
    command line, you should find that you're required to authenticate.
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  id: totrans-254
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: For more on GRUB security, visit the following links:[https://help.ubuntu.com/community/Grub2/Passwords](https://help.ubuntu.com/community/Grub2/Passwords)
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
- en: '[http://www.gnu.org/software/grub/manual/grub.html#Security](http://www.gnu.org/software/grub/manual/grub.html#Security)'
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
- en: As the article at [http://opensourceforu.efytimes.com/2013/03/playing-hide-and-seek-with-passwords/](http://opensourceforu.efytimes.com/2013/03/playing-hide-and-seek-with-passwords/)
    points out, this password can still be bypassed by configuring BIOS/UEFI to boot
    from the attacker's boot device. If your hardware allows, you probably want to
    secure this first stage of the boot process so would-be malefactors won't be able
    to finagle the Proxmox VE host to boot from their own devices.
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
- en: Locking down BIOS/UEFI
  id: totrans-258
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: By securing the bootloader, GRUB 2, we can prevent a user from bypassing OS
    security and gaining root privileges on the Proxmox VE host.
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
- en: However, attackers can still simply bypass even the bootloader's security by
    booting instead from their own media. From there, they can mount the machine's
    secondary storage and make immediate decisions for you about its confidentiality
    and integrity. If an attacker is particularly deliberate, he/she can install a
    cunning means to access the machine remotely at a later date.
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
- en: To mitigate this threat, we can, depending on our firmware, password protect
    the boot device settings in either the BIOS or UEFI.
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
- en: Since there's an unwieldy array of BIOS and UEFI firmware vendors, we'll articulate
    a vision for what we'd like to do, and then hope our systems will cooperate.
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
- en: 'The objective is to manipulate the BIOS/UEFI so it operates as follows:'
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
- en: Allows the system to cold-boot without any interruption
  id: totrans-264
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Requires authentication to change the boot device
  id: totrans-265
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Prohibits entering the setup manager without authentication
  id: totrans-266
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: This configuration can be tricky and is largely contingent on the BIOS/UEFI
    vendor.
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
- en: 'Ideally, a machine with BIOS will allow you to do the following:'
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
- en: Enter the BIOS configuration when starting your PC. After power on, press the
    prompted key to enter **BIOS Setup Utility**; sometimes, it's the F key, **Delete**,or **ESC**.
    On some Lenovo machines, it's **Enter**. In the case of VMWare's PhoenixBIOS, **F2**
    is used to access the setup utility (access to this interface is what we want
    to make impossible or frustrating for an attacker):![Locking down BIOS/UEFI](img/image_07_012.png)
  id: totrans-269
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: PhoenixBIOS, included with VMware Workstation, uses F2 to enter setup, F12 for
    network boot, and ESC for the boot menu.
  id: totrans-270
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Once you enter **SETUP**, navigate to a security tab. On the machines I've accessed,
    setting the administrator password will require the same credentials of anyone
    trying to enter the setup utility. On the PhoenixBios for VMware Workstation virtual
    machines, I can still boot without authenticating. So far so good.
  id: totrans-271
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: However, when the preceding screenshot invites users to press  *F12* for network
    boot or *Esc* for the boot menu, they'll find these are unrestricted. In this
    case, any attempt to lock down BIOS for security is really quite devastated.
  id: totrans-272
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: If available, navigate to the boot settings in the SETUP utility. If the option
    is available in the Boot menu, disable devices that aren't used and that you don't
    want to use, such as network boot and boot from optical drives or USB devices.
  id: totrans-273
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Again, depending on availability, navigate to boot priority and set the boot
    priority of the remaining devices. Some systems allow you to use the  **D** key
    to disable devices.
  id: totrans-274
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Ideally, your BIOS setup tool allows you to disable boot devices or password
    protect the boot device menu as well as the SETUP tool itself. Furthermore, it'll
    hopefully let you set a supervisor password without prompting you to authenticate
    to boot. If the boot process is interrupted to ask for authentication, there's
    the potential for a lot of unnecessary, and perhaps unplanned, down-time for the
    services users are relying on.
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
- en: The settings recommended previously were possible in about half of the physical
    machines I surveyed for the chapter.
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
- en: If your machine does provide for this ideal scenario, realize that, at best,
    losing the BIOS passwords means you've lost your license to reconfigure or troubleshoot
    the physical machine. In case of a lost password, you'll need to research how
    to bypass the security that you once felt was keeping bad guys out. The reset
    process is awkward, inconsistent, a time sink, and may not work.
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
- en: It's essential, therefore, to keep a safe copy of any credentials you use to
    restrict access to BIOS or UEFI.
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
- en: To learn more about securing the specific BIOS/UEFI system for your Proxmox
    VE host, look for the documentation from the computer or BIOS manufacturers or
    from community users on the Web.
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
- en: If protecting the boot process to your satisfaction is not possible with the
    BIOS or UEFI you're stuck with, compensate by making sure access to the physical
    host is absolutely secure with alarmed door locks, key passes that log ingress
    and egress, and so on.
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  id: totrans-281
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '**Secure Boot and Proxmox**'
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
- en: Proxmox VE does not support the Secure Boot feature of UEFI.
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
- en: Hardening the OS and hypervisor
  id: totrans-284
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The objective here is to ensure the security of both Proxmox VE (3.4 and 4.0)
    and Debian, its underlying operating system. Because Proxmox VE and Debian are
    inextricably bound, it's appropriate to address them together.
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
- en: Prohibit remote access to the hypervisor
  id: totrans-286
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Pundits specifically committed to secure virtual infrastructures are insistent
    on this point: remote access to the hypervisor must be forbidden.'
  id: totrans-287
  prefs: []
  type: TYPE_NORMAL
- en: 'This directive must be qualified: it''s absolutely appropriate it''s absolutely
    appropriate to run a Proxmox VE host heedlessly (sans display) and to access it
    from another workstation on the same LAN via both SSH and the web-based administration
    interface.'
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
- en: What you want to avoid at all costs is making PVE ports, particularly 22 and
    8006, public-facing and accessible to the Internet. Unless VPN is configured,
    Proxmox VE absolutely should not be available from outside the LAN.
  id: totrans-289
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  id: totrans-290
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: OpenVPN is an open-source package for providing VPN services; if you're considering
    a VPN solution, read more about OpenVPN at [https:///wiki.debian.org/OpenVPN](https://wiki.debian.org/OpenVPN).
  id: totrans-291
  prefs: []
  type: TYPE_NORMAL
- en: Harden SSH
  id: totrans-292
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Proxmox VE is designed to have two access alternatives:'
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
- en: Access to a command line interface via SSH
  id: totrans-294
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Access via the Web-based administrative interface
  id: totrans-295
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: SSH must be an available option so administrators can make configuration changes
    to the underlying operating system. Moreover, as we saw in [Chapter 3](ch03.html
    "Chapter 3. Creating Containers"), *Creating Containers* and [Chapter 4](ch04.html
    "Chapter 4. Creating Virtual Machines"), *Creating Virtual Machines*, we may choose
    to take care of a significant amount of Proxmox VE administrative tasks via the
    command line.
  id: totrans-296
  prefs: []
  type: TYPE_NORMAL
- en: So SSH can't be disabled outright in the name of security. However, in the name
    of security assurance, we must fine-tune the configuration of SSH to mitigate
    threats, whether from disgruntled or sloppy colleagues or outside attacks.
  id: totrans-297
  prefs: []
  type: TYPE_NORMAL
- en: 'Our objectives here are as follows:'
  id: totrans-298
  prefs: []
  type: TYPE_NORMAL
- en: Disabling direct root account access via SSH
  id: totrans-299
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mitigating brute-force password attacks against SSH
  id: totrans-300
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Limiting access by IP
  id: totrans-301
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Using encrypted keys rather than passwords to authenticate over SSH
  id: totrans-302
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Disabling root account access via SSH
  id: totrans-303
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: This procedure is critical and absolutely necessary. First, let's create our
    own accounts with which to log in. We'll then use the new account to log in, escalate
    privileges using the `su -` command, and then follow a simple procedure to disable
    the root from logging in through SSH.
  id: totrans-304
  prefs: []
  type: TYPE_NORMAL
- en: 'Once this procedure is complete, we''ll log in using the new account for the
    foreseeable future; to perform a procedure that requires root''s privileges, we''ll
    simply use the `su -` command to temporarily escalate the privileges of this user
    account, by following these steps:'
  id: totrans-305
  prefs: []
  type: TYPE_NORMAL
- en: Choose a username and password you intend to use to administer Proxmox VE via
    SSH.
  id: totrans-306
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Via SSH, log in as the root using the credentials you created during the installation
    of Proxmox VE.
  id: totrans-307
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Use the adduser command, followed by the username you''ve chosen, to create
    a new account:'
  id: totrans-308
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE8]'
  id: totrans-309
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Follow the prompts to create and confirm the new account's password.
  id: totrans-310
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Enter the full name you'd like associated with the new account.
  id: totrans-311
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: You may choose to ignore the remaining prompts for additional information, such
    as office number, address, and telephone number.
  id: totrans-312
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Press *Y* and *Enter* to confirm the creation of the new user.![Disabling root
    account access via SSH](img/image_07_013.png)
  id: totrans-313
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Creating a new user within a command line prompt
  id: totrans-314
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Use the `exit` command to close the SSH session.
  id: totrans-315
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Reconnect to Proxmox VE using the new account name:'
  id: totrans-316
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE9]'
  id: totrans-317
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Use the `su -` command to escalate privileges and enter the root's password
    to continue.
  id: totrans-318
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Edit `/etc/ssh/sshd_config` using `nano`:'
  id: totrans-319
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE10]'
  id: totrans-320
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Seek the following section using the arrow keys or the  **PageDown** key:'
  id: totrans-321
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE11]'
  id: totrans-322
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'In this file, the `#` symbol signifies that the line is a comment and is not
    to be considered as part of the SSH daemon''s configuration. Let''s remove the `#`
    symbol from the second line to enable the directive:'
  id: totrans-323
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE12]'
  id: totrans-324
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Save and exit the revised configuration file:  *Ctrl* + *X*, *Y*, *Enter*.
  id: totrans-325
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'We can restart the SSH daemon without it affecting our session:'
  id: totrans-326
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE13]'
  id: totrans-327
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Now, let's test to ensure root can no longer log in. Start by entering `exit`
    to leave the `su` mode, and `exit` again to close SSH.
  id: totrans-328
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Start a new SSH session as the root:'
  id: totrans-329
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE14]'
  id: totrans-330
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE14]'
- en: Access should be denied, without the opportunity to enter a password.
  id: totrans-331
  prefs: []
  type: TYPE_NORMAL
- en: Preventing brute-force attacks against SSH
  id: totrans-332
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: As long as SSH daemon is configured to use password authentication, it's vulnerable
    to brute-force password attacks. One mitigation strategy is to install and configure
    Fail2ban, a powerful tool designed to detect attacks on a service and ban the
    offending IP address from which the attacks originate for a predefined period.
    Fail2ban effectively increases the cost in resources and the time attackers have
    to invest to continue a brute force password attack.
  id: totrans-333
  prefs: []
  type: TYPE_NORMAL
- en: 'To make use of Fail2ban, follow this procedure:'
  id: totrans-334
  prefs: []
  type: TYPE_NORMAL
- en: Login via SSH and your new user account.
  id: totrans-335
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Escalate privileges:'
  id: totrans-336
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE15]'
  id: totrans-337
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'Install Fail2ban:'
  id: totrans-338
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE16]'
  id: totrans-339
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'Copy the default configuration called `jail.conf` to a new file called `jail.local`:'
  id: totrans-340
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE17]'
  id: totrans-341
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'Open the new file in an editor such as `nano`:'
  id: totrans-342
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE18]'
  id: totrans-343
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'Cofirm Fail2ban''s configuration for SSH in the following stanza:'
  id: totrans-344
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE19]'
  id: totrans-345
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE19]'
- en: Save the file and exit `nano` with  *Ctrl* + *X*, *Y*,  *Enter*.
  id: totrans-346
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'If any changes were necessary, restart Fail2ban:'
  id: totrans-347
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE20]'
  id: totrans-348
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: Note
  id: totrans-349
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Fail2ban can also be configured to protect PVE's web-based administration interface
    from brute-force attacks.
  id: totrans-350
  prefs: []
  type: TYPE_NORMAL
- en: 'First, add the following to `/etc/fail2ban/jail.local`:'
  id: totrans-351
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE21]'
  id: totrans-352
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: Note
  id: totrans-353
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Then, create the filter by entering `nano /etc/fail2ban/filter.d/proxmox.conf`
    at the command line.
  id: totrans-354
  prefs: []
  type: TYPE_NORMAL
- en: 'Enter the following lines:'
  id: totrans-355
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE22]'
  id: totrans-356
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: Note
  id: totrans-357
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Save the file and exit `nano` with  *Ctrl* +*X*, *Y*, *Enter*. *Restart* Fail2ban
    to activate the new configuration:'
  id: totrans-358
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE23]'
  id: totrans-359
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: Note
  id: totrans-360
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'With Fail2ban configured as described previously, failure to authenticate successfully
    three times in a row in the web interface will prohibit the client from connecting
    again for a full hour:'
  id: totrans-361
  prefs: []
  type: TYPE_NORMAL
- en: '![Preventing brute-force attacks against SSH](img/B01784_07_15.png)'
  id: totrans-362
  prefs: []
  type: TYPE_IMG
- en: After three unsuccessful attempts to log in to the PVE web interface
  id: totrans-363
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  id: totrans-364
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '**More on Fail2ban**'
  id: totrans-365
  prefs: []
  type: TYPE_NORMAL
- en: To learn more about Fail2ban and how it works, visit [http://www.fail2ban.org/wiki/index.php/Main_Page](http://www.fail2ban.org/wiki/index.php/Main_Page).
  id: totrans-366
  prefs: []
  type: TYPE_NORMAL
- en: To learn more about Fail2ban and Proxmox VE, visit the Proxmox Wiki at [https://pve.proxmox.com/wiki/Fail2ban](https://pve.proxmox.com/wiki/Fail2ban).
  id: totrans-367
  prefs: []
  type: TYPE_NORMAL
- en: Relying on key-based authentication
  id: totrans-368
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Another way to secure SSH access to a Proxmox VE server is to rely on key-based
    authentication instead of password authentication. The advantage to this authentication
    method is that you can disable password authentication altogether and not have
    to worry about the strength of legitimate users' passwords. Another benefit is
    that you can use the same key to authenticate to any number of SSH servers.
  id: totrans-369
  prefs: []
  type: TYPE_NORMAL
- en: To make use of this feature, we'll start by generating an SSH key pair. Once
    you have a public and private key that can be used to authenticate, we'll place
    the public key on the PVE host so that we can use SSH key authentication to log
    in. Once these two procedures are complete, you'll check to see whether you can
    log in to your PVE host.
  id: totrans-370
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  id: totrans-371
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In the examples that follow, `rgoldman` is used as a placeholder for the username,
    while 192.168.1.200 is used as a placeholder for PVE's IP address. Please replace
    each as appropriate.
  id: totrans-372
  prefs: []
  type: TYPE_NORMAL
- en: 'On a workstation on the same LAN as the PVE host, generate an SSH key pair:'
  id: totrans-373
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE24]'
  id: totrans-374
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'Confirm the key location at the first prompt by pressing  **Enter**:'
  id: totrans-375
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE25]'
  id: totrans-376
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'At the next prompts, you may choose to create and confirm an optional passphrase;
    using a passphrase will prevent an attacker from accessing the PVE host from your
    workstation. On the other hand, you''ll have to enter the passphrase every time
    you wish to authenticate with the key:'
  id: totrans-377
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE26]'
  id: totrans-378
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'Look for confirmation that the key has been created—you should see an output
    to the terminal similar to the following:'
  id: totrans-379
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE27]'
  id: totrans-380
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE27]'
- en: An output similar to the preceding example confirms that you have a public and
    private key that you can use to authenticate.
  id: totrans-381
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Next, let's place the public key on the PVE host so that you can use the SSH
    key authentication to login.
  id: totrans-382
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Confirm the presence of the keys by listing the contents of `~/.ssh/`; ensure
    that both `id_rsa` and `id_rsa.pub` are present in the results:'
  id: totrans-383
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE28]'
  id: totrans-384
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'Next, push the new public key to the PVE host using the `ssh-copy-id` tool
    with the following syntax (assuming the username is `rgoldman` and the PVE host
    is at `192.168.1.200`):'
  id: totrans-385
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE29]'
  id: totrans-386
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'That''s it. Now confirm you can login without a password:'
  id: totrans-387
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE30]'
  id: totrans-388
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE30]'
- en: If you were able to login to your PVE account using SSH without a password,
    you have successfully configured SSH key-based authentication for your account.
  id: totrans-389
  prefs: []
  type: TYPE_NORMAL
- en: 'The image that follows illustrates the transaction:'
  id: totrans-390
  prefs: []
  type: TYPE_NORMAL
- en: '![Relying on key-based authentication](img/B01784_07_16-3.png)'
  id: totrans-391
  prefs: []
  type: TYPE_IMG
- en: SSH key authentication
  id: totrans-392
  prefs: []
  type: TYPE_NORMAL
- en: Note, however, that your password-based authentication mechanism is still active;
    the SSH server is still exposed to brute-force or social engineering attacks.
  id: totrans-393
  prefs: []
  type: TYPE_NORMAL
- en: 'The following steps will disable password-based authentication on your server.
    Certainly, don''t proceed here if you plan to access PVE from other hosts but
    haven''t copied the key yet (or if you are not yet confident with key-based authentication):'
  id: totrans-394
  prefs: []
  type: TYPE_NORMAL
- en: Using SSH, log in to the PVE host from a local workstation.
  id: totrans-395
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Escalate privileges:'
  id: totrans-396
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE31]'
  id: totrans-397
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'Open the SSH daemon configuration using `nano` or another plaintext editor:'
  id: totrans-398
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE32]'
  id: totrans-399
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'Browse the contents of the file for the following directive:'
  id: totrans-400
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE33]'
  id: totrans-401
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'Change the directive so it is as follows:'
  id: totrans-402
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE34]'
  id: totrans-403
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE34]'
- en: Save the file and close the editor with  *Ctrl* + *X*, *Y* , *Enter*.
  id: totrans-404
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Restart the SSH daemon:'
  id: totrans-405
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE35]'
  id: totrans-406
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE35]'
- en: We can now access Proxmox VE via SSH without worrying about the strength of
    our passwords or being vulnerable to brute force attacks or social engineering
    attacks.
  id: totrans-407
  prefs: []
  type: TYPE_NORMAL
- en: Note, however, it's imperative when we rely on key-based authentication that
    we keep our keys absolutely secure. This means, in part, remembering consistently
    to lock our workstations and protect our workstation accounts with strong passwords.
  id: totrans-408
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  id: totrans-409
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '**Learn more about SSH**'
  id: totrans-410
  prefs: []
  type: TYPE_NORMAL
- en: 'To learn more about SSH and authentication, consider visiting the following
    resources:'
  id: totrans-411
  prefs: []
  type: TYPE_NORMAL
- en: '[https://www.debian-administration.org/article/530/SSH_with_authentication_key_instead_of_password](https://www.debian-administration.org/article/530/SSH_with_authentication_key_instead_of_password)'
  id: totrans-412
  prefs: []
  type: TYPE_NORMAL
- en: '[https://www.digitalocean.com/community/tutorials/how-to-configure-ssh-key-based-authentication-on-a-linux-server](https://www.digitalocean.com/community/tutorials/how-to-configure-ssh-key-based-authentication-on-a-linux-server)'
  id: totrans-413
  prefs: []
  type: TYPE_NORMAL
- en: '[https://debian-handbook.info/browse/stable/sect.remote-login.html](https://debian-handbook.info/browse/stable/sect.remote-login.html)'
  id: totrans-414
  prefs: []
  type: TYPE_NORMAL
- en: For additional hardening strategies for SSH, visit [http://howto.biapy.com/en/debian-gnu-linux/system/security/harden-the-ssh-access-security-on-debian](http://howto.biapy.com/en/debian-gnu-linux/system/security/harden-the-ssh-access-security-on-debian).
  id: totrans-415
  prefs: []
  type: TYPE_NORMAL
- en: Managing patches
  id: totrans-416
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: As we discovered, the patch for the VENOM exploit was available for Debian the
    same day the exploit was made public; PVE administrators simply had to update
    and upgrade and restart PVE guests to eliminate the threat. This should drive
    home the importance of applying security patches not only for the Proxmox VE host,
    but also for its guests, whether they are containers or virtual machines.
  id: totrans-417
  prefs: []
  type: TYPE_NORMAL
- en: However, routinely applying patches for several machines is tedious no matter
    the assurance it provides.
  id: totrans-418
  prefs: []
  type: TYPE_NORMAL
- en: For the PVE hosts and Ubuntu or Debian guests, there are several tools to relieve
    the tedium. Finding the sweet spot between fully automated upgrades with minimal
    interactivity and doing due diligence to ensure patch candidates won't disrupt
    operations is where the magic happens.
  id: totrans-419
  prefs: []
  type: TYPE_NORMAL
- en: In this section, we'll configure a tool called **unattended-upgrades** to routinely
    apply only security upgrades. We'll leave other patches to our best judgement.
  id: totrans-420
  prefs: []
  type: TYPE_NORMAL
- en: 'Use the APT tool to install unattended-upgrades:'
  id: totrans-421
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE36]'
  id: totrans-422
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: 'Then, configure the automated security upgrades:'
  id: totrans-423
  prefs: []
  type: TYPE_NORMAL
- en: 'The default configuration file for the unattended-upgrades package is at `/etc/apt/apt.conf.d/50unattended-upgrades`;
    let''s take a look at it:'
  id: totrans-424
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE37]'
  id: totrans-425
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE37]'
- en: 'Look for the following stanza (the `//` characters preceding some lines effectively
    comment out directives so they are ignored):'
  id: totrans-426
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE38]'
  id: totrans-427
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE38]'
- en: Ensure that the line with "`${distro_id}:${distro_codename}-security`"; is not
    commented out. This directive signals the utility to allow unattended-upgrades
    from security repositories, and only from security repositories.
  id: totrans-428
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Exit the configuration file by pressing  *Ctrl* +  *X* ,  *Y* , and  *Enter*
    to preserve any changes you may have made.
  id: totrans-429
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Next, let''s check the configuration of `/etc/apt/apt.conf.d/20auto-upgrade`
    to ensure that Debian is configured to periodically update package lists and that
    unattended-upgrades are enabled:'
  id: totrans-430
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE39]'
  id: totrans-431
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE39]'
- en: 'Ensure that the following lines appear in the file as they do here:'
  id: totrans-432
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE40]'
  id: totrans-433
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE40]'
- en: With unattended-upgrades configured, de-escalate privileges by entering `exit`
    in the terminal.
  id: totrans-434
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Tip
  id: totrans-435
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Changes made by the unattended-upgrades utility are logged in `/var/log/unattended-upgrades/unattended-upgrades.log`.
  id: totrans-436
  prefs: []
  type: TYPE_NORMAL
- en: The same package can be used to automate security patch applications for Proxmox
    VE guests running Ubuntu, Debian, or LinuxMint.
  id: totrans-437
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  id: totrans-438
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: To learn more about the unattended-upgrades package, see the following documentation:[https://wiki.debian.org/UnattendedUpgrades](https://wiki.debian.org/UnattendedUpgrades)
  id: totrans-439
  prefs: []
  type: TYPE_NORMAL
- en: '[https://debian-handbook.info/browse/stable/sect.regular-upgrades.html](https://debian-handbook.info/browse/stable/sect.regular-upgrades.html)'
  id: totrans-440
  prefs: []
  type: TYPE_NORMAL
- en: Enterprise subscriptions
  id: totrans-441
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'Though PVE may be open source, Proxmox Server Solutions (the company behind
    Proxmox VE) very strongly encourages users to invest in subscriptions for Proxmox
    VE ([https://www.proxmox.com/en/proxmox-ve/support](https://www.proxmox.com/en/proxmox-ve/support)):'
  id: totrans-442
  prefs: []
  type: TYPE_NORMAL
- en: '*"A Proxmox VE subscription is the easy and affordable solution to get access
    to the Proxmox VE Enterprise repository, to stable software updates and security
    enhancements, as well as to technical support services. A subscription helps you
    to run Proxmox VE with confidence in your company."*'
  id: totrans-443
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '*"By combining great open source software with quality-assured services and
    support the Proxmox VE Subscription helps you to deploy and maintain the best
    stable and secure open source virtualization environment"*'
  id: totrans-444
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Security wise, there is a strong advantage to obtaining a subscription: Proxmox
    Server Solutions provides subscribers with access to the enterprise repository,
    which provides stable and "enhanced" security updates.'
  id: totrans-445
  prefs: []
  type: TYPE_NORMAL
- en: In contrast, users of the `pve-no-subscription` repositories have access to
    patches that are perhaps more cutting-edge, but also less stable.
  id: totrans-446
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  id: totrans-447
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Another benefit of a Proxmox subscription is access to dedicated, professional
    support. This is far from a commentary on community support, which has in all
    cases been fantastic in my experience. However, subscription support will track
    a ticket and promise prompt solutions. In a production environment, this can certainly
    make a critical difference.
  id: totrans-448
  prefs: []
  type: TYPE_NORMAL
- en: 'There are four subscription plans available: premium, standard, basic, and
    community (this last plan does not offer a support plan, but it does offer access
    to the enterprise repository). Plans are priced per month per CPU socket ([https://www.proxmox.com/en/proxmox-ve/pricing](https://www.proxmox.com/en/proxmox-ve/pricing)).'
  id: totrans-449
  prefs: []
  type: TYPE_NORMAL
- en: '*"Subscriptions are licensed per physical server and CPU socket. In a Proxmox
    VE Cluster, you need to have the same subscription level for all your servers.
    Subscription period is one year from purchase date."*'
  id: totrans-450
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Technical support is provided to subscribers via a web and email-based customer
    portal (in English or German).
  id: totrans-451
  prefs: []
  type: TYPE_NORMAL
- en: Community support, by contrast, is available via the public support forum ([https://forum.proxmox.com](https://forum.proxmox.com))
    or via IRC (the `##proxmox` channel on the Freenode network).
  id: totrans-452
  prefs: []
  type: TYPE_NORMAL
- en: '![Enterprise subscriptions](img/image_07_016.png)'
  id: totrans-453
  prefs: []
  type: TYPE_IMG
- en: Proxmox community support forum
  id: totrans-454
  prefs: []
  type: TYPE_NORMAL
- en: A video tutorial is available to guide subscribers in uploading a subscription
    key to Proxmox VE and installing new updates at [https://www.proxmox.com/en/training/video-tutorials/item/install-updates](https://www.proxmox.com/en/training/video-tutorials/item/install-updates).
  id: totrans-455
  prefs: []
  type: TYPE_NORMAL
- en: From a security perspective then, the `pve-no-subscription` repository is characterized
    on the site as offering patches that are not quite stable enough for production,
    while the enterprise repository promises enhanced security patches. You'll have
    to make a deliberate choice for your use case.
  id: totrans-456
  prefs: []
  type: TYPE_NORMAL
- en: If you're moving services that are not mission-critical to a virtual infrastructure
    with Proxmox VE, perhaps community support and the `pve-no-subscription` options
    will work well for you. Otherwise, give all due consideration to an appropriate
    subscription option.
  id: totrans-457
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  id: totrans-458
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The security and information that assurance administrators can realistically
    provide is clearly never as exhaustive as it is exhausting.
  id: totrans-459
  prefs: []
  type: TYPE_NORMAL
- en: In the first section of this chapter, you learned that hardware virtualization
    has inherent security benefits.
  id: totrans-460
  prefs: []
  type: TYPE_NORMAL
- en: However, you also learned that many promising benefits are undermined if they're
    not supported by thorough planning of the virtual infrastructure, explicit policy-making
    up front, and a flawless deployment, all followed by unflagging policy enforcement
    and ongoing virtual server lifecycle management.
  id: totrans-461
  prefs: []
  type: TYPE_NORMAL
- en: We then outlined threats that are either unique to virtualized infrastructures
    or aggravated in the context of virtualization. Each point was followed by either
    concrete action to mitigate the threat or links to resources for more details
    on addressing a potential problem.
  id: totrans-462
  prefs: []
  type: TYPE_NORMAL
- en: We concluded with concrete, step-by-step remedies that could be initiated immediately,
    even as you continue to explore and assess Proxmox VE.
  id: totrans-463
  prefs: []
  type: TYPE_NORMAL
