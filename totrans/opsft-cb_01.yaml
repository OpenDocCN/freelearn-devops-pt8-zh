- en: Chapter 1. Getting Started with OpenShift
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第1章。开始使用OpenShift
- en: 'This chapter presents a number of recipes that show you how to get started
    with OpenShift using the web console and `rhc` command-line client. You will learn
    how to host your own WordPress blog with a button click, make source code changes
    and deploy them, and perform basic operations with the `rhc` command-line client.
    The specific recipes of this chapter are:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 本章展示了多个教程，向你展示如何使用Web控制台和`rhc`命令行客户端开始使用OpenShift。你将学习如何通过点击按钮托管自己的WordPress博客，如何进行源代码更改并部署它们，以及如何使用`rhc`命令行客户端执行基本操作。本章的具体教程包括：
- en: Creating an OpenShift Online account
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建OpenShift Online账户
- en: Creating OpenShift domains using the web console
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Web控制台创建OpenShift域
- en: Creating a WordPress application using the web console
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Web控制台创建WordPress应用程序
- en: Uploading SSH keys using the web console
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Web控制台上传SSH密钥
- en: Working with the SSH key passphrases
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用SSH密钥密码短语
- en: Cloning the application to the local machine
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将应用程序克隆到本地机器
- en: Deploying your first change
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 部署你的首次变更
- en: Checking the application's gear quota and limits
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 检查应用程序的gear配额和限制
- en: Installing the OpenShift rhc command-line client
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装OpenShift rhc命令行客户端
- en: Setting up an OpenShift account using rhc
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用rhc设置OpenShift账户
- en: Enabling the autocomplete feature in an rhc command-line client
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在rhc命令行客户端中启用自动完成功能
- en: Viewing the account details using rhc
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用rhc查看账户详情
- en: Specifying a different OpenShift server hostname
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 指定不同的OpenShift服务器主机名
- en: Updating rhc
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更新rhc
- en: A brief introduction into OpenShift
  id: totrans-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: OpenShift简要介绍
- en: 'A few years ago, I wanted to write a web application that would process a stream
    of tweets about a movie and then output the overall sentiment about it. This would
    help me decide whether I should watch a movie or not. So, I researched for a hosting
    provider and found out that I could rent a few virtual machines from Amazon to
    host my web application. This was my entry into the world of cloud computing.
    Cloud computing allows access to a shared pool of computing (both hardware and
    software) resources available as a service over the network, which is pay per
    use, has an elastic nature (that is, can be scaled up and down), and is available
    on demand. It has three delivery models:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 几年前，我想写一个Web应用程序，处理关于一部电影的推文流，并输出整体情感分析。这可以帮助我决定是否应该观看一部电影。所以，我研究了一个托管服务提供商，发现我可以从Amazon租用几台虚拟机来托管我的Web应用程序。这是我进入云计算世界的开始。云计算允许访问共享池的计算资源（包括硬件和软件），这些资源通过网络作为服务提供，采用按需付费、弹性扩展（即可以上下调整规模）和按需使用的模式。云计算有三种交付模型：
- en: '**Infrastructure as a Service (IaaS)**: This is the most fundamental delivery
    model where a user can provision compute, storage, and other resources such as
    network to run an application, but the user has to install and manage the application
    stack required to run the application. Examples of IaaS include Amazon EC2, Google
    Compute Engine, and Rackspace.'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**基础设施即服务（IaaS）**：这是最基本的交付模型，用户可以配置计算、存储和其他资源（如网络）来运行应用程序，但用户必须安装并管理运行该应用程序所需的应用程序堆栈。IaaS的例子包括Amazon
    EC2、Google Compute Engine和Rackspace。'
- en: '**Platform as a Service (PaaS)**: PaaS provides an application development
    platform to help developers build their applications using the runtimes, tools,
    libraries, and services provided by the platform provider. Examples of PaaS include
    OpenShift, Cloud Foundry, and Heroku.'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**平台即服务（PaaS）**：PaaS为开发者提供一个应用程序开发平台，帮助他们利用平台提供的运行时、工具、库和服务来构建应用程序。PaaS的例子包括OpenShift、Cloud
    Foundry和Heroku。'
- en: '**Software as a Service (SaaS)**: SaaS is a set of applications (or software)
    that run on the cloud and are available as a service. Examples of SaaS include
    Google Apps and Microsoft Office 365.'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**软件即服务（SaaS）**：SaaS是一组在云端运行的应用程序（或软件），作为服务提供给用户。SaaS的例子包括Google Apps和Microsoft
    Office 365。'
- en: As a developer, I liked the concept of PaaS, as it enabled me to use my skillset
    to focus only on the application code and let someone else worry about managing
    the application stack and infrastructure for me.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 作为开发者，我喜欢PaaS的概念，因为它使我能够将技能集中于应用程序代码，只需关注代码编写，其他的如应用程序堆栈和基础设施管理则交给他人处理。
- en: OpenShift is an open source, a polyglot, and a scalable PaaS from Red Hat. At
    the time of writing this book, OpenShift officially supports the Java, Ruby, Python,
    Node.js, PHP, and Perl programming language runtimes, along with MySQL, PostgreSQL,
    and MongoDB databases, and a lot of other features. Along with all the supported
    services, OpenShift users can also leverage marketplace ([https://marketplace.openshift.com/home](https://marketplace.openshift.com/home))
    to try and use other cloud services managed by various partners. The services
    supported by the partners vary from databases such as ElephantSQL scalable PostgreSQL
    as a Service to SendGrid's Email as a Service.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: OpenShift是一个开源的、多语言支持的、可扩展的PaaS平台，由Red Hat提供。撰写本书时，OpenShift官方支持Java、Ruby、Python、Node.js、PHP和Perl编程语言运行时，支持MySQL、PostgreSQL和MongoDB数据库，并提供众多其他功能。除了所有支持的服务，OpenShift用户还可以通过市场（[https://marketplace.openshift.com/home](https://marketplace.openshift.com/home)）尝试并使用由不同合作伙伴管理的其他云服务。合作伙伴支持的服务包括数据库服务，如可扩展的PostgreSQL作为服务（ElephantSQL），以及SendGrid的电子邮件服务。
- en: 'OpenShift is an umbrella under which three subprojects coexist. These three
    subprojects differ in the way they deliver the OpenShift technology to the users,
    developers, and community members. Each of the subprojects is described as follows:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: OpenShift是一个涵盖三个子项目的大平台，这三个子项目以不同的方式将OpenShift技术交付给用户、开发者和社区成员。每个子项目的描述如下：
- en: '**OpenShift Origin**: OpenShift Origin is the open sourced, Apache License
    2.0, community-supported version of OpenShift. It is the upstream feeder project
    to both OpenShift Online and OpenShift Enterprise. The project is available on
    GitHub at [https://github.com/openshift](https://github.com/openshift).'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**OpenShift Origin**：OpenShift Origin是一个开源项目，采用Apache License 2.0协议，并由社区支持，它是OpenShift的上游源项目，供OpenShift
    Online和OpenShift Enterprise使用。该项目可在GitHub上找到，网址为[https://github.com/openshift](https://github.com/openshift)。'
- en: '**OpenShift Online**: OpenShift Online is the public-managed version of OpenShift.
    It runs on top of Amazon EC2 and uses a hardened and stabilized version of OpenShift
    Origin. Every OpenShift Online user is entitled to a free plan. The free plan
    gives users access to three small instances with 512 MB RAM and 1 GB of disk space.
    OpenShift Online is also available as commercial offering via Bronze and Silver
    plans. The commercial plans allow users to get more resources, storage, and Red
    Hat professional support. You can learn about the OpenShift Online pricing at
    [https://www.openshift.com/products/pricing](https://www.openshift.com/products/pricing).'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**OpenShift Online**：OpenShift Online是OpenShift的公共管理版本。它运行在Amazon EC2上，使用经过硬化和稳定的OpenShift
    Origin版本。每个OpenShift Online用户都可以享受一个免费计划，该计划允许用户访问三台小型实例，配备512 MB的RAM和1 GB的磁盘空间。OpenShift
    Online还可以通过Bronze和Silver计划作为商业服务提供。商业计划允许用户获得更多资源、存储空间和Red Hat专业支持。你可以在[https://www.openshift.com/products/pricing](https://www.openshift.com/products/pricing)了解OpenShift
    Online的定价。'
- en: '**OpenShift Enterprise**: OpenShift Enterprise is a Red Hat fully supported,
    private PaaS solution, which can run on enterprise hardware. OpenShift Enterprise
    can help make enterprises more agile and meet their business application demands.'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**OpenShift Enterprise**：OpenShift Enterprise是由Red Hat全面支持的私有PaaS解决方案，可以运行在企业硬件上。OpenShift
    Enterprise可以帮助企业提高敏捷性，满足其业务应用需求。'
- en: This book will focus mainly on OpenShift Online, but the recipes apply to all
    three.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 本书将主要聚焦于OpenShift Online，但所有的操作示例适用于这三个版本。
- en: 'As a developer, you can interact with OpenShift in the following four ways:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 作为开发者，你可以通过以下四种方式与OpenShift进行交互：
- en: '**Web console**: This is the easiest way to get started with OpenShift, as
    it does not require you to install any software on your machine. You can log in
    to the web console and start creating applications. At the time of writing this
    book, the web console lacks all the features available in the command-line tool.'
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Web 控制台**：这是使用OpenShift的最简单方式，因为它不要求你在机器上安装任何软件。你可以登录Web控制台并开始创建应用程序。在撰写本书时，Web控制台缺少命令行工具中的所有功能。'
- en: '**The rhc command line**: This is a command-line tool that interacts with OpenShift.
    It is available as a Ruby gem. It is the most powerful way to interact with OpenShift
    because it exposes all the OpenShift functionalities.'
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**rhc命令行工具**：这是一个与OpenShift交互的命令行工具，作为Ruby gem提供。它是与OpenShift交互的最强大方式，因为它暴露了所有OpenShift的功能。'
- en: '**IDE Integration**: If you are a developer who likes to do most of the coding
    from within an IDE, then you will be happy to know that OpenShift has first class
    integration with various IDEs such as Eclipse, IntelliJ IDEA, Zend Studio, and
    Titanium Studio.'
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**IDE集成**：如果你是一个喜欢在IDE中进行大部分编码的开发人员，那么你会很高兴地知道OpenShift与多种IDE（如Eclipse、IntelliJ
    IDEA、Zend Studio和Titanium Studio）有着一流的集成。'
- en: '**The REST API**: You can write your own client using the OpenShift REST API.
    You can use this API to write plugins for IDEs such as NetBeans or write another
    command-line client. You can read the REST API documentation at [https://access.redhat.com/knowledge/docs/en-US/OpenShift/2.0/html-single/REST_API_Guide/index.html](https://access.redhat.com/knowledge/docs/en-US/OpenShift/2.0/html-single/REST_API_Guide/index.html).'
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**REST API**：你可以使用OpenShift REST API编写自己的客户端。你可以使用此API为IDE（如NetBeans）编写插件，或编写另一个命令行客户端。你可以在[https://access.redhat.com/knowledge/docs/en-US/OpenShift/2.0/html-single/REST_API_Guide/index.html](https://access.redhat.com/knowledge/docs/en-US/OpenShift/2.0/html-single/REST_API_Guide/index.html)查看REST
    API文档。'
- en: 'The important OpenShift components are shown in the following diagram:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 重要的OpenShift组件如下图所示：
- en: '![A brief introduction into OpenShift](img/00002.jpeg)'
  id: totrans-34
  prefs: []
  type: TYPE_IMG
  zh: '![OpenShift简介](img/00002.jpeg)'
- en: 'As shown in the preceding diagram, a developer interacts with OpenShift using
    one of the client interfaces, that is, the web console, `rhc` command-line client,
    or IDE support. OpenShift has the following three main components:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 如上图所示，开发人员通过其中一个客户端接口与OpenShift进行交互，即Web控制台、`rhc`命令行客户端或IDE支持。OpenShift有以下三个主要组件：
- en: '**Broker**: All the clients interact with the broker using a well-defined REST
    interface exposed by the broker. The broker is responsible for all application
    management activities. It is a Ruby on Rails application that manages user logins,
    DNS management, and general application orchestration.'
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Broker**：所有客户端通过代理使用一个定义明确的REST接口与代理进行交互。代理负责所有的应用管理活动。它是一个基于Ruby on Rails的应用程序，负责管理用户登录、DNS管理和一般的应用编排。'
- en: '**Node**: This is a set of RHEL instances that provides a multitenant environment
    for end user applications.'
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Node**：这是一组RHEL实例，提供多租户环境以供最终用户应用使用。'
- en: '**Gear**: A gear is a secure container that runs inside a node and host user
    applications. It is constrained by CPU, disk space, and memory.'
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Gear**：Gear是一个在节点内部运行的安全容器，用于托管用户应用。它受到CPU、磁盘空间和内存的限制。'
- en: Note
  id: totrans-39
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: The broker and nodes use the ActiveMQ message queue to talk with each other.
    They both have the MCollective client installed on them to send instructions to
    each other.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 代理和节点使用ActiveMQ消息队列进行通信。它们都安装了MCollective客户端，以便互相发送指令。
- en: Now that you know what OpenShift is and how you can work with it, let's kick
    off the first chapter. This chapter presents a number of recipes that gets you
    up to speed quickly by giving you information you need to create cloud applications
    using OpenShift. You will learn how to create your first OpenShift application
    using the web console, clone the application using Git, make your first source
    code change, and finally deploy that change to OpenShift. If this is the first
    time you are working with OpenShift, then you will be amazed by the speed at which
    you can create and deploy applications on OpenShift. This chapter will also cover
    how to install the `rhc` command-line client and perform some basic operations
    using it.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你已经了解了OpenShift是什么，以及如何使用它，接下来让我们开始第一章。本章提供了一系列教程，帮助你快速掌握必要的知识，使用OpenShift创建云应用。你将学习如何通过Web控制台创建第一个OpenShift应用，使用Git克隆应用，进行第一次源代码修改，并最终将该修改部署到OpenShift。如果这是你第一次使用OpenShift，你会惊讶于在OpenShift上创建和部署应用的速度。本章还将介绍如何安装`rhc`命令行客户端，并使用它执行一些基本操作。
- en: Creating an OpenShift Online account
  id: totrans-42
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建OpenShift Online账户
- en: In this recipe, you will learn how to create an OpenShift Online account. You
    can sign up for an OpenShift Online account for free; all you need is a valid
    e-mail address.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 在本教程中，你将学习如何创建一个OpenShift Online账户。你可以免费注册OpenShift Online账户；所需的只是一个有效的电子邮件地址。
- en: Getting ready
  id: totrans-44
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: To create an OpenShift Online account, you need a web browser and a valid e-mail
    address.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 创建OpenShift Online账户时，你需要一个Web浏览器和一个有效的电子邮件地址。
- en: How to do it…
  id: totrans-46
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: 'Follow these steps to create an OpenShift Online account:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤创建OpenShift Online账户：
- en: Open a web browser and go to the sign-up page at [https://www.openshift.com/app/account/new](https://www.openshift.com/app/account/new).
  id: totrans-48
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开一个网页浏览器，访问注册页面 [https://www.openshift.com/app/account/new](https://www.openshift.com/app/account/new)。
- en: Enter the details required to create a new account and then submit the form.
  id: totrans-49
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输入创建新账户所需的详细信息，然后提交表单。
- en: After signing up, you will receive an e-mail in your inbox that contains the
    verification link. Click on the verification link to verify your e-mail address.
    This will redirect the browser to a web page, asking you to accept the legal terms
    to use OpenShift Online, as shown in the following screenshot:![How to do it…](img/00003.jpeg)
  id: totrans-50
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 注册后，你将收到一封包含验证链接的电子邮件。点击验证链接以验证你的电子邮件地址。这将会将浏览器重定向到一个网页，要求你接受使用 OpenShift Online
    的法律条款，如下所示的截图所示：![如何操作…](img/00003.jpeg)
- en: Click on the **I Accept** button and the browser will redirect to the getting
    started web page.
  id: totrans-51
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击 **我接受** 按钮，浏览器将重定向到入门网页。
- en: Note
  id: totrans-52
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: If you do not receive a verification e-mail, make sure to check your `Spam`
    folder.
  id: totrans-53
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果你没有收到验证电子邮件，请确保检查你的 `垃圾邮件` 文件夹。
- en: How it works…
  id: totrans-54
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何工作…
- en: In this recipe, you learned how to create an OpenShift Online account. From
    a user's perspective, OpenShift Online is the easiest way to get started with
    OpenShift because you do not have to deploy and manage your own OpenShift installation.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 在本配方中，你学习了如何创建一个 OpenShift Online 账户。从用户的角度来看，OpenShift Online 是开始使用 OpenShift
    最简单的方式，因为你无需部署和管理自己的 OpenShift 安装。
- en: When you sign up for OpenShift Online, you will be associated with a free plan.
    At the time of writing this, Red Hat gives every user three free gears on which
    to run their applications. A gear provides a resource-constrained container to
    run one or more cartridges. A cartridge provides the actual functionality required
    to run the application. OpenShift Online currently supports many cartridges such
    as JBoss, Tomcat, PHP, Ruby, Python, MongoDB, MySQL, and so on. Gear provides
    RAM and disk space to a cartridge. At the time of writing this book, each gear
    is 512 MB of RAM and 1 GB of disk space. A user can upgrade to the Bronze or Silver
    plan to get access to more and bigger resources. You can refer to the pricing
    web page at [https://www.openshift.com/products/pricing for up to date information](https://www.openshift.com/products/pricing%20for%20up%20to%20date%20information).
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 当你注册 OpenShift Online 时，你将与一个免费计划关联。写本书时，Red Hat 会给每个用户提供三个免费硬件资源，用于运行应用程序。硬件资源提供了一个受限的容器来运行一个或多个应用程序模块。应用程序模块提供了运行应用程序所需的实际功能。OpenShift
    Online 当前支持许多应用程序模块，如 JBoss、Tomcat、PHP、Ruby、Python、MongoDB、MySQL 等。硬件资源为应用程序模块提供内存和磁盘空间。写本书时，每个硬件资源有
    512 MB 的内存和 1 GB 的磁盘空间。用户可以升级到 Bronze 或 Silver 计划，以获取更多和更大的资源。你可以参考 [https://www.openshift.com/products/pricing
    for up to date information](https://www.openshift.com/products/pricing%20for%20up%20to%20date%20information)
    来获取最新的定价信息。
- en: See also
  id: totrans-57
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另见
- en: The *Creating OpenShift domains using the web console* recipe
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*使用 Web 控制台创建 OpenShift 域* 配方'
- en: The *Creating a WordPress application using the web console* recipe
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*使用 Web 控制台创建 WordPress 应用程序* 配方'
- en: Creating OpenShift domains using the web console
  id: totrans-60
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Web 控制台创建 OpenShift 域
- en: After creating the OpenShift Online account, the first step is to create a domain.
    A domain or namespace is a logical container for applications. It forms parts
    of an application URL and is unique to an account. In this recipe, you will learn
    how to create a domain using the web console.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 创建 OpenShift Online 账户后，第一步是创建一个域。域或命名空间是应用程序的逻辑容器。它是应用程序 URL 的一部分，并且在一个账户中是唯一的。在本配方中，你将学习如何使用
    Web 控制台创建一个域。
- en: Getting ready
  id: totrans-62
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: Open the OpenShift Online login page at [https://openshift.redhat.com/app/login](https://openshift.redhat.com/app/login)
    in your favorite web browser and then sign in using your OpenShift Online credentials.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 打开 OpenShift Online 登录页面 [https://openshift.redhat.com/app/login](https://openshift.redhat.com/app/login)
    在你喜欢的网页浏览器中，然后使用你的 OpenShift Online 凭证登录。
- en: How to do it…
  id: totrans-64
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: To create a domain or namespace, go to the account settings web page at [https://openshift.redhat.com/app/console/settings](https://openshift.redhat.com/app/console/settings)
    and enter a unique name. A domain or namespace should be unique across all the
    users. This means that you can't use `osbook` as a domain name because the OpenShift
    account associated with this book uses `osbook`.
  id: totrans-65
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要创建一个域或命名空间，请访问账户设置网页 [https://openshift.redhat.com/app/console/settings](https://openshift.redhat.com/app/console/settings)，并输入一个唯一的名称。域或命名空间在所有用户中应该是唯一的。这意味着你不能使用
    `osbook` 作为域名，因为与本书相关联的 OpenShift 账户已经使用了 `osbook`。
- en: 'Click on the **Save** button to create a new domain, as shown in the following
    screenshot:'
  id: totrans-66
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 点击**保存**按钮以创建一个新域名，如下截图所示：
- en: '![How to do it…](img/00004.jpeg)'
  id: totrans-67
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![如何操作…](img/00004.jpeg)'
- en: After the domain is created, you will see a message, **The domain 'osbook' has
    been created**, on your screen. Instead of `osbook`, the message would refer to
    your domain name.
  id: totrans-68
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在域名创建后，你会看到屏幕上显示一条消息，**域名 'osbook' 已创建**。其中的 `osbook` 会被替换为你的域名。
- en: How it works…
  id: totrans-69
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的……
- en: OpenShift requires you to have a domain before it can allow you to create applications.
    A domain represents a logical container for the applications under an OpenShift
    account. All the OpenShift applications must belong to a domain. It is unique
    across all OpenShift users and is a part of the application URL. For example,
    if your application name is `myapp` and your domain name is `osbook`, then your
    application URL will be `http://myapp-osbook.rhcloud.com`. A domain can contain
    as many as 16 alphanumeric characters and cannot have spaces or symbols. It is
    also sometimes called a namespace.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: OpenShift要求你在创建应用程序之前先拥有一个域名。域名是OpenShift帐户下应用程序的逻辑容器。所有OpenShift应用程序必须属于一个域名。每个域名在所有OpenShift用户中都是唯一的，并且是应用程序URL的一部分。例如，如果你的应用程序名称是`myapp`，域名是`osbook`，那么你的应用程序URL将是`http://myapp-osbook.rhcloud.com`。一个域名最多可以包含16个字母数字字符，不能包含空格或符号。有时它也被称为命名空间。
- en: A user can join domains created by other OpenShift users. This allows users
    to work as a team. Depending on the OpenShift plan or configuration, a user will
    able to create more than one domain. The free plan does not allow a user to create
    more than one domain name, but you can still join other domains. We will discuss
    domains in detail in [Chapter 2](part0029_split_000.html#page "Chapter 2. Managing
    Domains"), *Managing Domains*.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 用户可以加入其他OpenShift用户创建的域名。这允许用户以团队的方式工作。根据OpenShift计划或配置，用户可以创建多个域名。免费计划不允许用户创建多个域名，但你仍然可以加入其他域名。我们将在[第二章](part0029_split_000.html#page
    "第二章. 管理域名")中详细讨论域名，*管理域名*。
- en: 'You can see the created domains listed on the application settings web page
    at [https://openshift.redhat.com/app/console/settings](https://openshift.redhat.com/app/console/settings).
    This can be seen in the following screenshot:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在应用程序设置网页上查看创建的域名，网址为[https://openshift.redhat.com/app/console/settings](https://openshift.redhat.com/app/console/settings)。如下截图所示：
- en: '![How it works…](img/00005.jpeg)'
  id: totrans-73
  prefs: []
  type: TYPE_IMG
  zh: '![它是如何工作的…](img/00005.jpeg)'
- en: There's more…
  id: totrans-74
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多内容…
- en: 'In this recipe, you learned how to create a domain using the web console. You
    can view the details of a domain by clicking on the domain name web link. The
    following screenshot shows the domain details:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个配方中，你学会了如何使用网页控制台创建域名。你可以通过点击域名链接查看域名的详细信息。以下截图展示了域名的详细信息：
- en: '![There''s more…](img/00006.jpeg)'
  id: totrans-76
  prefs: []
  type: TYPE_IMG
  zh: '![更多内容…](img/00006.jpeg)'
- en: In the preceding screenshot, you can see that there are no applications associated
    with this domain. As per the free plan configuration, you can only use small gears.
    If you uncheck the **Allow small gears** checkbox, then you will not be able to
    create any applications. You can also invite other users to join your domain by
    clicking on the **Add members…** web link. Team collaboration will be covered
    in detail in [Chapter 2](part0029_split_000.html#page "Chapter 2. Managing Domains"),
    *Managing Domains*. You can also delete a domain by clicking on the **Delete this
    domain…** button.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的截图中，你可以看到没有任何应用程序与此域名关联。根据免费计划配置，你只能使用小型设备。如果你取消选中**允许小型设备**复选框，那么你将无法创建任何应用程序。你还可以通过点击**添加成员…**链接邀请其他用户加入你的域名。团队协作将在[第二章](part0029_split_000.html#page
    "第二章. 管理域名")中详细讲解，*管理域名*。你也可以通过点击**删除此域名…**按钮来删除域名。
- en: See also
  id: totrans-78
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另见
- en: The *Creating a domain using rhc* recipe in [Chapter 2](part0029_split_000.html#page
    "Chapter 2. Managing Domains"), *Managing Domains*
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[第二章](part0029_split_000.html#page "第二章. 管理域名")中的*使用rhc创建域名*配方，*管理域名*'
- en: The *Viewing domain details using rhc* recipe in [Chapter 2](part0029_split_000.html#page
    "Chapter 2. Managing Domains"), *Managing Domains*
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[第二章](part0029_split_000.html#page "第二章. 管理域名")中的*使用rhc查看域名详细信息*配方，*管理域名*'
- en: The *Adding an editor member to a domain using rhc* recipe in [Chapter 2](part0029_split_000.html#page
    "Chapter 2. Managing Domains"), *Managing Domains*
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[第二章](part0029_split_000.html#page "第二章. 管理域名")中的*使用rhc将编辑成员添加到域名*配方，*管理域名*'
- en: Creating a WordPress application using the web console
  id: totrans-82
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用网页控制台创建WordPress应用
- en: In this recipe, you will create your first OpenShift application using the web
    console. The web console, as mentioned in the *Introduction* section, is a web
    interface to OpenShift that developers can use to quickly create and manage applications.
    You will use the OpenShift WordPress quickstart in order to create a fully configured
    application. If you do not have a blog, now is the time to have your own personal
    blog for free.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 在本食谱中，您将通过网页控制台创建您的第一个OpenShift应用程序。如*简介*部分所述，网页控制台是OpenShift的一个Web界面，开发者可以利用它快速创建和管理应用程序。您将使用OpenShift的WordPress快速启动来创建一个完全配置的应用程序。如果您还没有博客，现在是时候为自己创建一个免费的个人博客了。
- en: Getting ready
  id: totrans-84
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: Open the login web page at [https://openshift.redhat.com/app/login](https://openshift.redhat.com/app/login)
    in your favorite web browser and log in using your OpenShift credentials.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 在您喜欢的网页浏览器中打开[https://openshift.redhat.com/app/login](https://openshift.redhat.com/app/login)的登录网页，并使用您的OpenShift凭证登录。
- en: How to do it…
  id: totrans-86
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: 'Follow these steps to create a WordPress application using the web console:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤通过网页控制台创建WordPress应用程序：
- en: Go to the applications web page at [https://openshift.redhat.com/app/console/applications](https://openshift.redhat.com/app/console/applications)
    and click on the **Create your first application now** web link.
  id: totrans-88
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 访问[https://openshift.redhat.com/app/console/applications](https://openshift.redhat.com/app/console/applications)的应用程序网页，并点击**立即创建您的第一个应用程序**链接。
- en: Under the **Instant App** section, click on the **WordPress 3.9** instant app.
    At the time of writing this book, the WordPress version is 3.9, as shown in the
    following screenshot:![How to do it…](img/00007.jpeg)
  id: totrans-89
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**即时应用**部分，点击**WordPress 3.9**即时应用。本文书写时，WordPress的版本是3.9，如下图所示：![如何操作…](img/00007.jpeg)
- en: Enter a name for the blog and click on the **Create Application** button. I
    have used `blog` as the name of the WordPress application, as shown in the following
    screenshot:![How to do it…](img/00008.jpeg)
  id: totrans-90
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输入博客名称并点击**创建应用程序**按钮。我使用`blog`作为WordPress应用程序的名称，如下图所示：![如何操作…](img/00008.jpeg)
- en: After the application is created, you will be directed to a page that shows
    the MySQL connection details. You can view the newly created application details
    by clicking on **Continue to the application overview page**.
  id: totrans-91
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 应用程序创建完成后，您将被引导到一个页面，展示MySQL连接的详细信息。您可以通过点击**继续查看应用程序概览页面**来查看新创建的应用程序详情。
- en: Your WordPress blog will now be running at `http://blog-{domain-name}.rhcloud.com/`.
    Replace `{domain-name}` with your OpenShift account domain name.
  id: totrans-92
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您的WordPress博客现在可以在`http://blog-{domain-name}.rhcloud.com/`运行。将`{domain-name}`替换为您的OpenShift账户域名。
- en: How it works…
  id: totrans-93
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的…
- en: A quickstart is a preconfigured OpenShift application that provides a repeatable
    way to spin up an application with its source code and dependencies such as databases.
    You can view the list of actively maintained quickstarts at [https://www.openshift.com/quickstarts](https://www.openshift.com/quickstarts).
    Note that the OpenShift team does not support these quickstarts. They are just
    to help you get your favorite project (mostly open source) running on OpenShift.
    In this recipe, you used WordPress quickstart to quickly scaffold a WordPress
    application. You selected the WordPress 3.x quickstart in the web console and
    gave it a name. An application name can contain 32 alphanumeric characters at
    most. The WordPress quickstart uses a public Git repository, which installs the
    WordPress application. It also defines the cartridges it will use. The WordPress
    quickstart uses the PHP 5.3 and MySQL 5.1 cartridges.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 快速启动是一个预配置的OpenShift应用程序，它提供了一种可重复的方式，通过源代码和依赖项（如数据库）快速创建一个应用程序。您可以在[https://www.openshift.com/quickstarts](https://www.openshift.com/quickstarts)查看积极维护的快速启动列表。请注意，OpenShift团队不支持这些快速启动。它们仅帮助您在OpenShift上运行您喜爱的项目（主要是开源项目）。在本食谱中，您使用WordPress快速启动来快速搭建一个WordPress应用程序。您在网页控制台中选择了WordPress
    3.x快速启动并给它起了个名字。应用程序名称最多可以包含32个字母数字字符。WordPress快速启动使用一个公共的Git仓库，该仓库安装WordPress应用程序。它还定义了所使用的组件。WordPress快速启动使用PHP
    5.3和MySQL 5.1组件。
- en: To create an application, click on the **Create Application** button. This will
    create an application container for us, called a gear, and set up all the required
    SELinux policies and cgroups configuration. OpenShift will also set up a private
    Git repository using the quickstart public Git repository. It will install the
    MySQL database on the application gear. The quickstart source code references
    the MySQL database using the environment variables. You will learn about OpenShift
    application details in [Chapter 3](part0041_split_000.html#page "Chapter 3. Creating
    and Managing Applications"), *Creating and Managing Applications*.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 要创建一个应用程序，点击**创建应用程序**按钮。这将为我们创建一个名为gear的应用程序容器，并设置所有必要的SELinux策略和cgroups配置。OpenShift还将使用quickstart公共Git仓库来设置一个私有Git仓库。它将在应用程序gear上安装MySQL数据库。quickstart源代码通过环境变量引用MySQL数据库。你将在[第3章](part0041_split_000.html#page
    "第3章. 创建和管理应用程序")，*创建和管理应用程序*中学习有关OpenShift应用程序的详细信息。
- en: Finally, OpenShift will propagate the DNS to the outside world. The application
    will be accessible at `http://blog-{domain-name}.rhcloud.com/`. Replace the `{domain-name}`
    part with your own unique OpenShift domain name, sometimes called a namespace.
    Open the `http://blog-{domain-name}.rhcloud.com/` link in your favorite browser
    and set up your WordPress installation. After the setup, you will have your own
    WordPress blog and you can start blogging.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，OpenShift将传播DNS到外部世界。该应用程序将可以通过`http://blog-{domain-name}.rhcloud.com/`访问。将`{domain-name}`部分替换为你自己独特的OpenShift域名，通常也称为命名空间。在你最喜欢的浏览器中打开`http://blog-{domain-name}.rhcloud.com/`链接并设置你的WordPress安装。设置完成后，你将拥有自己的WordPress博客并可以开始写博客。
- en: There's more…
  id: totrans-97
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多…
- en: 'In this recipe, you learned how to create a WordPress application using the
    OpenShift web console. You can also view the application details by going to the
    **Applications** tab and then clicking on the application, as shown in the following
    screenshot:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 在本教程中，你学习了如何使用OpenShift Web控制台创建一个WordPress应用程序。你还可以通过转到**应用程序**标签并点击应用程序来查看应用程序的详细信息，如下图所示：
- en: '![There''s more…](img/00009.jpeg)'
  id: totrans-99
  prefs: []
  type: TYPE_IMG
  zh: '![还有更多…](img/00009.jpeg)'
- en: In the preceding screenshot, you can see the state of the application, that
    is, **Started**. You can restart the application by clicking on the restart button
    next to **Started**. The application uses the PHP 5.3 and MySQL 5.1 cartridges.
    To view the database password, you can click on the **show** web link. To add
    the phpMyAdmin 4.0 MySQL web client, click on the **Add phpMyAdmin 4.0** web link.
    Next, click on the **Add Cartridge** button to add the phpMyAdmin 4.0 cartridge.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的截图中，你可以看到应用程序的状态，即**已启动**。你可以通过点击**已启动**旁边的重启按钮来重新启动应用程序。该应用程序使用的是PHP 5.3和MySQL
    5.1卡带。要查看数据库密码，可以点击**显示**网页链接。要添加phpMyAdmin 4.0 MySQL Web客户端，请点击**添加phpMyAdmin
    4.0**网页链接。接下来，点击**添加卡带**按钮来添加phpMyAdmin 4.0卡带。
- en: The cartridge will be available at `https://blog-{domain-name}.rhcloud.com/phpmyadmin/`.
    The phpMyAdmin credentials are the same as the database credentials.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 该卡带将可通过`https://blog-{domain-name}.rhcloud.com/phpmyadmin/`访问。phpMyAdmin的凭据与数据库凭据相同。
- en: See also
  id: totrans-102
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另见
- en: The *Uploading SSH keys using the web console* recipe
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*使用Web控制台上传SSH密钥* 这篇教程'
- en: The *Cloning the application to the local machine* recipe
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*将应用程序克隆到本地机器* 这篇教程'
- en: The *Deploying your first change* recipe
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*部署你的第一次更改* 这篇教程'
- en: Uploading SSH keys using the web console
  id: totrans-106
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Web控制台上传SSH密钥
- en: '**Secure Shell** (**SSH**) is a network protocol that guarantees robust authentication,
    data encryption, and data integrity between two networked machines that connect
    over an insecure network. It uses the client-server architecture and transparently
    encrypts the data between the client and server. SSH clients communicate with
    SSH servers over encrypted network connections. There are plenty of free and commercial
    products available that implement the SSH protocol. SSH has various authentication
    mechanisms where OpenShift uses the public-private key pair authentication mechanism.
    Other SSH authentication methods such as password authentication and host-based
    authentication are beyond the scope of this book.'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: '**安全外壳协议**（**SSH**）是一种网络协议，它保证了两台通过不安全网络连接的计算机之间的强大身份验证、数据加密和数据完整性。它采用客户端-服务器架构，并透明地加密客户端和服务器之间的数据。SSH客户端通过加密的网络连接与SSH服务器通信。市面上有许多免费和商业产品实现了SSH协议。SSH有多种身份验证机制，其中OpenShift使用的是公钥-私钥对认证机制。其他SSH认证方法，如密码认证和基于主机的认证，不在本书的范围内。'
- en: 'In this recipe, you will learn how to create a public-private key pair and
    upload the public key to your OpenShift account. OpenShift uses SSH for the following
    purposes:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 在此配方中，你将学习如何创建公私密钥对，并将公钥上传到你的OpenShift账户。OpenShift使用SSH用于以下目的：
- en: Providing a secure and encrypted connection between your machine and application
    gear
  id: totrans-109
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 提供你机器与应用设备之间的安全加密连接
- en: Allowing remote access to your application gear
  id: totrans-110
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 允许远程访问你的应用设备
- en: Working with your application Git repository and deploying code to OpenShift
  id: totrans-111
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用你的应用Git仓库并将代码部署到OpenShift
- en: Port forwarding, which allows users to connect to OpenShift services such as
    databases from their own machines
  id: totrans-112
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 端口转发，允许用户从自己的机器连接到OpenShift服务，如数据库等
- en: Getting ready
  id: totrans-113
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: To complete this recipe, you will need the OpenSSH SSH connectivity tools installed
    on your machine. These are very common as they come bundled with most Linux installations,
    Macintosh OS X, and almost all Unix-inspired operating systems. Microsoft Windows
    also has plenty of free and commercial SSH clients as mentioned at [http://www.openssh.com/windows.html](http://www.openssh.com/windows.html).
    Also, if you use PuTTy on your Windows machine, then you can refer to the official
    documentation at [https://www.openshift.com/developers/install-and-setup-putty-ssh-client-for-windows](https://www.openshift.com/developers/install-and-setup-putty-ssh-client-for-windows).
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 为了完成此配方，你需要在机器上安装OpenSSH SSH连接工具。这些工具在大多数Linux安装、Macintosh OS X和几乎所有Unix衍生操作系统中都很常见。微软Windows也有许多免费的和商业的SSH客户端，具体可以参考[http://www.openssh.com/windows.html](http://www.openssh.com/windows.html)。此外，如果你在Windows机器上使用PuTTY，可以参考[https://www.openshift.com/developers/install-and-setup-putty-ssh-client-for-windows](https://www.openshift.com/developers/install-and-setup-putty-ssh-client-for-windows)上的官方文档。
- en: 'To verify that the OpenSSH client tool is installed, run the following command:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 为了验证是否安装了OpenSSH客户端工具，运行以下命令：
- en: '[PRE0]'
  id: totrans-116
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Note
  id: totrans-117
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: 'The output of the preceding command will depend on your operating system and
    the OpenSSH version installed on your machine. If you get `ssh: command not found`,
    then the tools are not installed on your machine.'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: '前述命令的输出将取决于你的操作系统和你机器上安装的OpenSSH版本。如果出现`ssh: command not found`，则表示工具没有安装在你的机器上。'
- en: This recipe will use the WordPress application created in the preceding recipe.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 此配方将使用前述配方中创建的WordPress应用程序。
- en: How to do it…
  id: totrans-120
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: 'Perform the following steps:'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 执行以下步骤：
- en: 'Run the `ssh-keygen` command to generate a new pair of SSH keys. The `ssh-keygen`
    command is one of the SSH tools installed by OpenSSH. This command will generate
    a key pair in the `.ssh` folder under the user''s home directory:'
  id: totrans-122
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行`ssh-keygen`命令生成一对新的SSH密钥。`ssh-keygen`命令是OpenSSH安装的SSH工具之一。该命令将在用户的主目录下的`.ssh`文件夹中生成一个密钥对：
- en: '[PRE1]'
  id: totrans-123
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Go to the **Settings** web page at [https://openshift.redhat.com/app/console/settings](https://openshift.redhat.com/app/console/settings)
    and paste the content of the public key. The public key is the key with the `.pub`
    extension. After pasting the public key content, click on the **save** button.
  id: totrans-124
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 访问[https://openshift.redhat.com/app/console/settings](https://openshift.redhat.com/app/console/settings)的**设置**网页，并粘贴公钥内容。公钥是扩展名为`.pub`的密钥。粘贴公钥内容后，点击**保存**按钮。
- en: Go to the **Applications** web page at [https://openshift.redhat.com/app/console/applications](https://openshift.redhat.com/app/console/applications)
    and click on the application for its details, as shown in the following screenshot:![How
    to do it…](img/00010.jpeg)
  id: totrans-125
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 访问[https://openshift.redhat.com/app/console/applications](https://openshift.redhat.com/app/console/applications)的**应用程序**网页，并点击应用程序查看详情，如下图所示：![如何操作…](img/00010.jpeg)
- en: Next, view the application SSH details by clicking on **Want to log in to your
    application?**, as shown in the following screenshot:![How to do it…](img/00011.jpeg)
  id: totrans-126
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，通过点击**想要登录到你的应用程序吗？**来查看应用程序的SSH详情，如下图所示：![如何操作…](img/00011.jpeg)
- en: Copy the application SSH information shown in the following screenshot:![How
    to do it…](img/00012.jpeg)
  id: totrans-127
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 复制以下截图所示的应用程序SSH信息：![如何操作…](img/00012.jpeg)
- en: Open a new command-line terminal on your local machine and run the following
    command. Here, you will list the directories in the application's gear home folder.
    Replace the SSH information with your application SSH information.
  id: totrans-128
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在你的本地机器上打开一个新的命令行终端，并运行以下命令。在这里，你将列出应用程序设备主文件夹中的目录。将SSH信息替换为你应用程序的SSH信息。
- en: '[PRE2]'
  id: totrans-129
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: How it works…
  id: totrans-130
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的…
- en: 'First, let''s try to understand what you did in the preceding section. In the
    first step, you created a new pair of SSH keys. The `ssh-keygen` utility can take
    a number of options. Three of the many options used are as follows:'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，让我们尝试理解你在上一部分中做了什么。在第一步中，你创建了一对新的 SSH 密钥。`ssh-keygen` 工具可以使用多个选项。以下是使用的三个选项之一：
- en: The `-t` option is used to specify the type of the key. It can be either RSA
    or DSA, and in this case, the RSA key type is used. Note that OpenShift supports
    both the RSA and DSA key types.
  id: totrans-132
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-t` 选项用于指定密钥的类型。可以选择 RSA 或 DSA 类型，在本例中使用的是 RSA 密钥类型。请注意，OpenShift 支持 RSA 和
    DSA 两种密钥类型。'
- en: The `-b` option is used to specify the number of bits in the key. For RSA keys,
    the minimum size is 768 bits and the default is 2048 bits. Generally, 2048 bits
    is considered sufficient.
  id: totrans-133
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-b` 选项用于指定密钥的位数。对于 RSA 密钥，最小大小为 768 位，默认大小为 2048 位。通常，2048 位被认为足够。'
- en: The `-C` option is used to provide a comment, which can be useful to identify
    a key. This is appended to the public key.
  id: totrans-134
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-C` 选项用于提供注释，这对于标识密钥非常有用。该注释会附加到公钥中。'
- en: 'The `ssh-keygen` command prompts the user with a few questions, as shown in
    the following command:'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: '`ssh-keygen` 命令会提示用户回答几个问题，如下所示：'
- en: '[PRE3]'
  id: totrans-136
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Firstly, this command asks the user to provide the SSH key filename and its
    location. The default filename for RSA keys is `id_rsa` for a private key and
    `id_rsa.pub` for a public key. The default location to store these keys is the
    `.ssh` folder under the user's `home` directory.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，这个命令会要求用户提供 SSH 密钥文件名及其位置。RSA 密钥的默认文件名为 `id_rsa`（私钥）和 `id_rsa.pub`（公钥）。默认存储这些密钥的位置是用户
    `home` 目录下的 `.ssh` 文件夹。
- en: Secondly, it asks the user to provide a passphrase. In order to not use a passphrase,
    just press *Enter* twice. The passphrase is used to secure the private key. If
    you enter a passphrase, you will be prompted to enter the passphrase every time
    you perform any operation that requires SSH. In the next recipe, you will learn
    how to use a passphrase without entering it each time.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 其次，它要求用户提供一个密码短语。如果不想使用密码短语，只需按两次 *Enter* 键。密码短语用于保护私钥。如果输入了密码短语，每次执行需要 SSH
    的操作时，都将提示输入密码短语。在下一篇教程中，你将学习如何在不每次输入密码短语的情况下使用它。
- en: When you run any SSH client, such as `ssh`, to connect with an SSH server, the
    client uses the private key to prove your identity to the server. The server uses
    the public key for authentication. If the authentication succeeds, then the connection
    proceeds. Otherwise, you will get an error message.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 当你运行任何 SSH 客户端（如 `ssh`）连接到 SSH 服务器时，客户端使用私钥来证明你的身份，而服务器使用公钥进行认证。如果认证成功，连接将继续进行。否则，你将收到错误消息。
- en: In the second step, you uploaded the public SSH key to the OpenShift account.
    OpenShift copies the public key into an authorization file on the application
    gear at `~/.ssh/authorized_keys`. Thereafter, when an SSH client requests a connection
    to the application gear, the SSH server running on the application gear consults
    the `authorized_keys` file to find the matching public key.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 在第二步中，你将公钥上传到 OpenShift 账户。OpenShift 会将公钥复制到应用程序装备上的授权文件 `~/.ssh/authorized_keys`
    中。之后，当 SSH 客户端请求连接到应用程序装备时，应用程序装备上运行的 SSH 服务器会查阅 `authorized_keys` 文件以查找匹配的公钥。
- en: 'From step 3 to step 5, you learned how to find the SSH information for an application
    using the web console. In step 6, you tested the SSH connection by executing the
    `ls` command on the application gear. The first time you connect to an SSH server,
    you will be asked whether you want to connect to the server. This is because the
    client does not know about the server. The SSH client consults the `known_hosts`
    file at `~/.ssh/known_hosts` for the server information. If there is no entry
    in `~/.ssh/known_hosts`, then it will ask for confirmation, as shown in the following
    command:'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 从第 3 步到第 5 步，你学习了如何使用 Web 控制台查找应用程序的 SSH 信息。在第 6 步，你通过在应用程序装备上执行 `ls` 命令来测试
    SSH 连接。第一次连接到 SSH 服务器时，系统会询问是否要连接到该服务器。这是因为客户端不认识该服务器。SSH 客户端会查阅 `~/.ssh/known_hosts`
    文件以获取服务器信息。如果该文件中没有条目，它会要求确认，如下所示：
- en: '[PRE4]'
  id: totrans-142
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: After you enter `yes`, a new entry will be added to the `known_hosts` file at
    `~/.ssh/known_hosts`. The `known_hosts` file at `~/.ssh/known_hosts` acts as a
    database, and the client will check this file for the server entry on every subsequent
    request.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 在输入 `yes` 后，一个新条目将添加到 `~/.ssh/known_hosts` 文件中。`known_hosts` 文件在 `~/.ssh/known_hosts`
    中充当数据库，客户端会在每次请求时检查此文件中的服务器条目。
- en: Note
  id: totrans-144
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: The OpenShift `rhc` command-line client also offers various commands to work
    with SSH keys. Once you have installed the `rhc` client, you can run the `rhc
    sshkey` command to view all the supported actions.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: OpenShift 的 `rhc` 命令行客户端也提供了多种命令来操作 SSH 密钥。一旦安装了 `rhc` 客户端，你可以运行 `rhc sshkey`
    命令查看所有支持的操作。
- en: There's more…
  id: totrans-146
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多…
- en: 'You can decide to use another name or location for the SSH key pair. You can
    create another SSH key using the `ssh-keygen` utility. This time, name the key
    `openshift_key`:'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以选择为 SSH 密钥对使用其他名称或位置。你可以使用 `ssh-keygen` 工具创建另一个 SSH 密钥。这次，将密钥命名为 `openshift_key`：
- en: '[PRE5]'
  id: totrans-148
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Go to the OpenShift account settings web page at [https://openshift.redhat.com/app/console/settings](https://openshift.redhat.com/app/console/settings)
    and delete the existing key, as shown in the following screenshot:'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 访问 OpenShift 账户设置网页 [https://openshift.redhat.com/app/console/settings](https://openshift.redhat.com/app/console/settings)，并删除现有的密钥，如下图所示：
- en: '![There''s more…](img/00013.jpeg)'
  id: totrans-150
  prefs: []
  type: TYPE_IMG
  zh: '![还有更多…](img/00013.jpeg)'
- en: Now, upload the `openshift_key.pub` SSH key to your OpenShift account as discussed
    previously.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，按照之前的讨论，将 `openshift_key.pub` SSH 密钥上传到 OpenShift 账户。
- en: 'Run the `ssh` command again. This time, you will get an error, as the SSH client
    used the default key to connect with the SSH server. The default key name is `id_rsa`.
    Now, let''s try to run the `ls` command on the application gear to confirm whether
    we get the `Permission denied` error:'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 再次运行 `ssh` 命令。这次你会遇到一个错误，因为 SSH 客户端使用默认密钥与 SSH 服务器连接。默认密钥名称为 `id_rsa`。现在，让我们尝试在应用
    gear 上运行 `ls` 命令，以确认是否遇到 `Permission denied` 错误：
- en: '[PRE6]'
  id: totrans-153
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Tip
  id: totrans-154
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: 'To get debug information, you should use the following command:'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 若要获取调试信息，请使用以下命令：
- en: '[PRE7]'
  id: totrans-156
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'To get even more debug information, you should use the following command:'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 若要获取更多调试信息，请使用以下命令：
- en: '[PRE8]'
  id: totrans-158
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: The number of `–v` options in the preceding command defines the verbosity.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 上述命令中的 `–v` 选项数量定义了输出的详细程度。
- en: 'To connect with the application gear, you have to connect using `openshift_key`.
    To use a different key, run the following command:'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 若要连接应用 gear，必须使用 `openshift_key` 进行连接。要使用其他密钥，请运行以下命令：
- en: '[PRE9]'
  id: totrans-161
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: The `-i` option is used to tell the SSH client to pick a different SSH key.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: '`-i` 选项用于告诉 SSH 客户端选择不同的 SSH 密钥。'
- en: See also
  id: totrans-163
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另见
- en: The *Working with the SSH key passphrases* recipe
  id: totrans-164
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*使用 SSH 密钥密码短语* 配方'
- en: Working with the SSH key passphrases
  id: totrans-165
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 SSH 密钥密码短语
- en: In the *Uploading SSH keys using the web console* recipe, you learned how to
    create a new SSH key pair and upload it to an OpenShift account. The SSH key pair
    was created with an empty passphrase. The passphrase is a password to protect
    the private key. The empty passphrase avoids reentering a passphrase every time
    you use the key, but it might cause some security concerns. This recipe will walk
    you through the process of securing your SSH keys while avoiding having to re-enter
    the passphrase every time you use the key.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 在 *通过网页控制台上传 SSH 密钥* 配方中，你学会了如何创建一个新的 SSH 密钥对并将其上传到 OpenShift 账户。此 SSH 密钥对是使用空密码短语创建的。密码短语是用来保护私钥的密码。空密码短语避免了每次使用密钥时都需要重新输入密码，但可能会带来一些安全隐患。本配方将引导你完成保护
    SSH 密钥的过程，同时避免每次使用密钥时都需要重新输入密码短语。
- en: Getting ready
  id: totrans-167
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: To step through this recipe, you will need the OpenSSH SSH connectivity tools
    installed on your machine.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 要执行本配方，您需要在计算机上安装 OpenSSH SSH 连接工具。
- en: 'To make sure that the OpenSSH client tool is installed, run the following command:'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 为确保已安装 OpenSSH 客户端工具，请运行以下命令：
- en: '[PRE10]'
  id: totrans-170
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'The output of the preceding command will depend on the operating system and
    OpenSSH version installed on your machine. If you get `ssh: command not found`,
    then the OpenSSH tools are not installed on your machine.'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: '上述命令的输出将取决于你计算机上安装的操作系统和 OpenSSH 版本。如果出现 `ssh: command not found`，说明你的计算机上未安装
    OpenSSH 工具。'
- en: This recipe will use the WordPress application created in the *Uploading SSH
    keys using the web console* recipe.
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 本配方将使用在 *通过网页控制台上传 SSH 密钥* 配方中创建的 WordPress 应用。
- en: How to do it…
  id: totrans-173
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: 'Perform the following steps to use SSH key passphrases:'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 执行以下步骤以使用 SSH 密钥密码短语：
- en: 'Passphrases can be added during key creation time or to an existing key without
    regenerating a new key pair. As you have already created the key pair in the *Uploading
    SSH keys using the web console* recipe, we will reuse this key pair. You will
    use `ssh-keygen` to add a key pair to the existing key:'
  id: totrans-175
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 密码短语可以在创建密钥时添加，也可以添加到现有密钥中，而无需重新生成新的密钥对。由于你已经在*使用 web 控制台上传 SSH 密钥*的教程中创建了密钥对，我们将重用这个密钥对。你将使用`ssh-keygen`将密钥对添加到现有密钥中：
- en: '[PRE11]'
  id: totrans-176
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Now, if you try to SSH into the application gear, you will be asked to enter
    the passphrase.
  id: totrans-177
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，如果你尝试 SSH 连接到应用程序设备，将会被要求输入密码短语。
- en: 'Next, run the `ssh-agent` command. The `ssh-agent` command, which is a part
    of the OpenSSH toolbelt, is another tool that stores your passphrase securely
    so that you do not have to re-enter the passphrase. You can run the `ssh-agent`
    command by typing the following:'
  id: totrans-178
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，运行 `ssh-agent` 命令。`ssh-agent` 命令是 OpenSSH 工具集的一部分，它用于安全地存储你的密码短语，以便你无需重新输入密码短语。你可以通过输入以下命令来运行
    `ssh-agent`：
- en: '[PRE12]'
  id: totrans-179
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'To add the passphrase, run the `ssh-add` utility:'
  id: totrans-180
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要添加密码短语，请运行 `ssh-add` 工具：
- en: '[PRE13]'
  id: totrans-181
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Connect to the application gear to see the SSH agent in action. You will notice
    that you are not asked to enter the passphrase:'
  id: totrans-182
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 连接到应用程序设备以查看 SSH 代理的运行。你会注意到此时不再要求输入密码短语：
- en: '[PRE14]'
  id: totrans-183
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'Exit the shell to end the `ssh-agent` session. If you try to connect with the
    application gear now, you will be asked to enter the passphrase:'
  id: totrans-184
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 退出 shell 以结束 `ssh-agent` 会话。如果你现在尝试连接到应用程序设备，将会被要求输入密码短语：
- en: '[PRE15]'
  id: totrans-185
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE15]'
- en: How it works…
  id: totrans-186
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作原理…
- en: 'The `ssh-agent` utility stores the SSH keys in memory. It caches the private
    keys and responds to the authentication queries from SSH clients. The `ssh-add`
    utility is used to add and remove keys from `ssh-agent`. In step 1, you added
    the passphrase to your existing key. By default, it will use the default key,
    `id_rsa`, in the `.ssh` folder, but you can provide another SSH key file using
    the `-i` option. Now, SSH into the application gear and you will be asked to enter
    the passphrase:'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: '`ssh-agent` 工具将 SSH 密钥存储在内存中。它缓存私钥，并响应 SSH 客户端的认证查询。`ssh-add` 工具用于向 `ssh-agent`
    中添加和移除密钥。在步骤 1 中，你已经将密码短语添加到了现有密钥中。默认情况下，它将使用 `.ssh` 文件夹中的默认密钥 `id_rsa`，但你也可以使用
    `-i` 选项提供另一个 SSH 密钥文件。现在，SSH 连接到应用程序设备时，将会要求你输入密码短语：'
- en: '[PRE16]'
  id: totrans-188
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: Step 2 starts the agent by forking the existing shell. It sets some environment
    variables required by the SSH agent. Next, in step 3, you add the SSH key into
    the agent. It asks for the passphrase to decrypt the private key. After decryption,
    it adds the private key to the agent's cache.
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 步骤 2 通过分叉现有 shell 启动代理。它设置了 SSH 代理所需的一些环境变量。接下来，在步骤 3 中，你将 SSH 密钥添加到代理中。它会要求输入密码短语以解密私钥。解密后，它将私钥添加到代理的缓存中。
- en: Finally, in step 4, you connect to the application gear using the `ssh` client.
    This time you will not be asked to enter the passphrase as the agent already cached
    the private key.
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，在步骤 4 中，你通过 `ssh` 客户端连接到应用程序设备。这次你不会被要求输入密码短语，因为代理已经缓存了私钥。
- en: You can terminate the agent or log out from the shell to end the session.
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以终止代理或从 shell 中注销来结束会话。
- en: See also
  id: totrans-192
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另见
- en: The *Uploading SSH keys using the web console* recipe
  id: totrans-193
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*使用 web 控制台上传 SSH 密钥*的教程'
- en: Cloning the application to the local machine
  id: totrans-194
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将应用程序克隆到本地机器
- en: Every OpenShift application has a private Git repository that houses the application
    source code. OpenShift uses Git not only as a version control system but also
    to build and deploy the application using Git's action hooks. In this recipe,
    you will learn how to get the source code of the OpenShift application on your
    local machine.
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 每个 OpenShift 应用程序都有一个私有 Git 仓库，用于存储应用程序的源代码。OpenShift 使用 Git 不仅作为版本控制系统，还利用
    Git 的操作钩子来构建和部署应用程序。在本教程中，你将学习如何在本地机器上获取 OpenShift 应用程序的源代码。
- en: Getting ready
  id: totrans-196
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: You will need Git installed on the operating system before stepping through
    this recipe. For Debian-based Linux distributions, you can install Git with `apt-get
    install git` as the root. If you are on Fedora or any other Red Hat-based system,
    you can install Git with `yum install git-core` as the root. Mac and Windows users
    can download the Git package from the official download site at [http://git-scm.com/downloads](http://git-scm.com/downloads).
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 在进行此教程之前，你需要确保操作系统上已安装 Git。对于基于 Debian 的 Linux 发行版，你可以作为 root 用户通过 `apt-get
    install git` 安装 Git。如果你使用的是 Fedora 或其他基于 Red Hat 的系统，可以通过 `yum install git-core`
    作为 root 用户安装 Git。Mac 和 Windows 用户可以从官方下载站点下载 Git 包：[http://git-scm.com/downloads](http://git-scm.com/downloads)。
- en: This recipe will use the WordPress application created in the *Creating a WordPress
    application using the web console* recipe.
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 本步骤将使用在*通过Web控制台创建WordPress应用程序*步骤中创建的WordPress应用程序。
- en: How to do it…
  id: totrans-199
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: 'Perform the following steps to clone the repository:'
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 执行以下步骤以克隆仓库：
- en: Go to the **Applications** tab in the web console at [https://openshift.redhat.com/app/console/applications](https://openshift.redhat.com/app/console/applications)
    and click on the application to view its details, as shown in the following screenshot:![How
    to do it…](img/00014.jpeg)
  id: totrans-201
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 进入Web控制台的**应用程序**标签，在[https://openshift.redhat.com/app/console/applications](https://openshift.redhat.com/app/console/applications)中点击应用程序查看其详细信息，如下截图所示：![如何操作…](img/00014.jpeg)
- en: Copy the Git repository URL mentioned on the application detail web page, as
    shown in the following screenshot:![How to do it…](img/00015.jpeg)
  id: totrans-202
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 复制应用程序详情网页上提到的Git仓库URL，如下截图所示：![如何操作…](img/00015.jpeg)
- en: 'Open a command-line terminal, go to a convenient location on your machine,
    and execute the `git clone` command. Replace the repository URL with your application
    Git URL:'
  id: totrans-203
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开命令行终端，进入你机器上的一个方便位置，执行`git clone`命令。将仓库URL替换为你的应用程序Git URL：
- en: '[PRE17]'
  id: totrans-204
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE17]'
- en: How it works…
  id: totrans-205
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的…
- en: The first and second steps helped us to locate the application Git repository
    URL. As discussed in the preceding section, OpenShift uses Git as revision control
    and a source code management system. Every application has a private Git repository.
    A Git repository contains all the information needed to retain and manage the
    revisions and history of a project. OpenShift uses the SSH transport protocol
    to work with Git repositories. To create a secure communication channel between
    the local machine and application gear, Git uses the SSH key setup discussed in
    the *Uploading SSH keys using the web console* recipe. Nobody will be able to
    clone your application repository unless you add their public SSH key to your
    account.
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 第一步和第二步帮助我们找到了应用程序的Git仓库URL。如前一部分所述，OpenShift使用Git作为版本控制和源代码管理系统。每个应用程序都有一个私有Git仓库。Git仓库包含所有保持和管理项目修订和历史所需的信息。OpenShift使用SSH传输协议与Git仓库协作。为了在本地机器和应用程序设备之间创建安全的通信通道，Git使用在*通过Web控制台上传SSH密钥*步骤中讨论的SSH密钥设置。除非你将他们的公钥添加到你的账户中，否则没人能够克隆你的应用程序仓库。
- en: In step 3, you cloned the application Git repository using the `clone` command.
    The `git clone` command created a new Git repository based on the original application
    repository URL. The difference between Git and other version control systems is
    that Git clones the full copy of the repository, in addition to the working copy,
    of all the files in the repository. The `clone` command will create a new directory
    on your local filesystem with the same name as the application.
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 在第3步中，你通过`clone`命令克隆了应用程序的Git仓库。`git clone`命令基于原始应用程序仓库URL创建了一个新的Git仓库。Git与其他版本控制系统的区别在于，Git不仅克隆了工作副本，还克隆了仓库中所有文件的完整副本。`clone`命令将在你的本地文件系统上创建一个与应用程序同名的新目录。
- en: There's more…
  id: totrans-208
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多…
- en: 'You can also specify a different folder name with the `git clone` command.
    Suppose you want to clone the application in the `myapp` folder. To do this, execute
    the following command:'
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 你还可以通过`git clone`命令指定不同的文件夹名称。假设你想将应用程序克隆到`myapp`文件夹中。为此，请执行以下命令：
- en: '[PRE18]'
  id: totrans-210
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: If you want to allow any of your friends or team members to clone your repository,
    just add their public key to your account. Follow the *Uploading SSH keys using
    the web console* recipe to upload the public SSH key. We will discuss team collaboration
    in detail in [Chapter 2](part0029_split_000.html#page "Chapter 2. Managing Domains"),
    *Managing Domains*.
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想允许任何朋友或团队成员克隆你的仓库，只需将他们的公钥添加到你的账户中。请按照*通过Web控制台上传SSH密钥*的步骤上传公钥。我们将在[第2章](part0029_split_000.html#page
    "第2章 管理域")中详细讨论团队协作，*管理域*。
- en: See also
  id: totrans-212
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另见
- en: The *Deploying your first change* recipe
  id: totrans-213
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*部署你的第一次更改*步骤'
- en: Deploying your first change
  id: totrans-214
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 部署你的第一次更改
- en: In the *Cloning the application to the local machine* recipe, you learned how
    to clone an OpenShift application Git repository using the `git clone` command.
    The next logical step after cloning the repository is to make a change, commit
    it, and finally deploy it. In this recipe, you will learn how to deploy the source
    code changes to OpenShift applications.
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 在*将应用程序克隆到本地机器*的步骤中，你学习了如何使用`git clone`命令克隆 OpenShift 应用程序的 Git 仓库。克隆仓库后的下一个逻辑步骤是做出更改，提交更改，最后部署它。在本节中，你将学习如何将源代码更改部署到
    OpenShift 应用程序。
- en: Getting ready
  id: totrans-216
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: To step through this recipe, you will need Git installed on your local machine.
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 要按照本节操作，你需要在本地机器上安装 Git。
- en: How to do it…
  id: totrans-218
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: 'Perform the following steps to deploy your first change:'
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 执行以下步骤来部署你的第一次更改：
- en: Go to the OpenShift web console and navigate to the PHP 5.4 application creation
    page at [https://openshift.redhat.com/app/console/application_type/cart!php-5.4](https://openshift.redhat.com/app/console/application_type/cart!php-5.4).
  id: totrans-220
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 访问 OpenShift Web 控制台，转到 PHP 5.4 应用程序创建页面：[https://openshift.redhat.com/app/console/application_type/cart!php-5.4](https://openshift.redhat.com/app/console/application_type/cart!php-5.4)。
- en: Enter the name of the application. I have used `myapp` as the application name.
  id: totrans-221
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输入应用程序的名称。我使用了`myapp`作为应用程序名称。
- en: Click on the **Create Application** button to create a new application.
  id: totrans-222
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**创建应用程序**按钮来创建一个新应用程序。
- en: Clone the application's Git repository on your local machine by following the
    steps mentioned in the *Cloning the application to the local machine* recipe.
  id: totrans-223
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过按照*将应用程序克隆到本地机器*的步骤，克隆应用程序的 Git 仓库到你的本地机器。
- en: 'Open the `index.php` file inside the application source code root directory.
    Go to the following line of code in `index.php`:'
  id: totrans-224
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开应用程序源代码根目录中的`index.php`文件。然后在`index.php`中找到以下那行代码：
- en: '[PRE19]'
  id: totrans-225
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'Replace the preceding line of code with this:'
  id: totrans-226
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 用这个替换前面的那行代码：
- en: '[PRE20]'
  id: totrans-227
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'Commit the change to the local repository using Git:'
  id: totrans-228
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 Git 将更改提交到本地仓库：
- en: '[PRE21]'
  id: totrans-229
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'Push the changes to the remote repository hosted on the OpenShift application
    gear using the following Git command:'
  id: totrans-230
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下 Git 命令将更改推送到托管在 OpenShift 应用程序齿轮上的远程仓库：
- en: '[PRE22]'
  id: totrans-231
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE22]'
- en: After `git push` successfully completes, open the `http://myapp-{domain-name}.rhcloud.com/`
    application in your favorite browser. You will see your first change.
  id: totrans-232
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`git push`成功完成后，在你喜欢的浏览器中打开`http://myapp-{domain-name}.rhcloud.com/`应用程序。你将看到你第一次的更改。
- en: How it works…
  id: totrans-233
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的…
- en: The OpenShift deployment process is based around Git. From step 1 to step 4,
    you created a PHP 5.4 application using the web console and cloned the application
    on your local machine. In step 5, you made a simple change to the `index.php`
    file. This change has not yet been committed to the local repository. Git, being
    a distributed version control system, has a concept of local and remote repositories.
    You can continue working (making changes and committing them) on your local machine
    as long as you want, and when you are ready, you can push the changes to the remote
    Git repository.
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: OpenShift 的部署过程基于 Git。从第 1 步到第 4 步，你使用 Web 控制台创建了一个 PHP 5.4 应用程序并将其克隆到本地机器。在第
    5 步，你对`index.php`文件做了一个简单的更改，但这个更改尚未提交到本地仓库。Git 作为一个分布式版本控制系统，有本地仓库和远程仓库的概念。你可以继续在本地机器上进行工作（修改和提交），直到你准备好再将更改推送到远程
    Git 仓库。
- en: 'In step 6, you committed the change to your local Git repository using the
    `git commit` command. You used the `-a` and `-m` options. The `-a` option tells
    the `git` command to automatically stage the modified and deleted files, but new
    files are not touched. To commit a new file, you have to first stage the file
    using the `git add` command and then commit it:'
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 在第 6 步中，你使用`git commit`命令将更改提交到本地 Git 仓库。你使用了`-a`和`-m`选项。`-a`选项告诉`git`命令自动暂存已修改和已删除的文件，但不会处理新文件。要提交一个新文件，你必须先使用`git
    add`命令将文件暂存，然后再提交：
- en: '[PRE23]'
  id: totrans-236
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'Step 7 pushes the local commits to a remote repository. When you clone a repository,
    the cloned repository maintains a link back to its parent repository via a remote
    called `origin`. A remote is a handle or reference to another Git repository.
    The remote information is stored in a configuration file called `config` under
    the `.git` folder. You can open the `.git/config` file and view the `origin` remote
    information as follows:'
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 第 7 步将本地提交推送到远程仓库。当你克隆一个仓库时，克隆的仓库会通过名为`origin`的远程保持与其父仓库的连接。远程仓库是对另一个 Git 仓库的引用或标识。远程信息保存在`.git`文件夹下的一个名为`config`的配置文件中。你可以打开`.git/config`文件，查看`origin`远程信息，如下所示：
- en: '[PRE24]'
  id: totrans-238
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: As shown in the preceding code, a remote consists of two different parts. The
    `url` part is the name of the remote repository in the form of a URL. The `fetch`
    part specifies how a reference should be mapped from the namespace of one repository
    into that of another.
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: '如前面的代码所示，远程由两个不同的部分组成。`url` 部分是以 URL 形式表示的远程仓库名称。`fetch` 部分指定了如何将引用从一个仓库的命名空间映射到另一个仓库的命名空间。  '
- en: 'The output of the `git push` command is as follows:'
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: '`git push` 命令的输出如下所示：  '
- en: '[PRE25]'
  id: totrans-241
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'This is how the process works:'
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: '这是这个过程的工作方式：  '
- en: Git takes the `master` branch changes, compresses them, and transfers all the
    missing objects from your local repository to the remote repository named `origin`.
  id: totrans-243
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 'Git 会获取 `master` 分支的更改，对其进行压缩，并将所有缺失的对象从本地仓库传输到名为 `origin` 的远程仓库。  '
- en: Next, a pre-receive action hook is invoked on the application gear. Git hooks
    are custom scripts, which Git will run at specific events like `push`. You can
    write scripts in bash, Perl, Python, Ruby, or whatever you have. The pre-receive
    hook receives a list of all (new or old) the refs that are to be updated. The
    pre-receive action hook in the application gear Git repository stops the PHP and
    other cartridges, checks the deployment integrity, and configures the deployment
    metadata.
  id: totrans-244
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，在应用程序 gear 上调用 pre-receive 动作钩子。Git 钩子是自定义脚本，Git 会在特定事件（如 `push`）发生时运行它们。你可以使用
    bash、Perl、Python、Ruby 或任何你熟悉的语言编写脚本。pre-receive 钩子会接收所有（新的或旧的）需要更新的 refs 列表。应用程序
    gear Git 仓库中的 pre-receive 动作钩子会停止 PHP 和其他 cartridge，检查部署的完整性，并配置部署元数据。
- en: Lastly, the postreceive action hook is invoked on the application gear. It receives
    a list of all the updated refs. The postreceive action hook in the application
    gear Git repository archives the application repository, builds the application,
    starts the PHP and other cartridges, and then finally deploys the application.
  id: totrans-245
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '最后，在应用程序 gear 上调用 postreceive 动作钩子。它接收所有已更新的 refs 列表。应用程序 gear Git 仓库中的 postreceive
    动作钩子将应用程序仓库归档，构建应用程序，启动 PHP 和其他 cartridge，然后最终部署应用程序。  '
- en: There's more…
  id: totrans-246
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '还有更多…  '
- en: Instead of using the `git push origin master` command, you can also use `git
    push`. The `origin` part is the default remote and `master` is the default branch,
    so they are not required.
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: '你可以使用 `git push` 命令，而不是 `git push origin master` 命令。`origin` 部分是默认远程仓库，`master`
    是默认分支，所以这两个部分不是必须的。  '
- en: See also
  id: totrans-248
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '另见  '
- en: The *Cloning the application to the local machine* recipe
  id: totrans-249
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*将应用程序克隆到本地机器*配方  '
- en: Checking the application's gear quota and limits
  id: totrans-250
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '检查应用程序的配额和限制  '
- en: In this recipe, you will learn how to check the application resource limits.
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: '在这个配方中，你将学习如何检查应用程序的资源限制。  '
- en: Getting ready
  id: totrans-252
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '准备工作  '
- en: To step through this recipe, you will need the OpenSSH SSH connectivity tools
    installed on your machine. This recipe will use the WordPress application created
    in the *Creating a WordPress application using the web console* recipe.
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: '要逐步完成这个配方，你需要在你的机器上安装 OpenSSH SSH 连接工具。这个配方将使用*通过 Web 控制台创建 WordPress 应用程序*配方中创建的
    WordPress 应用程序。  '
- en: How to do it…
  id: totrans-254
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '如何操作…  '
- en: To check the resources consumed by your application, run the following command.
    Here, you replace the SSH URL with your application SSH URL. To find the SSH URL
    of your application, refer to the *Uploading SSH keys using the web console* recipe.
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: '要检查应用程序消耗的资源，请运行以下命令。在这里，你需要将 SSH URL 替换为你的应用程序 SSH URL。要查找你的应用程序的 SSH URL，请参考*使用
    Web 控制台上传 SSH 密钥*配方。  '
- en: '[PRE26]'
  id: totrans-256
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: How it works…
  id: totrans-257
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '工作原理…  '
- en: The OpenShift applications run inside gears that have limited resources. Every
    gear, depending on its size, has a definite amount of resources. The `quota -s`
    command can be used to check the resources consumed by the application and the
    limits imposed on the gear.
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: 'OpenShift 应用程序运行在资源有限的 gears 中。每个 gear 根据其大小有一定的资源。可以使用 `quota -s` 命令来检查应用程序消耗的资源以及施加在
    gear 上的限制。  '
- en: 'The output of the `quota -s` command is shown as follows:'
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: '`quota -s` 命令的输出如下所示：  '
- en: '[PRE27]'
  id: totrans-260
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: The first column is the name of the filesystem that has quota enabled for it.
    The second column shows how many blocks the user is currently using. The fourth
    column tells us the storage limit. Gears in free tier have access to 1 GB of disk
    storage. The sixth column tells us the number of files created by the application.
    The eighth column shows the maximum number of files a user can create. Gears can
    create a maximum of 80,000 files. The gears also have limited RAM memory. Small
    gears have 512 MB of RAM, medium gears have 1 GB of RAM, and large gears have
    2 GB of RAM. The medium and large gears are only available in the Bronze and Silver
    commercial plans.
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: 第一列是启用了配额的文件系统名称。第二列显示当前用户使用的块数。第四列告诉我们存储限制。免费套餐中的 Gear 访问 1 GB 的磁盘存储空间。第六列显示应用程序创建的文件数量。第八列显示用户可以创建的最大文件数。Gear
    最多可以创建 80,000 个文件。Gear 还限制了 RAM 内存。小型 Gear 具有 512 MB 的 RAM，中型 Gear 具有 1 GB 的 RAM，大型
    Gear 具有 2 GB 的 RAM。中型和大型 Gear 仅在 Bronze 和 Silver 商业计划中提供。
- en: There's more…
  id: totrans-262
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多内容……
- en: 'You can also view how much disk space your gear is using by running the `***du***`
    command:'
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以通过运行 `***du***` 命令来查看 Gear 使用了多少磁盘空间：
- en: '[PRE28]'
  id: totrans-264
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: Installing the OpenShift rhc command-line client
  id: totrans-265
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装 OpenShift rhc 命令行客户端
- en: The `rhc` client is the most powerful and feature-rich command-line client utility,
    which users can use to work with OpenShift. It is built using Ruby programming
    language and packaged as a Ruby gem. The `rhc` source code is available on GitHub
    at [https://github.com/openshift/rhc](https://github.com/openshift/rhc).
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: '`rhc` 客户端是功能最强大、最丰富的命令行客户端工具，用户可以用它与 OpenShift 进行交互。它是使用 Ruby 编程语言构建的，并作为 Ruby
    gem 包装。`rhc` 的源代码可以在 GitHub 上找到：[https://github.com/openshift/rhc](https://github.com/openshift/rhc)。'
- en: Getting ready
  id: totrans-267
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: 'To install `rhc`, you will need to have Ruby 1.8.7 or above installed on your
    machine. You can check whether Ruby is installed on your machine by running the
    following command:'
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: 要安装 `rhc`，您需要确保您的机器上安装了 Ruby 1.8.7 或更高版本。您可以通过运行以下命令检查是否已安装 Ruby：
- en: '[PRE29]'
  id: totrans-269
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'The output of the preceding command will depend on the operating system and
    Ruby version installed on your machine. If you receive `ruby: command not found`,
    then Ruby is not installed on your machine. Install Ruby on your operating system.
    You can download the package for your operating system from the official website
    at [https://www.ruby-lang.org/en/downloads/](https://www.ruby-lang.org/en/downloads/).'
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: '上述命令的输出将取决于您机器上安装的操作系统和 Ruby 版本。如果收到 `ruby: command not found` 的消息，说明您的机器上未安装
    Ruby。请在您的操作系统上安装 Ruby。您可以从官方网站 [https://www.ruby-lang.org/en/downloads/](https://www.ruby-lang.org/en/downloads/)
    下载适用于您的操作系统的安装包。'
- en: How to do it…
  id: totrans-271
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作……
- en: 'Open a new command-line terminal and run the following command:'
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: 打开一个新的命令行终端并运行以下命令：
- en: '[PRE30]'
  id: totrans-273
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: This command will install the `rhc` gem required to work with OpenShift.
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: 此命令将安装与 OpenShift 配合使用所需的 `rhc` gem。
- en: How it works…
  id: totrans-275
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作原理……
- en: OpenShift packages the `rhc` command-line utility as a gem. A gem is a reusable
    piece of code or a command-line utility to help automate tasks. `RubyGems` is
    a package manager for the Ruby programming language that provides a standard format
    for distributing Ruby programs and libraries. This software allows a developer
    to download, install, and use software packages on their machine. The `gem` command
    allows you to work with `RubyGems`.
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: OpenShift 将 `rhc` 命令行工具打包为 gem。Gem 是一段可重用的代码或命令行工具，帮助自动化任务。`RubyGems` 是 Ruby
    编程语言的包管理器，它提供了分发 Ruby 程序和库的标准格式。该软件允许开发者在他们的机器上下载、安装和使用软件包。`gem` 命令使您能够使用 `RubyGems`。
- en: When you run the `gem install command`, the `gem` command-line tool fetches
    the package and its dependencies from the central repository and installs them.
    The central gem repository is available at [http://rubygems.org](http://rubygems.org).
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
  zh: 当您运行 `gem install` 命令时，`gem` 命令行工具会从中央仓库获取包及其依赖项并安装它们。中央 gem 仓库可以通过 [http://rubygems.org](http://rubygems.org)
    访问。
- en: 'After the command successfully finishes, you can check the version of `rhc`
    using the following command:'
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
  zh: 命令成功执行后，您可以使用以下命令检查 `rhc` 的版本：
- en: '[PRE31]'
  id: totrans-279
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: There's more…
  id: totrans-280
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多内容……
- en: 'The `gem install` command also generates the documentation for the installed
    packages. You can use the Ruby `ri` command-line tool to view the documentation
    offline. For example, if you want to list all the classes for which `ri` can show
    documentation, then run the following command:'
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
  zh: '`gem install` 命令还会生成已安装包的文档。您可以使用 Ruby `ri` 命令行工具离线查看文档。例如，如果您想列出所有 `ri` 可以显示文档的类，请运行以下命令：'
- en: '[PRE32]'
  id: totrans-282
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'This command will list all the classes and their methods for which you can
    view the documentation. To view the documentation of the `CLI` class method of
    the `RHC` class, execute the following command:'
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
  zh: 此命令将列出所有类及其方法，你可以查看相关文档。要查看 `RHC` 类的 `CLI` 类方法的文档，请执行以下命令：
- en: '[PRE33]'
  id: totrans-284
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'The output will be the documentation for the `CLI` method, as follows:'
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
  zh: 输出将是 `CLI` 方法的文档，如下所示：
- en: '[PRE34]'
  id: totrans-286
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: 'You can disable the documentation generation by using the following command:'
  id: totrans-287
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过使用以下命令禁用文档生成：
- en: '[PRE35]'
  id: totrans-288
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: See also
  id: totrans-289
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 参见
- en: The *Setting up an OpenShift account using rhc* recipe
  id: totrans-290
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*使用 rhc 设置 OpenShift 账户* 教程'
- en: The *Updating rhc* recipe
  id: totrans-291
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*更新 rhc* 教程'
- en: Setting up an OpenShift account using rhc
  id: totrans-292
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 rhc 设置 OpenShift 账户
- en: In the *Installing the OpenShift rhc command-line client* recipe, you learned
    how to install the `rhc` command-line client. After installation, the first operation
    you have to perform is to set up the OpenShift account. In this recipe, you will
    learn how to set up your account using `rhc`.
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
  zh: 在*安装 OpenShift rhc 命令行客户端*这一教程中，你学习了如何安装`rhc`命令行客户端。安装完成后，你需要执行的第一步操作是设置 OpenShift
    账户。在本教程中，你将学习如何使用`rhc`设置账户。
- en: Getting ready
  id: totrans-294
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: To complete this recipe, you will need to have `rhc` installed on your machine.
    Refer to the *Installing the OpenShift rhc command-line client* recipe for instructions.
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
  zh: 完成本教程之前，你需要在你的机器上安装 `rhc`。有关安装说明，请参见*安装 OpenShift rhc 命令行客户端*教程。
- en: How to do it…
  id: totrans-296
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: 'To set up an OpenShift account, open a command-line terminal and run the following
    command:'
  id: totrans-297
  prefs: []
  type: TYPE_NORMAL
  zh: 要设置 OpenShift 账户，请打开命令行终端并运行以下命令：
- en: '[PRE36]'
  id: totrans-298
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: How it works…
  id: totrans-299
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的…
- en: Before you can use the `rhc` client to work with OpenShift, you have to set
    up the account.
  id: totrans-300
  prefs: []
  type: TYPE_NORMAL
  zh: 在你能够使用 `rhc` 客户端与 OpenShift 配合使用之前，你必须先设置账户。
- en: 'The `setup` command does the following:'
  id: totrans-301
  prefs: []
  type: TYPE_NORMAL
  zh: '`setup`命令执行以下操作：'
- en: It first asks you to provide your OpenShift credentials to authenticate with
    [openshift.redhat.com](http://openshift.redhat.com).
  id: totrans-302
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 它首先会要求你提供 OpenShift 凭证，以便认证到 [openshift.redhat.com](http://openshift.redhat.com)。
- en: After successful authentication, `rhc` asks whether it should create an authorization
    token. An authorization token allows you to access the OpenShift server without
    entering the password with every command. It stores the token in the `.openshift`
    folder under the user's `home` directory. By default, the token is valid for 30
    days, which means that after this you have to authenticate it again.
  id: totrans-303
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在成功认证后，`rhc` 会询问是否创建授权令牌。授权令牌使你无需在每次执行命令时输入密码即可访问 OpenShift 服务器。它将令牌存储在用户 `home`
    目录下的 `.openshift` 文件夹中。默认情况下，令牌的有效期为 30 天，过期后需要重新认证。
- en: Next, the `setup` command creates a file called `express.conf` in the `.openshift`
    folder under the user's `home` directory. The `express.conf` file stores the basic
    configuration required by `rhc` such as the OpenShift server location, your OpenShift
    username, and whether or not to create and use authorization tokens.
  id: totrans-304
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，`setup`命令将在用户的 `home` 目录下的 `.openshift` 文件夹中创建一个名为 `express.conf` 的文件。`express.conf`
    文件存储了 `rhc` 所需的基本配置，例如 OpenShift 服务器的位置、你的 OpenShift 用户名，以及是否创建并使用授权令牌。
- en: If no SSH key exists in the `.ssh` folder at `~/.ssh`, then the `rhc` `setup`
    command will generate a new key pair using the `ssh-keygen` utility.
  id: totrans-305
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果 `~/.ssh` 文件夹中没有 SSH 密钥，则 `rhc` 的 `setup` 命令将使用 `ssh-keygen` 工具生成一个新的密钥对。
- en: After generating the new SSH key pair, `rhc` will upload the public SSH key
    to the OpenShift server. OpenShift copies the public key into an authorization
    file on the application gear called `authorized_keys` at `~/.ssh/authorized_keys`.
    In the *Uploading SSh keys using the web console* recipe, you uploaded the public
    SSH key using the web console. It will prompt you to provide the name of the key
    or use the default name generated by the `setup` command.
  id: totrans-306
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在生成新的 SSH 密钥对后，`rhc`会将公钥上传到 OpenShift 服务器。OpenShift 将公钥复制到应用程序硬件上的授权文件 `authorized_keys`
    中，路径为 `~/.ssh/authorized_keys`。在*使用 Web 控制台上传 SSH 密钥*这一教程中，你已经使用 Web 控制台上传了公钥。系统会提示你提供密钥名称，或者使用
    `setup` 命令生成的默认名称。
- en: Next, `rhc` checks if Git has been installed. The `rhc setup` command will run
    a simple check against your local configuration and credentials to confirm that
    the configurations have been completed. It will also run a series of tests to
    check whether `ssh` has been configured properly and whether your system can communicate
    with OpenShift servers.
  id: totrans-307
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，`rhc` 会检查 Git 是否已安装。`rhc setup` 命令会对本地配置和凭据进行简单检查，以确认配置已完成。它还会运行一系列测试，检查
    `ssh` 是否已正确配置，以及您的系统是否可以与 OpenShift 服务器通信。
- en: Finally, `rhc` asks the user to create a domain if one is not already created.
    In the *Creating OpenShift domains using the web console* recipe, you created
    the domain using the web console.
  id: totrans-308
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，如果用户尚未创建域，`rhc` 会提示用户创建一个。在 *使用 Web 控制台创建 OpenShift 域* 配方中，您通过 Web 控制台创建了该域。
- en: There's more…
  id: totrans-309
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多……
- en: 'You can run the `rhc` `setup` command anytime while working with OpenShift.
    Every time you run the `rhc` `setup` command, it will use the configuration properties
    defined in the `express.conf` file. If you want to generate a new, clean configuration,
    you can use the `--clean` option. This will run the `setup` command again, ignoring
    any saved configuration options stored in `express.conf`:'
  id: totrans-310
  prefs: []
  type: TYPE_NORMAL
  zh: 在使用 OpenShift 时，您可以随时运行 `rhc` `setup` 命令。每次运行 `rhc` `setup` 命令时，它将使用在 `express.conf`
    文件中定义的配置属性。如果您想生成一个新的干净配置，可以使用 `--clean` 选项。这样会重新运行 `setup` 命令，忽略 `express.conf`
    中存储的任何已保存的配置选项：
- en: '[PRE37]'
  id: totrans-311
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: See also
  id: totrans-312
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另请参见
- en: The *Enabling the autocomplete feature in an rhc command-line client* recipe
  id: totrans-313
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*启用 rhc 命令行客户端的自动完成功能* 配方'
- en: The *Viewing the account details using rhc* recipe
  id: totrans-314
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*使用 rhc 查看帐户详细信息* 配方'
- en: The *Specifying a different OpenShift server hostname* recipe
  id: totrans-315
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*指定不同的 OpenShift 服务器主机名* 配方'
- en: Enabling the autocomplete feature in an rhc command-line client
  id: totrans-316
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 启用 rhc 命令行客户端的自动完成功能
- en: The `rhc` command-line utility supports autocompletion. This involves `rhc`
    predicting a command that the user wants to type in without them actually typing
    it completely. This is very helpful for new users who do not know all the commands
    supported by `rhc`. In this recipe, you will learn how to enable autocomplete
    for the `rhc` command-line client.
  id: totrans-317
  prefs: []
  type: TYPE_NORMAL
  zh: '`rhc` 命令行工具支持自动补全功能。这意味着 `rhc` 可以预测用户想要输入的命令，而用户无需完全输入。这对那些不熟悉 `rhc` 支持的所有命令的新用户非常有帮助。在本配方中，您将学习如何为
    `rhc` 命令行客户端启用自动补全功能。'
- en: Note
  id: totrans-318
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: The autocomplete feature does not work for Windows Terminal.
  id: totrans-319
  prefs: []
  type: TYPE_NORMAL
  zh: 自动完成功能不适用于 Windows Terminal。
- en: Getting ready
  id: totrans-320
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: To step through this recipe, you will need to have `rhc` installed on your machine.
    Refer to the *Installing the OpenShift rhc command-line client* recipe for instructions.
  id: totrans-321
  prefs: []
  type: TYPE_NORMAL
  zh: 要按步骤操作此配方，您需要在计算机上安装 `rhc`。有关安装说明，请参阅 *安装 OpenShift rhc 命令行客户端* 配方。
- en: How to do it…
  id: totrans-322
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作……
- en: 'To enable autocompletion, perform the following steps:'
  id: totrans-323
  prefs: []
  type: TYPE_NORMAL
  zh: 要启用自动补全功能，请执行以下步骤：
- en: 'Run the `rhc setup` command again with the `autocomplete` option:'
  id: totrans-324
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 再次运行 `rhc setup` 命令，并使用 `autocomplete` 选项：
- en: '[PRE38]'
  id: totrans-325
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE38]'
- en: 'The previous step will generate a file named `bash_autocomplete` in the `.openshift`
    folder at `~/.openshift`. To enable autocompletion, you have to add the `~/.openshift/bash_autocomplete`
    line to the `.bashrc` or `.bash_profile` file present in your user''s home directory.
    The `.bashrhc` file on my Fedora box is as follows:'
  id: totrans-326
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 上一步将生成一个名为 `bash_autocomplete` 的文件，位于 `~/.openshift` 文件夹中。要启用自动补全，您必须将 `~/.openshift/bash_autocomplete`
    这一行添加到您用户主目录下的 `.bashrc` 或 `.bash_profile` 文件中。我在 Fedora 系统上的 `.bashrc` 文件如下所示：
- en: '[PRE39]'
  id: totrans-327
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE39]'
- en: Note that on Mac OS X, you have to add `~/.openshift/bash_autocomplete` to your
    `~/.bash_profile`. On Mac OS X, the new Terminal windows and tabs are always considered
    login shells, so this is a necessary step for OS X users.
  id: totrans-328
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 请注意，在 Mac OS X 上，您必须将 `~/.openshift/bash_autocomplete` 添加到 `~/.bash_profile`
    文件中。在 Mac OS X 上，新打开的终端窗口和标签始终被视为登录 Shell，因此这是 OS X 用户必须执行的必要步骤。
- en: Reload or restart the shell to allow these changes to take effect.
  id: totrans-329
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 重新加载或重新启动 Shell 以使这些更改生效。
- en: How it works…
  id: totrans-330
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作原理……
- en: You should try to understand what you have done in the preceding section. In
    step 1, you ran the `setup` command with the `autocomplete` option. This generated
    a bash script called `bash_autocomplete` in the `.openshift` folder at `~/.openshift`.
    This bash script defines a custom completion function called `_rhc` for the `rhc`
    command-line client. Bash will execute this function when the `rhc` tab key is
    typed at the prompt and will display possible completions.
  id: totrans-331
  prefs: []
  type: TYPE_NORMAL
  zh: 你应该理解前面章节中你所做的操作。在步骤1中，你使用`autocomplete`选项运行了`setup`命令。这在`~/.openshift`文件夹中生成了一个名为`bash_autocomplete`的bash脚本。这个bash脚本定义了一个名为`_rhc`的自定义补全函数，用于`rhc`命令行客户端。当你在提示符下输入`rhc`并按下Tab键时，Bash会执行这个函数，并显示可能的补全项。
- en: In step 2, you sourced the `bash_autocomplete` file by adding `~/.openshift/bash_autocomplete`
    to the `.bashrc` script. This will make sure that the autocompletion functionality
    is available for each shell.
  id: totrans-332
  prefs: []
  type: TYPE_NORMAL
  zh: 在步骤2中，你通过将`~/.openshift/bash_autocomplete`添加到`.bashrc`脚本中来加载`bash_autocomplete`文件。这将确保在每个shell中都能使用自动补全功能。
- en: 'Finally, in step 3, you restarted the shell to load the `_rhc` function. Now,
    if you type `rhc` and then press the *Tab* key, it will show you all the `rhc`
    commands:'
  id: totrans-333
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，在步骤3中，你重新启动了shell以加载`_rhc`函数。现在，如果你输入`rhc`并按下*Tab*键，它会显示所有`rhc`命令：
- en: '[PRE40]'
  id: totrans-334
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: There's more…
  id: totrans-335
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多…
- en: 'Most of the `rhc` commands have options, which you can provide. To view all
    the options for a command, type in `--` and press *Tab*. For example, to view
    all the `rhc setup` command options, type in `rhc setup --` and press *Tab*:'
  id: totrans-336
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数`rhc`命令都有可用的选项，你可以提供这些选项。要查看命令的所有选项，可以输入`--`并按*Tab*键。例如，要查看`rhc setup`命令的所有选项，输入`rhc
    setup --`并按*Tab*键：
- en: '[PRE41]'
  id: totrans-337
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: See also
  id: totrans-338
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另请参见
- en: The *Setting up an OpenShift account using rhc* recipe
  id: totrans-339
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*使用rhc设置OpenShift账户*配方'
- en: Viewing the account details using rhc
  id: totrans-340
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用rhc查看账户详情
- en: In this recipe, you will learn how to view your account details using `rhc`.
  id: totrans-341
  prefs: []
  type: TYPE_NORMAL
  zh: 在本配方中，你将学习如何使用`rhc`查看账户详情。
- en: Getting ready
  id: totrans-342
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: To complete this recipe, you will need to have `rhc` installed on your machine.
    Refer to the *Installing the OpenShift rhc command-line client* recipe for instructions.
  id: totrans-343
  prefs: []
  type: TYPE_NORMAL
  zh: 要完成本配方，你需要在你的机器上安装`rhc`。请参考*安装OpenShift rhc命令行客户端*配方获取安装说明。
- en: How to do it…
  id: totrans-344
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: 'To view the account details, run the `rhc account` command as follows:'
  id: totrans-345
  prefs: []
  type: TYPE_NORMAL
  zh: 要查看账户详情，请运行以下命令`rhc account`：
- en: '[PRE42]'
  id: totrans-346
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: This is all you need to do to view the account details.
  id: totrans-347
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是查看账户详情所需做的全部操作。
- en: How it works…
  id: totrans-348
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何工作…
- en: 'The `rhc account` command shows details about the currently logged-in user.
    When you run the command, it makes a REST call to the OpenShift REST API using
    the authentication token generated during `rhc setup`. The REST API returns a
    JSON response, which `rhc` will render in a human-readable format:'
  id: totrans-349
  prefs: []
  type: TYPE_NORMAL
  zh: '`rhc account`命令显示当前登录用户的详细信息。当你运行该命令时，它会使用在`rhc setup`过程中生成的认证令牌，向OpenShift
    REST API发出REST调用。REST API返回一个JSON响应，`rhc`会以易于阅读的格式显示出来：'
- en: '[PRE43]'
  id: totrans-350
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: The account details include whom you are logged in as, which OpenShift server
    you are connected to, your OpenShift user ID, the OpenShift plan you are using,
    the number of gears as well as the gear size used and allowed, the number of domains
    allowed, and whether you can use SSL certificates or not.
  id: totrans-351
  prefs: []
  type: TYPE_NORMAL
  zh: 账户详情包括当前登录用户信息、连接的OpenShift服务器、OpenShift用户ID、使用的OpenShift计划、使用的和允许的gear数量及其大小、允许的域名数量以及是否可以使用SSL证书等信息。
- en: You can also view the account details in the web console by navigating to the
    account web page at [https://openshift.redhat.com/app/account](https://openshift.redhat.com/app/account).
  id: totrans-352
  prefs: []
  type: TYPE_NORMAL
  zh: 你还可以通过访问[https://openshift.redhat.com/app/account](https://openshift.redhat.com/app/account)在Web控制台中查看账户详情。
- en: There's more…
  id: totrans-353
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多…
- en: 'You can also view details of any of your other OpenShift accounts by passing
    the `-l` or `--rhlogin` option. The `-l` or `--rhlogin` option is a global option
    available with every command. When you use `-l` or `--rhlogin`, you force the
    `rhc` client to use the user-specified login:'
  id: totrans-354
  prefs: []
  type: TYPE_NORMAL
  zh: 你还可以通过传递`-l`或`--rhlogin`选项来查看其他OpenShift账户的详情。`-l`或`--rhlogin`选项是每个命令都可以使用的全局选项。当你使用`-l`或`--rhlogin`时，会强制`rhc`客户端使用用户指定的登录信息：
- en: '[PRE44]'
  id: totrans-355
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: 'You can log out from your current session on the server by using the `rhc account-logout`
    command. This ends the user''s current session and deletes the authorization token
    files in the `.openshift` folder at `~/.openshift`:'
  id: totrans-356
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过使用`rhc account-logout`命令退出当前会话，这将结束用户的当前会话并删除`~/.openshift`文件夹中的授权令牌文件：
- en: '[PRE45]'
  id: totrans-357
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: You can also use `rhc logout` as a short alternative to `rhc account-logout`.
  id: totrans-358
  prefs: []
  type: TYPE_NORMAL
  zh: 你也可以使用`rhc logout`作为`rhc account-logout`的简短替代命令。
- en: See also
  id: totrans-359
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另请参见
- en: The *Setting up an OpenShift account using rhc* recipe
  id: totrans-360
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*使用rhc设置OpenShift账户*食谱'
- en: Specifying a different OpenShift server hostname
  id: totrans-361
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 指定一个不同的OpenShift服务器主机名
- en: This recipe talks about how you can configure a different OpenShift server hostname.
    By default, when you set up your OpenShift account using the `rhc setup` command,
    `rhc` is configured to work with the public OpenShift PaaS hosted at [openshift.redhat.com](http://openshift.redhat.com).
    However, it is possible to use a different OpenShift installation, which can be
    either an OpenShift Enterprise or an OpenShift Origin installation.
  id: totrans-362
  prefs: []
  type: TYPE_NORMAL
  zh: 本食谱介绍了如何配置一个不同的OpenShift服务器主机名。默认情况下，当你使用`rhc setup`命令设置OpenShift账户时，`rhc`会被配置为与公开的OpenShift
    PaaS（托管在[openshift.redhat.com](http://openshift.redhat.com)上）一起使用。然而，也可以使用一个不同的OpenShift安装版本，这可以是OpenShift
    Enterprise或OpenShift Origin的安装。
- en: Getting ready
  id: totrans-363
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: To step through this recipe, you will need to have `rhc` installed on your machine.
    Refer to the *Installing the OpenShift rhc command-line client* recipe for instructions.
  id: totrans-364
  prefs: []
  type: TYPE_NORMAL
  zh: 要按照本食谱操作，你需要在机器上安装`rhc`。请参考*安装OpenShift rhc命令行客户端*食谱中的说明。
- en: How to do it…
  id: totrans-365
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: 'Open a command-line terminal and run the following command to use a different
    OpenShift server hostname:'
  id: totrans-366
  prefs: []
  type: TYPE_NORMAL
  zh: 打开命令行终端，运行以下命令来使用不同的OpenShift服务器主机名：
- en: '[PRE46]'
  id: totrans-367
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: Replace `<My OpenShift Installation Hostname>` with the OpenShift server hostname.
  id: totrans-368
  prefs: []
  type: TYPE_NORMAL
  zh: 将`<My OpenShift Installation Hostname>`替换为OpenShift服务器的主机名。
- en: How it works…
  id: totrans-369
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的…
- en: The `rhc setup` command takes an option, `--server`, which allows a user to
    specify the server hostname. When you run the `rhc setup` command with the new
    server location, the `setup` command will perform all the actions required to
    configure your OpenShift account to work with the new server. The `setup` command
    will overwrite the `express.conf` file in `~/.openshift` with the new server hostname.
    The `rhc` client will get configured to work with the new OpenShift server.
  id: totrans-370
  prefs: []
  type: TYPE_NORMAL
  zh: '`rhc setup`命令有一个选项`--server`，允许用户指定服务器的主机名。当你运行带有新服务器位置的`rhc setup`命令时，`setup`命令将执行所有必要的操作来配置你的OpenShift账户，以便与新服务器一起使用。`setup`命令将用新的服务器主机名覆盖`~/.openshift`中的`express.conf`文件。`rhc`客户端将被配置为与新的OpenShift服务器一起使用。'
- en: There's more…
  id: totrans-371
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多…
- en: 'You can also configure the server by directly editing the `express.conf` file
    at `~/.openshift/express.conf`. The `libra_server` property is as follows:'
  id: totrans-372
  prefs: []
  type: TYPE_NORMAL
  zh: 你还可以通过直接编辑`~/.openshift/express.conf`中的`express.conf`文件来配置服务器。`libra_server`属性如下：
- en: '[PRE47]'
  id: totrans-373
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: 'Change the preceding code to a new server hostname:'
  id: totrans-374
  prefs: []
  type: TYPE_NORMAL
  zh: 将上面的代码更改为新的服务器主机名：
- en: '[PRE48]'
  id: totrans-375
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: See also
  id: totrans-376
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另请参见
- en: The *Setting up an OpenShift account using rhc* recipe
  id: totrans-377
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*使用rhc设置OpenShift账户*食谱'
- en: The *Viewing the account details using rhc* recipe
  id: totrans-378
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*使用rhc查看账户详情*食谱'
- en: Updating rhc
  id: totrans-379
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 更新rhc
- en: The OpenShift command-line tool, `rhc`, is the most powerful and popular way
    to work with OpenShift. In this recipe, you will learn how to update `rhc` to
    the latest version. OpenShift Online has a three-week release cycle, and most
    of the time, the `rhc` client tool is also updated to either support a new feature
    or fix a bug. So, it always helps if you use the latest version of `rhc`.
  id: totrans-380
  prefs: []
  type: TYPE_NORMAL
  zh: OpenShift命令行工具`rhc`是与OpenShift交互的最强大、最流行的方式。在本食谱中，你将学习如何将`rhc`更新到最新版本。OpenShift
    Online有一个三周的发布周期，通常情况下，`rhc`客户端工具也会被更新，以支持新特性或修复漏洞。因此，始终使用最新版本的`rhc`会有所帮助。
- en: Getting ready
  id: totrans-381
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: To be ready for this recipe, you will need an already installed `rhc`. No other
    prerequisites are required.
  id: totrans-382
  prefs: []
  type: TYPE_NORMAL
  zh: 为了准备本食谱，你需要一个已经安装好的`rhc`。不需要其他先决条件。
- en: How to do it…
  id: totrans-383
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: 'To update the `rhc` gem, run the `gem update` command:'
  id: totrans-384
  prefs: []
  type: TYPE_NORMAL
  zh: 要更新`rhc` gem，运行`gem update`命令：
- en: '[PRE49]'
  id: totrans-385
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
- en: This is all you need to do to update the `rhc` command line to the latest version.
  id: totrans-386
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是你需要做的，来将`rhc`命令行更新到最新版本。
- en: How it works…
  id: totrans-387
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的…
- en: '`rhc` is a Ruby gem and `RubyGems` is a package manager like many other package
    managers. It uses a central repository, which hosts installable packages. When
    you run the `gem update` command, this command-line tool fetches the latest packages
    from the central repository and installs them.'
  id: totrans-388
  prefs: []
  type: TYPE_NORMAL
  zh: '`rhc`是一个Ruby gem，而`RubyGems`是一个包管理器，类似于其他许多包管理器。它使用一个中央仓库来托管可安装的软件包。当你运行`gem
    update`命令时，这个命令行工具会从中央仓库获取最新的软件包并进行安装。'
- en: There's more…
  id: totrans-389
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多…
- en: 'When you start working with `rhc`, you will soon have multiple versions of
    the `rhc` gem installed on your machine. You can uninstall all the previous versions
    using the `cleanup` command. This command will uninstall old versions of installed
    gems in the local repository:'
  id: totrans-390
  prefs: []
  type: TYPE_NORMAL
  zh: 当你开始使用`rhc`时，你很快会在你的机器上安装多个版本的`rhc` gem。你可以使用`cleanup`命令卸载所有先前的版本。该命令将卸载本地仓库中已安装的旧版本
    gem：
- en: '[PRE50]'
  id: totrans-391
  prefs: []
  type: TYPE_PRE
  zh: '[PRE50]'
- en: See also
  id: totrans-392
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另请参阅
- en: The *Installing the OpenShift rhc command-line client* recipe
  id: totrans-393
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*安装 OpenShift rhc 命令行客户端* 配方'
