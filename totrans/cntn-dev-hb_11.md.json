["```\napiVersion: v1\nkind: Service\nmetadata:\n  name: myservice\nspec:\n  selector:\n   myapp: test\n  ports:\n    - protocol: TCP\n      port: 80\n      targetPort: 8080\n```", "```\n$ kubectl get endpoints myservice\nNAME        ENDPOINTS   AGE\nmyservice   <none>      29s\n```", "```\n$ kubectl run mypod1 --labels myapp=test \\\n--image=nginx:alpine\npod/mypod1 created\n```", "```\n$ kubectl get endpoints myservice\nNAME        ENDPOINTS         AGE\nmyservice   10.1.0.113:8080   5m58s\n```", "```\n    Chapter11$ kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-\n    nginx/controller-v1.8.1/deploy/static/provider/cloud/deploy.yaml\n    namespace/ingress-nginx created\n    serviceaccount/ingress-nginx created\n    serviceaccount/ingress-nginx-admission created\n    role.rbac.authorization.k8s.io/ingress-nginx created\n    role.rbac.authorization.k8s.io/ingress-nginx-admission created\n    clusterrole.rbac.authorization.k8s.io/ingress-nginx created\n    clusterrole.rbac.authorization.k8s.io/ingress-nginx-admission created\n    rolebinding.rbac.authorization.k8s.io/ingress-nginx created\n    rolebinding.rbac.authorization.k8s.io/ingress-nginx-admission created\n    clusterrolebinding.rbac.authorization.k8s.io/ingress-nginx created\n    clusterrolebinding.rbac.authorization.k8s.io/ingress-nginx-admission created\n    configmap/ingress-nginx-controller created\n    service/ingress-nginx-controller created\n    service/ingress-nginx-controller-admission created\n    deployment.apps/ingress-nginx-controller created\n    job.batch/ingress-nginx-admission-create created\n    job.batch/ingress-nginx-admission-patch created\n    ingressclass.networking.k8s.io/nginx created\n    validatingwebhookconfiguration.admissionregistration.k8s.io/ingress-nginx-admission created\n    ```", "```\n    Chapter11$ kubectl get all -n ingress-nginx\n    NAME                                            READY   STATUS       RESTARTS   AGE\n    pod/ingress-nginx-admission-create-9cpnb        0/1     Completed   0          13m\n    pod/ingress-nginx-admission-patch-6gq2c         0/1     Completed   1          13m\n    pod/ingress-nginx-controller-74469fd44c-h6nlc   1/1     Running     0          13m\n    NAME                                         TYPE           CLUSTER-IP       EXTERNAL-IP   PORT(S)                      AGE\n    service/ingress-nginx-controller             LoadBalancer   10.100.162.170   localhost      80:31901/TCP,443:30080/TCP   13m\n    service/ingress-nginx-controller-admission   ClusterIP      10.100.197.210   <none>        443/TCP                      13m\n    NAME                                       READY   UP-TO-DATE   AVAILABLE   AGE\n    deployment.apps/ingress-nginx-controller   1/1     1            1           13m\n    NAME                                                  DESIRED    CURRENT   READY   AGE\n    replicaset.apps/ingress-nginx-controller-74469fd44c   1         1         1       13m\n    NAME                                       COMPLETIONS   DURATION   AGE\n    job.batch/ingress-nginx-admission-create   1/1           7s          13m\n    ingress-nginx-controller Service is attached to the localhost IP address, so we can check its availability at http://localhost:80 and https://localhost:443 (exposed ports):\n\n    ```", "```\n    Chapter11$ curl https://localhost\n    curl: (60) SSL certificate problem: self-signed certificate\n    More details here: https://curl.se/docs/sslcerts.xhtml\n    curl failed to verify the legitimacy of the server and therefore could not\n    establish a secure connection to it. To learn more about this situation and\n    how to fix it, please visit the web page mentioned above.\n    Chapter11$ curl -k https://localhost\n    <html>\n    <head><title>404 Not Found</title></head>\n    <body>\n    <center><h1>404 Not Found</h1></center>\n    <hr><center>nginx</center>\n    </body>\n    </html>\n    ```", "```\n\n    ```", "```\n    Chapter11$ kubectl create ns simplestlab\n    namespace/simplestlab created\n    Chapter11$ kubectl create -n simplestlab \\\n    -f simplestlab/\n    deployment.apps/app created\n    service/app created\n    secret/appcredentials created\n    service/db created\n    statefulset.apps/db created\n    secret/dbcredentials created\n    secret/initdb created\n    configmap/lb-config created\n    daemonset.apps/lb created\n    simplestlab namespace:\n\n    ```", "```\n\n    ```", "```\n    Chapter11$ cat ingress/simplestlab.ingress.yaml\n    apiVersion: networking.k8s.io/v1\n    kind: Ingress\n    metadata:\n      name: simplestlab\n      annotations:\n        # nginx.ingress.kubernetes.io/rewrite-target: /\n    spec:\n      ingressClassName: nginx\n      rules:\n      - host: simplestlab.local.lab\n        http:\n          paths:\n          - path: /\n            pathType: Prefix\n            backend:\n              service:\n                name: lb\n                port:\n                  number: 80\n    ```", "```\n    Chapter11$ kubectl create \\\n    -f ingress/simplestlab.ingress.yaml -n simplestlab\n    ingress.networking.k8s.io/simplestlab created\n    Chapter11$ kubectl get ingress -n simplestlab\n    NAME CLASS HOSTS ADDRESS PORTS AGE\n    curl:\n\n    ```", "```\n\n    ```", "```\n    127.0.0.1 simplestlab.local.lab\n    ```"]