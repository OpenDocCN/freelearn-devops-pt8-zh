- en: Using the Azure AD App Proxy and the Web Application Proxy
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: As the successor to [Chapter 7](468509fa-856c-411d-abdb-e9a39c266750.xhtml), *Deploying
    Solutions on Azure AD and ADFS**,* we dig further into the different features
    of Azure AD and ADFS. We already published the Kerberos on-premises application
    to external users. We'll do this with another application in this chapter. Furthermore,
    we will dive into the functionality of the Azure AD app proxy. Additionally, the
    first usage examples and the basic functionality of conditional access will be
    shown in this chapter. We do some more claims operation and task customization
    in [Chapter 10](6b29475f-7917-49bf-91d4-3024835d0278.xhtml), *Exploring Azure
    AD Identity Service**s*, and provide examples in the code package for the book.
    With this chapter, you will get all the information for managing the application
    integration into Azure AD and ADFS. You will also learn to publish applications
    with the Azure AD or the Web Application Proxy. Additionally, you will be enabled
    to use conditional access for securing your application access.
  prefs: []
  type: TYPE_NORMAL
- en: 'This chapter is divided into the following sections:'
  prefs: []
  type: TYPE_NORMAL
- en: Configuring additional applications for Azure AD and ADFS
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Publishing with Windows server and Azure AD Web Application Proxy
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Using conditional access
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ready to go? We'll start with the configuration of additional applications for
    Azure AD and ADFS.
  prefs: []
  type: TYPE_NORMAL
- en: Configuring additional applications for Azure AD and ADFS
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'We will continue the deployment and configuration of more business apps to
    allow you to test the different authentication mechanisms. For our support, we
    configure ServiceNow with SAML and active user provisioning from Azure AD to ServiceNow:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Navigate to Azure Active Directory | Enterprise Applications and add a New
    Application:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/81e01e5d-3247-4e91-bdd3-8cf1c0a76aa1.png)'
  prefs: []
  type: TYPE_IMG
- en: Adding a new Enterprise application
  prefs: []
  type: TYPE_NORMAL
- en: 'Choose ServiceNow and add the app from the gallery:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/a965e1f0-698d-4563-90da-194f3854e0aa.png)'
  prefs: []
  type: TYPE_IMG
- en: Adding ServiceNow
  prefs: []
  type: TYPE_NORMAL
- en: 'After adding the application, we will configure SAML to authenticate our users:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/7e30bb59-d3c5-4b40-8211-0a817b85d366.png)'
  prefs: []
  type: TYPE_IMG
- en: Using SAML as an authentication method
  prefs: []
  type: TYPE_NORMAL
- en: 'In the Basic SAML Configuration, we add our ServiceNow instance information,
    as shown in the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/362deb77-a38c-4200-bbf8-3acd73ef0b31.png)'
  prefs: []
  type: TYPE_IMG
- en: Configuring the SAML options
  prefs: []
  type: TYPE_NORMAL
- en: 'The following URIs need to be used:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: We will use the automatic configuration method for this chapter.
  prefs: []
  type: TYPE_NORMAL
- en: 'For the manual configuration tasks, you can download the certificate by using
    the Base64 option:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/19266103-cec9-4d71-8585-0a84a6cce6b1.png)'
  prefs: []
  type: TYPE_IMG
- en: Download the signing certificate
  prefs: []
  type: TYPE_NORMAL
- en: 'Also, for manual configuration tasks, you can copy the following links into
    a Notepad:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/0f0fd45b-c1f9-4420-bf23-29f00a5ba6dc.png)'
  prefs: []
  type: TYPE_IMG
- en: Azure AD endpoints overview
  prefs: []
  type: TYPE_NORMAL
- en: 'Next, we will assign our Service Management Application Access group to the
    application:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/4c37e157-ba48-4b58-928d-d66216177ab4.png)'
  prefs: []
  type: TYPE_IMG
- en: Assigning users to the application
  prefs: []
  type: TYPE_NORMAL
- en: Now, we can start to configure the ServiceNow instance for Single Sign-On.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'First, we need to activate the Multi-Provider Single Sign-On Installer plugin:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/23e8dda3-6fd9-4436-8e79-1a2caa9d34c3.png)'
  prefs: []
  type: TYPE_IMG
- en: Multi-Provider SSO feature in ServiceNow
  prefs: []
  type: TYPE_NORMAL
- en: You will find this option in the navigation pane on the left-hand side: System
    Definition | Plugins.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Activate the following plugin:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/8c18543b-1119-4bb2-b4d7-81079f448bbe.png)'
  prefs: []
  type: TYPE_IMG
- en: Activating the Multi-Provider SSO feature in ServiceNow
  prefs: []
  type: TYPE_NORMAL
- en: 'Click the Activate button in the dialog:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/61d63f97-ae6b-4ddc-825c-6ff4565152ec.png)'
  prefs: []
  type: TYPE_IMG
- en: Activation dialog
  prefs: []
  type: TYPE_NORMAL
- en: 'Next, we will configure the plugin under Multi-Provider SSO | Administration
    | Properties:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/aa9def3a-7279-4bf2-8fdc-0a99565dd7dc.png)'
  prefs: []
  type: TYPE_IMG
- en: Configuring the newly installed plugin
  prefs: []
  type: TYPE_NORMAL
- en: 'The following features need to be activated:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/7b3c3c16-ce52-4f3e-a0b5-6a02f70f7dfb.png)'
  prefs: []
  type: TYPE_IMG
- en: Activating the custom properties for the provider
  prefs: []
  type: TYPE_NORMAL
- en: If you want to use the manual configuration method, you need to use the information
    in your Notepad.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: We use the automatic option for the configuration; it's a little bit of a hidden
    option!
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'You will find it under View step-by-step instructions as shown in the following
    screenshot, in the SAML configuration section:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/db783d30-f6fa-4b86-a916-b10cd2fa217f.png)'
  prefs: []
  type: TYPE_IMG
- en: Automatic configuration option for the ServiceNow SSO Provider
  prefs: []
  type: TYPE_NORMAL
- en: 'Click the option and the following dialog appears; enter your ServiceNow administrative
    credentials:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/fa6d90ec-b8e7-416c-8b3f-7d40b8cfdecc.png)'
  prefs: []
  type: TYPE_IMG
- en: Configuring the SAML connection
  prefs: []
  type: TYPE_NORMAL
- en: Click **Configure Now**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Next, we can do additional configuration tasks on the ServiceNow part.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Navigate to Multi-Provider SSO | Identity Providers:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/d5b371d2-8572-4c20-90fc-8dc40c36b050.png)'
  prefs: []
  type: TYPE_IMG
- en: Identity Provider configuration
  prefs: []
  type: TYPE_NORMAL
- en: 'You will find the automatically generated Identity Provider:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/3b9824b0-a37d-4488-ba46-ef39fee9a7cc.png)'
  prefs: []
  type: TYPE_IMG
- en: Start configuring the newly created Azure AD connection in ServiceNow
  prefs: []
  type: TYPE_NORMAL
- en: We need to remove the populated Identity Provider's `SingleLogoutRequest` URL.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'All the other fields can be left as their defaults:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/ee2b6edf-1bac-4799-9e59-3d3fe32385c1.png)'
  prefs: []
  type: TYPE_IMG
- en: Configuring the IdP including the Auto Redirect option
  prefs: []
  type: TYPE_NORMAL
- en: 'Very important! Set the Auto Redirect IdP option, with the expected result:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/dc13d236-ef45-47b3-ba80-9cfdd75b358b.png)'
  prefs: []
  type: TYPE_IMG
- en: Auto Redirect IdP option
  prefs: []
  type: TYPE_NORMAL
- en: 'Next, we need to choose the correct certificate for our configuration by navigating
    to the X.509 section:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/82ab6d4f-a54b-4bc7-8a3c-7d682e000bff.png)'
  prefs: []
  type: TYPE_IMG
- en: Configuring the correct certificate
  prefs: []
  type: TYPE_NORMAL
- en: Save the configuration.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Now, we have finished the SAML configuration of SeviceNow and we will follow
    up with the user provisioning:'
  prefs: []
  type: TYPE_NORMAL
- en: Navigate to the Provisioning section of the ServiceNow application and change
    the Provisioning Mode to Automatic.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Insert the following values:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Instance Name
  prefs:
  - PREF_UL
  - PREF_UL
  type: TYPE_NORMAL
- en: Admin Username
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Admin Password
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Notification Email (and check Send an email notification when a failure occurs):'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](img/4e252785-e34f-4654-840d-beed4ca77ab9.png)'
  prefs: []
  type: TYPE_IMG
- en: Configuring the SCIM provisioning feature
  prefs: []
  type: TYPE_NORMAL
- en: 'Click Test Connection and you should receive a notification like the following
    example. The test of the connection is required to save:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/319235ba-d076-41fe-8631-7e49cd81df82.png)'
  prefs: []
  type: TYPE_IMG
- en: Connection Test
  prefs: []
  type: TYPE_NORMAL
- en: Next, we will take a look into the **synchronization configuration** for users
    and groups.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Click the Synchronize Azure Active Directory Users to ServiceNow rule:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/c4514e27-814f-475a-ad45-546eebb71cf8.png)'
  prefs: []
  type: TYPE_IMG
- en: Configuring the Synchronization Rules
  prefs: []
  type: TYPE_NORMAL
- en: 'You will find the active Attribute Mapping. If you need to handle special considerations,
    such as if you connect to a filled ServiceNow instance, you can modify the mappings
    to fit your needs:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/ed4b2db4-9d59-42cf-a892-5ab425457c02.png)'
  prefs: []
  type: TYPE_IMG
- en: Synchronization Rule Settings
  prefs: []
  type: TYPE_NORMAL
- en: 'You will also get an actual overview of the **Synchronization Details**:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/d69db8e4-39c2-46d8-b6a4-bef3ab47477a.png)'
  prefs: []
  type: TYPE_IMG
- en: Synchronization details for monitoring and auditing
  prefs: []
  type: TYPE_NORMAL
- en: 'By clicking on View the "Account Provisioning" category in the audit logs for
    full details you will get the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/9486384c-fe1d-430c-bdef-a36e2340d3e8.png)'
  prefs: []
  type: TYPE_IMG
- en: Actual state for the test user
  prefs: []
  type: TYPE_NORMAL
- en: Next, we will change to the Organization | User section in your ServiceNow instance.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Search for your test user, in my case `Don.Hall@inovitdemos.ch`, and you will
    see the result of the automatic provisioning:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/679a13e4-f5a2-49fe-a091-17ff4d247048.png)'
  prefs: []
  type: TYPE_IMG
- en: Verifying the synchronized test user in ServiceNow
  prefs: []
  type: TYPE_NORMAL
- en: The initial synchronization takes longer to perform than subsequent synchronizations,
    which occur approximately every **40 minutes** as long as the service is running.
  prefs: []
  type: TYPE_NORMAL
- en: The next scenario we want to accomplish is the use of **OpenID Connect** and
    your on-premises ADFS infrastructure. To follow the authentication flow, use [Chapter
    6](1f239a9c-c62a-4e40-ab58-ce78cd87e8be.xhtml), *Managing Authentication Protocols*.
  prefs: []
  type: TYPE_NORMAL
- en: To configure this scenario on your **YD1APP01** server, we need to copy the `active-directory-dotnet-webapp-openidconnect`
    folder from the code package to your desktop.
  prefs: []
  type: TYPE_NORMAL
- en: 'We configure your ADFS server (**YD1ADS01**) on your domain controller to get
    the following expected result at the end, a full working OpenID authenticated
    application:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/65d23739-b669-4930-8b88-afe0be215f7c.png)'
  prefs: []
  type: TYPE_IMG
- en: Result of the following configuration steps
  prefs: []
  type: TYPE_NORMAL
- en: 'In the next steps, we will configure the scenario:'
  prefs: []
  type: TYPE_NORMAL
- en: 'We start with the creation of a new application group including a Server application
    (standalone application):'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/9844338e-7a3e-46c5-abec-92482ff30efe.png)'
  prefs: []
  type: TYPE_IMG
- en: Configuring the new application group
  prefs: []
  type: TYPE_NORMAL
- en: Next, a Client Id is generated; copy the ID to a notepad.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Enter the redirect URI, `https://localhost:44320/`, under which the application
    will run:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/f18e296c-c8b0-446d-a6d6-56f7d39178ef.png)'
  prefs: []
  type: TYPE_IMG
- en: Providing the application properties
  prefs: []
  type: TYPE_NORMAL
- en: 'Click Next and check **Generate a shared secret box**; copy the key to the
    notepad:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/33487fa4-dddf-4bcd-8e28-7f31f33813d5.png)'
  prefs: []
  type: TYPE_IMG
- en: Generating the shared key
  prefs: []
  type: TYPE_NORMAL
- en: Complete the wizard.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Next, we will create the Web API configuration by double-clicking on your new
    application group.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Choose Add application:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/869ca15a-8bd8-4e98-a64b-2835bfe6a42b.png)'
  prefs: []
  type: TYPE_IMG
- en: Web API configuration
  prefs: []
  type: TYPE_NORMAL
- en: 'Use the Web API option:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/35830923-eab0-42c1-a46d-06659f881c8a.png)'
  prefs: []
  type: TYPE_IMG
- en: Choosing the Web API option
  prefs: []
  type: TYPE_NORMAL
- en: 'Next, add the Identifier for the API: `https://inovitdemos.ch/OpenIDDemo`[.](https://inovitdemos.ch/OpenIDDemo)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click Next in the Access Control Policy section and all the other sections to
    finish the wizard.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: For now, we change to the **YD1APP01** server and open our Visual Studio.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Open the Solution file of the demo code: `WebApp-OpenIDConnect-DotNet.sln`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Navigate in Solution Explorer to the `web.config` file: `WebApp-OpenIDConnect-DotNet.sln`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Modify the code so that it looks like the following example:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Copy your Client Id from your notepad.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Configure the `ida:ADFSDiscoveryDoc` value so that it contains your ADFS FQDN: `https://login.inovitdemos.ch`.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Verify that the `ida:PostLogoutRedirectUri` value contains `https://localhost:44320/`:'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Next, navigate to the *App_Start* section and the `Startup.Auth.cs` file.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Directly under the public partial class `Startup`, the code needs to look like
    the following to tweak the OpenID Connect middleware initialization logic:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: We don't need the Azure AD configuration, so we comment this part out!
  prefs: []
  type: TYPE_NORMAL
- en: 'Next, we need to modify the OpenID Connect middleware options:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: ADFS does enforce the `redirect_uri` in the request. Azure AD doesn't do that.
  prefs: []
  type: TYPE_NORMAL
- en: 'Now, we can verify the app; press *F5* in Visual Studio. To analyze the traffic,
    you can use Fiddler. Note that you will be stuck with Fiddler on the authentication
    part:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/7462f82e-15cc-4200-b32c-beffceb41a7d.png)'
  prefs: []
  type: TYPE_IMG
- en: Fiddler result of the authentication
  prefs: []
  type: TYPE_NORMAL
- en: Well done, you have configured an application that uses OpenID Connect!
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Publishing with Windows server and Azure AD Web Application Proxy
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The Azure AD Application Proxy is similar to the on-premises Web Application
    Proxy role, starting in Windows Server 2012 R2\. With this service, you can enable
    external access for on-premises applications. Azure AD Application Proxy requires
    an Azure AD Basic or an Azure AD Premium subscription. The connection is made
    directly with Azure and done through a proxy into the private network, with an
    application proxy agent installed on the on-premises web application server.
  prefs: []
  type: TYPE_NORMAL
- en: 'Let''s run a very common use case to include a Kerberos on-premises application
    into our Azure AD Access UI, [https://myapps.microsoft.com](https://myapps.microsoft.com).
    We use our existing application to configure the scenario:'
  prefs: []
  type: TYPE_NORMAL
- en: Log in to [https://portal.azure.com](https://portal.azure.com) and choose the
    Azure Active Directory blade.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Under Application proxy, we first need to download and install the application
    proxy agent on our **YD1APP01** server.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: You don't need to install the agent directly on the application server. It's
    also possible to use any other server, or also additional agents for redundancy
    requirements. The agent needs to be installed on a server in the same or a correctly
    trusted domain/forest to support Kerberos constrained delegation, and the SPN
    of the application needs to be done on every agent instance. The domain function
    level needs to be Windows Server 2012 at a minimum. Also, the correct ports need
    to be accessible from the other server.
  prefs: []
  type: TYPE_NORMAL
- en: 'Download the agent onto the server and start the installation:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/7337b579-2580-4701-9258-4c626c7f9add.png)'
  prefs: []
  type: TYPE_IMG
- en: Configure the Azure AD Application Proxy
  prefs: []
  type: TYPE_NORMAL
- en: Agree to the license terms and conditions and click Next.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Next, you need to provide global administrator credentials to register the agent
    to Azure AD.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Recognize the notification for outbound proxy usage:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/bfbe4775-1b67-4179-8c26-dd2b051277ca.png)'
  prefs: []
  type: TYPE_IMG
- en: Installation of the Application Proxy Connector
  prefs: []
  type: TYPE_NORMAL
- en: 'The expected result is an Active agent:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/5151fa0f-ae04-4793-872f-2ef592bbf510.png)'
  prefs: []
  type: TYPE_IMG
- en: Active agents overview
  prefs: []
  type: TYPE_NORMAL
- en: Now, we can start to configure our Kerberos-based on-premises application.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'First, we create a group that can be assigned to grant access to the portal:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/51f587ac-d3f3-4a23-a1e6-35f0b04cf3c7.png)'
  prefs: []
  type: TYPE_IMG
- en: Assigning the needed test group
  prefs: []
  type: TYPE_NORMAL
- en: Assign one test user to your group.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In this example, we use the option that we don't publish the application with
    an official public FQDN. In that case, we don't need to open any firewall ports
    and the traffic to the app is working through the connector.
  prefs: []
  type: TYPE_NORMAL
- en: 'Next, we will configure the app proxy configuration:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/eacc1379-9a4e-4bda-92c5-9b5975560074.png)'
  prefs: []
  type: TYPE_IMG
- en: Configuring the on-premises application properties
  prefs: []
  type: TYPE_NORMAL
- en: As you can see, you are able to provide several additional settings to address
    your needs.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: You can find more information about the different options at the following reference: [https://docs.microsoft.com/en-us/azure/active-directory/manage-apps/application-proxy-add-on-premises-application](https://docs.microsoft.com/en-us/azure/active-directory/manage-apps/application-proxy-add-on-premises-application).
  prefs: []
  type: TYPE_NORMAL
- en: In the next step, we will configure the Single-Sign-On options for our application.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Choose the Windows Integrated Authentication option:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/1dadced9-8df8-485b-ae55-fef1a5e6c2d5.png)'
  prefs: []
  type: TYPE_IMG
- en: Choosing the Windows Integrated Authentication option
  prefs: []
  type: TYPE_NORMAL
- en: If you need to use Header-based authentication, the integration with PingAccess
    will be your friend. You can find more information about this integration at the
    following source: [https://docs.microsoft.com/en-us/azure/active-directory/manage-apps/application-proxy-configure-single-sign-on-with-ping-access](https://docs.microsoft.com/en-us/azure/active-directory/manage-apps/application-proxy-configure-single-sign-on-with-ping-access).
  prefs: []
  type: TYPE_NORMAL
- en: Enter your Internal Application SPN to configure the Kerberos part.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Keep in mind that only Kerberos Constrained Delegation will work:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/270472f1-d7d0-4c7e-bd80-5de075b76dc3.png)'
  prefs: []
  type: TYPE_IMG
- en: Configure the SPN for the App
  prefs: []
  type: TYPE_NORMAL
- en: 'After this configuration, we can test the application with the assigned user
    in your access group, and you should get a similar result to this:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/6219a02c-09fc-4262-b592-b743fffff0d7.png)'
  prefs: []
  type: TYPE_IMG
- en: Result of a successful Kerberos authentication on the example app
  prefs: []
  type: TYPE_NORMAL
- en: This publishing method also allows us to use a public FQDN. This option can
    be useful if your application sends notification mails with links inside. To realize
    this use case, you need to change the external URL and provide a public SSL certificate.
    You can use your wildcard certificate or issue a separate SSL certificate with
    Let's encrypt.
  prefs: []
  type: TYPE_NORMAL
- en: 'You will find the settings under Basic Settings:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/77bc56e9-f1c5-4701-bd30-7d0125ff0596.png)'
  prefs: []
  type: TYPE_IMG
- en: Defining the basic app settings
  prefs: []
  type: TYPE_NORMAL
- en: 'For the certificate, you need to use the following section. Don''t forget to
    create the CNAME inside your public DNS:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/170e7ded-8d6f-448e-8404-19357d8c3635.png)'
  prefs: []
  type: TYPE_IMG
- en: View the DNS configuration options
  prefs: []
  type: TYPE_NORMAL
- en: The next authentication method we can use for cloud or on-premises applications
    (through Azure AD Web Application Proxy) is the password-based option. We use
    it for form-based authentication activated applications that use their own identity
    provider.
  prefs: []
  type: TYPE_NORMAL
- en: Your credentials will be securely stored under the user or group object.
  prefs: []
  type: TYPE_NORMAL
- en: 'In the next steps, we will add a password-based application access:'
  prefs: []
  type: TYPE_NORMAL
- en: Add a new application and use the Non-gallery application option.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Choose the Password-based option under the Single sign-on method:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/5f4f587c-5610-441b-8daf-bfc634589e31.png)'
  prefs: []
  type: TYPE_IMG
- en: Choosing a non-gallery application
  prefs: []
  type: TYPE_NORMAL
- en: 'Provide a name for your application and navigate to the Single-Sign-On configuration:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/60a77d91-9f74-41d1-90ab-42f6485a93a6.png)'
  prefs: []
  type: TYPE_IMG
- en: Using the password-based authentication method
  prefs: []
  type: TYPE_NORMAL
- en: Provide the Sign-On URL and detect the sign-in fields of your application.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'There are three options to do this configuration:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Automatically
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Manually
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'With custom configuration in the Advanced View:'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](img/55b1b925-8994-4cf8-bd9c-e779700b6eb5.png)'
  prefs: []
  type: TYPE_IMG
- en: Detecting the login fields of the application
  prefs: []
  type: TYPE_NORMAL
- en: In this example, we used our public DNS provider's login page.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'You can view the field labels with any browser and the developer tools to provide
    the values if the Azure AD mechanism doesn''t get the correct values:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/a114233c-6925-457d-afa2-f3fbf760691e.png)'
  prefs: []
  type: TYPE_IMG
- en: Analyzing the code to find the login fields/labels
  prefs: []
  type: TYPE_NORMAL
- en: 'Next, you need to assign the user or group to the application:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/164990f5-a2bd-4b35-b2a8-19430d5a5714.png)'
  prefs: []
  type: TYPE_IMG
- en: Updating the credentials on the user/group
  prefs: []
  type: TYPE_NORMAL
- en: You have the option to provide the credentials hidden to the user or group,
    and the option that the credentials will be saved with the first access.
  prefs: []
  type: TYPE_NORMAL
- en: 'For now, provide the credentials with the Update Credentials button:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/27d7c21d-3a4b-4a89-b690-a065555768b4.png)'
  prefs: []
  type: TYPE_IMG
- en: Update credentials dialog
  prefs: []
  type: TYPE_NORMAL
- en: Now, you are ready to test the application with your test user.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Keep in mind that the user needs to have the Access Panel UI extension installed
    or he will get asked to install it. You can also deploy this extension to all
    your computers using a group policy or any other software deployment tool. Find
    out more information about this at [https://docs.microsoft.com/en-us/azure/active-directory/manage-apps/access-panel-extension-problem-installing](https://docs.microsoft.com/en-us/azure/active-directory/manage-apps/access-panel-extension-problem-installing)
  prefs: []
  type: TYPE_NORMAL
- en: To test the same capabilities with your on-premises infrastructure, we provide
    you with a small challenge. If you don't get it running, send an email to `support@inovit.ch`
    and we will be happy to provide you with the answer.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: You need to deploy the test application with the following steps on the **YD1APP01 server**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Create a DNS entry for the app on your domain controller (**YD1ADS01**), `forms.inovitdemos.ch`:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'Create the service account under which the application runs on your app server:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: Connect to your SQL Server over in the SQL Management Studio on your **YD1APP01:**
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/74343ba0-4df5-43fa-99e8-72a944860c8b.png)'
  prefs: []
  type: TYPE_IMG
- en: SQL Connection with the SQL Management Studio
  prefs: []
  type: TYPE_NORMAL
- en: 'Create a login for your service account under Security | **Logins**:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/e50054ff-19a1-41cd-9e77-526ab7678708.png)'
  prefs: []
  type: TYPE_IMG
- en: Configuring the login for the app service account
  prefs: []
  type: TYPE_NORMAL
- en: 'Assign the dbcreator server role to the user:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/414f5dc7-5813-441f-b0af-143d93ef3bfe.png)'
  prefs: []
  type: TYPE_IMG
- en: Assigning the dbcreator role to the service account
  prefs: []
  type: TYPE_NORMAL
- en: 'Next, we need to create the website on the server:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: 'As with the other on-premises demo applications, we will create a HTTPS binding
    and assign our SSL certificate:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/93701cfd-fcba-48aa-affe-c270d09b22b9.png)'
  prefs: []
  type: TYPE_IMG
- en: Configuring the IIS Bindings for the application
  prefs: []
  type: TYPE_NORMAL
- en: 'We also need to create a new app pool for the website and use the service account
    to run the app:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/f89b3530-2e5e-4761-afb2-bc8d36cc6dac.png)'
  prefs: []
  type: TYPE_IMG
- en: Creation of the Application Pool
  prefs: []
  type: TYPE_NORMAL
- en: 'Next, we will assign the newly created application pool to our website under Advanced
    settings:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/99cab251-a56e-44e5-a746-0e0d742e1ddf.png)'
  prefs: []
  type: TYPE_IMG
- en: Assigning the newly created app pool
  prefs: []
  type: TYPE_NORMAL
- en: 'The authentication for the page should be configured as shown in the following
    screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/4150cc65-48db-485a-88de-9ca7b068b149.png)'
  prefs: []
  type: TYPE_IMG
- en: IIS Authentication configuration
  prefs: []
  type: TYPE_NORMAL
- en: 'The next step is that we need to copy the content of the `formsapp` folder
    from the code package to `C:\inetpub\formsroot`:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/abb475a9-a764-4570-9822-14060e63f778.png)'
  prefs: []
  type: TYPE_IMG
- en: Application Code
  prefs: []
  type: TYPE_NORMAL
- en: 'Before you can run the app, you need to configure the `web.config` file to
    address the SQL Server instance:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: 'Now, you can test your application by registering a user and a successful login:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/06942a3a-5eb7-45a8-96ff-68e205148324.png)'
  prefs: []
  type: TYPE_IMG
- en: Successful test of the app
  prefs: []
  type: TYPE_NORMAL
- en: Start with your publishing scenario and log in to this website—good luck!
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'In the next example, we will use the **Windows Server Web Application Proxy**
    to publish a Basic authentication-based application to external users:'
  prefs: []
  type: TYPE_NORMAL
- en: First, you need to log in to your **YD1ADS01** to configure the relying party
    for the Basic demo application.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Navigate to Relying Party Trusts and Add Relying Party Trust.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Choose the non-claims-aware option.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Fill in the following Display Name: `Basic Demo Web Site`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Use `https://basic.inovitdemos.ch` (replace it with your domain) as Relying
    Party Trust Identifier and click add.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Don't forget to configure the FQDN in your public DNS.
  prefs: []
  type: TYPE_NORMAL
- en: Click Next until the wizard is finished.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Log in to your **YD1URA01** server and open the Remote Access Management console.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Click on Publish in the right-hand Tasks pane:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/ddf7bd84-a212-487e-8489-624a3d2d3235.png)'
  prefs: []
  type: TYPE_IMG
- en: Publishing wizard on the web application proxy
  prefs: []
  type: TYPE_NORMAL
- en: 'Specify the ADFS preauthentication method:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/6993f66b-3517-407c-bc63-82bb4f440104.png)'
  prefs: []
  type: TYPE_IMG
- en: Using the ADFS preauthentication method
  prefs: []
  type: TYPE_NORMAL
- en: 'Choose HTTP Basic as the type of preauthentication:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/dadf671f-54b0-4082-af90-b23535bb4d7e.png)'
  prefs: []
  type: TYPE_IMG
- en: Using HTTP Basic
  prefs: []
  type: TYPE_NORMAL
- en: Choose Basic Demo Web Site relying party.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Fill in the following publishing values:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/79aeb31a-c0d8-4b6d-b0b5-92c02b408faf.png)'
  prefs: []
  type: TYPE_IMG
- en: Setting the application properties
  prefs: []
  type: TYPE_NORMAL
- en: 'Click Next, Publish, and Close:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/96eb4c63-34b9-4543-8000-3c5ef134367c.png)'
  prefs: []
  type: TYPE_IMG
- en: Final publishing settings
  prefs: []
  type: TYPE_NORMAL
- en: Now, you can test your freshly published Basic authentication app.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: You will find more practical scenarios for several services, such as the Exchange
    and Remote Desktop services, at the following sources: [https://docs.microsoft.com/en-us/windows-server/remote/remote-access/web-application-proxy/publishing-applications-using-ad-fs-preauthentication](https://docs.microsoft.com/en-us/windows-server/remote/remote-access/web-application-proxy/publishing-applications-using-ad-fs-preauthentication) and [https://docs.microsoft.com/en-us/windows-server/remote/remote-access/web-application-proxy/publishing-applications-using-ad-fs-preauthentication](https://docs.microsoft.com/en-us/windows-server/remote/remote-access/web-application-proxy/publishing-applications-using-ad-fs-preauthentication).
  prefs: []
  type: TYPE_NORMAL
- en: In the next section, we will include the first conditional access options.
  prefs: []
  type: TYPE_NORMAL
- en: Using conditional access
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In our first conditional access scenario, we will use the Azure AD functionality
    to secure Salesforce access with Azure MFA:'
  prefs: []
  type: TYPE_NORMAL
- en: Navigate to [https://portal.azure.com](https://portal.azure.com) and the Azure
    AD pane | Conditional Access.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Click New policy:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/25391b21-4ca5-4722-b1d4-4332045ba36e.png)'
  prefs: []
  type: TYPE_IMG
- en: Creating a Conditional Access policy
  prefs: []
  type: TYPE_NORMAL
- en: Call the new policy `Salesforce Protection`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Under assignments, go to Include | All users:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/b97d6fa1-3880-404d-82a8-f984e6f2dffe.png)'
  prefs: []
  type: TYPE_IMG
- en: User assignment options
  prefs: []
  type: TYPE_NORMAL
- en: 'Under Cloud apps | Select apps, choose Salesforce:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/85fbf159-1b6d-48d1-96b7-47233ba29421.png)'
  prefs: []
  type: TYPE_IMG
- en: Selecting the Salesforce app
  prefs: []
  type: TYPE_NORMAL
- en: 'Under Conditions | choose Locations | Yes and Any location:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/6a294d6c-17d5-489b-9526-5a9fe0d70f7b.png)'
  prefs: []
  type: TYPE_IMG
- en: Choosing the location attributes
  prefs: []
  type: TYPE_NORMAL
- en: As you can see, you have many conditions that can be set when you want to fulfill
    security requirements in the case of additional authentication or access control
    mechanisms. You can find more information at the following source: [https://docs.microsoft.com/en-us/azure/active-directory/conditional-access/](https://docs.microsoft.com/en-us/azure/active-directory/conditional-access/).
  prefs: []
  type: TYPE_NORMAL
- en: Under Access controls, go to Grant.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Choose Grant access | Require multi-factor authentication:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/10020e08-a352-4eff-9972-20e0ee00b153.png)'
  prefs: []
  type: TYPE_IMG
- en: Using MFA for granting the access
  prefs: []
  type: TYPE_NORMAL
- en: 'Enable the policy and click Create:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/c172525c-79ce-471d-93b7-0eb7c8fbe44a.png)'
  prefs: []
  type: TYPE_IMG
- en: Enabling the policy
  prefs: []
  type: TYPE_NORMAL
- en: Now, you can test it with a Salesforce assigned user and Azure MFA will be required.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'In the second example, we will follow the same scenario with our on-premises
    ADFS infrastructure:'
  prefs: []
  type: TYPE_NORMAL
- en: Log in to your ADFS server (**YD1ADS01**) and open the ADFS management console.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: We will enable **Azure MFA** for our **Kerberos Demo Web Site.**
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Right-click on the app and choose Edit Access Control Policy:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/3b0164aa-5fa2-47de-be4a-5e492982ed76.png)'
  prefs: []
  type: TYPE_IMG
- en: Configuring Access Control Policies for the app
  prefs: []
  type: TYPE_NORMAL
- en: 'Next, choose Permit everyone and require MFA:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/eec65966-fc58-4fce-87e8-bcaad5025186.png)'
  prefs: []
  type: TYPE_IMG
- en: Enabling the MFA option
  prefs: []
  type: TYPE_NORMAL
- en: Apply the settings and navigate to Authentication Methods.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Choose Edit Multi-Factor Authentication Methods.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Go to Additional and choose Azure MFA:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/0e85a490-2816-45fc-a8b8-efeb3ef83b9d.png)'
  prefs: []
  type: TYPE_IMG
- en: Choosing the Azure MFA method
  prefs: []
  type: TYPE_NORMAL
- en: Apply the setting and you are now ready to test the application.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: You need to use a registered Azure MFA user to access the application. In the
    code package for the chapter, you will find additional use cases, including the
    customization required to modify the login web page to interact with the user.
  prefs: []
  type: TYPE_NORMAL
- en: 'We will include more conditional access use cases and more information about
    the Azure MFA service in the following chapters:'
  prefs: []
  type: TYPE_NORMAL
- en: Exploring Azure AD identity services
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Developing single-and multi-tenant applications
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Configuring Azure information protection solutions
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: This is to show its relevance to specific requirements.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, you have learned to configure different authentication scenarios
    using Azure AD and ADFS capabilities. There are many possible combinations, and
    we can't provide all of them in one chapter. We gave you an introduction and some
    of our practical tips to get started and guide you in your upcoming journey through
    this technology. Don't worry; we jump more and more into some different scenarios
    in the next chapters of this book to give you as much help as possible. Also,
    look at the code package for the book; you will find additional practical examples
    from our projects.
  prefs: []
  type: TYPE_NORMAL
- en: In the next chapter, we will explore more Azure AD identity services, such as
    Azure AD B2B and B2C.
  prefs: []
  type: TYPE_NORMAL
