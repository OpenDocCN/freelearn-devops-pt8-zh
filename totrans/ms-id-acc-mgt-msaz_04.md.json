["```\nadminDescription NOTSTARTSWITH User_\n```", "```\ndepartment EQUAL Human Resources\n```", "```\nConstant cloudFiltered True\n```", "```\n$ThumbnailRules = (Get-ADSyncRule | Where-Object {($_.AttributeFlowMappings.Source -eq \"thumbnailPhoto\") -and ($_.Direction -eq \"Inbound\")})\n\nforeach($syncrule in $ThumbnailRules) { \n\n Write-Host -ForegroundColor Green \"Processing Rule $($syncrule.Name)\"\n $mapping = $syncrule.AttributeFlowMappings | Where-Object {$_.Source -eq \"thumbnailPhoto\"}\n\n Remove-ADSyncAttributeFlowMapping -SynchronizationRule $syncrule -AttributeFlowMappings $mapping -OutVariable rule\n\n Add-ADSyncAttributeFlowMapping -SynchronizationRule $syncrule -Source @('thumbnailPhoto') -Destination 'thumbnailPhoto' -FlowType 'Expression' -Expression 'AuthoritativeNull' -ValueMergeType 'Update' -OutVariable rule\n\n Add-ADSyncRule -SynchronizationRule $rule[0]\n}\n```", "```\nNew-ADOrganizationalUnit -Name \"Managed Business Objects\" -Path \"DC=AZUREID,DC=CH\"\nNew-ADOrganizationalUnit -Name \"Users\" -Path \"OU=Managed Business Objects,DC=AZUREID,DC=CH\"\nNew-ADOrganizationalUnit -Name \"Groups\" -Path \"OU=Managed Business Objects,DC=AZUREID,DC=CH\"\nNew-ADOrganizationalUnit -Name \"Devices\" -Path \"OU=Managed Business Objects,DC=AZUREID,DC=CH\"\nNew-ADOrganizationalUnit -Name \"Managed Service Objects\" -Path \"DC=AZUREID,DC=CH\"\nNew-ADOrganizationalUnit -Name \"AAD\" -Path \"OU=Managed Service Objects,DC=AZUREID,DC=CH\"\nNew-ADOrganizationalUnit -Name \"Users\" -Path \"OU=AAD,OU=Managed Service Objects,DC=AZUREID,DC=CH\"\n```", "```\nNew-ADUser -Name \"svcaadcadma\" -SamAccountName svcaadcadma -UserPrincipalName svcaadcadma@azureid.ch -path \"OU=Users,OU=AAD,OU=Managed Service Objects,DC=azureid,DC=ch\" -AccountPassword (ConvertTo-SecureString \"YOURPASSWORD\" -AsPlainText -Force) -Enabled $True\n```", "```\nAdd-KdsRootKey -EffectiveTime (Get-Date).AddHours(-10)\nNew-ADServiceAccount -Name svcaadconnect -DNSHostname INOAZUREIDADS01 -PrincipalsAllowedToRetrieveManagedPassword INOAZUREIDADS01$\n```", "```\nEnable-ADOptionalFeature –Identity 'CN=Recycle Bin Feature,CN=Optional Features,CN=Directory Service,CN=Windows NT,CN=Services,CN=Configuration,DC=azureid,DC=ch' –Scope ForestOrConfigurationSet –Target 'azureid.ch'\n```", "```\nImport-module activedirectory\n```", "```\n$dnsDomain =gc env:USERDNSDOMAIN\n $split = $dnsDomain.split(\".\")\n if ($split[2] -ne $null) {\n $domain = \"DC=$($split[0]),DC=$($split[1]),DC=$($split[2])\"\n } else {\n $domain = \"DC=$($split[0]),DC=$($split[1])\"\n }\n```", "```\n$dirpath = $pwd.path\n $orgUnit = \"OU=Managed Business Objects\"\n $dummyPassword = ConvertTo-SecureString -AsPlainText \"OnBo@rdInoDemos19!\" -Force\n $counter = 0\n```", "```\n$ImportFile = Import-csv \"$dirpath\\ADUsers.csv\"\n $TotalImports = $importFile.Count\n```", "```\n$ImportFile | foreach {\n $counter++\n $progress = [int]($counter / $totalImports * 100)\n $upn = \"$($_.GivenName).$($_.Sn)@azureid.ch\"\n Write-Progress -Activity \"Provisioning User Accounts\" -status \"Provisioning account $counter of $TotalImports\" -perc $progress\n if ($_.Manager -eq \"\") {\n New-ADUser -SamAccountName $_.SamAccountName -Name $_.Name -Surname $_.Sn -GivenName $_.GivenName -Path \"$orgUnit,$domain\" -AccountPassword $dummyPassword -Enabled $true -title $_.title -officePhone $_.officePhone -department $_.department -UserPrincipalName $upn -PasswordNeverExpires $false\n } else {\n New-ADUser -SamAccountName $_.SamAccountName -Name $_.Name -Surname $_.Sn -GivenName $_.GivenName -Path \"$orgUnit,$domain\" -AccountPassword $dummyPassword -Enabled $true -title $_.title -officePhone $_.officePhone -department $_.department -manager \"$($_.Manager),$orgUnit,$domain\" -UserPrincipalName $upn -PasswordNeverExpires $false\n }\n If (gci \"$dirpath\\userimages\\$($_.name).jpg\") {\n $photo = [System.IO.File]::ReadAllBytes(\"$dirpath\\userImages\\$($_.name).jpg\")\n Set-ADUSER $_.samAccountName -Replace @{thumbnailPhoto=$photo}\n }\n }\n```", "```\n Import-Module ActiveDirectory \n Get-ADUser -LDAPFilter '(userPrincipalName=*)' `\n-Properties userPrincipalName,mail | Select-Object * | `\nForEach-Object { Set-ADObject -Identity `\n$_.DistinguishedName -Replace `\n@{mail=$($_.userPrincipalName)} }\n```", "```\n$accountName = \"AZUREID\\svcaadcadma\"\n$ForestDN = \"DC=AZUREID,DC=CH\"\n$cmd = \"dsacls '$ForestDN' /I:S /G '`\"$accountName`\":WP;ms-ds-consistencyGuid;user'\"\nInvoke-Expression $cmd\n```"]