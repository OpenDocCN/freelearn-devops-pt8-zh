- en: '9'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Implementing CI/CD for Azure Services
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, you are going to put everything you have learned so far into
    an end-to-end solution, deploying a group of applications and promoting it from
    a test environment to a production environment. From the simplest to the most
    complex solution architecture, this chapter showcases the flexibility of Azure
    Pipelines to handle the provisioning, configuration, and deployment of applications
    in Azure, no matter the different services involved and the programming languages
    used in your applications.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following topics will be covered:'
  prefs: []
  type: TYPE_NORMAL
- en: Introducing the solution architecture
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Building and packaging applications and **infastruture as** **code** (**IaC**)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Creating environments
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deploying a Python catalog service to **Azure Kubernetes** **Service** (**AKS**)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deploying a Node.js cart service to **Azure Container** **Apps** (**ACA**)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deploying a .NET checkout service to **Azure Container** **Instances** (**ACI**)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deploying an Angular frontend app to **Azure App** **Service** (**AAS**)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Approving environment deployments
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Let’s first take care of the technical requirements for this chapter.
  prefs: []
  type: TYPE_NORMAL
- en: Technical requirements
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'You will need to have handy the following URL to the GitHub repository, which
    will be the base for this chapter: [https://github.com/PacktPublishing/Implementing-CI-CD-Using-Azure-Pipelines/tree/main/ch09](https://github.com/PacktPublishing/Implementing-CI-CD-Using-Azure-Pipelines/tree/main/ch09).'
  prefs: []
  type: TYPE_NORMAL
- en: Like in the previous chapter, you must have access to an Azure account to complete
    the steps in this chapter; if you don’t have one, you can create a free one at
    [https://azure.microsoft.com/en-us/free/](https://azure.microsoft.com/en-us/free/).
  prefs: []
  type: TYPE_NORMAL
- en: That’s it for the technical requirements; now, let’s get started with this chapter.
  prefs: []
  type: TYPE_NORMAL
- en: Getting started
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The first thing you must do is import the sample repository; let’s get to it.
  prefs: []
  type: TYPE_NORMAL
- en: Importing the sample repository
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You will need to import the application and IaC sources from GitHub for this
    book, to be able to complete the end-to-end pipelines in this chapter and the
    next.
  prefs: []
  type: TYPE_NORMAL
- en: 'You can do this from the **Azure Repos** | **Files** section in the navigation
    menu, clicking on the repository dropdown on the top part of the screen and then
    clicking on the **Import repository** option, as shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 9.1 – Import repository](img/B18875_09_1.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 9.1 – Import repository
  prefs: []
  type: TYPE_NORMAL
- en: 'Enter [https://github.com/PacktPublishing/Implementing-CI-CD-Using-Azure-Pipelines.git](https://github.com/PacktPublishing/Implementing-CI-CD-Using-Azure-Pipelines.git)
    in the `Implementing-CI-CD-Using-Azure-Pipeline` in the **Name** field, and then
    hit the **Import** button:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 9.2 – Importing the sample repository](img/B18875_09_2.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 9.2 – Importing the sample repository
  prefs: []
  type: TYPE_NORMAL
- en: After a few minutes, the process will be complete, and then you will be able
    to browse all the code in the repository. Everything you need will be in the `e2e`
    directory.
  prefs: []
  type: TYPE_NORMAL
- en: With the repository imported, let’s understand the sample architecture.
  prefs: []
  type: TYPE_NORMAL
- en: Introducing the solution architecture
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'For our sample architecture, you will use a fictitious Packt store made up
    of four different applications, which represents a complex distributed architecture
    where teams working with different programming languages can use different Azure
    platform services to deliver their capabilities:'
  prefs: []
  type: TYPE_NORMAL
- en: An Angular frontend application, the user interface of the store
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A Python product catalog service, implemented as a REST API
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A Node.js shopping cart service, implemented as a REST API
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: An ASP.NET checkout service, implemented as a REST API
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The following solution diagram depicts how an environment for the web store
    looks, where each of the applications independently runs in a different Azure
    service:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 9.3 – The solution diagram](img/B18875_09_3.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 9.3 – The solution diagram
  prefs: []
  type: TYPE_NORMAL
- en: 'Later in the chapter, you will implement the Azure Pipeline with the following
    steps for each application:'
  prefs: []
  type: TYPE_NORMAL
- en: Build and package the application and its corresponding IaC.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Deploy them to a test environment.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Deploy them to a production environment, including a manual approval check.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'The following diagram depicts the CI/CD process:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 9.4 – The CI/CD end-to-end process](img/B18875_09_4.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 9.4 – The CI/CD end-to-end process
  prefs: []
  type: TYPE_NORMAL
- en: Important note
  prefs: []
  type: TYPE_NORMAL
- en: During this chapter, no details about the code in the applications will be covered,
    as that is not relevant to CI/CD. We will focus instead on the Azure Pipelines
    details needed to make the CI/CD process work.
  prefs: []
  type: TYPE_NORMAL
- en: 'To implement the CI/CD process, you will be take advantage of multi-stage pipelines
    with environments and templates:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Stages** allow us to encapsulate all the jobs that need to happen together
    in a logical way and control dependencies, but they also provide the ability to
    execute jobs in parallel; this will help us reduce the total time when needed'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Environments** are linked to jobs and allow us to add additional controls,
    such as manual approval in this case, to ensure that the deployment proceeds to
    production only when a human intervenes and approves it'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Templates** were introduced in [*Chapter 1*](B18875_01.xhtml#_idTextAnchor014);
    here, you will put them into practice to demonstrate how to use them, to build
    modular and reusable pipelines'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Let’s look at the following pipeline definition; create this file in `ch09/azure/azure-pipeline.yml`,
    inside the `Implementing-CI-CD-Using-Azure-Pipeline` repository you imported:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'Let’s break this code down:'
  prefs: []
  type: TYPE_NORMAL
- en: The `build` stage has no dependencies and includes jobs from templates in the
    `build-apps.yml` and `build-iac.yml` files. You will review these later in the
    *Building and packaging applications and* *IaC* section.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `deployTest` stage must wait for the build stage to complete and will run
    the jobs in the `deploy.yml` template, passing a parameter of `envName` with the
    `test` value to uniquely identify this environment.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `deployProduction` stage, in turn, waits for the `deployTest` stage to complete
    and uses the same `deploy.yml` template, passing a value of production for the
    `envName` parameter.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: This pipeline definition demonstrates the flexibility of templates and the ability
    to break into smaller portions the work that needs to be done, which provides
    a way for teams to focus on different stages of the pipeline, based on their responsibilities.
  prefs: []
  type: TYPE_NORMAL
- en: Once the file is in the repository, add it as a new pipeline and rename it `E2E-Azure`.
    You will have to add some security configuration for everything to ultimately
    work.
  prefs: []
  type: TYPE_NORMAL
- en: 'If you have not renamed a pipeline before, click on the sub-menu on the far-right
    side of the **Recently run pipelines** screen, as shown in the following screenshot,
    and rename it:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 9.5 – Renaming a pipeline](img/B18875_09_5.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 9.5 – Renaming a pipeline
  prefs: []
  type: TYPE_NORMAL
- en: A pro tip about templates
  prefs: []
  type: TYPE_NORMAL
- en: When using `job.template` to reference a template defined in another file, make
    sure to create that file with at least one step defined in it before referencing
    it from the parent template. An easy way to accomplish this is to use a `script`
    task that runs an `echo` command, such as `echo hello`.
  prefs: []
  type: TYPE_NORMAL
- en: Let’s now move on to the build stage.
  prefs: []
  type: TYPE_NORMAL
- en: Building and packaging applications and IaC
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The applications in this solution are all container-enabled, a standard packaging
    mechanism that includes all operating system dependencies to allow them to run
    in many different hosting environments, making them extremely lightweight and
    portable.
  prefs: []
  type: TYPE_NORMAL
- en: For simplicity, the repository includes a `docker-compose.yml` file, which facilitates
    working with applications made of multiple services that must run at the same
    time.
  prefs: []
  type: TYPE_NORMAL
- en: This file defines the services and the location of their corresponding `Dockerfile`,
    the file that defines how the container must be built, and several other things,
    such as the ports or environment variables needed for the container to run.
  prefs: []
  type: TYPE_NORMAL
- en: In this chapter, the `SUB_ID` placeholder is the ID of the Azure subscription
    you have access to; make sure to replace it when appropriate.
  prefs: []
  type: TYPE_NORMAL
- en: 'Before you can proceed, you must have an **Azure Container Registry** available
    for the pipeline to store the container images. You can create one easily with
    the following Azure CLI command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'We will also need to ensure that the service principal we created previously
    in the *Creating a service connection to AWS* section of [*Chapter 8*](B18875_08.xhtml#_idTextAnchor103)
    has permissions to manage user access to this service; you can do this with the
    following commands in the PowerShell window:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '- name: azureSubscription'
  prefs: []
  type: TYPE_NORMAL
- en: 'type: string'
  prefs: []
  type: TYPE_NORMAL
- en: 'default: ''azure-packt-rg'''
  prefs: []
  type: TYPE_NORMAL
- en: '- name: azureContainerRegistry'
  prefs: []
  type: TYPE_NORMAL
- en: 'type: string'
  prefs: []
  type: TYPE_NORMAL
- en: 'default: ''{"loginServer":"packtadocicd.azurecr.io", "id" : "/subscriptions/SUB_ID/resourceGroups/packt/providers/Microsoft.ContainerRegistry/registries/packtadocicd"}'''
  prefs: []
  type: TYPE_NORMAL
- en: 'jobs:'
  prefs: []
  type: TYPE_NORMAL
- en: '- job: BuildAndPushContainers'
  prefs: []
  type: TYPE_NORMAL
- en: 'displayName: Build and Push Containers'
  prefs: []
  type: TYPE_NORMAL
- en: 'steps:'
  prefs: []
  type: TYPE_NORMAL
- en: '- task: DockerCompose@0'
  prefs: []
  type: TYPE_NORMAL
- en: 'displayName: ''Build Containers'''
  prefs: []
  type: TYPE_NORMAL
- en: 'inputs:'
  prefs: []
  type: TYPE_NORMAL
- en: 'containerregistrytype: ''Azure Container Registry'''
  prefs: []
  type: TYPE_NORMAL
- en: 'azureSubscription: ${{parameters.azureSubscription}}'
  prefs: []
  type: TYPE_NORMAL
- en: 'azureContainerRegistry: ${{parameters.azureContainerRegistry}}'
  prefs: []
  type: TYPE_NORMAL
- en: 'dockerComposeFile: ''docker-compose.yml'''
  prefs: []
  type: TYPE_NORMAL
- en: 'projectName: ''packt-store'''
  prefs: []
  type: TYPE_NORMAL
- en: 'action: ''Build services'''
  prefs: []
  type: TYPE_NORMAL
- en: 'additionalImageTags: ''$(Build.BuildNumber)'''
  prefs: []
  type: TYPE_NORMAL
- en: 'includeLatestTag: true'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '- task: DockerCompose@0'
  prefs: []
  type: TYPE_NORMAL
- en: 'displayName: ''Push Containers'''
  prefs: []
  type: TYPE_NORMAL
- en: 'inputs:'
  prefs: []
  type: TYPE_NORMAL
- en: 'containerregistrytype: ''Azure Container Registry'''
  prefs: []
  type: TYPE_NORMAL
- en: 'azureSubscription: ${{parameters.azureSubscription}}'
  prefs: []
  type: TYPE_NORMAL
- en: 'azureContainerRegistry: ${{parameters.azureContainerRegistry}}'
  prefs: []
  type: TYPE_NORMAL
- en: 'dockerComposeFile: ''docker-compose.yml'''
  prefs: []
  type: TYPE_NORMAL
- en: 'projectName: ''packt-store'''
  prefs: []
  type: TYPE_NORMAL
- en: 'action: ''Push services'''
  prefs: []
  type: TYPE_NORMAL
- en: 'additionalImageTags: ''$(Build.BuildNumber)'''
  prefs: []
  type: TYPE_NORMAL
- en: 'includeLatestTag: true'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'name: $(Date:yyyyMMdd).$(Rev:r)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 'name: 1.0.$(Rev:r)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: 'parameters:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '- name: azureSubscription'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'type: string'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'default: ''azure-packt-rg'''
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '- name: resourceGroupName'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'type: string'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'default: ''packt'''
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '- name: location'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'type: string'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'default: ''East US'''
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'jobs:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '- job: VerifyAndPackageIaC'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'displayName: Verify and Package IaC'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'steps:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '- task: AzureResourceManagerTemplateDeployment@3'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'displayName: ''Validate Catalog Template'''
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'inputs:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'deploymentScope: ''Resource Group'''
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'azureResourceManagerConnection: ${{parameters.azureSubscription}}'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'resourceGroupName: ${{parameters.resourceGroupName}}'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'templateLocation: ''Linked artifact'''
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'csmFile: ''e2e/iac/azure/catalog/template.json'''
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'deploymentMode: ''Validation'''
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'location: ${{parameters.location}}'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '- task: PublishPipelineArtifact@1'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'displayName: ''Publish Catalog Artifacts'''
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'inputs:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'targetPath: ''e2e/iac/azure/catalog'''
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'artifact: catalog-iac'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'publishLocation: ''pipeline'''
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '- script: |'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: docker run --rm -v $(pwd):/manifests stackrox/kube-linter lint /manifests --config
    /manifests/.kube-linter.yml
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'displayName: ''Lint Catalog Helm Chart'''
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'workingDirectory: e2e/iac/helm-charts/catalog'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '- task: HelmInstaller@1'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'displayName: ''Install Helm'''
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '- task: HelmDeploy@0'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'displayName: ''Package Catalog Helm Chart'''
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'inputs:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'command: package'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'chartPath: e2e/iac/helm-charts/catalog'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'destination: $(Build.ArtifactStagingDirectory)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '- task: PublishPipelineArtifact@1'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'displayName: ''Publish Catalog Helm Chart'''
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'inputs:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'targetPath: $(Build.ArtifactStagingDirectory)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'artifact: catalog-helm-chart'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'publishLocation: ''pipeline'''
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '- task: AzureResourceManagerTemplateDeployment@3'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'displayName: ''Validate Cart Template'''
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'inputs:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'deploymentScope: ''Resource Group'''
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'azureResourceManagerConnection: ${{parameters.azureSubscription}}'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'resourceGroupName: ${{parameters.resourceGroupName}}'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'templateLocation: ''Linked artifact'''
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'csmFile: ''e2e/iac/azure/cart/template.json'''
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'deploymentMode: ''Validation'''
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'location: ${{parameters.location}}'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '- task: PublishPipelineArtifact@1'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'displayName: ''Publish Cart Artifacts'''
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'inputs:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'targetPath: ''e2e/iac/azure/cart'''
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'artifact: cart-iac'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'publishLocation: ''pipeline'''
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '- task: AzureResourceManagerTemplateDeployment@3'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'displayName: ''Validate Checkout Template'''
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'inputs:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'deploymentScope: ''Resource Group'''
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'azureResourceManagerConnection: ${{parameters.azureSubscription}}'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'resourceGroupName: ${{parameters.resourceGroupName}}'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'templateLocation: ''Linked artifact'''
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'csmFile: ''e2e/iac/azure/checkout/template.json'''
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'deploymentMode: ''Validation'''
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'location: ${{parameters.location}}'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '- task: PublishPipelineArtifact@1'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'displayName: ''Publish Checkout Artifacts'''
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'inputs:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'targetPath: ''e2e/iac/azure/checkout'''
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'artifact: checkout-iac'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'publishLocation: ''pipeline'''
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '- task: AzureResourceManagerTemplateDeployment@3'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'displayName: ''Validate Frontend Template'''
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'inputs:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'deploymentScope: ''Resource Group'''
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'azureResourceManagerConnection: ${{parameters.azureSubscription}}'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'resourceGroupName: ${{parameters.resourceGroupName}}'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'templateLocation: ''Linked artifact'''
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'csmFile: ''e2e/iac/azure/frontend/template.json'''
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'deploymentMode: ''Validation'''
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'location: ${{parameters.location}}'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'overrideParameters: ''-catalogAppUrl catalogAppUrl.com -cartAppUrl cartAppUrl.com
    -checkoutAppUrl checkoutAppUrl.com'''
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '- task: PublishPipelineArtifact@1'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'displayName: ''Publish Frontend Artifacts'''
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'inputs:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'targetPath: ''e2e/iac/azure/frontend'''
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'artifact: frontend-iac'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'publishLocation: ''pipeline'''
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '- name: envName'
  prefs: []
  type: TYPE_NORMAL
- en: 'type: string'
  prefs: []
  type: TYPE_NORMAL
- en: 'default: ''test'''
  prefs: []
  type: TYPE_NORMAL
- en: '- name: azureSubscription'
  prefs: []
  type: TYPE_NORMAL
- en: 'type: string'
  prefs: []
  type: TYPE_NORMAL
- en: 'default: ''azure-packt-rg'''
  prefs: []
  type: TYPE_NORMAL
- en: '- name: resourceGroupName'
  prefs: []
  type: TYPE_NORMAL
- en: 'type: string'
  prefs: []
  type: TYPE_NORMAL
- en: 'default: ''packt'''
  prefs: []
  type: TYPE_NORMAL
- en: '- name: location'
  prefs: []
  type: TYPE_NORMAL
- en: 'type: string'
  prefs: []
  type: TYPE_NORMAL
- en: 'default: ''East US'''
  prefs: []
  type: TYPE_NORMAL
- en: 'jobs:'
  prefs: []
  type: TYPE_NORMAL
- en: '- deployment: deployment_${{ parameters.envName }}'
  prefs: []
  type: TYPE_NORMAL
- en: 'displayName: Deploy to ${{ parameters.envName }}'
  prefs: []
  type: TYPE_NORMAL
- en: 'environment: ${{ parameters.envName }}'
  prefs: []
  type: TYPE_NORMAL
- en: 'strategy:'
  prefs: []
  type: TYPE_NORMAL
- en: 'runOnce:'
  prefs: []
  type: TYPE_NORMAL
- en: 'deploy:'
  prefs: []
  type: TYPE_NORMAL
- en: 'steps:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: '- download: current'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'displayName: ''Download catalog iac'''
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'artifact: catalog-iac'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '- task: AzureResourceGroupDeployment@2'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'name: catalogInfra'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'displayName: ''Deploy catalog Infra'''
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'inputs:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'azureSubscription: ${{ parameters.azureSubscription }}'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'action: ''Create Or Update Resource Group'''
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'resourceGroupName: ${{ parameters.resourceGroupName }}'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'location: ${{ parameters.location }}'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'templateLocation: ''Linked artifact'''
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'csmFile: ''$(Pipeline.Workspace)/catalog-iac/template.json'''
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'overrideParameters: ''-environmentName ${{ parameters.envName }}'''
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'deploymentMode: ''Incremental'''
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'deploymentName: ''catalog-$(Build.BuildNumber)'''
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'deploymentOutputs: ''catalogInfraOutputs'''
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '- task: PowerShell@2'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'displayName: ''Get AKS clusterName'''
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'inputs:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'targetType: ''inline'''
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'script: |'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: $var=ConvertFrom-Json '$(catalogInfraOutputs)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: $value=$var.clusterName.value
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Write-Host "AKS Cluster Name: $value"'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Write-Host "##vso[task.setvariable variable=clusterName;]$value"
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE17]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '- download: current'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'displayName: ''Download catalog helm chart'''
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'artifact: catalog-helm-chart'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE18]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '- task: HelmInstaller@1'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'displayName: ''Install Helm'''
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'inputs:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'helmVersionToInstall: 3.11.3'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE19]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '- task: HelmDeploy@0'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'displayName: Deploy Catalog App to AKS'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'inputs:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'connectionType: ''Azure Resource Manager'''
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'azureSubscription: ${{ parameters.azureSubscription }}'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'azureResourceGroup: ${{ parameters.resourceGroupName }}'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'kubernetesCluster: $(clusterName)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'releaseName: catalog'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'chartType: FilePath'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'chartPath: "$(Pipeline.Workspace)/catalog-helm-chart/packt-store-catalog-1.0.0.tgz"'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'overrideValues: ''image.tag=$(Build.BuildNumber)'''
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'command: upgrade'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'install: true'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'waitForExecution: true'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '"##vso[task.setvariable variable=name;]value"'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE20]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '- download: current'
  prefs: []
  type: TYPE_NORMAL
- en: 'displayName: ''Download cart iac'''
  prefs: []
  type: TYPE_NORMAL
- en: 'artifact: cart-iac'
  prefs: []
  type: TYPE_NORMAL
- en: '- task: AzureResourceGroupDeployment@2'
  prefs: []
  type: TYPE_NORMAL
- en: 'name: cartInfra'
  prefs: []
  type: TYPE_NORMAL
- en: 'displayName: ''Deploy cart Infra'''
  prefs: []
  type: TYPE_NORMAL
- en: 'inputs:'
  prefs: []
  type: TYPE_NORMAL
- en: 'azureSubscription: ${{ parameters.azureSubscription }}'
  prefs: []
  type: TYPE_NORMAL
- en: 'action: ''Create Or Update Resource Group'''
  prefs: []
  type: TYPE_NORMAL
- en: 'resourceGroupName: ${{ parameters.resourceGroupName }}'
  prefs: []
  type: TYPE_NORMAL
- en: 'location: ${{ parameters.location }}'
  prefs: []
  type: TYPE_NORMAL
- en: 'templateLocation: ''Linked artifact'''
  prefs: []
  type: TYPE_NORMAL
- en: 'csmFile: ''$(Pipeline.Workspace)/cart-iac/template.json'''
  prefs: []
  type: TYPE_NORMAL
- en: 'overrideParameters: ''-environmentName ${{ parameters.envName }} -containerTag
    "$(Build.BuildNumber)"'''
  prefs: []
  type: TYPE_NORMAL
- en: 'deploymentMode: ''Incremental'''
  prefs: []
  type: TYPE_NORMAL
- en: 'deploymentName: ''cart-$(Build.BuildNumber)'''
  prefs: []
  type: TYPE_NORMAL
- en: 'deploymentOutputs: ''cartInfraOutputs'''
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE21]'
  prefs: []
  type: TYPE_PRE
- en: '- download: current'
  prefs: []
  type: TYPE_NORMAL
- en: 'displayName: ''Download checkout iac'''
  prefs: []
  type: TYPE_NORMAL
- en: 'artifact: checkout-iac'
  prefs: []
  type: TYPE_NORMAL
- en: '- task: AzureResourceGroupDeployment@2'
  prefs: []
  type: TYPE_NORMAL
- en: 'name: checkoutInfra'
  prefs: []
  type: TYPE_NORMAL
- en: 'displayName: ''Deploy checkout Infra'''
  prefs: []
  type: TYPE_NORMAL
- en: 'inputs:'
  prefs: []
  type: TYPE_NORMAL
- en: 'azureSubscription: ${{ parameters.azureSubscription }}'
  prefs: []
  type: TYPE_NORMAL
- en: 'action: ''Create Or Update Resource Group'''
  prefs: []
  type: TYPE_NORMAL
- en: 'resourceGroupName: ${{ parameters.resourceGroupName }}'
  prefs: []
  type: TYPE_NORMAL
- en: 'location: ${{ parameters.location }}'
  prefs: []
  type: TYPE_NORMAL
- en: 'templateLocation: ''Linked artifact'''
  prefs: []
  type: TYPE_NORMAL
- en: 'csmFile: ''$(Pipeline.Workspace)/checkout-iac/template.json'''
  prefs: []
  type: TYPE_NORMAL
- en: 'overrideParameters: ''-environmentName ${{ parameters.envName }} -containerTag
    "$(Build.BuildNumber)"'''
  prefs: []
  type: TYPE_NORMAL
- en: 'deploymentMode: ''Incremental'''
  prefs: []
  type: TYPE_NORMAL
- en: 'deploymentName: ''checkout-$(Build.BuildNumber)'''
  prefs: []
  type: TYPE_NORMAL
- en: 'deploymentOutputs: ''checkoutInfraOutputs'''
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE22]'
  prefs: []
  type: TYPE_PRE
- en: '- download: current'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'displayName: ''Download frontend iac'''
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'artifact: frontend-iac'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE23]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '- task: AzureCLI@2'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'displayName: ''Get Catalog App IP from AKS'''
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'inputs:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'azureSubscription: ''azure-packt-rg'''
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'scriptType: ''bash'''
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'scriptLocation: ''inlineScript'''
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'inlineScript: |'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: az aks get-credentials -g ${{ parameters.resourceGroupName }} -n $(clusterName)
    --overwrite-existing
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: ip=`kubectl get service catalog-packt-store-catalog -o json | jq ".status.loadBalancer.ingress[0].ip"`
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'echo "Catalog App IP: $ip"'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: echo «##vso[task.setvariable variable=catalogAppIp;]$ip"
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE24]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '- task: PowerShell@2'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'displayName: ''Set App URLs'''
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'inputs:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'targetType: ''inline'''
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'script: |'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '# Set the catalog app url'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: $value="http://" + $(catalogAppIp) + ":5050/"
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Write-Host "Catalog App Url: $value"'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Write-Host "##vso[task.setvariable variable=catalogAppUrl;]$value"
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '# Set the cart app url'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: $var=ConvertFrom-Json '$(cartInfraOutputs)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: $value=$var.containerAppFqdn.value
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: $value="https://" + $var.containerAppFqdn.value + "/"
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Write-Host "Cart App Url: $value"'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Write-Host "##vso[task.setvariable variable=cartAppUrl;]$value"
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '# Set the checkout app url'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: $var=ConvertFrom-Json '$(checkoutInfraOutputs)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: $value="http://" + $var.containerFQDN.value + ":5015/"
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Write-Host "Checkout App Url: $value"'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Write-Host "##vso[task.setvariable variable=checkoutAppUrl;]$value"
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE25]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '- task: AzureResourceGroupDeployment@2'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'name: frontendInfra'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'displayName: ''Deploy frontend Infra'''
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'inputs:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'azureSubscription: ${{ parameters.azureSubscription }}'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'action: ''Create Or Update Resource Group'''
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'resourceGroupName: ${{ parameters.resourceGroupName }}'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'location: ${{ parameters.location }}'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'templateLocation: ''Linked artifact'''
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'csmFile: ''$(Pipeline.Workspace)/frontend-iac/template.json'''
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'overrideParameters: ''-environmentName ${{ parameters.envName }} -containerTag
    "$(Build.BuildNumber)" -catalogAppUrl $(catalogAppUrl) -cartAppUrl $(cartAppUrl)
    -checkoutAppUrl $(checkoutAppUrl)'''
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'deploymentMode: ''Incremental'''
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'deploymentName: ''frontend-$(Build.BuildNumber)'''
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'deploymentOutputs: ''frontendInfraOutputs'''
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE26]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '- task: PowerShell@2'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'displayName: ''Get Frontend URL'''
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'inputs:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'targetType: ''inline'''
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'script: |'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '# Get the frontend app url'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: $var=ConvertFrom-Json '$(frontendInfraOutputs)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: $value=$var.frontendUrl.value
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Write-Host "Frontend Url: $value"'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Write-Host "##vso[task.setvariable variable=frontendAppUrl;]$value"
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE27]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: az group delete -n packt -y
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE28]'
  prefs: []
  type: TYPE_PRE
