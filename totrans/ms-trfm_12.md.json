["```\nresource \"azurerm_storage_account\" \"frontend\" {\n  name                     = \"st${var.application_name}${var.environment_name}${random_string.main.result}\"\n  resource_group_name      = azurerm_resource_group.main.name\n  location                 = azurerm_resource_group.main.location\n  account_tier             = \"Standard\"\n  account_replication_type = \"LRS\"\n  static_website {\n    index_document     = \"index.html\"\n    error_404_document = \"404.html\"\n  }\n}\n```", "```\nresource \"azurerm_service_plan\" \"consumption\" {\n  name                = \"asp-${var.application_name}-${var.environment_name}-${random_string.main.result}\"\n  resource_group_name = azurerm_resource_group.main.name\n  location            = azurerm_resource_group.main.location\n  os_type             = var.function_app_os_type\n  sku_name            = var.function_app_sku\n}\n```", "```\nresource \"azurerm_windows_function_app\" \"main\" {\n  name                       = \"func-${var.application_name}-${var.environment_name}-${random_string.main.result}\"\n  resource_group_name        = azurerm_resource_group.main.name\n  location                   = azurerm_resource_group.main.location\n  service_plan_id            = azurerm_service_plan.consumption.id\n  storage_account_name       = azurerm_storage_account.function.name\n  storage_account_access_key = azurerm_storage_account.function.primary_access_key\n  site_config {\n    application_stack {\n      dotnet_version = \"v6.0\"\n    }\n    cors {\n      allowed_origins     = [\"https://portal.azure.com\"]\n      support_credentials = true\n    }\n  }\n}\n```", "```\n  app_settings = {\n    \"SCM_DO_BUILD_DURING_DEPLOYMENT\" = \"false\"\n    \"WEBSITE_RUN_FROM_PACKAGE\"       = \"1\"\n    \"STORAGE_CONNECTION_STRING\"      = azurerm_storage_account.function.primary_connection_string\n    \"QUEUE_CONNECTION_STRING\"        = azurerm_storage_account.function.primary_connection_string\n  }\n```", "```\n@Microsoft.KeyVault(VaultName=kv-fleetops-dev;SecretName=QUEUE_CONNECTION_STRING)\n```", "```\n  app_settings = {\n    \"QUEUE_CONNECTION_STRING\" = \"@Microsoft.KeyVault(VaultName=${azurerm_keyvault.main.name};SecretName=${azurerm_keyvault_secret.queue_connection_string.name})\"\n  }\n```", "```\n    - name: Generate the Deployment Package\n      run: |\n        zip -r ../deployment.zip ./\n      working-directory: ${{ env.DOTNET_WORKING_DIRECTORY }}/publish\n```", "```\n    - name: Upload Deployment Package\n      uses: actions/upload-artifact@v2\n      with:\n        name: dotnet-deployment\n        path: ${{ env.DOTNET_WORKING_DIRECTORY }}/deployment.zip\n```", "```\n    - uses: actions/download-artifact@v3\n      with:\n        name: dotnet-deployment\n```", "```\n    - name: Unzip Deployment Package\n      run: |\n        mkdir -p ${{ env.DOTNET_WORKING_DIRECTORY }}/upload-staging\n        unzip ./deployment.zip -d ${{ env.DOTNET_WORKING_DIRECTORY }}/upload-staging\n```", "```\n    - id: deploy\n      name: Upload to Blob\n      env:\n        ARM_SUBSCRIPTION_ID: ${{ vars.ARM_SUBSCRIPTION_ID }}\n        ARM_TENANT_ID: ${{ vars.ARM_TENANT_ID }}\n        ARM_CLIENT_ID: ${{ vars.TERRAFORM_ARM_CLIENT_ID }}\n        ARM_CLIENT_SECRET: ${{ secrets.TERRAFORM_ARM_CLIENT_SECRET }}\n      working-directory: ${{ env.DOTNET_WORKING_DIRECTORY }}\n      run: |\n        az login --service-principal -u $ARM_CLIENT_ID -p $ARM_CLIENT_SECRET --tenant $ARM_TENANT_ID\n        az account set --subscription $ARM_SUBSCRIPTION_ID\n        az storage blob upload-batch -s ./upload-staging/wwwroot -d \\$web --account-name ${{ steps.terraform.outputs.frontend_storage_account_name }}\n```", "```\n      - name: Deploy\n        env:\n          ARM_SUBSCRIPTION_ID: ${{ vars.ARM_SUBSCRIPTION_ID }}\n          ARM_TENANT_ID: ${{ vars.ARM_TENANT_ID }}\n          ARM_CLIENT_ID: ${{ vars.TERRAFORM_ARM_CLIENT_ID }}\n          ARM_CLIENT_SECRET: ${{ secrets.TERRAFORM_ARM_CLIENT_SECRET }}\n          RESOURCE_GROUP_NAME: ${{needs.terraform.outputs.resource_group_name}}\n          FUNCTION_NAME: ${{needs.terraform.outputs.function_name}}\n        run: |\n          az login --service-principal -u $ARM_CLIENT_ID -p $ARM_CLIENT_SECRET --tenant $ARM_TENANT_ID --output none\n          az account set -s $ARM_SUBSCRIPTION_ID --output none\n          az functionapp deployment source config-zip -g $RESOURCE_GROUP_NAME -n $FUNCTION_NAME --src ./deployment.zip\n```", "```\n  app_settings = {\n    \"SCM_DO_BUILD_DURING_DEPLOYMENT\" = \"false\"\n    \"WEBSITE_RUN_FROM_PACKAGE\"       = \"1\"\n  }\n```"]