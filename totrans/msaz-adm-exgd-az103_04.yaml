- en: Managing Role-Based Access Control
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In the previous chapter, we covered the second part of this book's objective
    by covering how to analyze resource utilization and consumption in Azure. We've
    covered how to monitor different Azure resources using Azure Monitor, and how
    to use Azure Log Analytics to query the logs.
  prefs: []
  type: TYPE_NORMAL
- en: This chapter will cover the last part of the *Managing Azure Subscriptions and
    Resources* objective by covering **role-based access control** (**RBAC**). You'll
    learn how to configure access to Azure resources by assigning RBAC roles from
    the Azure portal. You'll also learn how to configure management access by assigning
    global administrators to your Azure subscription and other resources. You'll learn
    how to create custom roles, which you can apply when custom permissions are needed
    for your users. This chapter will finish by covering Azure policies and how you
    can apply them to your Azure resources.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following topics will be covered in this chapter:'
  prefs: []
  type: TYPE_NORMAL
- en: RBAC
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Configuring access to Azure resources by assigning roles
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Configuring management access to Azure
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Creating a custom role
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Azure Policy
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Implementing and assigning Azure policies
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Technical requirements
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This chapter will use the Azure PowerShell ([https://docs.microsoft.com/en-us/powershell/azure/install-az-ps?view=azps-1.8.0](https://docs.microsoft.com/en-us/powershell/azure/install-az-ps?view=azps-1.8.0)) for
    the examples.
  prefs: []
  type: TYPE_NORMAL
- en: The source code for the sample application can be downloaded from [https://github.com/PacktPublishing/Microsoft-Azure-Administrator-Exam-Guide-AZ-103/tree/master/Chapter03](https://github.com/PacktPublishing/Microsoft-Azure-Administrator-Exam-Guide-AZ-103/tree/master/Chapter03).
  prefs: []
  type: TYPE_NORMAL
- en: RBAC
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: With RBAC, you can manage who has access to the different Azure resources inside
    of your tenant. You can also set what the users can do with different Azure resources.
  prefs: []
  type: TYPE_NORMAL
- en: A best practice for assigning permissions is using the principle of least permissions;
    this involves giving users the exact permissions they need to do their jobs properly.
    Users, groups, and applications are added to roles in Azure, and those roles have
    certain permissions. You can use the built-in roles that Azure offers, or you
    can create custom roles in RBAC.
  prefs: []
  type: TYPE_NORMAL
- en: The roles in Azure can be added to a certain scope. This scope can be an Azure
    subscription, an Azure resource group, or a web application. Azure then uses access
    inheritance; roles that are added to a parent resource give access to child resources
    automatically. For instance, a group that is added to an Azure subscription gets
    access to all the resource groups and underlying resources that are in that subscription
    as well. A user that is added to a **virtual machine** (**VM**) only gets access
    to that particular VM.
  prefs: []
  type: TYPE_NORMAL
- en: Let's start looking at RBAC in detail by first looking at built-in roles.
  prefs: []
  type: TYPE_NORMAL
- en: Built-in roles
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Azure offers various built-in roles that you can use for assigning permissions
    to users, groups, and applications. RBAC offers the following three standard roles
    that you can assign to each Azure resource:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Owner**: Users in this role can manage everything, and can create new resources.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Contributor**: Users in this role can manage everything, just like users
    in the owner role, but they can''t assign access to others.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Reader**: Users in this role can read everything, but they are not allowed
    to make any changes.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Aside from the standard roles, each Azure resource also has roles that are scoped
    to particular resources. For instance, you can assign users, groups, or applications
    to the SQL security manager, from which they can manage all security-related policies
    of the Azure SQL Server, or you can assign them to the VM contributor role, where
    they can manage the VMs, but not the VNet or storage accounts that are connected to
    a VM.
  prefs: []
  type: TYPE_NORMAL
- en: For an overview of all the built-in roles that Azure offers, you can refer to [https://docs.microsoft.com/en-us/azure/role-based-access-control/built-in-roles](https://docs.microsoft.com/en-us/azure/role-based-access-control/built-in-roles).
  prefs: []
  type: TYPE_NORMAL
- en: While these built-in roles usually cover all possible use cases, they can never
    account for every requirement in an organization. To allow for flexibility in
    role assignment, RBAC provides the ability to make custom roles. Let's look at
    this feature.
  prefs: []
  type: TYPE_NORMAL
- en: Custom roles
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: You can also create custom roles in RBAC when none of the built-in roles suit
    your needs. Custom roles can be assigned to the exact same resources as built-in roles and
    can only be created using PowerShell, the CLI, and the REST API. You can't create
    them in the Azure portal. In each Azure tenant, you can create up to 2,000 roles.
  prefs: []
  type: TYPE_NORMAL
- en: Custom roles are defined in JSON, and after deployment, they are stored inside
    the Azure AD tenant. By storing them inside the Azure AD tenant, they can be used
    in all the different Azure subscriptions that are connected to the Azure AD tenant.
  prefs: []
  type: TYPE_NORMAL
- en: Configuring access to Azure resources by assigning roles
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'If a user in your organization needs permissions to access Azure resources,
    you need to assign the user to the appropriate role in Azure. In this demonstration,
    we are going to assign administrator access to a user for a VM. To configure access
    to the VM for the user, you have to perform the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Navigate to the Azure portal by opening [https://portal.azure.com](https://portal.azure.com).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Open the `PacktNetworkWatcher` resource group and select VM1 from the list:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/e091c8c0-d990-44d8-a85e-3343ac7af461.png)'
  prefs: []
  type: TYPE_IMG
- en: The PacktNetworkWatcher resources
  prefs: []
  type: TYPE_NORMAL
- en: You will be redirected to the VM settings blade.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'In the settings blade, select Access control (IAM) and click on **A**dd | Add
    role assignmentin the top menu:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/c38835bf-4580-4fd2-b21c-876f69ef37fc.png)'
  prefs: []
  type: TYPE_IMG
- en: Access control settings
  prefs: []
  type: TYPE_NORMAL
- en: 'In the Add role assignment blade, specify the following values:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/37995879-b452-4f40-ad19-b6de16e54cff.png)'
  prefs: []
  type: TYPE_IMG
- en: The Add role assignment blade
  prefs: []
  type: TYPE_NORMAL
- en: Click on Save.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The user now has administrator permissions on the VM.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In this demonstration, we assigned administrator access to a user for a VM.
    We are now going to look at how to configure management access to Azure.
  prefs: []
  type: TYPE_NORMAL
- en: Configuring management access to Azure
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Management access to Azure can be configured at the subscription level. To
    do this, perform the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Navigate to the Azure portal by opening [https://portal.azure.com](https://portal.azure.com).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Select All services and type `subscriptions` in the search box. Then, select Subscriptions,
    as highlighted in the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/7d11de38-2dec-42ad-921c-c251719feb06.png)'
  prefs: []
  type: TYPE_IMG
- en: Selecting subscriptions
  prefs: []
  type: TYPE_NORMAL
- en: Select the subscription that you want to grant management access to from the
    list.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'In the subscription settings blade, select Access control (IAM) and click on Add
    | Add co-administratorin the top menu:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/b49da0c7-7154-48e5-8e65-881e79f7aa77.png)'
  prefs: []
  type: TYPE_IMG
- en: The access control settings
  prefs: []
  type: TYPE_NORMAL
- en: 'In the Add co-administrator blade, specify the following values:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/bbcd21ac-ddd2-4741-8876-086010e11f99.png)'
  prefs: []
  type: TYPE_IMG
- en: Adding a co-administrator
  prefs: []
  type: TYPE_NORMAL
- en: Click on Add.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Now that we have configured management access to Azure, we are going to look
    at how to create a custom role for your users.
  prefs: []
  type: TYPE_NORMAL
- en: Creating a custom role
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In the following example, we will create a custom role that can only restart
    VMs in Azure. For this, you need to create a JSON file that will be deployed using
    PowerShell. We are assigning that role to a user account inside the JSON file,
    as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: 'You can define the custom role by using the following JSON code. You should
    set the `Id` to null because the custom role gets an ID assigned to it at creation.
    We will add the custom role to two Azure subscriptions, as follows (replace the
    subscriptions in the `AssignableScopes` part with your subscription IDs):'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'Save the JSON file in a folder named `CustomRoles` on the `C:` drive of your
    computer. Then, run the following PowerShell script to create the role. First,
    log in to your Azure account, as follows:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'If necessary, select the right subscription:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'Then, create the custom role in Azure by importing the JSON file into PowerShell:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: In this demonstration, we created a custom role that can only restart VMs in
    Azure. Now, we're going to take a look at how you can create policies using Azure
    Policy.
  prefs: []
  type: TYPE_NORMAL
- en: Azure Policy
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: With Azure Policy, you can create policies that enforce rules over your Azure
    resources. This way, resources stay compliant with service-level agreements and corporate standards.
    With Azure Policy, you can evaluate all the different Azure resources for non-compliance.
    For example, you can create a policy to allow only a certain size of VM in your
    Azure environment. When the policy is created, Azure will check all the new and
    existing VMs to see whether they apply to this policy.
  prefs: []
  type: TYPE_NORMAL
- en: Azure Policy is different than RBAC because Azure Policy focuses on resource
    properties for existing resources and during deployment. RBAC focuses on user
    actions at different scopes. A user can be added to the owner role in a resource
    group, for instance, which will give the user full rights to that resource group.
  prefs: []
  type: TYPE_NORMAL
- en: 'Azure offers built-in policies and custom policies. Some examples of these
    built-in policies are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Allowed VM SKUs**: This policy specifies a set of VM sizes and types that
    can be deployed in Azure.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Allowed locations**: This policy restricts the available locations where
    resources can be deployed.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Not allowed resource types**: This policy prevents certain resource types
    from being deployed.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Allowed resource types**: This policy defines a list of resource types that
    you can deploy. Resource types that are not on the list can''t be deployed inside
    the Azure environment.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Allowed storage account SKUs**: This policy specifies a set of storage account
    SKUs that can be deployed.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'If the built-in policies don''t match with your requirements, you can create
    a custom policy instead. Custom policies are created in JSON and look like the
    following example. The first part of the code sets the different properties:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'In this part of the code, we are looking at the policy rule:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: Policies are assigned at the management group level, the subscription level,
    or the resource group level.
  prefs: []
  type: TYPE_NORMAL
- en: Implementing and assigning Azure policies
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'To implement Azure policies, you have to assign them. In this demonstration,
    we are going to assign an Allowed location policy to an Azure resource group. Therefore,
    you have to perform the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Navigate to the Azure portal by opening [https://portal.azure.com](https://portal.azure.com).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Open the `PacktNetworkWatcher`resource group.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Then, under Settings, select Policies:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/728a0328-422b-4678-836c-b4be750c988b.png)'
  prefs: []
  type: TYPE_IMG
- en: Policies
  prefs: []
  type: TYPE_NORMAL
- en: 'Click on the Getting started menu item. You will see a page that is similar
    to the following:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/f92200b3-4207-4b84-ad2d-3f2af7a600a3.png)'
  prefs: []
  type: TYPE_IMG
- en: Getting started with Azure policies
  prefs: []
  type: TYPE_NORMAL
- en: The first step is to view and select the policy definition. Select the View
    Definitions link on the page.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'You will go to the available built-in and custom policies inside your subscription.
    On the right-hand side, type `Locations` in the search bar:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/451f7474-0a62-4c0c-964f-52e2ac2b1cb9.png)'
  prefs: []
  type: TYPE_IMG
- en: Searching for a locations policy
  prefs: []
  type: TYPE_NORMAL
- en: 'Then, select the Allowed locationspolicy; you will be redirected to the blade
    where you can see the policy definition in JSON and assign the policy:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/de99f24d-f72d-48ee-82b1-7baa5ebbd272.png)'
  prefs: []
  type: TYPE_IMG
- en: Policy definition
  prefs: []
  type: TYPE_NORMAL
- en: Click on Assign in the top menu.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'To assign the policy, you have to fill in the following values:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Scope**: Select a subscription, and, optionally, a resource group. I''ve
    selected the `PacktNetworkWatcher` resource group for this demonstration.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Allowed locations: Only select West Europe, as demonstrated in the following
    screenshot:'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](img/b5645eae-dcd9-4d5e-98b0-3920a261d0e3.png)'
  prefs: []
  type: TYPE_IMG
- en: Assigning the policy definition
  prefs: []
  type: TYPE_NORMAL
- en: Click on Assign. The policy will be assigned to the resource group.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Now, when we add a new resource to the resource group (such as a new VM, for
    instance) and set the location to East US, we will notice a validation error on
    the top-left of the screen. When you click on it, you will see the following details
    on the right-hand side of the screen:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/30a90779-cf1a-4d29-8602-bdf9704fcb81.png)'
  prefs: []
  type: TYPE_IMG
- en: Validation error
  prefs: []
  type: TYPE_NORMAL
- en: In this section, we covered how to assign a policy in Azure.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we covered the third part of the *Managing Azure Subscriptions
    and Resources *objective by covering how to configure access to Azure resources
    by assigning roles, how to configure management access, how to create a custom
    role, how to assign RBAC roles, and how to implement and assign Azure policies.
  prefs: []
  type: TYPE_NORMAL
- en: In the next chapter, which will introduce a new objective forimplementing and
    managing storage, we are going to cover how to create and configure storage accounts.
  prefs: []
  type: TYPE_NORMAL
- en: Questions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Answer the following questions to test your knowledge of the information in
    this chapter. You can find the answers in the *Assessments* section at the end
    of this book:'
  prefs: []
  type: TYPE_NORMAL
- en: With Azure Policy, can you assign permissions to users, giving them access to
    your Azure resources?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Yes'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'No'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Suppose that you want to check whether all the VMs inside your Azure subscription
    use managed disks. Can you use Azure Policy for this?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Yes'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'No'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Are custom policies created in XML?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Yes'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'No'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Further reading
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'You can checkout the following links for more information about the topics
    that were covered in this chapter:'
  prefs: []
  type: TYPE_NORMAL
- en: '*What is role-based access control (RBAC) for Azure resources?*: [https://docs.microsoft.com/en-us/azure/role-based-access-control/overview](https://docs.microsoft.com/en-us/azure/role-based-access-control/overview)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Troubleshoot RBAC for Azure resources*: [https://docs.microsoft.com/en-us/azure/role-based-access-control/troubleshooting](https://docs.microsoft.com/en-us/azure/role-based-access-control/troubleshooting)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Overview of the Azure Policy service*: [https://docs.microsoft.com/en-us/azure/governance/policy/overview](https://docs.microsoft.com/en-us/azure/governance/policy/overview)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Create a custom policy definition*: [https://docs.microsoft.com/en-us/azure/governance/policy/tutorials/create-custom-policy-definition](https://docs.microsoft.com/en-us/azure/governance/policy/tutorials/create-custom-policy-definition)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
