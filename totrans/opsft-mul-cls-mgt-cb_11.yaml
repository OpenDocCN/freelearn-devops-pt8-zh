- en: '11'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '11'
- en: OpenShift Multi-Cluster GitOps and Management
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: OpenShift 多集群 GitOps 和管理
- en: 'In the first chapter of this book, we discussed the main challenges most organizations
    face in scaling their Kubernetes infrastructure in a multi- or hybrid-cloud world.
    New challenges arise when you deploy multiple clusters on different providers,
    such as the following:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书的第一章中，我们讨论了大多数组织在多云或混合云环境中扩展 Kubernetes 基础设施时面临的主要挑战。当您在不同的提供商上部署多个集群时，会出现新的挑战，具体如下：
- en: '**Inconsistent security policies**: Clusters with different configurations
    regarding access rules and user profiles, allowed/blocked network flows, certificates,
    and other security aspects make an organization more vulnerable to data breaches
    and other security events.'
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**不一致的安全策略**：具有不同访问规则、用户配置文件、允许/阻止的网络流、证书和其他安全方面配置的集群，会使组织更容易遭受数据泄露和其他安全事件的风险。'
- en: '**High operational effort to manage all clusters**: Managing configurations,
    components, compliance, and policies for several clusters is overwhelming.'
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**高运营工作量以管理所有集群**：管理多个集群的配置、组件、合规性和政策是非常繁重的。'
- en: '**Deploying and managing applications**: The deployment process becomes much
    more complicated when you need to do it over several clusters. Monitoring and
    managing them are also really complex and require a lot of human effort.'
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**应用程序的部署和管理**：当您需要跨多个集群进行部署时，部署过程变得更加复杂。监控和管理这些集群也非常复杂，并且需要大量人工努力。'
- en: 'In this chapter, we will introduce a great tool to help you address these challenges
    and alleviate the amount of work you and/or your team may need to deal with when
    managing several clusters: Red Hat **Advanced Cluster Management** (**ACM**).'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将介绍一个很好的工具，帮助您解决这些挑战，并减轻您和/或您的团队在管理多个集群时可能需要处理的工作量：Red Hat **高级集群管理**（**ACM**）。
- en: 'Therefore, you will find the following topics covered in this chapter:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，您将在本章中找到以下主题：
- en: What is Red Hat ACM?
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 什么是 Red Hat ACM？
- en: Red Hat ACM installation
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Red Hat ACM 安装
- en: Managing clusters using Red Hat ACM
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 Red Hat ACM 管理集群
- en: Managing applications using Red Hat ACM
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 Red Hat ACM 管理应用程序
- en: Governance using Red Hat ACM
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 Red Hat ACM 进行治理
- en: Multi-cluster observability with Red Hat ACM
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 Red Hat ACM 进行多集群可观察性
- en: Note
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: The source code used in this chapter is available at [https://github.com/PacktPublishing/OpenShift-Multi-Cluster-Management-Handbook/tree/main/chapter11](https://github.com/PacktPublishing/OpenShift-Multi-Cluster-Management-Handbook/tree/main/chapter11).
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 本章中使用的源代码可以在 [https://github.com/PacktPublishing/OpenShift-Multi-Cluster-Management-Handbook/tree/main/chapter11](https://github.com/PacktPublishing/OpenShift-Multi-Cluster-Management-Handbook/tree/main/chapter11)
    获取。
- en: What is Red Hat ACM?
  id: totrans-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 什么是 Red Hat ACM？
- en: 'Red Hat ACM is a complete solution for Kubernetes multi-cluster management
    from a single pane that includes some other great features, making complex and
    time-consuming tasks a lot easier. Red Hat ACM provides a few main features, listed
    here:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: Red Hat ACM 是一个完整的 Kubernetes 多集群管理解决方案，通过单一面板实现，包括一些其他出色的功能，使得复杂和耗时的任务变得更加容易。Red
    Hat ACM 提供了几个主要功能，列举如下：
- en: '**Kubernetes multi-cluster management**: Create, update, and delete Kubernetes
    clusters on-premises and in the cloud.'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Kubernetes 多集群管理**：在本地和云端创建、更新和删除 Kubernetes 集群。'
- en: '**Multi-cluster observability**: ACM can also provide observability for all
    clusters from a single point of view, enabling administrators to read, aggregate,
    and receive alerts on the clusters.'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**多集群可观察性**：ACM 还可以从单一视角提供所有集群的可观察性，使管理员能够读取、汇总并接收集群的警报。'
- en: '**Governance using policies**: Through Red Hat ACM, you can audit and enforce
    policies to apply anything you want in the clusters, from security to infrastructure
    and application-related stuff. This includes roles and access control, operators
    that must be installed, and security compliance rules.'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**通过策略进行治理**：通过 Red Hat ACM，您可以审核和强制执行政策，在集群中应用您想要的任何内容，从安全到基础设施以及与应用程序相关的内容。这包括角色和访问控制、必须安装的操作员和安全合规规则。'
- en: '**Application management**: Deploy applications from Git repositories or Helm
    into multiple clusters simultaneously and also view them from a single pane.'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**应用程序管理**：从 Git 仓库或 Helm 同时部署应用程序到多个集群，并且可以从单一面板查看它们。'
- en: One of the great aspects of ACM is its multi-cluster architecture – it is designed
    to manage several clusters from a single standpoint, as you can see in the following
    figure.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: ACM 的一个重要特点是其多集群架构——它旨在从单一视角管理多个集群，正如下图所示。
- en: '![Figure 11.1 – ACM hub and managed clusters ](img/B18015_11_01.jpg)'
  id: totrans-23
  prefs: []
  type: TYPE_IMG
- en: Figure 11.1 – ACM hub and managed clusters
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
- en: 'To do so, it uses the concept of hub and managed clusters, as follows:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
- en: '**Hub cluster**: An OpenShift cluster that runs the central controller of ACM,
    which contains the web console, APIs, and other components that make up the product’s
    features. In this chapter, we will use the term hub cluster several times to refer
    to the OpenShift cluster that hosts ACM. OpenShift is the only supported option
    for the hub cluster.'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Managed cluster**: A cluster that is managed by ACM. ACM can manage OpenShift
    as well as other Kubernetes-based distributions. Check the *Further reading* section
    at the end of this chapter to find a complete list of Kubernetes distributions
    supported by ACM (Supportability Matrix).'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: We will dig into all these features in the following sections of this chapter.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
- en: Red Hat ACM installation
  id: totrans-29
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this section, we will guide you through the installation and configuration
    of ACM.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
- en: Important Note
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
- en: It is important to consider that ACM uses the compute, memory, and storage resources
    of the hub cluster, thus it is recommended to have a dedicated cluster to be the
    hub for ACM, avoiding concurrent workloads and resource usage. This is recommended
    but not required; you can run ACM in any OpenShift cluster with enough capacity.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
- en: The installation process is simple, similar to what we followed in the last
    chapters with OpenShift Pipelines and GitOps, as you can see in this section.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
- en: Prerequisites
  id: totrans-34
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Access to an OpenShift cluster with cluster-admin permissions.
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Installation
  id: totrans-36
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Follow this process to install Red Hat Advanced Cluster Management:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
- en: Access the OpenShift web console using a cluster-admin user.
  id: totrans-38
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Navigate to the **Operators** | **OperatorHub** menu item.
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 11.2 – OperatorHub ](img/B18015_11_02.jpg)'
  id: totrans-40
  prefs: []
  type: TYPE_IMG
- en: Figure 11.2 – OperatorHub
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
- en: Search for `Advanced Cluster Management for Kubernetes` using the **Filter by
    keyword…** box.
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 11.3 – Advanced Cluster Management for Kubernetes on OperatorHub ](img/B18015_11_03.jpg)'
  id: totrans-43
  prefs: []
  type: TYPE_IMG
- en: Figure 11.3 – Advanced Cluster Management for Kubernetes on OperatorHub
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
- en: Click on the **Advanced Cluster Management for Kubernetes** tile and then on
    the **Install** button to see the **Install Operator** screen.
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 11.4 – Installing Advanced Cluster Management for Kubernetes ](img/B18015_11_04.jpg)'
  id: totrans-46
  prefs: []
  type: TYPE_IMG
- en: Figure 11.4 – Installing Advanced Cluster Management for Kubernetes
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
- en: Don’t change the default namespace (`open-cluster-management`).
  id: totrans-48
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select **Automatic** or **Manual** for **Update approval**. If you select **Automatic**,
    upgrades will be performed automatically by **Operator Lifecycle Manager** (**OLM**)
    as soon as they are released by Red Hat, while with **Manual**, you need to approve
    it before being applied.
  id: totrans-49
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select the correct update channel. The stable channel is recommended as it contains
    the latest stable and *supported* version of the operator.
  id: totrans-50
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click the **Install** button.
  id: totrans-51
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 11.5 – Installing the operator ](img/B18015_11_05.jpg)'
  id: totrans-52
  prefs: []
  type: TYPE_IMG
- en: Figure 11.5 – Installing the operator
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
- en: 'Wait up to 5 minutes until you see the following message:'
  id: totrans-54
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 11.6 – Operator installed ](img/B18015_11_06.jpg)'
  id: totrans-55
  prefs: []
  type: TYPE_IMG
- en: Figure 11.6 – Operator installed
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
- en: 'Now that we have the operator installed, we can go ahead and deploy a new **MultiClusterHub**
    instance:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
- en: Click on the **Create MultiClusterHub** button.
  id: totrans-58
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Usually, no changes are needed; leave the default values and click on the **Create**
    button. Check out the link in the *Further reading* section of this chapter for
    product documentation for more information if you need to configure some advanced
    settings.
  id: totrans-59
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 11.7 – Create MultiClusterHub ](img/B18015_11_07.jpg)'
  id: totrans-60
  prefs: []
  type: TYPE_IMG
- en: Figure 11.7 – Create MultiClusterHub
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
- en: You will see the status `Phase:Installing` during the installation process.
  id: totrans-62
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 11.8 – Installing MultiClusterHub ](img/B18015_11_08.jpg)'
  id: totrans-63
  prefs: []
  type: TYPE_IMG
- en: Figure 11.8 – Installing MultiClusterHub
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
- en: Wait a bit until you see the `Phase:Running` status.
  id: totrans-65
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 11.9 – MultiClusterHub running ](img/B18015_11_09.jpg)'
  id: totrans-66
  prefs: []
  type: TYPE_IMG
- en: Figure 11.9 – MultiClusterHub running
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
- en: Click on the *combo box* at the top left of the screen and then click on **Advanced
    Cluster Management**.
  id: totrans-68
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 11.10 – Advanced Cluster Management option ](img/B18015_11_10.jpg)'
  id: totrans-69
  prefs: []
  type: TYPE_IMG
- en: Figure 11.10 – Advanced Cluster Management option
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
- en: You should see the ACM login screen. Use the same admin credentials you use
    to log in to OpenShift.
  id: totrans-71
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 11.11 – Red Hat ACM login ](img/B18015_11_11.jpg)'
  id: totrans-72
  prefs: []
  type: TYPE_IMG
- en: Figure 11.11 – Red Hat ACM login
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
- en: You have now Red Hat ACM installed and ready to be used.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 11.12 – Red Hat ACM initial page ](img/B18015_11_12.jpg)'
  id: totrans-75
  prefs: []
  type: TYPE_IMG
- en: Figure 11.12 – Red Hat ACM initial page
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
- en: Continue to the next section to learn more about the ACM cluster management
    feature.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
- en: Managing clusters using Red Hat ACM
  id: totrans-78
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'As we mentioned previously, one of the features ACM provides is cluster management.
    The following is a list of some of the operations you can perform with ACM:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
- en: Cluster provisioning
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Import of existing clusters
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Destroying a cluster
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Upgrading a cluster
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Scaling cluster nodes in or out
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Check the *Further reading* section of this chapter to see a link to a complete
    list of supported operations.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
- en: We will not cover how to do all the operations you can perform with ACM in this
    book, but we will guide you through the process of provisioning a new OpenShift
    cluster on AWS using ACM, to give you an idea of how easy it is to use the tool.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
- en: Cluster provisioning
  id: totrans-87
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Currently, in version 2.5, ACM can deploy clusters on AWS, Azure, Google Cloud,
    VMware vSphere, bare metal, Red Hat OpenStack, and Red Hat Virtualization. To
    do so, you need to first input the provider credentials to be used by ACM during
    the provisioning process. The following steps show how to add AWS credentials
    that will be used with our sample:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
- en: Access the **Credentials** menu and click on the **Add credential** button.
  id: totrans-89
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 11.13 – Adding provider credentials ](img/B18015_11_13.jpg)'
  id: totrans-90
  prefs: []
  type: TYPE_IMG
- en: Figure 11.13 – Adding provider credentials
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
- en: Click on the AWS credential.
  id: totrans-92
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 11.14 – Selecting the credential type ](img/B18015_11_14.jpg)'
  id: totrans-93
  prefs: []
  type: TYPE_IMG
- en: Figure 11.14 – Selecting the credential type
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
- en: On the next page, input a name and select a namespace where the credentials
    will be stored and the base DNS domain that will be used to deploy clusters. Click
    on the **Next** button.
  id: totrans-95
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 11.15 – Basic credentials information ](img/B18015_11_15.jpg)'
  id: totrans-96
  prefs: []
  type: TYPE_IMG
- en: Figure 11.15 – Basic credentials information
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
- en: Recommended Practice
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
- en: The provider credentials are stored in secrets in the namespace provided. As
    such, it is highly recommended you create a specific namespace for that and keep
    the access for it restricted.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
- en: Enter the AWS access and secret keys. Click **Next**.
  id: totrans-100
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 11.16 – AWS access and secret keys ](img/B18015_11_16.jpg)'
  id: totrans-101
  prefs: []
  type: TYPE_IMG
- en: Figure 11.16 – AWS access and secret keys
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
- en: If you use a proxy, input the proxy configuration and click **Next**.
  id: totrans-103
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 11.17 – Proxy configuration ](img/B18015_11_17.jpg)'
  id: totrans-104
  prefs: []
  type: TYPE_IMG
- en: Figure 11.17 – Proxy configuration
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
- en: Log in to the [console.redhat.com](http://console.redhat.com) portal using your
    Red Hat credentials and go to the **OpenShift** | **Downloads** menu option. Scroll
    down in the **Tokens** section and click on the **Copy** button next to **Pull
    Secret**.
  id: totrans-106
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 11.18 – Getting a pull secret ](img/B18015_11_18.jpg)'
  id: totrans-107
  prefs: []
  type: TYPE_IMG
- en: Figure 11.18 – Getting a pull secret
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
- en: Go back to ACM and paste the pull secret in the required field. Use an existing
    or create a new SSH key and paste it into the **SSH private key** and **SSH public
    key** fields.
  id: totrans-109
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 11.19 – Inputting the pull secret and SSH keys ](img/B18015_11_19.jpg)'
  id: totrans-110
  prefs: []
  type: TYPE_IMG
- en: Figure 11.19 – Inputting the pull secret and SSH keys
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
- en: Note
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
- en: 'You can use the following command in a Linux workstation to generate a new
    SSH key if needed:'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
- en: '`ssh-keygen -t ed25519 -N '''' -f new-ssh-key`'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
- en: Finally, click on the **Add** button and see your new credential.
  id: totrans-115
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 11.20 – Credential added ](img/B18015_11_20.jpg)'
  id: totrans-116
  prefs: []
  type: TYPE_IMG
- en: Figure 11.20 – Credential added
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
- en: 'Now, let’s go ahead and deploy a new cluster using this credential. Follow
    this process to deploy the cluster using ACM:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
- en: Access the **Infrastructure** | **Clusters** menu and click on the **Create
    cluster** button.
  id: totrans-119
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 11.21 – Creating a cluster ](img/B18015_11_21.jpg)'
  id: totrans-120
  prefs: []
  type: TYPE_IMG
- en: Figure 11.21 – Creating a cluster
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
- en: Select AWS, choose the credential that we just created, and click **Next**.
  id: totrans-122
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 11.22 – Selecting the installation type ](img/B18015_11_22.jpg)'
  id: totrans-123
  prefs: []
  type: TYPE_IMG
- en: Figure 11.22 – Selecting the installation type
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
- en: Fill out the form with the requested fields and click on the **Next** button.
  id: totrans-125
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 11.23 – Filling out the cluster details ](img/B18015_11_23.jpg)'
  id: totrans-126
  prefs: []
  type: TYPE_IMG
- en: Figure 11.23 – Filling out the cluster details
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
- en: Input the AWS region and the machine number and size.
  id: totrans-128
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 11.24 – Node pools ](img/B18015_11_24.jpg)'
  id: totrans-129
  prefs: []
  type: TYPE_IMG
- en: Figure 11.24 – Node pools
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
- en: If you want to customize the cluster network configurations, you can do so on
    this screen.
  id: totrans-131
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 11.25 – Network configurations ](img/B18015_11_25.jpg)'
  id: totrans-132
  prefs: []
  type: TYPE_IMG
- en: Figure 11.25 – Network configurations
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
- en: Input the proxy configurations, if needed.
  id: totrans-134
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 11.26 – Proxy configuration ](img/B18015_11_26.jpg)'
  id: totrans-135
  prefs: []
  type: TYPE_IMG
- en: Figure 11.26 – Proxy configuration
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
- en: You can also use Ansible to run playbooks and automate infrastructure requirements
    you may have as part of your deployment process. We will not dig into the Ansible
    integration in this book, but you can find good references to it in the *Further
    reading* of this chapter.
  id: totrans-137
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 11.27 – Ansible automation hooks ](img/B18015_11_27.jpg)'
  id: totrans-138
  prefs: []
  type: TYPE_IMG
- en: Figure 11.27 – Ansible automation hooks
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
- en: Review the information provided and click on the **Create** button if everything
    is correct.
  id: totrans-140
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 11.28 – Reviewing a cluster ](img/B18015_11_28.jpg)'
  id: totrans-141
  prefs: []
  type: TYPE_IMG
- en: Figure 11.28 – Reviewing a cluster
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
- en: You will be redirected to the overview page, where you can inspect the installation
    process. The deployment process usually takes between 30 and 60 minutes depending
    on the provider and region.
  id: totrans-143
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 11.29 – Cluster overview ](img/B18015_11_29.jpg)'
  id: totrans-144
  prefs: []
  type: TYPE_IMG
- en: Figure 11.29 – Cluster overview
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
- en: It is recommended that you add labels in your clusters according to some organizational
    structure to be used later with `env=dev` label in this cluster and use it in
    the next section when we deploy an application into a remote cluster using ACM.
    To do so, click on the pencil icon next to the **Labels** section.
  id: totrans-146
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 11.30 – Adding new labels ](img/B18015_11_30.jpg)'
  id: totrans-147
  prefs: []
  type: TYPE_IMG
- en: Figure 11.30 – Adding new labels
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
- en: Then, add the new label, `env=dev.`
  id: totrans-149
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 11.31 – Adding a label in a cluster ](img/B18015_11_31.jpg)'
  id: totrans-150
  prefs: []
  type: TYPE_IMG
- en: Figure 11.31 – Adding a label in a cluster
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
- en: As you can see, the OpenShift cluster deployment process is straightforward!
    In the next section, you will see how ACM can also help you to deploy an application
    into multiple clusters using its embedded deployment mechanism or also using it
    integrated with OpenShift GitOps (Argo CD).
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
- en: Managing applications using Red Hat ACM
  id: totrans-153
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'One of the greatest benefits of ACM is providing a single and simple way to
    view applications that are deployed among different clusters. You can also deploy
    an application into multiple clusters using two different approaches:'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
- en: Using the embedded Application Subscription deployment model
  id: totrans-155
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Using OpenShift GitOps (Argo CD) and **ApplicationSets**
  id: totrans-156
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: We will walk through the process of each approach in this section.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
- en: Application Subscription model
  id: totrans-158
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: This model is embedded in ACM and doesn’t depend on anything other than ACM
    itself. In the Application Subscription model, you will define an **Application**
    object that subscribes (**Subscription**) to one or more Kubernetes resources
    (**Channel**) that contain the manifests that describe how the application is
    deployed. The application will be deployed in the clusters defined in the placement
    rules.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
- en: 'The following is a diagram that explains how this model works:'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 11.32 – ACM Application Subscription model ](img/B18015_11_32.jpg)'
  id: totrans-161
  prefs: []
  type: TYPE_IMG
- en: Figure 11.32 – ACM Application Subscription model
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
- en: Let’s get back to the sample application we used in the previous chapter and
    create the ACM objects to check what the application deployment model looks like.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
- en: Channels (what to deploy)
  id: totrans-164
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Define the source repositories used to deploy an application. It can be a Git
    repository, Helm release, or object storage repository. We are going to use the
    following YAML manifest to point out to our Git repository:'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  id: totrans-166
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '**#[1]** highlights the URL to the Git repository that contains the application
    deployment manifests.'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
- en: After the `Channel` object, we need to create the `PlacementRule` object, which
    will be used with the application deployment.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
- en: Placement rules (where to deploy)
  id: totrans-169
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Placement rules define the target clusters where the application will be deployed.
    They are also used with policies. Remember that we added the `env=dev` label to
    the cluster we provisioned earlier. We are going to use it now to define our `PlacementRule`
    object:'
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  id: totrans-171
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '`env=dev` label.'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
- en: We are now ready to create the `Subscription` object.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
- en: Subscriptions
  id: totrans-174
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Subscriptions are used to subscribe clusters to a source repository and also
    define where the application will be deployed. They work like a glue between the
    deployment manifests (`Channel`) and the target clusters (`PlacementRule`). The
    following shows what our `Subscription` object looks like:'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  id: totrans-176
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'In the preceding code, we have highlighted some parts with numbers. Let’s take
    a look:'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
- en: '**#[1]**: Path for deployment manifests on Git.'
  id: totrans-178
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Application` object.'
  id: totrans-179
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**#[3]**: Channel that contains the Git repository, Helm, or object storage.'
  id: totrans-180
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`PlacementRule`, which describes where the application will be deployed.'
  id: totrans-181
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Finally, we can now create the ACM `Application` object.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
- en: Applications
  id: totrans-183
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Applications are objects used to describe a group of ACM resources that are
    needed to deploy an application. The following is the `Application` object of
    our sample:'
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  id: totrans-185
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '`app=cloud-api` label will be used.'
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
- en: Now that we understand the objects involved in application deployment, let’s
    create them on ACM.
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
- en: Deploying the application
  id: totrans-188
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Deploying the objects is as simple as running an `oc apply` command from the
    hub cluster. Run the following commands from the hub cluster to deploy the application:'
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  id: totrans-190
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'You can check the application status by running the following command:'
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  id: totrans-192
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'You can alternatively deploy the application using the ACM web console. To
    do so, perform the following process:'
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
- en: Access the **Applications** | **Create application** | **Subscription** menu
    option.
  id: totrans-194
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 11.33 – Deploying an application using ACM ](img/B18015_11_33.jpg)'
  id: totrans-195
  prefs: []
  type: TYPE_IMG
- en: Figure 11.33 – Deploying an application using ACM
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
- en: Fill out the form with the application data, including **Name** and **Namespace**,
    choose the **Git** repository, and then click on the **Create** button.
  id: totrans-197
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 11.34 – Filling out the application data ](img/B18015_11_34.jpg)'
  id: totrans-198
  prefs: []
  type: TYPE_IMG
- en: Figure 11.34 – Filling out the application data
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
- en: Input the placement configuration as follows and click on the Create button.
  id: totrans-200
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 11.35 – Placement configuration details ](img/B18015_11_35.jpg)'
  id: totrans-201
  prefs: []
  type: TYPE_IMG
- en: Figure 11.35 – Placement configuration details
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
- en: Click on the **Topology** tab to see an overview of the application deployed.
  id: totrans-203
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 11.36 – Application topology ](img/B18015_11_36.jpg)'
  id: totrans-204
  prefs: []
  type: TYPE_IMG
- en: Figure 11.36 – Application topology
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
- en: Now that you know how to deploy an application using the embedded ACM subscription,
    let’s see how we would do the same using OpenShift GitOps (Argo CD).
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
- en: OpenShift GitOps (Argo CD) and ApplicationSets
  id: totrans-207
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'As already mentioned, you can alternatively deploy applications using ACM integrated
    with OpenShift GitOps (Argo CD) through an object called an `argocd` command-line
    option to add managed clusters to Argo CD. You don’t need to do that when you
    use ACM, as ACM manages the external clusters and can add them to Argo CD for
    you. Instead, with ACM you will need to define the following objects in the hub
    cluster, in order to instruct ACM to configure Argo CD and add the managed clusters
    for you:'
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
- en: '`ManagedClusterSet`: Group of clusters that share some common configurations,
    such as user access control and multi-cluster networking.'
  id: totrans-209
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`ManagedClusterSetBinding`: Binds `ManagedClusterSet` to a namespace. In this
    particular case, we need to bind `ManagedClusterSet` to the `openshift-gitops`
    namespace.'
  id: totrans-210
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Placement`: Resource that defines predicates to select `ManagedCluster` from
    `ManagedClusterSets` to bind to `GitOpsCluster`.'
  id: totrans-211
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`GitOpsCluster`: Register to OpenShift GitOps a group of managed clusters.'
  id: totrans-212
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'We have sample YAML for all the previously listed objects in the `chapter11/argocd`
    folder of our GitHub repository. Go ahead and use the following commands to apply
    those objects in your hub cluster:'
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  id: totrans-214
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Now, access your ACM and go to **Clusters** | **Cluster sets** (tab) | **all-clusters**
    | **Managed clusters** (tab), and then click on the **Manage resource assignments**
    button. On this page, select all your clusters and click on the **Review** button
    and then **Save**.
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 11.37 – Adding clusters to a cluster set ](img/B18015_11_37.jpg)'
  id: totrans-216
  prefs: []
  type: TYPE_IMG
- en: Figure 11.37 – Adding clusters to a cluster set
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
- en: 'Finally, we can go ahead and create an ApplicationSet that uses a `Placement`
    object to deploy the application in all clusters that have the `env=dev` label:'
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  id: totrans-219
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: After a couple of minutes, you should see the application deployed from the
    application **Overview**/**Topology** view.
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 11.38 – ApplicationSet topology ](img/B18015_11_38.jpg)'
  id: totrans-221
  prefs: []
  type: TYPE_IMG
- en: Figure 11.38 – ApplicationSet topology
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
- en: The **Topology** view allows you to see your application deployed into multiple
    clusters from a single pane. This feature is really helpful for applications that
    are deployed over several clusters, as you can easily see how the application
    is behaving in all the clusters from a single and simple view.
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
- en: This concludes our overview of the application life cycle management feature
    of Red Hat ACM. In this section, you have seen how ACM can help you deploy applications
    into multiple managed clusters by using either the Application Subscription model
    or OpenShift GitOps (Argo CD). Next, you are going to see how to use policies
    on ACM to keep your clusters compliant according to your organization’s business
    and security needs.
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
- en: Governance using Red Hat ACM
  id: totrans-225
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: We have been discussing the challenges that large enterprises face in keeping
    different environments consistent a lot in this book. The ACM governance feature
    can play a crucial role in your strategy to maintain secure and consistent environments,
    no matter where they are running. The ACM governance feature allows you to define
    policies for a set of clusters and inform or enforce when clusters become non-compliant.
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
- en: 'To define policies in ACM, you need to create three objects:'
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
- en: '**Policy**: Define the policy and remediation action that will be performed
    (inform or enforce).'
  id: totrans-228
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**PlacementBinding**: Bind a policy into a PlacementRule.'
  id: totrans-229
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**PlacementRule**: Rules that define which clusters the policy will be applied
    to.'
  id: totrans-230
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'You can see an example of a policy to check etcd encryption in all managed
    clusters on our GitHub. The following diagram shows what the interaction between
    the ACM policy objects looks like:'
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 11.39 – ACM policy model ](img/B18015_11_39.jpg)'
  id: totrans-232
  prefs: []
  type: TYPE_IMG
- en: Figure 11.39 – ACM policy model
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
- en: 'Run the following command to create the policy:'
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  id: totrans-235
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Now, access the **Governance** feature on the ACM web console to check the policy
    we just put in place.
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 11.40 – ACM governance console ](img/B18015_11_40.jpg)'
  id: totrans-237
  prefs: []
  type: TYPE_IMG
- en: Figure 11.40 – ACM governance console
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
- en: Click on **Policies** and access **policy-etcdencryption** to see the details.
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 11.41 – ACM governance – violation details ](img/B18015_11_41.jpg)'
  id: totrans-240
  prefs: []
  type: TYPE_IMG
- en: Figure 11.41 – ACM governance – violation details
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
- en: In the *Further reading* section of this chapter, you will find a link to a
    repository that contains several reusable policies that you can use as is or as
    samples to create your own policies.
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
- en: As you have seen, the ACM governance feature is simple to understand and use.
    Now think about the policies that you would like to have monitored or enforced
    in your clusters and start deploying your own policies!
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
- en: Multi-cluster observability with Red Hat ACM
  id: totrans-244
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '**Multicluster observability** is an ACM feature that is intended to be a central
    hub for metrics, alerting, and monitoring systems for all clusters, whether hub
    clusters or managed clusters.'
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
- en: As this tool handles a large amount of data, it is recommended to provide fast
    disks as its storage backend. Red Hat has tested and fully supports the solution
    if adopted in conjunction with Red Hat OpenShift Data Foundation.
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
- en: Although Red Hat recommends doing so, the prerequisite is a storage solution
    that provides **object**/**S3-type storage**, such as those commonly found in
    most cloud providers (such as Amazon S3).
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
- en: Prerequisites
  id: totrans-248
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Since observability is a feature of an ACM operator, there aren’t many prerequisites.
    The following are the requirements:'
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
- en: Enable the observability feature on a connected Red Hat OpenShift cluster.
  id: totrans-250
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Configure an object store from a storage provider. Some of the supported object
    storage types are as follows:'
  id: totrans-251
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Red Hat Container Storage
  id: totrans-252
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: AWS S3
  id: totrans-253
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Red Hat Ceph (S3-compatible API)
  id: totrans-254
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Google Cloud Storage
  id: totrans-255
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Azure Storage
  id: totrans-256
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Red Hat on IBM Cloud
  id: totrans-257
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Important Note
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
- en: It is important to configure encryption when you have sensitive data persisted.
    The Thanos documentation has a definition of supported object stores. Check the
    link in the *Further reading* section at the end of this chapter.
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
- en: Enabling the observability service
  id: totrans-260
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Since observability runs on top of ACM, its creation depends on a **Custom Resource**
    (**CR**) that will trigger the creation of the **Multicluster Observability**
    instance.
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
- en: 'The following diagram demonstrates a high-level architecture of the objects
    involved in the observability solution. It serves as a reference for which objects
    are created when enabling the observability service:'
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 11.42 – Creating MultiClusterHub ](img/B18015_11_42.jpg)'
  id: totrans-263
  prefs: []
  type: TYPE_IMG
- en: Figure 11.42 – Creating MultiClusterHub
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
- en: 'Follow these instructions to enable multicluster observability:'
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
- en: 'For this example, we used an OpenShift hub cluster deployed on top of Microsoft
    Azure, so you must to set some variables in a terminal that will help you configure
    Azure dynamic storage to be used as the storage solution:'
  id: totrans-266
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE9]'
  id: totrans-267
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Let’s take a look at what the highlighted numbers mean:'
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
- en: '**#[1]**: Hub cluster zone for Microsoft Azure'
  id: totrans-269
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**#[2]**: Resource group name for Microsoft Azure'
  id: totrans-270
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**#[3]**: Cluster name for the hub cluster'
  id: totrans-271
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**#[4]**: Storage account name'
  id: totrans-272
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**#[5]**: Command to create the storage on Microsoft Azure'
  id: totrans-273
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**#[6]**: Attribute storage role for OpenShift to handle storage operations
    for observability'
  id: totrans-274
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**#[7]**: This command creates a container inside the storage blob account,
    that will be used to store the data for ACM observability'
  id: totrans-275
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**#[8]**: Azure CLI instruction to get the connection string for storage'
  id: totrans-276
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Create a namespace in the hub cluster for observability. We will create the
    namespace in the terminal; otherwise, you can also create it in the OpenShift
    web console UI:'
  id: totrans-277
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE10]'
  id: totrans-278
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Now, it is time to create a secret with the connection string we got in the
    previous step (instruction **#[8]**). The complete YAML files are available in
    our GitHub repository for your reference and use:'
  id: totrans-279
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE11]'
  id: totrans-280
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Let’s take a look at what the highlighted numbers mean:'
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
- en: '**#[1]**: Environment variable for current Docker pull secret.'
  id: totrans-282
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`dockerconfigjson` file into the secret for `multiclusterhub`.'
  id: totrans-283
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**#[3]**: Data from previous commands'
  id: totrans-284
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Configuration file available at [https://github.com/PacktPublishing/OpenShift-Multi-Cluster-Management-Handbook/blob/main/chapter11/acm-observability/thanos-object-storage.yaml](https://github.com/PacktPublishing/OpenShift-Multi-Cluster-Management-Handbook/blob/main/chapter11/acm-observability/thanos-object-storage.yaml).
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
- en: Now you have the required storage to be used with observability, so it’s time
    to create a `MulticlusterObservability` object. Go back to the **Advanced Cluster
    Management for Kubernetes** operator, which we installed at the beginning of this
    chapter, access the **MultiClusterObservability** tab, and click on the **Create
    MultiClusterObservability** button.
  id: totrans-286
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 11.43 – MultiClusterObservability creation ](img/B18015_11_43.jpg)'
  id: totrans-287
  prefs: []
  type: TYPE_IMG
- en: Figure 11.43 – MultiClusterObservability creation
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
- en: Keep the CR as default and then click on **Create**.
  id: totrans-289
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 11.44 – MultiClusterObservability ](img/B18015_11_44.jpg)'
  id: totrans-290
  prefs: []
  type: TYPE_IMG
- en: Figure 11.44 – MultiClusterObservability
  id: totrans-291
  prefs: []
  type: TYPE_NORMAL
- en: Wait until the observability instance status is **Ready**.
  id: totrans-292
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 11.45 – Configuring an instance for MultiClusterObservability ](img/B18015_11_45.jpg)'
  id: totrans-293
  prefs: []
  type: TYPE_IMG
- en: Figure 11.45 – Configuring an instance for MultiClusterObservability
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
- en: Now you can see, upon navigating to **Main Menu** | **Overview**, a route for
    Grafana’s observability dashboard.
  id: totrans-295
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 11.46 – Configuring an instance for MultiClusterObservability ](img/B18015_11_46.jpg)'
  id: totrans-296
  prefs: []
  type: TYPE_IMG
- en: Figure 11.46 – Configuring an instance for MultiClusterObservability
  id: totrans-297
  prefs: []
  type: TYPE_NORMAL
- en: '**#[1]**: Notice that Observability option is now available in Grafana link.'
  id: totrans-298
  prefs: []
  type: TYPE_NORMAL
- en: Click on **Grafana** to see some great dashboards that aggregate metrics that
    come from multiple clusters.
  id: totrans-299
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 11.47 – MultiClusterObservability dashboard view sample ](img/B18015_11_47.jpg)'
  id: totrans-300
  prefs: []
  type: TYPE_IMG
- en: Figure 11.47 – MultiClusterObservability dashboard view sample
  id: totrans-301
  prefs: []
  type: TYPE_NORMAL
- en: Now, you can count on this amazing ACM feature to help you and your organization
    monitor all your Kubernetes managed clusters from a central pane, independent
    of the infrastructure or cloud provider they are running over. In the next subsection,
    we will show you an option that gives you even more control over your cluster.
  id: totrans-302
  prefs: []
  type: TYPE_NORMAL
- en: Configuring AlertManager to send alerts
  id: totrans-303
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: As we have seen so far, observability can be a great ally for monitoring all
    your clusters from a central view, but now we will go even further and show you
    the *icing on the cake*, that will be one thing more to help you to manage your
    clusters.
  id: totrans-304
  prefs: []
  type: TYPE_NORMAL
- en: As shown in *Figure 11.42*, **AlertManager** is a resource that is part of the
    observability architecture. We will show a sample now that you can use to enable
    this feature and get alerts from all managed clusters.
  id: totrans-305
  prefs: []
  type: TYPE_NORMAL
- en: AlertManager is a tool that can send alerts to a set of other systems, such
    as email, PagerDuty, Opsgenie, WeChat, Telegram, Slack, and also your custom webhooks.
    For this example, we will use Slack, a short-messaging tool, as a receiver for
    all of our alerts.
  id: totrans-306
  prefs: []
  type: TYPE_NORMAL
- en: Prerequisites
  id: totrans-307
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'First, you will need the Slack app to set up alerts, and then point to [https://api.slack.com/messaging/webhooks](https://api.slack.com/messaging/webhooks)
    and follow the instructions to create and configure a channel. When you finish
    configuring the Slack app, you will get a webhook endpoint similar to the following:
    `https://hooks.slack.com/services/T03ECLDORAS04/B03DVP1Q91D/R4Oabcioek`. Save
    the webhook address in a safe place as it will be used in the next steps.'
  id: totrans-308
  prefs: []
  type: TYPE_NORMAL
- en: Configuring AlertManager
  id: totrans-309
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'To configure AlertManager, you will need to create a new file named `alertmanager.yaml`.
    This file will have the webhook that you saved previously. The complete YAML files
    are available in our GitHub repository for your reference and use (github repository
    at [https://github.com/PacktPublishing/OpenShift-Multi-Cluster-Management-Handbook/blob/main/chapter11/acm-observability/alertmanager.yaml](https://github.com/PacktPublishing/OpenShift-Multi-Cluster-Management-Handbook/blob/main/chapter11/acm-observability/alertmanager.yaml)):'
  id: totrans-310
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  id: totrans-311
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'In the preceding code, we have highlighted some parts with numbers. Let’s take
    a look:'
  id: totrans-312
  prefs: []
  type: TYPE_NORMAL
- en: '**#[1]**: Webhook Slack API URL'
  id: totrans-313
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**#[2]**: Name of the receiver for alerts'
  id: totrans-314
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**#[3]**: Filter critical or warning alerts'
  id: totrans-315
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**#[4]**: Slack channel inside the workspace'
  id: totrans-316
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The next step is to apply the new `alertmanager.yaml` file to the ACM observability
    namespace:'
  id: totrans-317
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  id: totrans-318
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'The `alertmanager.yaml` file must be in the same execution directory. Wait
    until the new AlertManager pods are created and you will receive new `[Firing]`
    or `[Resolved]` alerts on the configured channel. See an example in the following
    screenshot:'
  id: totrans-319
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 11.48 – AlertManager multicluster alerts](img/Image91965.jpg)'
  id: totrans-320
  prefs: []
  type: TYPE_IMG
- en: Figure 11.48 – AlertManager multicluster alerts
  id: totrans-321
  prefs: []
  type: TYPE_NORMAL
- en: Here we go; we have our AlertManager set and sending alerts to a Slack channel!
    Therefore, in this section, you have seen the observability feature, from the
    installation to configuration and use. This should help you in your multi-cluster
    journey to monitor all your clusters, no matter which provider they are running
    in.
  id: totrans-322
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  id: totrans-323
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, you have been introduced to Red Hat ACM and have seen an overview
    of its features and how it can help you manage several clusters. Now you understand
    that Red Hat ACM provides features to manage multiple clusters, keep them compliant
    with the policies you define for them, deploy workloads into many of them at once,
    and also monitor all of them from a central pane.
  id: totrans-324
  prefs: []
  type: TYPE_NORMAL
- en: We also walked through the ACM installation process, provisioned a new cluster
    on AWS using ACM, saw how to deploy an application by using either the embedded
    ACM Application Subscription model or integrated with Argo CD, had a brief overview
    of the ACM governance feature, and, finally, enabled the observability feature
    to monitor multiple clusters and aggregate metrics on ACM.
  id: totrans-325
  prefs: []
  type: TYPE_NORMAL
- en: In today’s world, handling multiple clusters over multiple providers, either
    on-premises or in the cloud, is a reality in most companies; therefore, a multi-cluster
    management tool is a must-have. Red Hat ACM can provide you with the features
    you need to manage all clusters from a centralized place. We encourage you to
    explore and start using ACM now to reap all the benefits of this great tool.
  id: totrans-326
  prefs: []
  type: TYPE_NORMAL
- en: Continue to the next chapter to learn how Red Hat Advanced Cluster Security
    can help you to keep your Kubernetes and OpenShift clusters secure.
  id: totrans-327
  prefs: []
  type: TYPE_NORMAL
- en: Further reading
  id: totrans-328
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Looking for more information? Check out the following references to get more
    information about Red Hat ACM:'
  id: totrans-329
  prefs: []
  type: TYPE_NORMAL
- en: '*Red Hat Advanced Cluster Management documentation*: [https://access.redhat.com/documentation/en-us/red_hat_advanced_cluster_management_for_kubernetes/2.5](https://access.redhat.com/documentation/en-us/red_hat_advanced_cluster_management_for_kubernetes/2.5)'
  id: totrans-330
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Red Hat ACM supportability matrix*: [https://access.redhat.com/articles/6663461](https://access.redhat.com/articles/6663461)'
  id: totrans-331
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Red Hat Advanced Cluster Management observability prerequisites:* [https://access.redhat.com/documentation/en-us/red_hat_advanced_cluster_management_for_kubernetes/2.3/html-single/observability/index#prerequisites-observability](https://access.redhat.com/documentation/en-us/red_hat_advanced_cluster_management_for_kubernetes/2.3/html-single/observability/index#prerequisites-observability)'
  id: totrans-332
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Supported object stores for Thanos*: [https://thanos.io/tip/thanos/storage.md/#supported-clients](https://thanos.io/tip/thanos/storage.md/#supported-clients)'
  id: totrans-333
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Red Hat ACM policy collection:* [https://github.com/open-cluster-management/policy-collection](https://github.com/open-cluster-management/policy-collection)'
  id: totrans-334
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Integrating Red Hat ACM with Ansible for cluster deployment and upgrade:*
    [https://access.redhat.com/documentation/en-us/red_hat_advanced_cluster_management_for_kubernetes/2.5/html/clusters/managing-your-clusters#ansible-config-cluster](https://access.redhat.com/documentation/en-us/red_hat_advanced_cluster_management_for_kubernetes/2.5/html/clusters/managing-your-clusters#ansible-config-cluster)'
  id: totrans-335
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Integrating Red Hat ACM with Ansible for application management:* [https://access.redhat.com/documentation/en-us/red_hat_advanced_cluster_management_for_kubernetes/2.5/html/applications/managing-applications#setting-up-ansible](https://access.redhat.com/documentation/en-us/red_hat_advanced_cluster_management_for_kubernetes/2.5/html/applications/managing-applications#setting-up-ansible)'
  id: totrans-336
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Creating policy violation automation using Ansible:* [https://access.redhat.com/documentation/en-us/red_hat_advanced_cluster_management_for_kubernetes/2.5/html/governance/governance#configuring-governance-ansible](https://access.redhat.com/documentation/en-us/red_hat_advanced_cluster_management_for_kubernetes/2.5/html/governance/governance#configuring-governance-ansible)'
  id: totrans-337
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Part 4 – A Taste of Multi-Cluster Implementation and Security Compliance
  id: totrans-338
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this part, you will take a dive into some great tools used to manage multiple
    clusters and to enable an organization to scale its implementation into the hybrid
    cloud world.
  id: totrans-339
  prefs: []
  type: TYPE_NORMAL
- en: 'This part of the book comprises the following chapters:'
  id: totrans-340
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 12*](B18015_12.xhtml#_idTextAnchor251), *OpenShift Multi-Cluster
    Security*'
  id: totrans-341
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[*Chapter 13*](B18015_13.xhtml#_idTextAnchor275), *OpenShift Plus – a Multi-Cluster
    Enterprise-Ready Solution*'
  id: totrans-342
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[*Chapter 14*](B18015_14.xhtml#_idTextAnchor290), *Building a Cloud-Native
    Use Case on a Hybrid Cloud Environment*'
  id: totrans-343
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
