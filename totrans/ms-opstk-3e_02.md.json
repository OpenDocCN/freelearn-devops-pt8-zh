["```\n    # vagrant init\n    ```", "```\n    Vagrant.configure(\"2\") do |config|\n      config.vm.box = \"generic/ubuntu2204\"\n    end\n    ```", "```\n    config.vm.provider :virtualbox do |vb|\n       vb.memory = 8096\n       vb.cpus  = 4\n    end\n    ```", "```\n    Vagrant.configure(\"2\") do |config|\n     ….\n       config.disksize.size = \"55GB\"\n    ```", "```\n    Vagrant.configure(\"2\") do |config|\n      ….\n        config.vm.synced_folder(\n           \"openstack_deploy/\", \"/openstack_deploy/\"\n        )\n    ```", "```\n    Vagrant.configure(\"2\") do |config|\n    ...\n       config.vm.network :forwarded_port, guest: 80, host: 80\n    ```", "```\n    # vagrant up --provider virtualbox\n    ```", "```\n    # vagrant ssh\n    # sudo -i\n    ```", "```\n$ apt-get install git\n```", "```\n$ git clone https://git@ci.os/git/openstack_deploy/openstack_deploy\n```", "```\n$ git checkout -b local_dev_branch\n```", "```\n# apt-get update\n# apt-get install python3-dev libffi-dev gcc libssl-dev\n# apt install python3-pip\n# apt install python3-virtualenv\n# python3 -m venv local\n# source local/bin/activate\n(local)# pip install -U pip\n```", "```\n# pip install  'ansible-core>=2.16,<2.17.99'\n```", "```\n#  pip install git+https://opendev.org/openstack/kolla-ansible@master\n```", "```\n# kolla-ansible install-deps\n```", "```\n# mkdir -p /etc/kolla\n# chown $USER:$USER /etc/kolla\n# cp -r /local/share/kolla-ansible/etc_examples/kolla/* /etc/kolla\n```", "```\n    kolla_base_distro: \"ubuntu\"\n    ```", "```\n    enable_haproxy : \"no\"\n    ```", "```\n    network_interface: \"eth0\"\n    ```", "```\n    neutron_external_interface: \"eth1\"\n    ```", "```\n    kolla_internal_vip_address: 172.28.128.47\n    ```", "```\n    # kolla-genpwd  -p /etc/kolla/passwords.yml\n    ```", "```\n# cp -r  /local/share/kolla-ansible/ansible/inventory/*  /etc/kolla/\n```", "```\n[control]\nlocalhost       ansible_connection=local\n[network]\nlocalhost       ansible_connection=local\n[compute]\nlocalhost       ansible_connection=local\n[storage]\nlocalhost       ansible_connection=local\n….\n```", "```\n# kolla-ansible -i /etc/kolla/all-in-one bootstrap-servers\n```", "```\n# kolla-ansible -i /etc/kolla/all-in-one prechecks\n```", "```\n# kolla-ansible -i  /etc/kolla/all-in-one deploy\n```", "```\n# docker ps\n```", "```\n # pip install python openstackclient\n```", "```\n# kolla-ansible post-deploy\n```", "```\n# export OS_CLIENT_CONFIG_FILE=/etc/kolla/cloud.yaml\n```", "```\n# openstack hypervisor list\n```", "```\n# docker logs keystone\n```", "```\n# docker inspect keystone\n```", "```\n# docker exec --it nova /bin/bash\n```", "```\n$ sudo apt-get update\n$ sudo apt install openjdk-11-jdk\n```", "```\n$ curl -fsSL https://pkg.jenkins.io/debian-stable/jenkins.io-2023.key | sudo tee /usr/share/keyrings/jenkins-keyring.asc > /dev/null\n```", "```\n$ echo deb [signed-by=/usr/share/keyrings/jenkins-keyring.asc]\nhttps://pkg.jenkins.io/debian-stable binary/ | sudo tee \n/etc/apt/sources.list.d/jenkins.list > /dev/null\n```", "```\n$ sudo apt update\n$ sudo apt install jenkins\n```", "```\n$ sudo systemctl status jenkins\n```", "```\n$ sudo systemctl start jenkins\n```", "```\npipeline {\n  agent any\n  stages {\n    stage('Setup Local Environment') {\n      steps {\n        echo '--RUNNING LOCAL ENVIORNMENT --'\n        sh ''' #!/bin/bash \n        sudo apt-get update\n        sudo apt-get install \\ \n        python3-dev libffi-dev gcc libssl-dev docker.io -y\n        sudo apt install python3-pip -y\n        sudo apt install python3.10-venv -y\n        sudo python3 -m venv local\n        source local/bin/activate\n        ''' \n      }\n    }\n```", "```\n    stage('INSTALLING PIP') {\n      steps {\n        echo '--INSTALLING PIP --'\n        sh ''' #!/bin/bash \n        pip install -U pip\n        ''' \n      }\n    }\n    stage('INSTALLING Ansible') {\n      steps {\n        echo '--INSTALLING Ansible --'\n        sh ''' #!/bin/bash \n        pip install 'ansible-core>=2.16,<2.17.99'\n        ''' \n      }\n    }\n    stage('INSTALLING Kolla Ansible') {\n      steps {\n        echo '--INSTALLING Kolla Ansible --'\n        sh '''#!/bin/bash \n        pip install \\\n        git+https://opendev.org/openstack/kolla-ansible@master\n        kolla-ansible install-deps\n        ''' \n      }\n    }\n```", "```\n    stage('Preparing Infrastructure') {\n      steps {\n        echo '--Preparing Infrastructure Files Structure --'\n        sh ''' #!/bin/bash \n        sudo mkdir -p /etc/kolla\n        sudo chown $USER:$USER /etc/kolla\n        cp -r /usr/local/share/kolla-ansible/etc_examples/kolla/* \\\n        /etc/kolla/\n        cp -r /usr/local/share/kolla-ansible/ansible/inventory/* \\\n        /etc/kolla/\n        sed -i 's/^#kolla_base_distro:.ls*/kolla_base_distro: \\\n        \"ubuntu\"/g' /etc/kolla/globals.yml\n        sed -i 's/^#enable_haproxy:.*/enable_haproxy: \\\n        \"no\"/g' /etc/ kolla/globals.yml\n        sed -i 's/^#network_interface:.*/network_interface: \\\n        \"eth0\"/g' /etc/kolla/globals.yml\n        sed -i 's/^#neutron_external_interface:.*/neutron_external\\\n        _interface: \"eth1\"/g' /etc/kolla/globals.yml\n        sed -i 's/^#kolla_internal_vip_address:.*/kolla_internal\\\n        _vip_address: \"10.0.2.15\"/g' /etc/kolla/globals.yml\n        '''\n      }\n    }\n```", "```\n    stage('Secrets Setup') {\n      steps {\n        echo '--Generating OpenStack Services Secrets --'\n        sh '''#!/bin/bash \n            kolla-genpwd -p /etc/kolla/passwords.yml\n           ''' \n      }\n    }\n```", "```\n    stage('Boostrap Servers') {\n      steps {\n        echo '--Running Ansible Kolla Boostrap Server Script --'\n        sh '''#!/bin/bash \n             kolla-ansible -i /etc/kolla/all-in-one bootstrap-servers\n           ''' \n      }\n    }\n```", "```\n    stage('Infrastructure Pre-Checks') {\n      steps {\n        echo '--Running Ansible Kolla Prechecks Script --'\n        sh '''#!/bin/bash \n            kolla-ansible -i /etc/kolla/all-in-one prechecks\n           ''' \n      }\n    }\n```", "```\n    stage('Deploy Infrastructure') {\n      steps {\n        echo '--Running Ansible Kolla Prechecks Script --'\n        sh '''#!/bin/bash \n        kolla-ansible -i /etc/kolla/all-in-one deploy\n        ''' \n      }\n    }\n  }\n}\n```", "```\n$ git branch test\n```", "```\n$ git add Jenkinsfile\n$ git commit -m 'Initial Test Environment Pipeline'\n$ git push --set-upstream origin test\n```", "```\n$ sudo python3 -m pip install kolla\n$  docker run -d \\\n   --network host \\\n   --name master_registry \\\n   --restart=always \\\n   -e REGISTRY_HTTP_ADDR=0.0.0.0:4000 \\\n   -v registry:/var/lib/registry \\\n   registry:2\n```", "```\n…\ndocker_registry: 10.0.2.15:4000\ndocker_registry_insecure: yes\n...\n```", "```\n$ git commit -m 'Docker registry global setting'\n$ git push\n```", "```\n$ curl https://engine.anchore.io/docs/quickstart/docker-compose.yaml > docker-compose.yaml\n```", "```\n$ sudo apt install docker-compose\n$ docker-compose up –d\n```", "```\n$ git clone https://github.com/anchore/anchore-cli\n$ cd anchore-cli\n$ pip install --user --upgrade .\n```", "```\n pipeline {\n    agent any\n    stages {\n        stage('Build Images') {\n            steps {\n                echo '-- KOLLA BUILD OPENSTACK SERVICES IMAGES --'\n                sh '''#!/bin/bash\n                kolla-build -b ubuntu\n                '''\n            }\n        }\n        stage('Anchore Security Scan') {\n            steps {\n                echo '--RUNNING LOCAL ENVIRONMENT --'\n                sh '''#!/bin/bash\n                anchore-cli registry add 10.0.2.15:4000\n                anchore-cli image add master_registry:latest\n                '''\n            }\n        }\n        stage('Push Images') {\n            steps {\n                echo '--RUNNING LOCAL ENVIRONMENT --'\n                sh '''#!/bin/bash\n                kolla-build --registry 10.0.2.15:4000 --push\n                '''\n            }\n        }\n    }\n}\n```"]