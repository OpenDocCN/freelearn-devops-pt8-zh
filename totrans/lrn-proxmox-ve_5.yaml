- en: Chapter 5. Working with Virtual Disks
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[Chapter 4](ch04.html "Chapter 4. Creating Virtual Machines"), *Creating a
    Virtual Machine*, introduced the creation of virtual machines using the Proxmox
    VE management interface as well as the command line. After an outline of common
    steps in the procedure, we quickly glossed over creating two virtual machines
    with two network operating systems: **Windows Server 2012r2** and **Fedora 23
    Server**.'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
- en: Our most fundamental goal with this chapter is to empower ourselves to make
    more informed and fully-deliberated decisions affecting the efficiency and reliability
    of a Proxmox VE virtual machine guest based on its specific use case.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
- en: 'We will accomplish this goal by achieving the following concrete objectives:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
- en: Choose deliberately from among virtual disk image formats available for use
    through the Proxmox VE interface
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Choose an appropriate bus/interface by which a virtual disk will connect to
    a guest
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Choose an appropriate cache setting for our use cases
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'In this chapter, then, we elaborate on one critical, and potentially the most
    valuable, virtual machine component: the **virtual disk** that provides **secondary
    storage**.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
- en: 'We will then revisit the virtual machine creation process to elaborate on specific
    options glossed over in [Chapter 4](ch04.html "Chapter 4. Creating Virtual Machines"), *Creating
    a Virtual Machine*:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
- en: Choosing a virtual disk format
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Choosing an interface
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Selecting a cache option
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Understanding virtual disks
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This section focuses first on the terms we should be familiar with to build
    on our understanding of virtual disks.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
- en: 'After we''ve agreed on terms, we''ll explore virtual disk configuration options
    that we saw in [Chapter 4](ch04.html "Chapter 4. Creating Virtual Machines"), *Creating
    a Virtual Machine*, but did not explore: virtual disk image formats,bus/interface
    options, and disk **cache** options.'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
- en: Coming to terms
  id: totrans-15
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Secondary storage is as integral to virtual machines as it is to physical computers.
    While **hard disk drives** (**HDDs**) are hardly the most expensive hardware in
    PCs, we could compellingly argue that they are the most valuable, so far as we
    rely on them to store and provide access to our data, often the unique fruit of
    our hard labor.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
- en: Throughout this chapter, the term Virtual Disk will refer to a file or set of
    files that, to a virtual machine, represent a hard disk drive and behave just
    as a physical hard disk drive or **solid-state drive** (**SSD**) does for a physical
    computer.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
- en: 'The similarities between a physical hard disk drive and a virtual disk are,
    as you might expect, as follows:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
- en: Identical file system options
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The same strong understanding of partitions and partition tables is required
    of administrators with fluency in using the same partition editing tools we'd
    use on physical machines
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Identical formatting procedures and options
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The same support for LVM
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: However, the striking differences must be made explicit. A physical hard disk
    drive unit includes more than just the media that stores data.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，必须明确指出显著的差异。物理硬盘驱动器单元不仅仅包括存储数据的介质。
- en: The media component of HDDs is constituted by a stack of double-sided, physical
    platters rotating around a common spindle within a vacuum-sealed structure.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: HDD的介质部分由一叠双面物理盘片组成，这些盘片围绕一个公共主轴在真空密封结构内旋转。
- en: Also within the vacuum seal is the physical, mechanical apparatus that reads
    and writes data on the platters. It includes an armature that moves read/write
    heads to specific locations on the platters.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 真空密封内还包含读取和写入盘片数据的物理机械装置。它包括一个机械臂，用于将读/写头移动到盘片的特定位置。
- en: 'A virtual disk has a storage capacity and can be written to or read from like
    a hard disk; however, the media is simply a file or series of files on the host
    that uses one of three disk image formats compatible with Proxmox VE: **QCOW2**, **RAW**,
    and **VMDK**.'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 虚拟磁盘具有存储容量，并且可以像硬盘一样进行读写；然而，介质仅仅是主机上的一个文件或一系列文件，这些文件使用与Proxmox VE兼容的三种磁盘映像格式之一：**QCOW2**、**RAW**和**VMDK**。
- en: Tip
  id: totrans-27
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: 'A fourth option is available when using iSCSI shared storage: RAW as LVM partitions.
    In this section, we''ll address only RAW, qcow2, and VMDK images.'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 当使用iSCSI共享存储时，提供了第四种选择：作为LVM分区的RAW格式。在本节中，我们仅讨论RAW、qcow2和VMDK映像。
- en: As you'll learn later, each of the three virtual disk image formats explicitly
    supported by the Proxmox VE management interface provides slightly different advantages
    and disadvantages. For us, this provides extended flexibility.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 如你稍后将学到的那样，Proxmox VE管理界面明确支持的三种虚拟磁盘映像格式各自提供了略有不同的优缺点。对我们而言，这提供了更大的灵活性。
- en: For example, in addition to the backup methods an administrator would use to
    ensure the safety and integrity of the host and the guest data, it can be a simple
    matter to make backups or snapshots of the state of one or more virtual machines.
    Restoring an image to a previous state is simple too.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，除了管理员用于确保主机和客户数据安全完整性的备份方法外，备份或快照一个或多个虚拟机的状态也可以是一个简单的操作。将映像恢复到先前的状态也同样简单。
- en: Another difference between the virtual disk and a hard disk drive is that the
    bus, the interface between the motherboard and the disk, is physically incorporated
    into a hard disk unit.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 虚拟磁盘和硬盘驱动器之间的另一个区别在于总线，即主板与磁盘之间的接口，它是物理地集成在硬盘单元中的。
- en: This is handled quite differently on a Proxmox VE virtual machine, on which
    you choose the type of bus that's used to communicate with the virtual disk based
    on your preferences for the specific virtual machine.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 在Proxmox VE虚拟机上，这一过程处理得非常不同，你可以根据对特定虚拟机的偏好选择用于与虚拟磁盘通信的总线类型。
- en: The bus, then, isn't at all part of the virtual disk image; instead, it's part
    of the virtual machine configuration. On Proxmox VE, there are bus choices available
    through a simple drop-down box.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，总线根本不属于虚拟磁盘映像的一部分；它是虚拟机配置的一部分。在Proxmox VE中，可以通过一个简单的下拉框选择总线类型。
- en: Another subcomponent of the physical hard disk drive that is not represented
    in a virtual disk is the cache subsystem (or, more accurately, *disk buffer*).
    The cache, designed to speed up the retrieval of data, constitutes, like the bus
    interface, a part of a virtual machine's configuration, rather than part of the
    virtual disk.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 物理硬盘驱动器的另一个子组件——缓存子系统（或更准确地说，*磁盘缓冲区*）在虚拟磁盘中没有表现出来。缓存旨在加速数据的检索，它与总线接口一样，构成了虚拟机配置的一部分，而不是虚拟磁盘的一部分。
- en: '![Coming to terms](img/image_05_001.png)'
  id: totrans-35
  prefs: []
  type: TYPE_IMG
  zh: '![来理解这些术语](img/image_05_001.png)'
- en: Visualizing a hard disk with a SATA interface and disk buffer on the control
    board
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 可视化带有SATA接口和磁盘缓冲区的硬盘控制板
- en: In this section, we determined that *virtual disk* will be used to describe
    the file or group of files that serve as virtual machines' secondary storage devices.
    In addition, we articulated similarities between physical drives and virtual drives.
    We then contrasted the physical components of a hard disk drive and how virtualization
    with Proxmox VE abstracts these components.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一节中，我们确定了*虚拟磁盘*将用于描述作为虚拟机二级存储设备的文件或文件组。此外，我们阐明了物理硬盘和虚拟硬盘之间的相似性。然后，我们对比了硬盘驱动器的物理组件以及Proxmox
    VE如何通过虚拟化抽象这些组件。
- en: Proxmox VE's configuration process completely divorces the storage media from
    both the bus and the disk cache or disk buffer, which again frees us to make more
    deliberate choices about which combination of virtual disk image format, bus,
    and cache to choose.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: Proxmox VE 的配置过程完全将存储介质与总线和磁盘缓存或磁盘缓冲区分离，这让我们可以更慎重地选择虚拟磁盘镜像格式、总线和缓存的组合。
- en: The remaining subsections articulate the features of each image format, bus
    option, and disk cache option available to us through Proxmox VE.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 剩下的子部分阐明了我们通过 Proxmox VE 可以选择的每种镜像格式、总线选项和磁盘缓存选项的特点。
- en: Understanding virtual disk configuration
  id: totrans-40
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 理解虚拟磁盘配置
- en: Recall from [Chapter 4](ch04.html "Chapter 4. Creating Virtual Machines"), *Creating
    a Virtual Machine* that we created new virtual machines from the Proxmox VE interface
    by clicking on the **Create VM** button toward the top of the page and running
    through the new VM's configuration options.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 回顾一下[第4章](ch04.html "第4章. 创建虚拟机")，*创建虚拟机*中提到，我们通过点击页面顶部的 **创建虚拟机** 按钮，并逐步完成新虚拟机的配置选项，从
    Proxmox VE 界面创建了新虚拟机。
- en: Regarding the fourth tab in the configuration dialog, **Hard Disk**, [Chapter
    4](ch04.html "Chapter 4. Creating Virtual Machines"), *Creating a Virtual Machine*
    restricted its concern to defining the size of the virtual disk.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 关于配置对话框中的第四个标签，**硬盘**，[第4章](ch04.html "第4章. 创建虚拟机")，*创建虚拟机*将其关注点限制为定义虚拟磁盘的大小。
- en: '![Understanding virtual disk configuration](img/image_05_002.png)'
  id: totrans-43
  prefs: []
  type: TYPE_IMG
  zh: '![理解虚拟磁盘配置](img/image_05_002.png)'
- en: 'The Hard Disk tab in the Create: Virtual Machine dialog'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 创建虚拟机对话框中的硬盘标签
- en: 'In this section, we elaborate on three additional characteristics that can
    be defined through the **Hard Disk** tab:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们详细说明了可以通过 **硬盘** 标签定义的三个额外特性：
- en: Virtual disk format
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 虚拟磁盘格式
- en: Bus/Device (interface)
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 总线/设备（接口）
- en: Cache (disk buffer)
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 缓存（磁盘缓冲区）
- en: With at least three configuration options available for each, let's explore
    how your choices can affect performance and features.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 每种配置选项至少有三个可用的选择，让我们来探讨一下你的选择如何影响性能和功能。
- en: Choosing a virtual disk format
  id: totrans-50
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 选择虚拟磁盘格式
- en: According to *Mastering Proxmox*, Proxmox VE's preferred image format for virtual
    disks is RAW. However, it also supports KVM's `qcow2` format and VMDK images commonly
    associated with VMware products.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 根据《*精通 Proxmox*》，Proxmox VE 优选的虚拟磁盘镜像格式是 RAW。然而，它也支持 KVM 的 `qcow2` 格式以及与 VMware
    产品常见的 VMDK 镜像。
- en: '![Choosing a virtual disk format](img/image_05_003.png)'
  id: totrans-52
  prefs: []
  type: TYPE_IMG
  zh: '![选择虚拟磁盘格式](img/image_05_003.png)'
- en: Tip
  id: totrans-53
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: To learn more about image formats and their manipulation, visit [https://en.wikibooks.org/wiki/QEMU/Images](https://en.wikibooks.org/wiki/QEMU/Images).
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 要了解更多关于镜像格式及其操作的信息，请访问 [https://en.wikibooks.org/wiki/QEMU/Images](https://en.wikibooks.org/wiki/QEMU/Images)。
- en: QCOW2
  id: totrans-55
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: QCOW2
- en: QCOW2 is the second release of QEMU's copy-on-write image format. Since Proxmox
    VE relies on KVM-QEMU for its virtual machine features, QCOW2 is its native and
    default format.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: QCOW2 是 QEMU 写时复制（copy-on-write）镜像格式的第二个版本。由于 Proxmox VE 依赖 KVM-QEMU 提供虚拟机功能，QCOW2
    是其原生和默认格式。
- en: As its name suggests, this format supports **copy on write**. This feature allows
    the VM to store changes made to a base image in a separate QCOW2 file. The metadata
    (data about data) of the new QCOW2 file includes, for example, the path to the
    base image.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 正如其名称所示，这种格式支持 **写时复制**。这一特性允许虚拟机将对基础镜像所做的更改存储在一个单独的 QCOW2 文件中。新 QCOW2 文件的元数据（关于数据的数据）包括例如指向基础镜像的路径。
- en: When the VM seeks to retrieve data, it checks first to see whether the specific
    data can be retrieved from the new image; if it is not in the new image, the data
    is retrieved from the base image referred to by the metadata.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 当虚拟机试图检索数据时，它首先检查新镜像中是否能够找到特定的数据；如果新镜像中没有该数据，它将从元数据所指向的基础镜像中检索该数据。
- en: Note
  id: totrans-59
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: To learn more about the QCOW2 image structure, visit [https://people.gnome.org/~markmc/qcow-image-format.html](https://people.gnome.org/~markmc/qcow-image-format.html).
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 要了解更多关于 QCOW2 镜像结构的信息，请访问 [https://people.gnome.org/~markmc/qcow-image-format.html](https://people.gnome.org/~markmc/qcow-image-format.html)。
- en: QCOW2 images also grow as needed (**thin provisioning**), a feature that distinguishes
    them from RAW images, for which all the space requested at their creation is immediately
    allocated to a file (**thick provisioning**).
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: QCOW2 镜像还会根据需要增长（**精简配置**），这一特点使其与 RAW 镜像区分开来，后者在创建时会立即为所请求的所有空间分配文件（**厚配置**）。
- en: Consequently, QCOW2 images will be smaller than RAW images in almost any case
    even when the host's file system doesn't support sparse files. However, the RAW
    image will have better throughput since it doesn't have to grow as data is written
    and because it doesn't depend on an intermediary software layer.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，尽管主机的文件系统不支持稀疏文件，QCOW2 图像在几乎所有情况下都会比 RAW 图像小。然而，由于 RAW 图像不需要随着数据写入而增长，并且不依赖于中介软件层，它将具有更好的吞吐量。
- en: We should take note however, that if PVE has plenty of fast RAM and runs on
    a recent SSD drive instead of a hard drive, the difference in throughput between
    a RAW image and a QCOW2 image is much less visible. As we continue to explore
    image types, keep in mind the impact newer hardware, with ever-decreasing prices,
    can have on performance.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，我们应该注意到，如果 PVE 拥有大量高速内存，并且运行在最新的 SSD 驱动器上而不是传统硬盘上，那么 RAW 图像与 QCOW2 图像之间的吞吐量差异将不太明显。在我们继续探索图像类型时，请记住，随着硬件价格的不断下降，新硬件可能对性能产生的影响。
- en: Note
  id: totrans-64
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: A sparse file is one that attempts to use file system space more efficiently
    when the file itself is mostly empty. This is achieved by writing metadata representing
    the empty blocks to disk, rather than the actual empty space which makes up the
    block. Consequently, less disk space is used. Only when the block contains real
    data is the full block size written to disk as its literal size ([https://en.wikipedia.org/wiki/Sparse_file](https://en.wikipedia.org/wiki/Sparse_file)).For
    a list of file systems with support for sparse files, visit [https://en.wikipedia.org/wiki/Comparison_of_file_systems#Allocation_and_layout_policies](https://en.wikipedia.org/wiki/Comparison_of_file_systems#Allocation_and_layout_policies).
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 稀疏文件是指当文件大部分为空时，尝试更高效地利用文件系统空间的文件。通过将表示空块的元数据写入磁盘，而不是写入实际空白空间来实现这一点，从而减少了磁盘空间的使用。只有当块包含实际数据时，才会以其实际大小将完整的块大小写入磁盘（[https://en.wikipedia.org/wiki/Sparse_file](https://en.wikipedia.org/wiki/Sparse_file)）。要查看支持稀疏文件的文件系统列表，请访问
    [https://en.wikipedia.org/wiki/Comparison_of_file_systems#Allocation_and_layout_policies](https://en.wikipedia.org/wiki/Comparison_of_file_systems#Allocation_and_layout_policies)。
- en: QCOW2's snapshot and temporary snapshot support allows an image to contain multiple
    snapshots from prior moments in the image's history.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: QCOW2 的快照和临时快照支持允许图像包含来自图像历史中多个时刻的多个快照。
- en: Temporary snapshots store changes until the VM powers off, at which point the
    snapshot is discarded. Standard snapshots, in contrast, allow us to return to
    prior states in an image's history.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 临时快照会存储更改，直到虚拟机关闭，此时快照将被丢弃。与此相比，标准快照允许我们返回图像历史中的先前状态。
- en: Note
  id: totrans-68
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: To learn more about QCOW2 snapshots with Proxmox VE, visit their wiki page at
    [https://pve.proxmox.com/wiki/Live_Snapshots](https://pve.proxmox.com/wiki/Live_Snapshots).For
    more about the mechanics behind QCOW2's snapshot support, visit [https://kashyapc.fedorapeople.org/virt/lc-2012/snapshots-handout.html](https://kashyapc.fedorapeople.org/virt/lc-2012/snapshots-handout.html).
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 要了解更多关于 Proxmox VE 中 QCOW2 快照的内容，请访问他们的 Wiki 页面：[https://pve.proxmox.com/wiki/Live_Snapshots](https://pve.proxmox.com/wiki/Live_Snapshots)。有关
    QCOW2 快照支持背后的机制的更多信息，请访问 [https://kashyapc.fedorapeople.org/virt/lc-2012/snapshots-handout.html](https://kashyapc.fedorapeople.org/virt/lc-2012/snapshots-handout.html)。
- en: RAW
  id: totrans-70
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: RAW
- en: RAW and QCOW2 are the two most supported Proxmox VE formats discussed in Proxmox
    VE forums.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: RAW 和 QCOW2 是在 Proxmox VE 论坛中讨论的最受支持的两种格式。
- en: Compared to both QCOW2 and VMDK images, RAW virtual disks are quite simple;
    and unlike the other formats supported by Proxmox VE, RAW doesn't rely on an intermediary
    software layer.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 与 QCOW2 和 VMDK 图像相比，RAW 虚拟磁盘相对简单；并且与 Proxmox VE 支持的其他格式不同，RAW 不依赖于中介软件层。
- en: Consequently, RAW is a more efficient option and should be given all due consideration
    when the performance of a virtual machine is of supreme importance—particularly
    RAW on LVM.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，RAW 是一个更高效的选项，特别是在虚拟机性能至关重要时，应该给予充分考虑——特别是在 LVM 上使用 RAW。
- en: Moreover, RAW images can be directly and simply mounted on the Proxmox VE host
    for direct manipulation without requiring access through the guest.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，RAW 图像可以直接并简便地挂载到 Proxmox VE 主机上进行直接操作，而无需通过来宾访问。
- en: Tip
  id: totrans-75
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: '**Mounting a RAW file**To walk through this procedure, consider visiting [http://equivocation.org/node/107](http://equivocation.org/node/107)
    or [http://forensicswiki.org/wiki/Mounting_Disk_Images#To_mount_a_disk_image_on_Linux](http://forensicswiki.org/wiki/Mounting_Disk_Images#To_mount_a_disk_image_on_Linux);
    both pages recommend using the `kpartx` utility, available in the default Debian
    repositories.'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: '**挂载RAW文件**为了完成此过程，建议访问[http://equivocation.org/node/107](http://equivocation.org/node/107)或[http://forensicswiki.org/wiki/Mounting_Disk_Images#To_mount_a_disk_image_on_Linux](http://forensicswiki.org/wiki/Mounting_Disk_Images#To_mount_a_disk_image_on_Linux)；这两个页面都建议使用`kpartx`工具，该工具在Debian默认仓库中可用。'
- en: However, unlike QCOW2 images, RAW images are not feature rich; there's no inherent
    support for snapshots, no thin provisioning, and so on. They are composed of raw
    data, built sector by sector until they reach their fixed capacity.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，与QCOW2映像不同，RAW映像的功能较为简单；没有固有的快照支持，没有薄配置，等等。它们由原始数据组成，逐扇区构建，直到达到其固定容量。
- en: '*Performance*, then, is the real boon of RAW images as virtual drives; if you''re
    relying on a hard disk drive rather than a solid state drive, and reliable, snappy
    performance is critical, as it might be for a database server, for example, then
    choose RAW and forego the rich feature set offered by QCOW2.'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: '*性能*，因此，RAW映像作为虚拟磁盘的真正优势；如果你依赖的是机械硬盘而非固态硬盘，并且可靠、迅捷的性能至关重要，例如在数据库服务器中，那么请选择RAW，并放弃QCOW2提供的丰富功能集。'
- en: Although pre-allocating storage for accumulating VM guests can be an unnecessary
    strain on resources, keep in mind that RAW virtual drives too can be resized.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管为积累虚拟机客户预分配存储可能对资源造成不必要的压力，但请记住，RAW虚拟磁盘也可以调整大小。
- en: As is the case with QCOW2, only part of the resizing process can be accomplished
    through the management interface Proxmox VE provides.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 与QCOW2类似，只有部分调整大小过程可以通过Proxmox VE管理界面完成。
- en: Note
  id: totrans-81
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: The process for resizing both RAW and QCOW2 images is documented on the Proxmox
    VE wiki page at [https://pve.proxmox.com/wiki/Resizing_disks#Enlarge_the_virtual_disk.28s.29_in_Proxmox](https://pve.proxmox.com/wiki/Resizing_disks#Enlarge_the_virtual_disk.28s.29_in_Proxmox).
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 调整RAW和QCOW2映像大小的过程已在Proxmox VE wiki页面上记录，网址为[https://pve.proxmox.com/wiki/Resizing_disks#Enlarge_the_virtual_disk.28s.29_in_Proxmox](https://pve.proxmox.com/wiki/Resizing_disks#Enlarge_the_virtual_disk.28s.29_in_Proxmox)。
- en: VMDK
  id: totrans-83
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: VMDK
- en: '**Virtual machine disk** (**VMDK**) is the preferred virtual disk format for
    VMware virtualization products. Having said that, the format was subsequently
    opened up to other developers and vendors, and has become a popular virtual disk
    format to support.'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: '**虚拟机磁盘**（**VMDK**）是VMware虚拟化产品首选的虚拟磁盘格式。尽管如此，该格式随后被开放给其他开发者和供应商，并且已成为一个广泛支持的流行虚拟磁盘格式。'
- en: While KVM-QEMU currently supports versions 3, 4, and 6 of the format, and Proxmox
    VE can create VMs with VMDK images, it's recommended that PVE users rely on QEMU
    native formats—QCOW2 and RAW—whenever circumstances allow.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管KVM-QEMU目前支持该格式的3、4和6版本，并且Proxmox VE可以创建带有VMDK映像的虚拟机，但建议PVE用户在条件允许的情况下依赖QEMU原生格式——QCOW2和RAW。
- en: Realistically, however, circumstances aren't always ideal; so before we address
    bus types, let's touch on a few relevant points regarding VMDK virtual disks.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，实际上，情况并不总是理想的；所以在我们讨论总线类型之前，让我们先触及几个与VMDK虚拟磁盘相关的要点。
- en: Like QCOW2, VMDK is a complex format with a rich feature set (in fact, it has
    four sub-formats).
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 与QCOW2一样，VMDK是一种复杂的格式，具有丰富的功能集（事实上，它有四种子格式）。
- en: For example, the VMDK format supports thin and thick provisioning. Thin VMDK
    images, like their QCOW2 counterparts, are slower than preallocated, or thick-provisioned,
    VMDK images. As we'd expect, they are significantly smaller.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，VMDK格式支持薄配置和厚配置。薄VMDK映像，与其QCOW2对应物一样，比预分配的或厚配置的VMDK映像更慢。正如我们所料，它们显著更小。
- en: Likewise, both VMDK and QCOW2 formats support multiple snapshots that enable
    administrators to restore a virtual machine to a prior state.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 同样，VMDK和QCOW2格式都支持多个快照，使管理员能够将虚拟机恢复到先前的状态。
- en: While the format's feature set is rich, not all its features are supported by
    the Proxmox VE interface, even when the underlying virtualization layer can handle
    them.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管该格式功能丰富，但Proxmox VE界面并未支持其所有功能，即使底层虚拟化层能够处理它们。
- en: For example, the VMDK format includes a subformat that splits a virtual disk
    into 2 GB chunks, essentially to support mobility. This subformat isn't supported
    by Proxmox VE.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，VMDK格式包括一个子格式，将虚拟磁盘分割成2GB的块，本质上是为了支持移动性。Proxmox VE不支持该子格式。
- en: 'While Proxmox VE does invite us to create virtual machines with VMDK images,
    rely as much as possible on QCOW2 and RAW virtual disk formats:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
- en: Assuming your PVE is built around a traditional hard disk drive, RAW is ideal
    for database applications, for example, because it has the performance advantage.
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: QCOW2 offers an extremely powerful feature set that could come at the cost of
    performance if you're not relying on SSD storage. In addition, QCOW2 is more conservative
    in its use of hardware resources.
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: If you've inherited a virtual disk in the VMDK format, it can be converted to
    either the QCOW2 or RAW format using the `qemu-img` command.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
- en: On the other hand, if you're creating a Proxmox VE , reliance on the VMDK format
    should be reserved for very deliberate and purposeful edge cases.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  id: totrans-97
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Full documentation for the `qemu-img`  command is available on the Web at [https://www.suse.com/documentation/sles11/book_kvm/data/cha_qemu_guest_inst_qemu-img.html](https://www.suse.com/documentation/sles11/book_kvm/data/cha_qemu_guest_inst_qemu-img.html)
    (SUSE) and [https://docs.fedoraproject.org/en-US/Fedora/18/html/Virtualization_Administration_Guide/sect-Virtualization-Tips_and_tricks-Using_qemu_img.html](https://docs.fedoraproject.org/en-US/Fedora/18/html/Virtualization_Administration_Guide/sect-Virtualization-Tips_and_tricks-Using_qemu_img.html)
    (Fedora).The sparse but comprehensive GNU/Linux main page is available at [http://linux.die.net/man/1/qemu-img](http://linux.die.net/man/1/qemu-img).
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
- en: Choosing a bus
  id: totrans-99
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Along with **Format** options, the **Hard Disk** tab of the **Create: Virtual
    Machine** dialog offers a drop-down menu for the **Bus/Device** with which to
    interface the virtual disk.'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
- en: 'As illustrated here, four options are available:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
- en: '**IDE**'
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**SATA**'
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**VIRTIO**'
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**SCSI**'
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![Choosing a bus](img/image_05_004.png)'
  id: totrans-106
  prefs: []
  type: TYPE_IMG
- en: Bus/Device options
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
- en: Note
  id: totrans-108
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Note that with the exception of I/O performance, the characteristics of the
    virtual SATA, IDE, and SCSI buses will be the same as their physical counterparts.
    For details about each, visit Wikipedia:**SATA**: [https://en.wikipedia.org/wiki/Serial_ATA](https://en.wikipedia.org/wiki/Serial_ATA)
    **IDE/PATA**: [https://en.wikipedia.org/wiki/Parallel_ATA](https://en.wikipedia.org/wiki/Parallel_ATA)
    **SCSI**: [https://en.wikipedia.org/wiki/SCSI](https://en.wikipedia.org/wiki/SCSI)
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
- en: 'Of the four options, two are provided as convenient support for compatibility
    with legacy systems: **IDE** and **SCSI**. (IDE is thus the dialog''s default
    option.)'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
- en: 'The **SATA** option has more currency, and behaves as one would expect a SATA
    interface to behave—with one significant exception: the **SATA** option does not
    provide a performance boost over **IDE**, for example.'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
- en: I/O performance, in this case, is determined almost entirely by the host's hardware
    configuration. The VM will not be able to read and write faster than the physical
    hardware permits.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
- en: Since the limits of the host's hardware I/O performance can't be overcome, KVM-QEMU
    addresses, instead, the overhead attached to the virtualization process, the other
    factor affecting performance in this case.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 由于无法克服主机硬件 I/O 性能的限制，KVM-QEMU 解决的是虚拟化过程中的开销，这是影响性能的另一个因素。
- en: KVM-QEMU provides a paravirtualization solution called **virtio** that allows
    the guest and hypervisor to work more cooperatively and efficiently with one another
    without the virtualization overhead.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: KVM-QEMU 提供了一种名为 **virtio** 的 paravirtualization 解决方案，使客户机和虚拟机监控器能够在没有虚拟化开销的情况下更加协同和高效地工作。
- en: Note
  id: totrans-115
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: '**Paravirtualization** refers to software components that are aware they are
    running in a VM. Virtio drivers for use with KVM-QEMU VMs communicate directly
    with the Proxmox VE host in our case.'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: '**Paravirtualization** 是指那些知道自己运行在虚拟机中的软件组件。在我们的案例中，KVM-QEMU 虚拟机的 virtio 驱动程序会直接与
    Proxmox VE 主机通信。'
- en: 'Typical of paravirtualized drivers, virtio drivers are optimized to share queues,
    buffers, and other data with Proxmox VE to improve throughput and to reduce latency
    (vTerminology: A Guide to Key Virtualization Terminology is available at [http://www.globalknowledge.com](http://www.globalknowledge.com)).'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: '典型的 paravirtualized 驱动程序，virtio 驱动程序经过优化，能够与 Proxmox VE 共享队列、缓冲区和其他数据，从而提高吞吐量并减少延迟（vTerminology:
    关键虚拟化术语指南可参见 [http://www.globalknowledge.com](http://www.globalknowledge.com)）。'
- en: We'll return to virtio drivers again in the context of network interfaces in
    [Chapter 6](ch06.html "Chapter 6. Networking with Proxmox VE"), *Networking with
    Proxmox VE*.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在 [第六章](ch06.html "第六章：与 Proxmox VE 的网络")，*与 Proxmox VE 的网络* 章节中再次讨论 virtio
    驱动程序在网络接口中的应用。
- en: This solution, **VIRTIO**, is the only **Bus/Device** option that affects the
    I/O performance of the VM.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 这个解决方案，**VIRTIO**，是唯一会影响虚拟机 I/O 性能的 **总线/设备** 选项。
- en: The ability to take advantage of a guest's virtio devices requires that drivers
    are available for the guest's OS. As the Proxmox VE wiki page points out, recent
    Linux kernels already include the virtio drivers; therefore, any recent GNU/Linux
    distribution running on a Proxmox VE VM "should recognize virtio devices exposed
    by the KVM hypervisor" ([https://pve.proxmox.com/wiki/Windows_VirtIO_Drivers](https://pve.proxmox.com/wiki/Windows_VirtIO_Drivers)).
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 要利用客户机的 virtio 设备，必须为客户机操作系统提供驱动程序。正如 Proxmox VE 的 Wiki 页面所指出的那样，最近的 Linux 内核已经包含了
    virtio 驱动程序；因此，任何运行在 Proxmox VE 虚拟机上的现代 GNU/Linux 发行版“应该能够识别由 KVM 虚拟机监控器暴露的 virtio
    设备”（[https://pve.proxmox.com/wiki/Windows_VirtIO_Drivers](https://pve.proxmox.com/wiki/Windows_VirtIO_Drivers)）。
- en: VM guests running GNU/Linux, therefore, do not require any additional explicit
    configuration steps.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，运行 GNU/Linux 的虚拟机客户机无需任何额外的显式配置步骤。
- en: VM guests running a Microsoft Windows OS will need signed drivers installed
    before the virtio device will be recognized. As you may suspect, there's a hitch
    here, since the OS install process needs the device driver in order to recognize
    and install to the virtual disk.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 运行微软 Windows 操作系统的虚拟机客户机需要安装签名驱动程序，才能识别 virtio 设备。如你所料，这里有个问题，因为操作系统安装过程需要设备驱动程序才能识别并安装到虚拟磁盘。
- en: We can employ any of several tactics to overcome this problem.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以采用多种策略来克服这个问题。
- en: Tip
  id: totrans-124
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: For additional information on Microsoft operating systems and virtio devices,
    visit [https://pve.proxmox.com/wiki/Windows_VirtIO_Drivers](https://pve.proxmox.com/wiki/Windows_VirtIO_Drivers).
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 有关微软操作系统和 virtio 设备的更多信息，请访问 [https://pve.proxmox.com/wiki/Windows_VirtIO_Drivers](https://pve.proxmox.com/wiki/Windows_VirtIO_Drivers)。
- en: This subsection puts a significant and just emphasis on the performance increase
    virtio paravirtualization supported by KVM-QEMU provides.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 本小节重点强调了由 KVM-QEMU 提供的 virtio paravirtualization 所带来的性能提升。
- en: To summarize, the only time we shouldn't use virtio paravirtualization is when
    the required drivers aren't available for the OS intended for the virtual machine.
    Because it will significantly improve I/O throughput and alleviate some of the
    overhead associated with full virtualization, we should rely on virtio whenever it
    is a realistic alternative.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 总结来说，我们唯一不应该使用 virtio paravirtualization 的情况是当目标操作系统没有相应的驱动程序时。由于 virtio 可以显著提高
    I/O 吞吐量，并减轻与完全虚拟化相关的一些开销，因此只要现实可行，我们应该在任何时候依赖 virtio。
- en: However, let's keep in mind that IDE and SCSI are also viable bus alternatives,
    but provided primarily for legacy devices and to serve the interests of compatibility
    and flexibility. SATA, however, has significant currency at this point, so it's
    a viable alternative if circumstances just don't allow you to take advantage of
    the virtio solution.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，我们需要记住，IDE和SCSI也是可行的总线替代方案，但主要是为了兼容性和灵活性，提供给旧设备使用。SATA目前已经具有显著的流通性，因此如果环境不允许你利用virtio解决方案，它仍然是一个可行的替代方案。
- en: Tip
  id: totrans-129
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: 'There is another case when virtio paravirtualization is not viable: when a
    VM has been converted from a physical machine and one thus needs to install the
    drivers before rebooting to rely on virtio.'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 还有一种情况是virtio准虚拟化不可行：当虚拟机从物理机器转换过来，需要安装驱动程序后才能重启并依赖virtio。
- en: The next subsection focuses on the five disk caching/buffering options available
    for our Proxmox VE virtual machines.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 下一小节将重点介绍可用于Proxmox VE虚拟机的五种磁盘缓存/缓冲选项。
- en: Understanding cache options
  id: totrans-132
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 理解缓存选项
- en: 'The **Hard Disk** tab of the **Create: Virtual Machine** dialog includes a
    field labeled **Cache** that accepts five distinct values:'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: '**硬盘**选项卡中的**创建：虚拟机**对话框包含一个标有**缓存**的字段，该字段接受五个不同的值：'
- en: '**Default (No cache)**'
  id: totrans-134
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**默认（无缓存）**'
- en: '**Direct sync**'
  id: totrans-135
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**直接同步**'
- en: '**Write through**'
  id: totrans-136
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**写穿**'
- en: '**Write back**'
  id: totrans-137
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**回写**'
- en: '**Write back (unsafe)**'
  id: totrans-138
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**回写（不安全）**'
- en: Essentially, the chosen setting determines how the abstraction of a HDD's buffer
    should be handled. With Proxmox VE, the choice of cache has been demonstrated
    to significantly affect I/O performance.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 本质上，所选设置决定了如何处理硬盘缓冲区的抽象。使用Proxmox VE时，缓存的选择已被证明对I/O性能有显著影响。
- en: '![Understanding cache options](img/image_05_005.png)'
  id: totrans-140
  prefs: []
  type: TYPE_IMG
  zh: '![理解缓存选项](img/image_05_005.png)'
- en: Proxmox VE cache options
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: Proxmox VE缓存选项
- en: After working to somewhat articulate the function of a disk buffer, this section
    will briefly explore recommendations to optimize the performance of a VM.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 在阐明磁盘缓冲区功能的基础上，本节将简要探讨优化虚拟机性能的建议。
- en: On a physical hard disk, the disk buffer is a kind of memory on the controller
    board mounted outside the vacuum-sealed disk housing. Contemporary hard-disk drives
    have between 16 and 128 MB of disk buffer. (To take drives that are currently
    on the market as an example, Western Digital's Black line of HDDs has either 32
    or 64 MB of buffer, depending on the model.)
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 在物理硬盘上，磁盘缓冲区是位于真空密封硬盘外壳之外、控制板上的一种内存。现代硬盘驱动器的磁盘缓冲区在16MB到128MB之间。（以目前市场上的硬盘为例，Western
    Digital的Black系列硬盘具有32MB或64MB的缓存，具体取决于型号。）
- en: The function of this cache is primarily to sequence disk writes for optimum
    performance and manage and execute read requests from a client (such as the CPU
    or OS) in a strategic way.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 这个缓存的作用主要是按顺序执行磁盘写入，以达到最佳性能，并以战略性的方式管理和执行来自客户端（如CPU或操作系统）的读请求。
- en: Put another way, when we keep in mind that the bus attaching the physical HDD
    to the motherboard is rarely the same speed as the rotation of the hard disk platters
    and the mechanical motion of the read/write heads, the buffer stores data read
    from the disk before it's sent to the client; it likewise stores data to be written
    to the disk until the actual disk write can be executed. It's up to the buffer
    and the drive's processor to organize the data so it gets to its destination as
    efficiently as possible.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 换句话说，当我们记住将物理硬盘连接到主板的总线速度与硬盘盘片的旋转速度以及读/写磁头的机械运动速度通常不同的时候，缓冲区会在数据从磁盘读取后先将其存储，再发送到客户端；它同样将待写入磁盘的数据存储起来，直到实际的磁盘写入操作能够执行。数据的组织工作由缓冲区和硬盘的处理器负责，以便数据能够尽可能高效地到达目标。
- en: 'However accurate this explanation may be, it lacks concretion. *Linux System
    Administrator''s Guide* offers a more concrete explanation ([http://www.tldp.org/LDP/sag/html/buffer-cache.html](http://www.tldp.org/LDP/sag/html/buffer-cache.html)):'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管这个解释可能是准确的，但它缺乏具体性。《Linux系统管理员指南》提供了更具体的解释（[http://www.tldp.org/LDP/sag/html/buffer-cache.html](http://www.tldp.org/LDP/sag/html/buffer-cache.html)）：
- en: '*Reading from a disk is very slow compared to accessing (real) memory. In addition,
    it is common to read the same part of a disk several times during relatively short
    periods of time. For example, one might first read an e-mail message, then read
    the letter into an editor when replying to it, then make the mail program read
    it again when copying it to a folder. Or, consider how often the command ls might
    be run on a system with many users. By reading the information from disk only
    once and then keeping it in memory until no longer needed, one can speed up all
    but the first read. This is called disk buffering, and the memory used for the
    purpose is called the buffer cache.*'
  id: totrans-147
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'We must choose from among five cache options to define a Proxmox VE VM: the
    default is **No Cache**. The following alternatives are available:'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
- en: Direct sync
  id: totrans-149
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Write Through
  id: totrans-150
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Write back
  id: totrans-151
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Write back (unsafe)
  id: totrans-152
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Note
  id: totrans-153
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: There's a very clear, concise, general-purpose differentiation between write-through
    and write-back caches offered at [https://simple.wikipedia.org/wiki/Cache#Caches_for_writing](https://simple.wikipedia.org/wiki/Cache#Caches_for_writing).
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  id: totrans-155
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '**Write back** is KVM-QEMU''s default; note Proxmox VE''s default is instead
    **No cache**.'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
- en: While the resources are ordered from most to least pertinent, each provides
    a helpful perspective and is included precisely because, when we rely on all three,
    we can begin to start conceptualizing use cases for each mode. The following list
    provides resources that describe each of these modes.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
- en: '[https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/7/html/Virtualization_Tuning_and_Optimization_Guide/sect-Virtualization_Tuning_Optimization_Guide-BlockIO-Caching.html](https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/7/html/Virtualization_Tuning_and_Optimization_Guide/sect-Virtualization_Tuning_Optimization_Guide-BlockIO-Caching.html):
    From *Virtualization Tuning and Optimization Guide* from Red Hat'
  id: totrans-158
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[https://www.suse.com/documentation/sles11/book_kvm/data/sect1_1_chapter_book_kvm.html](https://www.suse.com/documentation/sles11/book_kvm/data/sect1_1_chapter_book_kvm.html):
    From *Virtualization with KVM* and provided by SUSE'
  id: totrans-159
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[https://www-01.ibm.com/support/knowledgecenter/linuxonibm/liaat/liaatbpkvmguestcache.htm](https://www-01.ibm.com/support/knowledgecenter/linuxonibm/liaat/liaatbpkvmguestcache.htm):
    From *Linux on IBM Systems*'
  id: totrans-160
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: To evaluate performance, we need either consistent anecdotes or structured comparisons
    of the performances of each combination of cache mode, bus, and virtual disk format.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
- en: The most thorough and visually compelling results available on the Web are published
    at [http://jrs-s.net/2013/05/17/kvm-io-benchmarking/](http://jrs-s.net/2013/05/17/kvm-io-benchmarking/)
    (by Jim Salter, 2013) and [http://www.ilsistemista.net/index.php/virtualization/11-kvm-io-slowness-on-rhel-6.html](http://www.ilsistemista.net/index.php/virtualization/11-kvm-io-slowness-on-rhel-6.html)
    (by Ginatan Dante, 2011).
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  id: totrans-163
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Additional benchmarks, specific to Proxmox VE, are posted at [http://i51.tinypic.com/158bcl4.gif](http://i51.tinypic.com/158bcl4.gif);
    however, the results are posted without offering methodology, version, date, or
    attribution info.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
- en: The benchmarks provided in these studies from 2011 and 2013 are a helpful starting
    point, but significantly conflict with the KVM best practice statements.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
- en: These investigations sometimes resonate, but can also conflict with Proxmox
    VE or the KVMs best I/O performance tips and testimonials available on the web.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
- en: The investigations cited previously support virtio paravirtualizaiton as being
    the bus of choice whenever the choice is possible, which is anytime drivers are
    available for the guest OS.
  id: totrans-167
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Generally, caching adds redundant data and bus traffic and ultimately will impact
    performance negatively. For best results, choose **No Cache** for RAW images and
    avoid the **Directsync** and **Write Through** cache options with QCOW2 images
    except when working with the ZSF filesystem and a RAID array as your primary storage.
  id: totrans-168
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: RAW is broadly acknowledged to provide the best performance among the three
    formats available in Proxmox VE; however, it's at the cost of the significant
    bundle of features QCOW2 images offer. The benefits of the feature set should
    certainly be weighed against RAW's performance, particularly with **No Cache**
    selected in combination with **VIRTIO**. If you rely on solid state storage, much
    of the performance difference between RAW and QCOW2 becomes unnoticeable.
  id: totrans-169
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The Consensus from the Proxmox VE user community is that there is no practical
    benefit to building a VM in Proxmox VE with a VMDK disk image.
  id: totrans-170
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tip
  id: totrans-171
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Proxmox VE and KVM-QEMU best practice resources
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
- en: '[https://pve.proxmox.com/wiki/Performance_Tweaks](https://pve.proxmox.com/wiki/Performance_Tweaks)'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
- en: '[http://www.ilsistemista.net/index.php/virtualization/23-kvm-storage-performance-and-cache-settings-on-red-hat-enterprise-linux-62.html?start=2](http://www.ilsistemista.net/index.php/virtualization/23-kvm-storage-performance-and-cache-settings-on-red-hat-enterprise-linux-62.html?start=2)'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
- en: '[http://www.linux-kvm.org/page/Tuning_KVM](http://www.linux-kvm.org/page/Tuning_KVM)'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
- en: 'With the conclusion of this section, we have accomplished several objectives
    towards the goal articulated at the beginning of the chapter:'
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
- en: We have the resources to make informed choices about appropriate bus/interfaces
    for our Proxmox VE VM guests
  id: totrans-177
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: We can now deliberately choose from among virtual disk image formats available
    for use through the Proxmox VE interface and can pursue further support as needed
  id: totrans-178
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Learning more
  id: totrans-179
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'If this chapter sends any single message clearly, it should be this: optimizing
    the I/O performance of a VM in Proxmox VE involves carefully considering and combining
    three components, each with a very rich set of options—tuning a VM to perform
    optimally and with the features you want is a complex balancing act.'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
- en: 'Consequently, a list of helpful resources is provided here so each of us can
    pursue more information based on our specific needs. The first two resources have
    rich chapters on virtual disks. The third is a work in progress that''s thoroughly
    committed to virtual disk documentation:'
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
- en: '*Hands-On Virtual Computing*, Ted Simpson, Cengage'
  id: totrans-182
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Virtualization from the Desktop to the Enterprise*, Chris Wolf, Apress'
  id: totrans-183
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*The Linux Sysadmins Guide to Virtual Disks: From the Basics to the Advanced*,
    Tim Bielawa, [http://lnx.cx/docs/vdg/output/Virtual-Disk-Operations.pdf](http://lnx.cx/docs/vdg/output/Virtual-Disk-Operations.pdf).'
  id: totrans-184
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Summary
  id: totrans-185
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Our purpose in this chapter has been to understand virtual disks in the context
    of Proxmox VE virtual machine guests (the chapter does not address anything that
    concerns container guests).
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
- en: 'We''ve accomplished a difficult task by focusing on how Proxmox VE, and its
    underlying virtualization technology, handle the abstractions of the components
    of physical hard disk drives: storage media, the bus interface, and the disk buffer.'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
- en: As we proceeded, we worked hard to understand and be able to articulate how
    the choices we make when determining disk format, bus, and disk buffer preferences
    can significantly affect both features and I/O performance.
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
- en: At the most fundamental level, we recognized that our VMs will not have better
    I/O proficiency than our physical host's hardware allows. However, you also learned
    that, by relying on paravirtualization drivers, you can minimize the overhead
    cost of virtualization on I/O performance.
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
- en: 'To summarize, you learned that our decision making regarding virtual-disk configuration
    depends on how we answer some fundamental questions:'
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
- en: What physical hardware do you already have that affects I/O performance?
  id: totrans-191
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: What are the performance needs of the application and/or database that the VM
    is dedicated to serving?
  id: totrans-192
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: What features of a virtual disk format should you take advantage of? Which redundant
    features can be provided by other technologies in your datacenter?
  id: totrans-193
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: What are the capacity needs of the OS and application and/or database?
  id: totrans-194
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: What are the administrators already familiar with and willing to support in
    terms of file systems, virtualization generally, and virtual disks in particular?
  id: totrans-195
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: What are the OS concerns and requirements in regards to file systems and bus
    drivers?
  id: totrans-196
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In the next chapter, we continue to build on what you learned in [Chapter 4](ch04.html
    "Chapter 4. Creating Virtual Machines"), *Creating a Virtual Machine*, about the
    creation of virtual machines by focusing on the Proxmox VE network model. To do
    this, we'll rely on our prior knowledge of TCP/IP LAN networks, switching, and
    subnets.
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
- en: It'll be a great transitional chapter as we move toward understanding Proxmox
    VE and virtualization security.
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
- en: Let's connect nodes and build bridges!
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
