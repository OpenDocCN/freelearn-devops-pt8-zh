["```\npuppet_enterprise::profile::master::java_args:\n  Xmx: 512m\n  Xms: 512m\n```", "```\nclass profile::puppetserver {\n\n  class { 'puppetserver':\n    config => {\n      'java_args'     => {\n        'xms'         => '4g',\n        'xmx'         => '6g',\n        'maxpermsize' => '512m',\n      },\n    }\n  }\n\n}\n```", "```\n# This profile will clean out nodes much more aggressively, deactivating nodes not seen for 2 days, and purging nodes not seen for 4.\n\nclass profile::puppetdb {\n\n  ini_setting { 'Node TTL':\n    ensure  => present,\n    path    => '/etc/puppetlabs/puppet/puppet.conf',\n    section => 'database',\n    setting => 'node-ttl',\n    value   => '2d',\n  }\n\n  ini_setting { 'Node Purge TTL':\n    ensure  => present,\n    path    => '/etc/puppetlabs/puppet/puppet.conf',\n    section => 'database',\n    setting => 'node-purge-ttl',\n    value   => '4d',\n  }\n\n}\n```", "```\npuppet_enterprise::profile::puppetdb::java_args:\n  Xms: 1024m\n  Xmx: 1024m\n```", "```\nclass profile::puppetdb {\n\n  class {'puppetdb':\n    java_args => {\n      '-Xmx' => '1024m',\n      '-Xms' => '1024m',\n    },\n  }\n\n}\n```", "```\npuppet_enterprise::puppetdb::command_processing_threads: 2\n```", "```\nclass profile::puppetdb {\n\n  class {'puppetdb':\n    command_threads => '2',\n  }\n\n}\n```", "```\ngit clone https://github.com/tkishel/pe_tune.git\nchmod +x ./pe_tune/lib/puppet_x/puppetlabs/tune.rb \n```", "```\n[root@pe-puppet-master ~]# ./pe_tune/lib/puppet_x/puppetlabs/tune.rb\n### Puppet Infrastructure Summary: Found a Monolithic Infrastructure\n\n## Found: 4 CPU(s) / 9839 MB RAM for Primary Master pe-puppet-master\n## Specify the following optimized settings in Hiera in nodes/pe-puppet-master.yaml\n\n---\npuppet_enterprise::profile::database::shared_buffers: 3072MB\npuppet_enterprise::puppetdb::command_processing_threads: 2\npuppet_enterprise::master::puppetserver::jruby_max_active_instances: 2\npuppet_enterprise::master::puppetserver::reserved_code_cache: 1024m\npuppet_enterprise::profile::master::java_args:\n Xms: 2048m\n Xmx: 2048m\npuppet_enterprise::profile::puppetdb::java_args:\n Xms: 1024m\n Xmx: 1024m\npuppet_enterprise::profile::console::java_args:\n Xms: 768m\n Xmx: 768m\npuppet_enterprise::profile::orchestrator::java_args:\n Xms: 768m\n Xmx: 768m\n\n## CPU Summary: Total/Used/Free: 4/4/0 for pe-puppet-master\n## RAM Summary: Total/Used/Free: 9839/8704/1135 for pe-puppet-master\n## JVM Summary: Using 768 MB per Puppet Server JRuby for pe-puppet-master\n```", "```\ngit clone https://github.com/gregs1104/pgtune.git\nCloning into 'pgtune'...\nremote: Counting objects: 112, done.\nremote: Total 112 (delta 0), reused 0 (delta 0), pack-reused 112\nReceiving objects: 100% (112/112), 66.21 KiB | 0 bytes/s, done.\nResolving deltas: 100% (63/63), done.\ncd pgtune\n```", "```\n./pgtune -i /opt/puppetlabs/server/data/postgresql/9.6/data/postgresql.conf\n#------------------------------------------------------------------------------\n# pgtune for version 8.4 run on 2018-08-19\n# Based on 3882384 KB RAM, platform Linux, 100 clients and mixed workload\n#------------------------------------------------------------------------------\n\ndefault_statistics_target = 100\nmaintenance_work_mem = 224MB\ncheckpoint_completion_target = 0.9\neffective_cache_size = 2816MB\nwork_mem = 18MB\nwal_buffers = 16MB\ncheckpoint_segments = 32\nshared_buffers = 896MB\nmax_connections = 100\n```", "```\n---\npuppet_enterprise::profile::database::maintenance_work_mem: 224MB\npuppet_enterprise::profile::database::checking_completion_target = 0.9\npuppet_enterprise::profile::database::effective_cache_size: 2816MB\npuppet_enterprise::profile::database::work_mem: 18MB\npuppet_enterprise::profile::database::wal_buffers: 16MB\npuppet_enterprise::profile::database::checkpoint_segments: 32\npuppet_enterprise::profile::database::shared_buffers: 896MB\n\n# PgTune recommends just 100 max_connections, but Puppet Enterprise \n# generally recommends a higher amount due to the number of nodes that \n# can connect to the system. I'll tune it for that purpose.\npuppet_enterprise::profile::database::max_connections: 400\n```", "```\n---\npostgresql::server::config_entries:\n  maintenance_work_mem: 224MB\n  checkpoint_completion_target: 0.9\n  effective_cache_size: 2816MB\n  work_mem: 18MB\n  wal_buffers: 16MB\n  checkpoint_segments: 32\n  shared_buffers: 896MB\n  max_connections: 400\n```", "```\nclass profile::puppetserver {\n  class { 'puppetdb::master::config':\n    puppetdb_server => <hostname of PuppetDB>,\n  }\n}\n\n```", "```\n$ puppet task run r10k::deploy environment=production -n puppet-master1,puppet-master2,puppet-master3\n```", "```\n[main]\ndns_alt_names = puppet,puppet-portland\n...\n```", "```\nclass puppet::proxy {\n\n  include ::haproxy\n\n  haproxy::listen { 'puppetmaster':\n    collect_exported => false,\n    ipaddress        => $::ipaddress,\n    ports            => '8140',\n  }\n\n  haproxy::balancermember { 'master00':\n    listening_service => 'puppetmaster',\n    server_names      => 'master00.packt.com',\n    ipaddresses       => '10.10.10.100',\n    ports             => '8140',\n    options           => 'check',\n  }\n  haproxy::balancermember { 'master01':\n    listening_service => 'puppetmaster',\n    server_names      => 'master01.packt.com',\n    ipaddresses       => '10.10.10.101',\n    ports             => '8140',\n    options           => 'check',\n  }\n}\n\n```"]