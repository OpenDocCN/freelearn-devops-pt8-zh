["```\ndocker run bitfield/hello\nHello, world\n```", "```\n    cd /etc/puppetlabs/code/environments/pbg\n    sudo r10k puppetfile install\n\n    ```", "```\n    include docker\n    ```", "```\n    sudo puppet apply --environment pbg /examples/docker_install.pp\n\n    ```", "```\n    docker --version\n    Docker version 17.05.0-ce, build 89658be\n    ```", "```\ndocker::image { 'bitfield/hello':\n  ensure => 'latest',\n}\n```", "```\ndocker::run { 'hello':\n  image   => 'bitfield/hello',\n  command => '/bin/sh -c \"while true; do echo Hello, world; sleep 1; done\"',\n}\n```", "```\nsudo puppet apply /examples/docker_run.pp\n\n```", "```\nsudo docker ps\nCONTAINER ID        IMAGE               COMMAND                  CREATED\nSTATUS              PORTS               NAMES\nba1f4aced778        bitfield/hello      „/bin/sh -c ‚while tr\"   4 minutes ago       Up 4 minutes                            hello\n```", "```\nsystemctl status docker-hello\n* docker-hello.service - Daemon for hello\n   Loaded: loaded (/etc/systemd/system/docker-hello.service; enabled; vendor preset: enabled)\n   Active: active (running) since Tue 2017-05-16 04:07:23 PDT; 1min 4s ago\n Main PID: 24385 (docker)\n   CGroup: /system.slice/docker-hello.service\n           `-24385 /usr/bin/docker run --net bridge -m 0b --name hello bitfield/hello...\n...\n```", "```\ndocker::run { 'hello':\n  ensure => absent,\n  image  => 'bitfield/hello',\n}\n```", "```\nsudo systemctl stop docker-hello\n\n```", "```\nrange(1,20).each | $instance | {\n  docker::run { \"hello-${instance}\":\n    image   => 'bitfield/hello',\n    command => '/bin/sh -c \"while true; do echo Hello, world; sleep 1; done\"',\n  }\n}\n```", "```\nFROM library/alpine:3.6\nCMD /bin/sh -c \"while true; do echo Hello, world; sleep 1; done\"\n\nLABEL org.label-schema.vendor=\"Bitfield Consulting\" \\\n  org.label-schema.url=\"http://bitfieldconsulting.com\" \\\n  org.label-schema.name=\"Hello World\" \\\n  org.label-schema.version=\"1.0.0\" \\\n  org.label-schema.vcs-url=\"github.com:bitfield/puppet-beginners-guide.git\" \\\n  org.label-schema.docker.schema-version=\"1.0\"\n```", "```\ndocker::image { 'pbg-hello':\n  docker_file => '/examples/Dockerfile.hello',\n  ensure      => latest,\n}\n```", "```\ndocker::run { 'pbg-hello':\n  image => 'pbg-hello',\n}\n```", "```\nFROM nginx:1.13.3-alpine\nRUN echo \"Hello, world\" >/usr/share/nginx/html/index.html\n\nLABEL org.label-schema.vendor=\"Bitfield Consulting\" \\\n  org.label-schema.url=\"http://bitfieldconsulting.com\" \\\n  org.label-schema.name=\"Nginx Hello World\" \\\n  org.label-schema.version=\"1.0.0\" \\\n  org.label-schema.vcs-url=\"github.com:bitfield/puppet-beginners-guide.git\" \\\n  org.label-schema.docker.schema-version=\"1.0\"\n```", "```\nfile { '/tmp/Dockerfile.nginx':\n  source => '/examples/Dockerfile.nginx',\n  notify => Docker::Image['pbg-nginx'],\n}\n\ndocker::image { 'pbg-nginx':\n  docker_file => '/tmp/Dockerfile.nginx',\n  ensure      => latest,\n}\n```", "```\nsudo puppet apply /examples/docker_build_nginx.pp\n\n```", "```\ndocker::run { 'pbg-nginx':\n  image         => 'pbg-nginx:latest',\n  ports         => ['80:80'],\n  pull_on_start => true,\n}\n```", "```\nsudo apt-get -y --purge remove apache2\nsudo service docker restart\nsudo puppet apply --environment pbg /examples/docker_run_nginx.pp\n\n```", "```\n  config.vm.network \"forwarded_port\", guest: 80, host: 8080\n```", "```\nvagrant reload\n\n```", "```\nfile { '/tmp/Dockerfile.nginx':\n  content => epp('/examples/Dockerfile.nginx.epp',\n    {\n      'message' => 'Containers rule!'\n    }\n  ),\n  notify => Docker::Image['pbg-nginx'],\n}\n\ndocker::image { 'pbg-nginx':\n  docker_file => '/tmp/Dockerfile.nginx',\n  ensure      => latest,\n  notify      => Docker::Run['pbg-nginx'],\n}\n\ndocker::run { 'pbg-nginx':\n  image         => 'pbg-nginx:latest',\n  ports         => ['80:80'],\n  pull_on_start => true,\n}\n```", "```\nsudo puppet apply --environment pbg /examples/docker_template.pp\n\n```", "```\nfile { '/tmp/Dockerfile.nginx':\n  content => epp('/examples/Dockerfile.website.epp',\n    {\n      'git_url' => 'https://github.com/bitfield/pbg-website.git'\n    }\n  ),\n  notify  => Docker::Image['pbg-nginx'],\n}\n\ndocker::image { 'pbg-nginx':\n  docker_file => '/tmp/Dockerfile.nginx',\n  ensure      => latest,\n  notify      => Docker::Run['pbg-nginx'],\n}\n\ndocker::run { 'pbg-nginx':\n  image         => 'pbg-nginx:latest',\n  ports         => ['80:80'],\n  pull_on_start => true,\n}\n```", "```\n<% | String $git_url | -%>\nFROM nginx:1.13.3-alpine\nRUN apk update \\\n  && apk add git \\\n  && cd /usr/share/nginx \\\n  && mv html html.orig \\\n  && git clone <%= $git_url %> html\n\nLABEL org.label-schema.vendor=\"Bitfield Consulting\" \\\n  org.label-schema.url=\"http://bitfieldconsulting.com\" \\\n  org.label-schema.name=\"Nginx Git Website\" \\\n  org.label-schema.version=\"1.0.0\" \\\n  org.label-schema.vcs-url=\"github.com:bitfield/puppet-beginners-guide.git\" \\\n  org.label-schema.docker.schema-version=\"1.0\"\n```", "```\nHello, world!\nThis is the demo website served by the examples in Chapter 10, 'Controlling containers', from the Puppet Beginner's Guide.\n```", "```\nsudo docker stop pbg-nginx\n\n```", "```\ndocker::run { 'mount_test':\n  image   => 'library/alpine:3.6',\n  volumes => ['/tmp/container_data:/mnt/data'],\n  command => '/bin/sh -c \"echo Hello, world >/mnt/data/hello.txt\"',\n}\n```", "```\nsudo puppet apply /examples/docker_mount.pp\n\n```", "```\ncat /tmp/container_data/hello.txt\nHello, world\n```", "```\ndocker::run { 'volume_test':\n  image   => 'library/alpine:3.6',\n  volumes => ['pbg-volume:/mnt/volume'],\n  command => '/bin/sh -c \"echo Hello from inside a Docker volume >/mnt/volume/index.html\"',\n}\n```", "```\nsudo docker volume ls\nDRIVER              VOLUME NAME\nlocal               pbg-volume\n```", "```\ndocker::run { 'volume_test2':\n  image   => 'nginx:alpine',\n  volumes => ['pbg-volume:/usr/share/nginx/html'],\n  ports   => ['80:80'],\n}\n```", "```\nsudo docker stop pbg-nginx\nsudo puppet apply /examples/docker_volume2.pp\n\n```", "```\nHello from inside a Docker volume\n```", "```\nsudo puppet apply /examples/docker_network.pp\n\n```", "```\nsudo docker exec -it pbg-redis redis-cli get message\n\"Hello, world\"\n```", "```\ndocker_network { 'pbg-net':\n  ensure => present,\n}\n```", "```\ndocker::run { 'pbg-redis':\n  image => 'redis:4.0.1-alpine',\n  net   => 'pbg-net',\n}\n```", "```\nFROM nginx:1.13.3-alpine\nRUN apk update \\\n  && apk add redis\n\nLABEL org.label-schema.vendor=\"Bitfield Consulting\" \\\n  org.label-schema.url=\"http://bitfieldconsulting.com\" \\\n  org.label-schema.name=\"Redis Demo\" \\\n  org.label-schema.version=\"1.0.0\" \\\n  org.label-schema.vcs-url=\"github.com:bitfield/puppet-beginners-guide.git\" \\\n  org.label-schema.docker.schema-version=\"1.0\"\n```", "```\ndocker::image { 'pbg-demo':\n  docker_file => '/examples/Dockerfile.pbg-demo',\n  ensure      => latest,\n}\n```", "```\ndocker::run { 'pbg-demo':\n  image   => 'pbg-demo',\n  net     => 'pbg-net',\n  command => '/bin/sh -c \"redis-cli -h pbg-redis set message \\\"Hello, world\\\"\"',\n}\n```", "```\nredis-cli -h pbg-redis set message \"Hello, world\"\n\n```"]