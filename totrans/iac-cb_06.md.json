["```\n$ sudo dnf install chefdk-1.1.16-1.el7.x86_64.rpm\n\n```", "```\n$ chef --version\nChef Development Kit Version: 1.1.16\n\n```", "```\n$ ls -al /usr/bin/chef\nlrwxrwxrwx. 1 root root 20 Oct  5 16:36 /usr/bin/chef -> /opt/chefdk/bin/chef\n\n```", "```\n$ /opt/chefdk/embedded/bin/ruby --version\nruby 2.3.1p112 (2016-04-26 revision 54768) [x86_64-linux]\n\n```", "```\n$ ls -la /opt/puppetlabs/bin/puppet\nlrwxrwxrwx 1 root root 20 Sep 22 18:42 /opt/puppetlabs/bin/puppet -> ../puppet/bin/puppet\n$ /opt/puppetlabs/puppet/bin/ruby -version\nruby 2.1.9p490 (2016-03-30 revision 54437) [x86_64-linux]\n\n```", "```\nexport PATH=/opt/puppetlabs/puppet/bin:$PATH\n\n```", "```\n    $ unzip chef-starter.zip\n    Archive:  chef-starter.zip\n     inflating: chef-repo/README.md\n     inflating: chef-repo/cookbooks/starter/files/default/sample.txt\n     inflating: chef-repo/cookbooks/starter/recipes/default.rb\n     inflating: chef-repo/cookbooks/starter/attributes/default.rb\n     inflating: chef-repo/cookbooks/starter/metadata.rb\n     inflating: chef-repo/cookbooks/starter/templates/default/sample.erb\n     inflating: chef-repo/cookbooks/chefignore\n     inflating: chef-repo/.gitignore\n     inflating: chef-repo/.chef/knife.rb\n     inflating: chef-repo/roles/starter.rb\n     inflating: chef-repo/.chef/iacbook.pem\n\n    ```", "```\n    $ cd chef-repo\n    $ knife user list\n    iacbook\n\n    ```", "```\n    $ knife upload cookbooks/starter\n    Created cookbooks/starter\n\n    ```", "```\nvm_memory = 2048\nvm_cpus = 2\n\nunless Vagrant.has_plugin?(\"vagrant-hostmanager\")\n  raise 'vagrant-hostmanager is not installed!'\nend \n\nVagrant.configure(\"2\") do |config|\n\n    config.hostmanager.enabled = true\n    config.hostmanager.manage_guest = true\n    config.hostmanager.manage_host = true\n\n    config.vm.define \"puppet.pomes.pro\" do |puppet|\n        puppet.vm.box=\"bento/ubuntu-16.04\"\n        puppet.vm.hostname=\"puppet.pomes.pro\"\n\n        puppet.vm.provider :virtualbox do |vb|\n                vb.memory = vm_memory\n                vb.cpus = vm_cpus\n        end\n\n        puppet.vm.network :private_network, ip: \"192.168.50.10\"\n        puppet.hostmanager.aliases = %w(puppet)\n        puppet.vm.provision :shell, :path => \"puppet_master.sh\"\n\n        puppet.vm.synced_folder \"puppetcode\", \"/etc/puppetlabs/code/environments/production\"\n    end\nend\n```", "```\n#!/usr/bin/env bash\n\n# Exit immediately if a command exits with a non-zero status\nset -e\n\n# puppetlabs URL\nDEBREPO=\"https://apt.puppetlabs.com/puppetlabs-release-pc1-xenial.deb\"\n\n# Install the PuppetLabs repo\necho \"Configuring PuppetLabs repo...\"\ndebrepo=$(mktemp)\nwget --output-document=${debrepo} ${DEBREPO}\ndpkg -i ${debrepo}\napt-get update\n\n# Install Puppet Server from puppetlabs\n# This will remove puppet-common package provided by the vagrant box (if any)\necho \"Installing Puppet...\"\napt-get install -y puppetserver\n\n# For tests, limit memory usage. 512m is enough\nsed -i 's/2g/512m/g' /etc/default/puppetserver\n\n# For tests, enable autosign for all csr\necho \"autosign=true\" | tee --append /etc/puppetlabs/puppet/puppet.conf\n\n# Restart puppetserver\nservice puppetserver restart\n\n# Ensure puppetserver is running and enable it on boot\n/opt/puppetlabs/bin/puppet resource service puppetserver ensure=running enable=true\n\necho \"Puppet server installed!\"\n```", "```\nmkdir puppetcode\nvagrant up\n\n```", "```\n$ cd chef-repo\n\n```", "```\n$ knife bootstrap 1.2.3.4 -N my_node_hostname -x vagrant --sudo\n\n```", "```\n$ knife bootstrap 1.2.3.4 -N my_node_hostname -x vagrant --sudo -r \"starter\" \n[...]\n192.168.146.129 resolving cookbooks for run list: [\"starter\"]\n[...]\n192.168.146.129 Recipe: starter::default\n192.168.146.129   * log[Welcome to Chef, Sam Doe!] action write\n\n```", "```\nvm_memory = 2048\nvm_cpus = 2\n\nunless Vagrant.has_plugin?(\"vagrant-hostmanager\")\n  raise 'vagrant-hostmanager is not installed!'\nend \n\nVagrant.configure(\"2\") do |config|\n\n    config.hostmanager.enabled = true\n    config.hostmanager.manage_guest = true\n    config.hostmanager.manage_host = true\n\n    config.vm.define \"puppet.pomes.pro\" do |puppet|\n        puppet.vm.box=\"bento/ubuntu-16.04\"\n        puppet.vm.hostname=\"puppet.pomes.pro\"\n\n        puppet.vm.provider :virtualbox do |vb|\n                vb.memory = vm_memory\n                vb.cpus = vm_cpus\n        end\n\n        puppet.vm.network :private_network, ip: \"192.168.50.10\"\n        puppet.hostmanager.aliases = %w(puppet)\n        puppet.vm.provision :shell, :path => \"puppet_master.sh\"\n\n        puppet.vm.synced_folder \"puppetcode\", \"/etc/puppetlabs/code/environments/production\"\n    end\n\n config.vm.define \"web.pomes.pro\" do |web|\n web.vm.box=\"bento/ubuntu-16.04\"\n web.vm.hostname=\"web.pomes.pro\"\n\n web.vm.network :private_network, ip: \"192.168.50.11\"\n\n web.vm.provision :shell, :path => \"puppet_node.sh\"\n end\nend\n```", "```\n#!/usr/bin/env bash\n\n# Exit immediately if a command exits with a non-zero status\nset -e\n\n# puppetlabs URL\nDEBREPO=\"https://apt.puppetlabs.com/puppetlabs-release-pc1-xenial.deb\"\n\n# Install the PuppetLabs repo\necho \"Configuring PuppetLabs repo...\"\ndebrepo=$(mktemp)\nwget --output-document=${debrepo} ${DEBREPO}\ndpkg -i ${debrepo}\napt-get update\n\n# Install Puppet Agent from puppetlabs\n# This will remove puppet-common package provided by the vagrant box\necho \"Installing Agent...\"\napt-get install -y puppet-agent\n\n# Ensure puppet agent is stopped for our tests\n/opt/puppetlabs/bin/puppet resource service puppet ensure=stopped enable=false\n\necho \"Puppet agent installed!\"\n```", "```\n$ dnf install httpd\n$ yum install httpd\n\n```", "```\n$ cd chef-repo/cookbooks\n$ chef generate cookbook apache\nGenerating cookbook apache\n[...]\nYour cookbook is ready. Type `cd apache` to enter it.\n[...]\nIf you'd prefer to dive right in, the default recipe can be found at:\nrecipes/default.rb\n\n```", "```\npackage \"httpd\"\n```", "```\npackage \"httpd\" do\n  action :install\nend\n```", "```\n$ knife cookbook upload apache\nUploading apache         [0.1.0]\nUploaded 1 cookbook.\n\n```", "```\n$ knife cookbook list\napache    0.1.0\nstarter   1.0.0\n\n```", "```\n    $ knife node run_list add <nodename> apache\n    nodename:\n     run_list: recipe[apache]\n\n    ```", "```\n$ sudo chef-client\nStarting Chef Client, version 12.15.19\nresolving cookbooks for run list: [\"apache\"]\nSynchronizing Cookbooks:\n - apache (0.1.0)\nInstalling Cookbook Gems:\nCompiling Cookbooks...\nConverging 1 resources\nRecipe: apache::default\n * yum_package[httpd] action install\n - install version 2.4.6-40.el7.centos.4 of package httpd\n\nRunning handlers:\nRunning handlers complete\nChef Client finished, 1/1 resources updated in 32 seconds\n\n```", "```\n$ sudo chef-client\n[...]\nRecipe: apache::default\n * yum_package[httpd] action install (up to date)\n[...]\nChef Client finished, 0/1 resources updated in 04 seconds\n\n```", "```\n$ which httpd\n/usr/sbin/httpd\n$ httpd -v\nServer version: Apache/2.4.6 (CentOS)\nServer built:   Jul 18 2016 15:30:14\n\n```", "```\n$ chef generate cookbook cookbooks/mariadb\n\n```", "```\npackage \"mariadb\" do\n  action :install\nend\n\npackage \"mariadb-server\" do\n  action :install\nend\n```", "```\n%w(mariadb mariadb-server).each do |name|\n  package name do\n    action :install\n  end\nend\n```", "```\n$ knife cookbook upload mariadb\n\n```", "```\n$ knife node run_list add <nodename> mariadb\n\n```", "```\n$ sudo chef-client\nStarting Chef Client, version 12.15.19\nresolving cookbooks for run list: [\"apache\", \"mariadb\"]\nSynchronizing Cookbooks:\n - apache (0.1.0)\n - mariadb (0.1.0)\n[...]\nRecipe: mariadb::default\n * yum_package[mariadb] action install\n - install version 5.5.50-1.el7_2 of package mariadb\n * yum_package[mariadb-server] action install\n - install version 5.5.50-1.el7_2 of package mariadb-server\n[...]\nChef Client finished, 2/3 resources updated in 25 seconds\n\n```", "```\n$ which mysql\n/usr/bin/mysql\n$ mysql --version\nmysql  Ver 15.1 Distrib 5.5.50-MariaDB, for Linux (x86_64) using readline 5.1\n\n```", "```\n$ chef generate cookbook cookbooks/php\n\n```", "```\n%w(php php-mysql).each do |name|\n  package name do\n    action :install\n  end\nend\n```", "```\n$ knife cookbook upload php\n\n```", "```\n$ knife node run_list add vagrant php\n\n```", "```\n$ sudo chef-client\n$ php --version\nPHP 5.4.16 (cli) (built: Aug 11 2016 21:24:59)\n\n```", "```\n  package { \n      'apache2:\n          ensure => installed;\n  }\n```", "```\n    mkdir modules/apache\n    mkdir modules/apache/manifests\n    mkdir modules/apache/templates\n    mkdir modules/php\n    mkdir modules/php/manifests\n    mkdir modules/php/templates\n    mkdir modules/mariadb\n    mkdir modules/mariadb/manifests\n    mkdir modules/mariadb/templates\n\n    ```", "```\n    class apache {\n            package {'apache2':\n               ensure => present,\n          }\n    }\n    ```", "```\n    class php {\n            package {['php','php-mysql','libapache2-mod-php']:\n               ensure => present,\n          }\n    }\n    ```", "```\n    class mariadb {\n            package {'mariadb-server':\n               ensure => present,\n          }\n    }\n    ```", "```\n    node 'web.pomes.pro' {\n        class {\n          'apache':;\n          'php':;\n          'mariadb':;\n        }\n    }\n    ```", "```\n$ vagrant ssh web.pomes.pro\nWelcome to Ubuntu 16.04.1 LTS (GNU/Linux 4.4.0-51-generic x86_64)\n...\n...\nvagrant@web:~$ sudo -i\nroot@web:~# puppet agent --test\nInfo: Creating a new SSL key for web.pomes.pro\nInfo: Caching certificate for ca\nInfo: csr_attributes file loading from /etc/puppetlabs/puppet/csr_attributes.yaml\nInfo: Creating a new SSL certificate request for web.pomes.pro\nInfo: Certificate Request fingerprint (SHA256): 12:9E:DD:E5:85:C9:F2:56:92:1B:92:93:0A:3C:7B:00:DE:2A:45:C0:D9:F8:F6:D0:EC:9D:0B:6E:42:7E:74:33\nInfo: Caching certificate for web.pomes.pro\nInfo: Caching certificate_revocation_list for ca\nInfo: Caching certificate for ca\nInfo: Using configured environment 'production'\nInfo: Retrieving pluginfacts\nInfo: Retrieving plugin\nInfo: Caching catalog for web.pomes.pro\nInfo: Applying configuration version '1477085080'\nNotice: /Stage[main]/Apache/Package[apache2]/ensure: created\nNotice: /Stage[main]/Php/Package[php]/ensure: created\nNotice: /Stage[main]/Php/Package[php-mysql]/ensure: created\nNotice: /Stage[main]/Php/Package[libapache2-mod-php]/ensure: created\nNotice: /Stage[main]/Mariadb/Package[mariadb-server]/ensure: created\nNotice: Applied catalog in 59.77 seconds\n\n```", "```\nservice \"service_name\" do\n  action [:enable, :start]\nend\n```", "```\nservice \"httpd\" do\n  action [:enable, :start]\nend\n```", "```\nversion '0.2.0'\n```", "```\n$ knife cookbook upload apache\n\n```", "```\n$ knife cookbook show apache\napache   0.2.0  0.1.0\n\n```", "```\n$ sudo chef-client\n\n```", "```\n$ systemctl status httpd\n\n```", "```\nservice \"mariadb\" do\n  action [:enable, :start]\nend\n```", "```\nversion '0.2.0'\n```", "```\n$ knife cookbook upload mariadb\n\n```", "```\n$ sudo chef-client\n\n```", "```\n$ systemctl status mariadb\n\n```", "```\n$ mysql -e \"show databases;\"\n+--------------------+\n| Database           |\n+--------------------+\n| information_schema |\n| test               |\n+--------------------+\n\n```", "```\nclass apache {\n        package {'apache2':\n           ensure => present,\n        }\n\n service {'apache2':\n ensure => running,\n enable => true\n }\n}\n```", "```\nclass mariadb {\n        package {'mariadb-server':\n           ensure => present,\n        }\n\n service {'mysql':\n ensure => running,\n enable => true\n }\n}\n```", "```\nfile '/var/www/html/phpinfo.php' do\n  content '<?php phpinfo(); ?>'\n  mode '0644'\n  owner 'root'\n  group 'root'\nend\n```", "```\nversion '0.2.0'\n```", "```\n$ knife cookbook upload php\n\n```", "```\n$ sudo chef-client\n\n```", "```\n$ chef generate recipe cookbooks/apache virtualhost \n\n```", "```\n$ chef generate attribute cookbooks/apache default\n\n```", "```\ndefault[\"sitename\"] = \"defaultsite\"\n```", "```\ndirectory \"/var/www/#{node[\"sitename\"]}\" do\n  owner 'root'\n  group 'root'\n  mode '0755'\n  action :create\nend\n```", "```\nfile \"/var/www/#{node[\"sitename\"]}/index.html\" do\n  owner 'root'\n  group 'root'\n  mode '0644'\n  content '<html><h1>Hello from Chef!</h1></html>'\nend\n```", "```\n$ chef generate template cookbooks/apache virtualhost\n\n```", "```\n<VirtualHost *:80>\n        ServerName <%= @website %>\n        DocumentRoot /var/www/<%= @website %>\n        ErrorLog /var/log/httpd/error-<%= @website %>.log\n        CustomLog /var/log/httpd/access-<%= @website %>.log combined\n        <Directory /var/www/<%= @website %>/ >\n          Options Indexes FollowSymLinks MultiViews\n          AllowOverride All\n          Order allow,deny\n          allow from all\n        </Directory>\n</VirtualHost>\n```", "```\ntemplate \"/etc/httpd/conf.d/#{node[\"sitename\"]}.conf\" do\n  source \"virtualhost.erb\"\n  owner 'root'\n  group 'root'\n  mode '0644'\n  variables(\n    :website => \"#{node[\"sitename\"]}\"\n  )\nend\n```", "```\nversion '0.3.0'\n```", "```\n$ knife cookbook upload apache\n\n```", "```\n$ knife node run_list add <node name> apache::virtualhost\n\n```", "```\n$ sudo chef-client\n\n```", "```\n$ sudo systemctl restart httpd\n\n```", "```\n$ curl http://node_ip_or_hostname/\n<html><h1>Hello from Chef!</h1></html>\n\n```", "```\nclass apache {\n    package {'apache2':\n       ensure => present,\n    }\n\n    service {'apache2':\n       ensure => running,\n       enable => true\n    }\n\n file {'/etc/apache2/sites-enabled/000-default.conf':\n ensure => absent,\n }\n}\n```", "```\n<VirtualHost *:80>\n  ServerName <%=$website%>\n  DocumentRoot <%=$docroot%>\n  <Directory <%=$docroot%>>\n    Order deny,allow\n    Allow from all\n    AllowOverride All\n  </Directory>\n  ErrorLog /var/log/apache2/error-<%=$website%>.log\n  CustomLog /var/log/apache2/access-<%=$website%>.log combined\n</VirtualHost>\n```", "```\ndefine apache::vhost (\n     $website,\n     $docroot\n) {\n\n  file { \"/etc/apache2/sites-available/$website.conf\":\n     ensure  => present,\n     owner   => 'root',\n     group   => 'root',\n     mode    => '0640',\n     content => epp('apache/vhost.epp',\n                     {'website' => $website, \n                      'docroot'=>$docroot}),\n  }\n\n  file { \"/etc/apache2/sites-enabled/$website.conf\":\n     ensure  => link,\n     target  => \"/etc/apache2/sites-available/$website.conf\",\n     require => File[\"/etc/apache2/sites-available/$website.conf\"],\n  }\n}\n```", "```\nnode 'web.pomes.pro' {\n    $website=$fqdn;\n    $docroot=\"/var/www/$fqdn\";\n\n    class {\n      'apache':;\n      'php':;\n      'mariadb':;\n    }\n    apache::vhost {$website:\n       website => $website,\n       docroot => $docroot,\n    }\n file { $docroot:\n ensure => directory,\n owner  => 'www-data',\n group  => 'www-data',\n mode   => '0755',\n }\n file {\"$docroot/index.php\":\n ensure  => present,\n owner   => 'www-data',\n group   => 'www-data',\n mode    => '0644',\n content => \"<?php phpinfo() ?>\",\n }\n}\n```", "```\nroot@web:~# service apache2 reload\n\n```", "```\n$ chef generate cookbook cookbooks/mysite\n\n```", "```\ninclude_recipe \"apache\"\ninclude_recipe \"apache::virtualhost\"\ninclude_recipe \"mariadb\"\ninclude_recipe \"php\"\n```", "```\ndepends \"apache\"\ndepends \"mariadb\"\ndepends \"php\"\n```", "```\nnode.override[\"sitename\"] = \"mysite\"\n```", "```\n$ knife cookbook upload mysite\n\n```", "```\n$ knife node run_list remove vagrant \"recipe[mariadb]\" \"recipe[php]\" \"recipe[apache]\" \"recipe[apache::virtualhost]\"\n\n```", "```\n$ knife node run_list add vagrant mysite\n\n```", "```\nclass mysite (\n   $website,\n   $docroot\n){\n    class {\n      'apache':;\n      'php':;\n      'mariadb':;\n    }\n    apache::vhost {$website:\n       website => $website,\n       docroot => $docroot,\n    }\n    file { $docroot:\n      ensure => directory,\n      owner   => 'www-data',\n      group   => 'www-data',\n      mode    => '0755',\n    }\n    file {\"$docroot/index.php\":\n      ensure => present,\n      owner   => 'www-data',\n      group   => 'www-data',\n      mode    => '0644',\n      content => \"<?php phpinfo() ?>\",\n    }\n}\n```", "```\nnode 'web.pomes.pro' {\n    class {\n      'mysite':\n         website     => $fqdn,\n         docroot  => \"/var/www/$fqdn\",\n    }\n}\n```", "```\nversion '0.4.0'\n```", "```\n    template \"/etc/httpd/conf.d/#{node[\"sitename\"]}.conf\" do\n      source \"virtualhost.erb\"\n      owner 'root'\n      group 'root'\n      mode '0644'\n      variables(\n        :website => \"#{node[\"sitename\"]}\"\n      )\n      notifies :restart, resources(:service => \"httpd\")\n    end\n    ```", "```\n    <VirtualHost 192.168.146.129:80>\n            ServerName <%= @website %>\n            DocumentRoot /var/www/<%= @website %>\n            ErrorLog /var/log/httpd/error-<%= @website %>.log\n            CustomLog /var/log/httpd/access-<%= @website %>.log combined\n    </VirtualHost>\n    ```", "```\n    $ knife cookbook upload apache\n\n    ```", "```\n    $ sudo chef-client\n    [...]\n     * template[/etc/httpd/conf.d/defaultsite.conf] action create\n     - update content in file /etc/httpd/conf.d/defaultsite.conf from 6f4d47 to 05ea5b\n     --- /etc/httpd/conf.d/defaultsite.conf   2016-10-17 01:05:49.243799676 +0000\n     +++ /etc/httpd/conf.d/.chef-defaultsite20161017-14052-1xt951m.conf       2016-10-17 01:10:27.452670052 +0000\n     @@ -1,4 +1,4 @@\n     -<VirtualHost *:80>\n     +<VirtualHost 192.168.146.129:80>\n     ServerName defaultsite\n     DocumentRoot /var/www/defaultsite\n     ErrorLog /var/log/httpd/error-defaultsite.log\n    [...]\n    Recipe: apache::default\n     * service[httpd] action reload\n     - reload service service[httpd]\n\n    ```", "```\nclass apache {\n    package {'apache2':\n       ensure => present,\n    }\n\n    service {'apache2':\n       ensure => running,\n       enable => true\n    }\n\n    file {'/etc/apache2/sites-enabled/000-default.conf':\n       ensure => absent,\n notify => Service['apache2'],\n    }\n}\n```", "```\ndefine apache::vhost (\n     $website,\n     $docroot\n) {\n\n  file { \"/etc/apache2/sites-available/$website.conf\":\n     ensure  => present,\n     owner   => 'root',\n     group   => 'root',\n     mode    => '0640',\n     content => epp('apache/vhost.epp', \n                      {'website' => $website, \n                       'docroot'=>$docroot}),\n  }\n\n  file { \"/etc/apache2/sites-enabled/$website.conf\":\n     ensure  => link,\n     target  => \"/etc/apache2/sites-available/$website.conf\",\n     require => File[\"/etc/apache2/sites-available/$website.conf\"],\n notify  => Service['apache2'],\n  }\n}\n```", "```\nNotice: /Stage[main]/Apache/File[/etc/apache2/sites-enabled/000-default.conf]/ensure: removed\nInfo: /Stage[main]/Apache/File[/etc/apache2/sites-enabled/000-default.conf]: Scheduling refresh of Service[apache2]\n...\n...\nNotice: /Stage[main]/Main/Node[web.pomes.pro]/Apache::Vhost[web.pomes.pro]/File[/etc/apache2/sites-enabled/web.pomes.pro.conf]/ensure: created\nInfo: /Stage[main]/Main/Node[web.pomes.pro]/Apache::Vhost[web.pomes.pro]/File[/etc/apache2/sites-enabled/web.pomes.pro.conf]: Scheduling refresh of Service[apache2]\nNotice: /Stage[main]/Apache/Service[apache2]: Triggered 'refresh' from 2 events\nNotice: Applied catalog in 45.46 seconds\n\n```", "```\n$ htpasswd -n -b mary s3cur3\nmary:$apr1$eR7H0C5r$OrhOQUTXfUEIdvWyeGGGy/\n\n```", "```\n    $ mkdir -p data_bags/webusers\n\n    ```", "```\n    $ knife data bag create webusers\n\n    ```", "```\n    {\n      \"id\": \"john\",\n      \"htpasswd\": \"$apr1$AUI2Y5pj$0v0PaSlLfc6QxZx1Vx5Se.\"\n    }\n    ```", "```\n    {\n      \"id\": \"mary\",\n      \"htpasswd\": \"$apr1$eR7H0C5r$OrhOQUTXfUEIdvWyeGGGy/\"\n    }\n    ```", "```\n    $ knife data bag from file webusers mary.json\n    Updated data_bag_item[webusers::mary]\n    $ knife data bag from file webusers john.json\n    Updated data_bag_item[webusers::john]\n\n    ```", "```\n$ knife data bag show webusers\njohn\nmary\n\n```", "```\nversion '0.2.0'\n```", "```\n    $ chef generate recipe cookbooks/mysite htaccess\n\n    ```", "```\n    users = search(:webusers, \"*:*\")\n    ```", "```\n    template \"/etc/httpd/htpasswd\" do\n      source \"htpasswd.erb\"\n      owner 'root'\n      group 'root'\n      mode '0660'\n      variables(\n        :users => users\n      )\n    end\n    ```", "```\n    $ chef generate template cookbooks/mysite htpasswd\n\n    ```", "```\n    <% @users.each do |user| -%>\n    <%= user[\"id\"] %>:<%= user[\"htpasswd\"] %>\n    <% end -%>\n    ```", "```\n    $ chef generate template cookbooks/mysite htaccess\n\n    ```", "```\n    AuthType Basic\n    AuthName \"Restricted Area\"\n    AuthUserFile /etc/httpd/htpasswd\n    Require valid-user\n    ```", "```\n    template \"/var/www/mysite/.htaccess\" do\n      source \"htaccess.erb\"\n      owner 'root'\n      group 'root'\n      mode '0644'\n    end\n    ```", "```\ninclude_recipe \"mysite::htaccess\"\n```", "```\n$ knife cookbook upload mysite\n\n```", "```\n$ cd puppetcode/hieradata\n$ mkdir nodes\n$ cat > nodes/web.pomes.pro.yaml\nwebusers:\n - id: john\n htpasswd: $apr1$AUI2Y5pj$0v0PaSlLfc6QxZx1Vx5Se\n - id: mary\n htpasswd: $apr1$eR7H0C5r$OrhOQUTXfUEIdvWyeGGGy/\n^D\n\n```", "```\n$users=hiera('webusers');\n\n```", "```\ndefine apache::htpasswd (\n     $filepath,\n     $users\n) {\n\n  file { \"$filepath\":\n     ensure  => present,\n     owner   => 'root',\n     group   => 'root',\n     mode    => '0644',\n     content => template('apache/htpasswd.erb'),\n  }\n}\n```", "```\n<% @users.each do |user| -%>\n<%= user['id'] %>:<%= user['htpasswd'] %>\n<% end -%>\n```", "```\napache::htpasswd{'htpasswd':\n       filepath => '/etc/apache2/htpasswd',\n       users    => hiera('webusers'),\n}\n```", "```\ndefine apache::htaccess (\n     $filepath,\n     $docroot\n) {\n\n  file { \"$docroot/.htaccess\":\n     ensure  => present,\n     owner   => 'root',\n     group   => 'root',\n     mode    => '0644',\n     content => template('apache/htaccess.erb'),\n  }\n}\n```", "```\nAuthType Basic\nAuthName \"Restricted Area\"\nAuthUserFile <%= @filepath %>\nRequire valid-user\n```", "```\napache::htaccess{\"$docroot-htaccess\":\n   filepath => '/etc/apache2/htpasswd',\n     docroot  => $docroot,\n  }\n```", "```\nnode 'web.pomes.pro' {\n    $website=$fqdn;\n    $docroot=\"/var/www/$fqdn\";\n $users=hiera('webusers');\n\n    class {\n      'apache':;\n      'php':;\n      'mariadb':;\n    }\n    apache::vhost{$website:\n       website => $website,\n       docroot => $docroot,\n    }\n apache::htpasswd{'htpasswd':\n filepath => '/etc/apache2/htpasswd',\n users    => hiera('webusers'),\n }\n apache::htaccess{\"$docroot-htaccess\":\n filepath => '/etc/apache2/htpasswd',\n docroot  => $docroot,\n }\n    file { $docroot:\n      ensure => directory,\n      owner   => 'www-data',\n      group   => 'www-data',\n      mode    => '0755',\n    }\n    file {\"$docroot/index.php\":\n      ensure => present,\n      owner   => 'www-data',\n      group   => 'www-data',\n      mode    => '0644',\n      content => \"<?php phpinfo() ?>\",\n    }\n}\n```", "```\n    name \"webserver\"\n    description \"An HTTP server for our application\"\n    run_list \"recipe[apache]\"\n    ```", "```\n    name \"database\"\n    description \"A database server for our application\"\n    run_list \"recipe[mariadb]\"\n    ```", "```\n    name \"mysite\"\n    description \"MySite role\"\n    run_list(\n      \"role[webserver]\",\n      \"role[database]\",\n      \"recipe[mysite]\"\n    )\n    ```", "```\n    $ knife role from file database.rb\n    Updated Role database\n    $ knife role from file webserver.rb\n    Updated Role webserver\n    $ knife role from file mysite.rb\n    Updated Role mysite\n\n    ```", "```\n    $ knife bootstrap 192.168.146.129 -N vagrant -x vagrant --sudo -r \"role[mysite]\"\n\n    ```", "```\nsource 'https://supermarket.chef.io'\n\nmetadata\n\ncookbook 'apache', path: '../apache'\ncookbook 'php', path: '../php'\ncookbook 'mariadb', path: '../mariadb'\n```", "```\n$ berks upload\nUploaded apache (0.5.0) to: 'https://api.chef.io:443/organizations/iacbook'\nUploaded mariadb (0.2.0) to: 'https://api.chef.io:443/organizations/iacbook'\nUploaded mysite (0.3.0) to: 'https://api.chef.io:443/organizations/iacbook'\nUploaded php (0.2.0) to: 'https://api.chef.io:443/organizations/iacbook'\n\n```", "```\ncookbook 'mariadb', path: '../mariadb'\n```", "```\ncookbook 'mysql', '8.0.4'\n```", "```\n    cookbook 'selinux'\n    cookbook 'yum-mysql-community', '~> 1.0'\n    ```", "```\n    depends \"mysql\" , '~> 8.0'\n    depends \"selinux\"\n    depends \"yum-mysql-community\", '~> 1.0'\n    ```", "```\n    $ berks install\n    Resolving cookbook dependencies...\n    [...]\n    Fetching cookbook index from https://supermarket.chef.io...\n    Using mysql (8.0.4)\n    Using selinux (0.9.0)\n    Using yum-mysql-community (1.0.0)\n    [...]\n\n    ```", "```\n    $ berks upload\n\n    ```", "```\n    version '0.3.1'\n    ```", "```\n    $ chef generate recipe cookbooks/mysite mysql\n\n    ```", "```\n    include_recipe \"selinux::disabled\"\n    include_recipe \"yum-mysql-community::mysql57\"\n    ```", "```\n    mysql_service 'default' do\n      port '3306'\n      version '5.7'\n      initial_root_password 'super_secure_password'\n      action [:create, :start]\n    end\n    ```", "```\n    include_recipe \"mysite::mysql\"\n    ```", "```\nname \"database\"\ndescription \"A database server for our application\"\nrun_list(\n  \"recipe[selinux::disabled]\",\n  \"recipe[yum-mysql-community::mysql57]\"\n)\n```", "```\n$ knife role from file database.rb\nUpdated Role database\n\n```", "```\n$ berks upload\n\n```", "```\n$ mysql -h 127.0.0.1 -uroot -psuper_secure_password -e \"show databases;\"\n+--------------------+\n| Database           |\n+--------------------+\n| information_schema |\n| mysql              |\n| performance_schema |\n| sys                |\n+--------------------+\n\n```", "```\n$ puppet module search mysql | head -10\nNotice: Searching https://forgeapi.puppetlabs.com ...\nNAME                  DESCRIPTION          AUTHOR            KEYWORDS\npuppetlabs-mysql      Installs, con...     @puppetlabs       mysql\nexample42-mysql       Puppet module...     @example42        mysql\ngousto-mysql          Installs, con...     @gousto \nULHPC-mysql           Configure and...     @ULHPC            mysql\naco-mysql_yumrepo     Puppet module...     @aco              mysql\nBoxUpp-mysql          A puppet modu...     @BoxUpp           mysql\nrgevaert-mysql        Manage your p...     @rgevaert         mysql\nrocha-mysql           Resources to ...     @rocha            mysql\n\n```", "```\n$ puppet module install puppetlabs-mysql\nNotice: Downloading from https://forgeapi.puppetlabs.com ...\nNotice: Installing -- do not interrupt ...\n/Users/me/.puppetlabs/etc/code/modules\n└─┬ puppetlabs-mysql (v3.9.0)\n ├── puppet-staging (v2.0.1)\n └── puppetlabs-stdlib (v4.13.1)\n\n```", "```\n$ sudo puppet resource package r10k  provider=puppet_gem \nNotice: /Package[r10k]/ensure: created\npackage { 'r10k':\n ensure => ['2.5.1'],\n}\n$ r10k version\nr10k 2.5.1\n\n```", "```\nforge 'http://forge.puppetlabs.com'\n\nmod 'puppetlabs/mysql'\n```", "```\n$ sudo puppet resource package generate-puppetfile provider=puppet_gem\nNotice: /Package[generate-puppetfile]/ensure: created\npackage { 'generate-puppetfile':\n ensure => ['0.10.0'],\n}\n\n```", "```\n$ generate-puppetfile puppetlabs/mysql\n\nInstalling modules. This may take a few minutes.\n\nYour Puppetfile has been generated. Copy and paste between the markers:\n\n=======================================================================\nforge 'http://forge.puppetlabs.com'\n\n# Modules discovered by generate-puppetfile\nmod 'puppet/staging', '2.1.0'\nmod 'puppetlabs/mysql', '3.10.0'\nmod 'puppetlabs/stdlib', '4.15.0'\n=======================================================================\n\n```", "```\nforge 'http://forge.puppetlabs.com'\n\n# Local modules\nmod 'apache', :local =>true\nmod 'php', :local =>true\nmod 'mariadb', :local =>true\n\n# Modules discovered by generate-puppetfile\nmod 'puppet/staging', '2.0.1'\nmod 'puppetlabs/mysql', '3.9.0'\nmod 'puppetlabs/stdlib', '4.13.1'\n```", "```\n$ ls modules/\napache/  mariadb/ php/\n$ r10k puppetfile install\n$ ls modules/\napache/  concat/  mariadb/ mysql/   php/     stdlib/\n\n```", "```\nnode 'web.pomes.pro' {\n    $website=$fqdn;\n    $docroot=\"/var/www/$fqdn\";\n    $users=hiera('webusers');\n\n    class {\n      'apache':;\n      'php':;\n    }\n class { 'mysql::server':\n root_password => 'super_secure_password',\n }\n    apache::vhost{$website:\n       website => $website,\n       docroot => $docroot,\n    }\n    apache::htpasswd{'htpasswd':\n       filepath => '/etc/apache2/htpasswd',\n       users    => hiera('webusers'),\n    }\n    apache::htaccess{\"$docroot-htaccess\":\n       filepath => '/etc/apache2/htpasswd',\n       docroot  => $docroot,\n    }\n    file { $docroot:\n      ensure => directory,\n      owner  => 'www-data',\n      group  => 'www-data',\n      mode   => '0755',\n    }\n    file {\"$docroot/index.php\":\n      ensure => present,\n      owner  => 'www-data',\n      group   => 'www-data',\n      mode    => '0644',\n      content => \"<?php phpinfo() ?>\",\n    }\n}\n```", "```\nvagrant@web:~$ mysql -h 127.0.0.1 -uroot -psuper_secure_password -e \"show databases;\"\n+--------------------+\n| Database           |\n+--------------------+\n| information_schema |\n| mysql              |\n| performance_schema |\n+--------------------+\n\n```"]