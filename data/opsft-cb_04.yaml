- en: Chapter 4. Using MySQL with OpenShift Applications
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第 4 章. 在 OpenShift 应用程序中使用 MySQL
- en: 'This chapter presents a number of recipes that show you how to get started
    with the OpenShift MySQL database cartridge. You will learn how to add and manage
    the MySQL cartridge, how to take MySQL database backups, and how to use Amazon
    RDS MySQL support with OpenShift applications. The specific recipes within this
    chapter are:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 本章展示了一些教程，向你展示如何开始使用 OpenShift MySQL 数据库卡带。你将学习如何添加和管理 MySQL 卡带，如何进行 MySQL 数据库备份，以及如何在
    OpenShift 应用程序中使用 Amazon RDS MySQL 支持。本章中的具体教程包括：
- en: Adding a MySQL cartridge to your application
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 向应用程序添加 MySQL 卡带
- en: Adding a phpMyAdmin cartridge to your application
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 向应用程序添加 phpMyAdmin 卡带
- en: Accessing a MySQL database from your local machine
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从本地机器访问 MySQL 数据库
- en: Connecting to a MySQL cartridge from your local machine using MySQL Workbench
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 MySQL Workbench 从本地机器连接到 MySQL 卡带
- en: Updating the MySQL max connections setting
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更新 MySQL 最大连接数设置
- en: Updating the MySQL configuration settings
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更新 MySQL 配置设置
- en: Performing scheduled MySQL database backups
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 执行定期的 MySQL 数据库备份
- en: Using an Amazon RDS MySQL DB instance with OpenShift
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 Amazon RDS MySQL 数据库实例与 OpenShift 配合使用
- en: Introduction
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍
- en: Every typical web application needs some sort of persistent data storage on
    the backend. OpenShift supports a number of options to store your data, including
    several third-party providers that liberate you from having to deal with hardware
    provisioning and database management. At the time of writing this book, OpenShift
    officially supports the MySQL, PostgreSQL, and MongoDB data stores. Apart from
    these supported databases, there are third-party downloadable database cartridges
    available for data stores, such as Redis and MariaDB. Red Hat does not support
    downloadable cartridges, so you have to use them at your own risk. This chapter
    will cover the MySQL cartridge in detail. [Chapter 5](part0070_split_000.html#page
    "Chapter 5. Using PostgreSQL with OpenShift Applications"), *Using PostgreSQL
    with OpenShift Applications*, and [Chapter 6](part0079_split_000.html#page "Chapter 6. Using
    MongoDB and Third-party Database Cartridges with OpenShift Applications"), *Using
    MongoDB and Third-party Database Cartridges with OpenShift Applications,* will
    cover the PostgreSQL and MongoDB cartridges respectively.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 每个典型的 Web 应用程序都需要某种形式的持久数据存储在后台。OpenShift 支持多种存储选项，包括几个第三方提供商，这些提供商解放你免于处理硬件配置和数据库管理。在编写本书时，OpenShift
    官方支持 MySQL、PostgreSQL 和 MongoDB 数据存储。除了这些受支持的数据库，还有可供下载的第三方数据库卡带，如 Redis 和 MariaDB。Red
    Hat 不支持这些可下载的卡带，因此你需要自行承担使用风险。本章将详细介绍 MySQL 卡带。[第 5 章](part0070_split_000.html#page
    "第 5 章. 在 OpenShift 应用程序中使用 PostgreSQL")，*在 OpenShift 应用程序中使用 PostgreSQL*，以及[第
    6 章](part0079_split_000.html#page "第 6 章. 在 OpenShift 应用程序中使用 MongoDB 和第三方数据库卡带")，*在
    OpenShift 应用程序中使用 MongoDB 和第三方数据库卡带*，将分别介绍 PostgreSQL 和 MongoDB 卡带。
- en: 'This chapter will use the PHP 5.4 application we created in [Chapter 3](part0041_split_000.html#page
    "Chapter 3. Creating and Managing Applications"), *Creating and Managing Applications*.
    If you do not have any OpenShift application running, then you can create a new
    OpenShift application by running the following command:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将使用我们在[第 3 章](part0041_split_000.html#page "第 3 章. 创建与管理应用程序")，*创建与管理应用程序*中创建的
    PHP 5.4 应用程序。如果你没有运行任何 OpenShift 应用程序，可以通过运行以下命令创建一个新的 OpenShift 应用程序：
- en: '[PRE0]'
  id: totrans-13
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: In the preceding command, we created a nonscalable application, as we have not
    used the `–s` option. If the application is nonscalable, then the database cartridges
    are installed on the same gear as the primary application gear. If you created
    a scalable application, then the database cartridge is installed on its own gear.
    This allows a database to use all the available RAM and disk space. We will cover
    scalable applications in [Chapter 11](part0131_split_000.html#page "Chapter 11. Logging
    and Scaling Your OpenShift Applications"), *Logging and Scaling Your OpenShift
    Applications*.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的命令中，我们创建了一个不可扩展的应用程序，因为我们没有使用`–s`选项。如果应用程序是不可扩展的，则数据库卡带安装在与主应用程序卡带相同的设备上。如果你创建了一个可扩展的应用程序，则数据库卡带将安装在其专用设备上。这使得数据库可以使用所有可用的
    RAM 和磁盘空间。我们将在[第 11 章](part0131_split_000.html#page "第 11 章. 记录与扩展你的 OpenShift
    应用程序")中讨论可扩展的应用程序，*记录与扩展你的 OpenShift 应用程序*。
- en: OpenShift also provides a persistent data directory to store your data. The
    persistent data directory is not scalable and, hence, should not be used with
    scalable applications. For scalable applications, you should use a third-party
    service such as Amazon S3.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: OpenShift 还提供了一个持久化数据目录来存储您的数据。该持久化数据目录不可扩展，因此不应与可扩展应用程序一起使用。对于可扩展应用程序，您应该使用像
    Amazon S3 这样的第三方服务。
- en: OpenShift supports stock-standard, security-hardened distributions of MySQL,
    PostgreSQL, and MongoDB databases. If something goes wrong, the OpenShift operation
    team is available to fix operational issues. Also, as you are using standard versions
    of databases, you are not locked inside OpenShift and can easily port your data
    if required. In this chapter, we will cover how to take periodic backups of your
    database cartridges to make sure you always have your data in case something goes
    wrong.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: OpenShift 支持标准化的、经过安全加固的 MySQL、PostgreSQL 和 MongoDB 数据库版本。如果出现问题，OpenShift 运维团队可帮助解决操作问题。而且，由于您使用的是标准版本的数据库，您不会被
    OpenShift 锁定，如果需要，您可以轻松迁移数据。在本章中，我们将介绍如何定期备份数据库插件，以确保在出现问题时您始终可以保留数据。
- en: You can also use third-party database services, such as Amazon RDS, if running
    your database in OpenShift is not possible, or you have already invested in third-party
    services. Another reason you might like to use a third-party database service
    is that the OpenShift database cartridges are not scalable. So, for applications
    where you need horizontally scalable, highly available databases, you can use
    any of the third-party database services covered in this chapter. This chapter
    will cover how to use Amazon RDS with OpenShift applications. [Chapter 5](part0070_split_000.html#page
    "Chapter 5. Using PostgreSQL with OpenShift Applications"), *Using PostgreSQL
    with OpenShift Applications*, and [Chapter 6](part0079_split_000.html#page "Chapter 6. Using
    MongoDB and Third-party Database Cartridges with OpenShift Applications"), *Using
    MongoDB and Third-party Database Cartridges with OpenShift Applications*, will
    cover third-party PostgreSQL and MongoDB cloud database services.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 如果在 OpenShift 中运行数据库不可行，或者您已经投资了第三方服务，您还可以使用第三方数据库服务，如 Amazon RDS。另一个您可能选择使用第三方数据库服务的原因是，OpenShift
    的数据库插件不具备可扩展性。因此，对于需要水平可扩展、高可用数据库的应用程序，您可以使用本章涵盖的任何第三方数据库服务。本章将介绍如何将 Amazon RDS
    与 OpenShift 应用程序结合使用。[第 5 章](part0070_split_000.html#page "第 5 章：与 OpenShift 应用程序一起使用
    PostgreSQL") *与 OpenShift 应用程序一起使用 PostgreSQL* 和[第 6 章](part0079_split_000.html#page
    "第 6 章：与 OpenShift 应用程序一起使用 MongoDB 和第三方数据库插件") *与 OpenShift 应用程序一起使用 MongoDB
    和第三方数据库插件* 将介绍第三方 PostgreSQL 和 MongoDB 云数据库服务。
- en: Adding a MySQL cartridge to your application
  id: totrans-18
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将 MySQL 插件添加到您的应用程序中
- en: 'At the time of this writing, OpenShift supports two versions of the MySQL database.
    You can view the supported MySQL versions by running the following command:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 在写作本文时，OpenShift 支持两种版本的 MySQL 数据库。您可以通过运行以下命令查看支持的 MySQL 版本：
- en: '[PRE1]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Getting ready
  id: totrans-21
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: To prepare for this recipe, you will need the `rhc` command-line client installed
    on your machine. Please refer to the *Installing the OpenShift rhc command-line
    client* recipe in [Chapter 1](part0014_split_000.html#page "Chapter 1. Getting
    Started with OpenShift"), *Getting Started with OpenShift*, for more details.
    Also, we will use the application created in the *Creating an OpenShift application
    using the rhc command-line client* recipe in [Chapter 3](part0041_split_000.html#page
    "Chapter 3. Creating and Managing Applications"), *Creating and Managing Applications*.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 为了准备本操作，您需要在机器上安装 `rhc` 命令行客户端。请参阅[第 1 章](part0014_split_000.html#page "第 1
    章：OpenShift 入门") *安装 OpenShift rhc 命令行客户端* 章节，获取更多详细信息。此外，我们将在[第 3 章](part0041_split_000.html#page
    "第 3 章：创建和管理应用程序") *使用 rhc 命令行客户端创建 OpenShift 应用程序* 章节中使用创建的应用程序。
- en: How to do it…
  id: totrans-23
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: 'Follow these steps to add the MySQL database cartridge to your OpenShift application
    and manage it:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤将 MySQL 数据库插件添加到您的 OpenShift 应用程序并进行管理：
- en: 'To add the MySQL 5.5 cartridge to the `myapp` application, open a new command-line
    terminal, change the directory to the `myapp` directory location, and execute
    the following command:'
  id: totrans-25
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要将 MySQL 5.5 插件添加到 `myapp` 应用程序中，打开一个新的命令行终端，将目录切换到 `myapp` 目录位置，并执行以下命令：
- en: '[PRE2]'
  id: totrans-26
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'This will install a new instance of the MySQL database on your application
    gear. The `-c` option is used to specify the cartridge name, and the `--app` option
    is used to specify the application name. The `--app` option is not required if
    you are running the command from within the application directory. The `-c` option
    is required, but you can get away from writing `-c` as the `rhc` command-line
    client is intelligent enough to infer that `mysql-5.5` is the cartridge name.
    This can be seen in the following command:'
  id: totrans-27
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这将会在你的应用程序 gear 上安装一个新的 MySQL 数据库实例。`-c` 选项用于指定 Cartridge 名称，`--app` 选项用于指定应用程序名称。如果你从应用程序目录中运行命令，则
    `--app` 选项不是必需的。`-c` 选项是必需的，但你可以省略 `-c`，因为 `rhc` 命令行客户端足够智能，可以推断出 `mysql-5.5`
    是 Cartridge 名称。以下命令可以看出：
- en: '[PRE3]'
  id: totrans-28
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'You can view the cartridge details using the `rhc show-cartridge` command as
    shown in the following command line:'
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你可以使用 `rhc show-cartridge` 命令查看 Cartridge 详情，如下命令行所示：
- en: '[PRE4]'
  id: totrans-30
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'To stop the MySQL database cartridge, use the `stop` command as shown in this
    command:'
  id: totrans-31
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要停止 MySQL 数据库 Cartridge，请使用如下命令中的 `stop` 命令：
- en: '[PRE5]'
  id: totrans-32
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'To restart the MySQL database cartridge, use the `restart` command as shown
    in the following command:'
  id: totrans-33
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要重新启动 MySQL 数据库 Cartridge，请使用如下命令中的 `restart` 命令：
- en: '[PRE6]'
  id: totrans-34
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Finally, if you want to remove the MySQL database from your application, you
    can use the `remove` command as shown in this command:'
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，如果你想从应用程序中删除 MySQL 数据库，可以使用如下命令中的 `remove` 命令：
- en: '[PRE7]'
  id: totrans-36
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: How it works…
  id: totrans-37
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的…
- en: 'When you run the `rhc cartridge-add` command, `rhc` will make an HTTP POST
    request to the OpenShift server. The OpenShift server will receive the request
    and instantiate a new instance of the MySQL server for your application. After
    provisioning the MySQL server, the `rhc` client will show the database details
    on the command-line terminal as follows:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 当你运行 `rhc cartridge-add` 命令时，`rhc` 会向 OpenShift 服务器发送一个 HTTP POST 请求。OpenShift
    服务器接收请求后，会为你的应用程序实例化一个新的 MySQL 服务器。MySQL 服务器配置完成后，`rhc` 客户端会在命令行终端显示数据库详情，如下所示：
- en: '[PRE8]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'You can view the MySQL installation by performing SSH into your application
    gear:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过 SSH 登录到你的应用程序 gear 来查看 MySQL 安装：
- en: '[PRE9]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Then run the `ls` command to view the gear directory structure:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 然后运行 `ls` 命令查看 gear 目录结构：
- en: '[PRE10]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: The `mysql` directory hosts your `mysql` installation. The MySQL database is
    not shared with any other OpenShift application or user. It is only for your application,
    and only your application can access it.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '`mysql` 目录托管了你的 `mysql` 安装。MySQL 数据库不与任何其他 OpenShift 应用程序或用户共享。它仅供你的应用程序使用，只有你的应用程序可以访问它。'
- en: 'You can connect to the `mysql` directory with your MySQL database using the
    `mysql` command-line client as shown in the following command:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用 `mysql` 命令行客户端连接到 `mysql` 目录并访问你的 MySQL 数据库，如下命令所示：
- en: '[PRE11]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Now, you can run SQL commands against your MySQL server. To view all the databases,
    run the following command:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，你可以对 MySQL 服务器运行 SQL 命令。要查看所有数据库，运行以下命令：
- en: '[PRE12]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'The `myapp` database corresponds to your application database. You can use
    this database for your application or create a new database using the `CREATE
    DATABASE` command. To view the uptime of your MySQL database, try running the
    following command:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: '`myapp` 数据库对应于你的应用程序数据库。你可以使用此数据库为你的应用程序服务，或者使用 `CREATE DATABASE` 命令创建一个新数据库。要查看
    MySQL 数据库的运行时间，尝试运行以下命令：'
- en: '[PRE13]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: The output shows that the MySQL server is up from the last `2573` seconds.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 输出显示 MySQL 服务器已启动 `2573` 秒。
- en: 'You can view all the available MySQL command-line utilities on the gear by
    typing `mysql` and hitting *Tab* twice:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过输入 `mysql` 并按两次 *Tab* 键，查看 gear 上所有可用的 MySQL 命令行工具：
- en: '[PRE14]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: There's more…
  id: totrans-54
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多…
- en: You can also add MySQL cartridges from the OpenShift web console. Go to [https://openshift.redhat.com/app/console/applications](https://openshift.redhat.com/app/console/applications),
    and click on the `myapp` application for details. On the `myapp` application details
    web page, you will see the option to add the MySQL database as shown in the following
    screenshot. Click on the **Add MySQL 5.5** link to add the MySQL 5.5 cartridge.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 你还可以通过 OpenShift Web 控制台添加 MySQL Cartridge。访问 [https://openshift.redhat.com/app/console/applications](https://openshift.redhat.com/app/console/applications)，然后点击
    `myapp` 应用程序以查看详情。在 `myapp` 应用程序详情页面上，你将看到添加 MySQL 数据库的选项，如下图所示。点击 **Add MySQL
    5.5** 链接以添加 MySQL 5.5 Cartridge。
- en: '![There''s more…](img/00023.jpeg)'
  id: totrans-56
  prefs: []
  type: TYPE_IMG
  zh: '![还有更多…](img/00023.jpeg)'
- en: 'Next, click on the **Add Cartridge** button to add the MySQL 5.5 cartridge
    to your application as shown in the following screenshot:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，点击 **Add Cartridge** 按钮，将 MySQL 5.5 Cartridge 添加到你的应用程序中，如下图所示：
- en: '![There''s more…](img/00024.jpeg)'
  id: totrans-58
  prefs: []
  type: TYPE_IMG
  zh: '![还有更多内容…](img/00024.jpeg)'
- en: 'After installing the MySQL cartridge, you will be shown the MySQL database
    details as follows:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 安装 MySQL 卡带后，您将看到以下 MySQL 数据库详细信息：
- en: '![There''s more…](img/00025.jpeg)'
  id: totrans-60
  prefs: []
  type: TYPE_IMG
  zh: '![还有更多内容…](img/00025.jpeg)'
- en: See also
  id: totrans-61
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另请参见
- en: The *Creating an OpenShift application using the rhc command-line client* recipe
    in [Chapter 3](part0041_split_000.html#page "Chapter 3. Creating and Managing
    Applications"), *Creating and Managing Applications*
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[第 3 章](part0041_split_000.html#page "第 3 章：创建与管理应用程序")中的 *使用 rhc 命令行客户端创建
    OpenShift 应用程序* 配方，*创建与管理应用程序*'
- en: The *Adding a phpMyAdmin cartridge to your application* recipe
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*将 phpMyAdmin 卡带添加到您的应用程序* 配方'
- en: The Accessing a MySQL database from your local machine recipe
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从本地机器访问 MySQL 数据库的配方
- en: Adding a phpMyAdmin cartridge to your application
  id: totrans-65
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将 phpMyAdmin 卡带添加到您的应用程序
- en: phpMyAdmin (which you can access at [http://www.phpmyadmin.net/](http://www.phpmyadmin.net/))
    is a free, open source, and popular tool written in the PHP programming language
    to handle the administration of the MySQL database via a web browser. In this
    recipe, you will learn how to install a phpMyAdmin cartridge to your application.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: phpMyAdmin（您可以访问 [http://www.phpmyadmin.net/](http://www.phpmyadmin.net/)）是一个免费的开源工具，使用
    PHP 编程语言编写，旨在通过 Web 浏览器管理 MySQL 数据库。在本配方中，您将学习如何将 phpMyAdmin 卡带安装到您的应用程序中。
- en: Getting ready
  id: totrans-67
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: To complete this recipe, you will need an application with a MySQL cartridge.
    Please refer to the *Adding a MySQL cartridge to your application* recipe in this
    chapter to learn how to add a MySQL cartridge.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 要完成此配方，您需要一个带有 MySQL 卡带的应用程序。请参考本章中的 *将 MySQL 卡带添加到您的应用程序* 配方，了解如何添加 MySQL 卡带。
- en: How to do it…
  id: totrans-69
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: 'This recipe will walk you through all the steps required to add a phpMyAdmin
    cartridge to the OpenShift application:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 本配方将引导您完成将 phpMyAdmin 卡带添加到 OpenShift 应用程序所需的所有步骤：
- en: 'To install the phpMyAdmin cartridge to the `myapp` application, open a new
    command-line terminal, change the directory to the `myapp` directory location,
    and execute the following command:'
  id: totrans-71
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要将 phpMyAdmin 卡带安装到 `myapp` 应用程序，请打开一个新的命令行终端，切换到 `myapp` 目录位置，然后执行以下命令：
- en: '[PRE15]'
  id: totrans-72
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Note the username and password returned by the `rhc add-cartridge` command.
    You will need the credentials to log in to phpMyAdmin. The phpMyAdmin credentials
    are the same as your MySQL database credentials, and you can view them anytime
    by executing the `rhc show-app` command.
  id: totrans-73
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 注意 `rhc add-cartridge` 命令返回的用户名和密码。您将需要这些凭据才能登录到 phpMyAdmin。phpMyAdmin 的凭据与
    MySQL 数据库的凭据相同，您可以随时通过执行 `rhc show-app` 命令查看它们。
- en: Log in to phpMyAdmin, accessible at `https://myapp-{domain-name}.rhcloud.com/phpmyadmin/`,
    using the credentials you got in step 1.
  id: totrans-74
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用步骤 1 中获得的凭据登录到 phpMyAdmin，网址为 `https://myapp-{domain-name}.rhcloud.com/phpmyadmin/`。
- en: How it works…
  id: totrans-75
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的…
- en: When you run the `rhc cartridge-add` command, the `rhc` client makes an HTTP
    POST request to the OpenShift server. The OpenShift server receives the request
    and installs the phpMyAdmin cartridge on the application gear. The phpMyAdmin
    cartridge works with all the supported application types (Java, Python, Node.js,
    Ruby, Perl, and PHP). You don't need to create PHP applications to use the phpMyAdmin
    cartridge. OpenShift will start an Apache process to run the phpMyAdmin application.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 当您运行 `rhc cartridge-add` 命令时，`rhc` 客户端会向 OpenShift 服务器发出 HTTP POST 请求。OpenShift
    服务器接收到请求后，会在应用程序硬件上安装 phpMyAdmin 卡带。phpMyAdmin 卡带适用于所有支持的应用程序类型（Java、Python、Node.js、Ruby、Perl
    和 PHP）。您无需创建 PHP 应用程序即可使用 phpMyAdmin 卡带。OpenShift 将启动一个 Apache 进程来运行 phpMyAdmin
    应用程序。
- en: Note
  id: totrans-77
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: You can only add a phpMyAdmin cartridge after you have added a MySQL cartridge
    to your application. If you try to add the phpMyAdmin cartridge before adding
    the MySQL cartridge, then you will get an error, `Cartridge 'phpmyadmin-4' cannot
    be added without mysql`. The dependency `mysql` can be satisfied with `mysql-5.5`
    or `mysql-5.1`.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 只有在将 MySQL 卡带添加到应用程序后，您才能添加 phpMyAdmin 卡带。如果在添加 MySQL 卡带之前尝试添加 phpMyAdmin 卡带，您将遇到错误，`Cartridge
    'phpmyadmin-4' cannot be added without mysql`。依赖项 `mysql` 可以通过 `mysql-5.5` 或 `mysql-5.1`
    来满足。
- en: There's more…
  id: totrans-79
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多内容…
- en: You can also add the phpMyAdmin cartridge from the OpenShift web console. Go
    to [https://openshift.redhat.com/app/console/applications](https://openshift.redhat.com/app/console/applications),
    and add the phpMyAdmin cartridge.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以从 OpenShift Web 控制台添加 phpMyAdmin 卡带。请访问 [https://openshift.redhat.com/app/console/applications](https://openshift.redhat.com/app/console/applications)，并添加
    phpMyAdmin 卡带。
- en: See also
  id: totrans-81
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另请参见
- en: The *Adding a MySQL cartridge to your application* recipe
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*将 MySQL 卡带添加到您的应用程序* 配方'
- en: The *Accessing a MySQL database from your local machine* recipe
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*从本地计算机访问MySQL数据库*配方'
- en: Accessing a MySQL database from your local machine
  id: totrans-84
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 从本地计算机访问MySQL数据库
- en: In the *Adding a MySQL cartridge to your application* recipe of this chapter,
    you learned how to access the MySQL database by performing an SSH into the application
    gear. In this recipe, you will learn how to connect with the MySQL database from
    your local machine.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章的*将MySQL载体添加到您的应用程序*配方中，您学会了通过在应用程序齿轮上执行SSH来访问MySQL数据库。在此配方中，您将学习如何从本地计算机连接到MySQL数据库。
- en: Getting ready
  id: totrans-86
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: To complete this recipe, you will need an application with a MySQL cartridge.
    Please refer to the *Adding a MySQL cartridge to your application* recipe to learn
    how to install a MySQL cartridge. Also, you will need the `mysql` command-line
    client on your machine. You can download the MySQL community server (which includes
    the `mysql` command-line client) from the official website at [http://dev.mysql.com/downloads/mysql/](http://dev.mysql.com/downloads/mysql/).
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 要完成此配方，您需要一个带有MySQL载体的应用程序。请参阅*将MySQL载体添加到您的应用程序*配方，了解如何安装MySQL载体。此外，您需要在您的计算机上安装`mysql`命令行客户端。您可以从官方网站[http://dev.mysql.com/downloads/mysql/](http://dev.mysql.com/downloads/mysql/)下载包含`mysql`命令行客户端的MySQL社区服务器。
- en: How to do it…
  id: totrans-88
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做到…
- en: 'Follow these steps to access the MySQL cartridge from your local machine:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤从本地计算机访问MySQL载体：
- en: 'Open a command-line terminal, and change the directory to the `myapp` application
    directory. Execute the following command to forward remote ports to the local
    machine:'
  id: totrans-90
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开命令行终端，并将目录更改为`myapp`应用程序目录。执行以下命令将远程端口转发到本地计算机：
- en: '[PRE16]'
  id: totrans-91
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'The output of the preceding command will list down ports along with services
    that you could use to connect from your local machine. The output is as follows:'
  id: totrans-92
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 上述命令的输出将列出您可以从本地计算机连接的端口及其服务。输出如下：
- en: '[PRE17]'
  id: totrans-93
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE17]'
- en: Connect to the MySQL server from the local `mysql` command-line client as shown
    in the following command. You can get the username and password for the MySQL
    cartridge using the `rhc show-app` or `rhc cartridge-show` `mysql` command. The
    hostname and port are available in the output of the `rhc port-forward` command.
  id: totrans-94
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按照以下命令从本地`mysql`命令行客户端连接到MySQL服务器。您可以使用`rhc show-app`或`rhc cartridge-show mysql`命令获取MySQL载体的用户名和密码。主机名和端口在`rhc
    port-forward`命令的输出中可用。
- en: '[PRE18]'
  id: totrans-95
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'Once connected to the MySQL server, you can run any valid SQL command as follows:'
  id: totrans-96
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 连接到MySQL服务器后，您可以按如下方式运行任何有效的SQL命令：
- en: '[PRE19]'
  id: totrans-97
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE19]'
- en: How it works…
  id: totrans-98
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作原理…
- en: 'In step 1, you used the `rhc port-forward` command to forward all the remote
    ports to the local machine. The `rhc port-forward` command is a wrapper around
    the SSH port. Forwarding that makes a port on the remote machine available on
    your local machine. A port on the remote machine, which would otherwise be unavailable
    to you, can be used just as if it''s on your local machine. The following command
    returns the list of ports that you can connect to from your local machine:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 在步骤1中，您使用`rhc port-forward`命令将所有远程端口转发到本地计算机。`rhc port-forward`命令是SSH端口的包装器。转发使得远程计算机上的端口在本地计算机上可用。远程计算机上本来无法访问的端口，您可以像访问本地计算机上的端口一样使用。以下命令返回您可以从本地计算机连接的端口列表：
- en: '[PRE20]'
  id: totrans-100
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: As you can see from the preceding output, the MySQL process is available at
    port `3306` on the `127.0.0.1` host.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 正如您从上述输出中看到的，MySQL进程在`127.0.0.1`主机的端口`3306`上可用。
- en: In step 2, you connected to the MySQL server from your local machine, passing
    in the username, password, host, and port of the database. After successful connection,
    you ran a SQL command in step 3.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 在步骤2中，您从本地计算机连接到MySQL服务器，传入数据库的用户名、密码、主机和端口。连接成功后，在步骤3中运行了一个SQL命令。
- en: To terminate port forwarding, just press *Ctrl* + *C* on the command-line terminal
    where the `rhc port-forward` command is running.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 要终止端口转发，请在运行`rhc port-forward`命令的命令行终端上按下*Ctrl* + *C*。
- en: See also
  id: totrans-104
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 参见
- en: The *Adding a MySQL cartridge to your application* recipe
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*将MySQL载体添加到您的应用程序*配方'
- en: The *Connecting to a MySQL cartridge from your local machine using MySQL Workbench*
    recipe
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*使用MySQL Workbench从本地计算机连接到MySQL载体*配方'
- en: Connecting to a MySQL cartridge from your local machine using MySQL Workbench
  id: totrans-107
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用MySQL Workbench从本地计算机连接到MySQL载体
- en: In the *Accessing a MySQL database from your local machine* recipe, we showed
    you how to connect to the MySQL database from the `mysql` command line from your
    local machine using port forwarding. In this recipe, you will learn how to connect
    to the MySQL database from MySQL Workbench. MySQL Workbench is a visual database
    design tool that integrates SQL development, administration, database design,
    creation, and maintenance into a single integrated development environment for
    the MySQL database system.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 在*从本地机器访问 MySQL 数据库*配方中，我们向你展示了如何通过本地机器使用端口转发，从`mysql`命令行连接到 MySQL 数据库。在本配方中，你将学习如何通过
    MySQL Workbench 连接到 MySQL 数据库。MySQL Workbench 是一个可视化的数据库设计工具，将 SQL 开发、管理、数据库设计、创建和维护集成到一个统一的开发环境中，用于
    MySQL 数据库系统。
- en: Getting ready
  id: totrans-109
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: To complete this recipe, you will need an application with a MySQL cartridge.
    Please refer to the *Adding a MySQL cartridge to your application* recipe of this
    chapter to learn how to install the MySQL cartridge. Also, you will need MySQL
    Workbench on your local machine. You can download MySQL Workbench from the MySQL
    official website at [http://dev.mysql.com/downloads/tools/workbench/](http://dev.mysql.com/downloads/tools/workbench/).
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 完成此配方，你需要一个带有 MySQL 插件的应用程序。请参考本章的*将 MySQL 插件添加到你的应用程序*配方，学习如何安装 MySQL 插件。此外，你还需要在本地机器上安装
    MySQL Workbench。你可以从 MySQL 官方网站下载 MySQL Workbench：[http://dev.mysql.com/downloads/tools/workbench/](http://dev.mysql.com/downloads/tools/workbench/)。
- en: How to do it…
  id: totrans-111
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: 'Follow these steps to connect to the MySQL cartridge from MySQL Workbench running
    on your local machine:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤，通过在本地机器上运行的 MySQL Workbench 连接到 MySQL 插件：
- en: 'Open a command-line terminal, and change the directory to the `myapp` application
    directory. Execute the following command to forward the remote ports to the local
    machine:'
  id: totrans-113
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开命令行终端，切换到`myapp`应用程序目录。执行以下命令将远程端口转发到本地机器：
- en: '[PRE21]'
  id: totrans-114
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE21]'
- en: Start the MySQL Workbench application, and you will see the following screenshot.
    Click on the plus button to add a new MySQL connection.![How to do it…](img/00026.jpeg)
  id: totrans-115
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启动 MySQL Workbench 应用程序，你将看到以下截图。点击加号按钮添加一个新的 MySQL 连接。![如何操作…](img/00026.jpeg)
- en: Set up a new connection by entering the MySQL database details. You can get
    the username and password for the MySQL cartridge using the `rhc show-app` or
    `rhc cartridge-show` `mysql` command. The hostname and port are available in the
    output of the `rhc port-forward` command. The following screenshot shows the **Setup
    New Connection** page:![How to do it…](img/00027.jpeg)
  id: totrans-116
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过输入 MySQL 数据库的详细信息设置新连接。你可以通过`rhc show-app`或`rhc cartridge-show` `mysql`命令获取
    MySQL 插件的用户名和密码。主机名和端口可在`rhc port-forward`命令的输出中找到。以下截图显示了**设置新连接**页面：![如何操作…](img/00027.jpeg)
- en: Next, test the connection by clicking on the **Test Connection** button. After
    successful connection, you will see the following dialog box with the message
    **Connection parameters are correct**:![How to do it…](img/00028.jpeg)
  id: totrans-117
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，点击**测试连接**按钮以测试连接。连接成功后，你将看到以下对话框，并显示消息**连接参数正确**：![如何操作…](img/00028.jpeg)
- en: Connect to the MySQL cartridge by clicking on the **OK** button. You will see
    the new connection listed on the MySQL Workbench screen shown in the following
    screenshot. Click on the connection to open SQL Editor.![How to do it…](img/00029.jpeg)
  id: totrans-118
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过点击**确定**按钮连接到 MySQL 插件。你将在 MySQL Workbench 界面上看到新的连接列表，点击该连接以打开 SQL 编辑器。![如何操作…](img/00029.jpeg)
- en: Now you can run any legitimate SQL query from within SQL Editor as shown in
    the following screenshot:![How to do it…](img/00030.jpeg)
  id: totrans-119
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，你可以在 SQL 编辑器中运行任何合法的 SQL 查询，如下图所示：![如何操作…](img/00030.jpeg)
- en: How it works…
  id: totrans-120
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的…
- en: In step 1, you used the `rhc port-forward` command to forward all the remote
    ports to the local machine. This makes it possible to connect to the MySQL database
    running inside your application gear. From step 2 through to step 6, you created
    a new MySQL connection and connected with the MySQL cartridge from within MySQL
    Workbench. In Step 7, you executed a SQL query using SQL Editor to check whether
    that connection is getting data from the MySQL cartridge installed in your `myapp`
    application.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 在步骤 1 中，你使用了`rhc port-forward`命令将所有远程端口转发到本地机器。这使得能够连接到你应用程序内运行的 MySQL 数据库。从步骤
    2 到步骤 6，你创建了一个新的 MySQL 连接，并通过 MySQL Workbench 连接到 MySQL 插件。在步骤 7 中，你通过 SQL 编辑器执行了一个
    SQL 查询，以检查该连接是否正在从安装在`myapp`应用程序中的 MySQL 插件获取数据。
- en: See also
  id: totrans-122
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另见
- en: The *Adding a MySQL cartridge to your application* recipe
  id: totrans-123
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*将 MySQL 插件添加到你的应用程序*配方'
- en: The *Accessing a MySQL database from your local machine* recipe
  id: totrans-124
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*从本地计算机访问 MySQL 数据库*的配方'
- en: Updating the MySQL max connections setting
  id: totrans-125
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 更新 MySQL 最大连接数设置
- en: The MySQL database will start giving too many connection errors when all the
    available connections are in use by other clients. In this recipe, you will learn
    how to update the MySQL cartridge max connections setting.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 当所有可用连接都被其他客户端占用时，MySQL 数据库将开始产生过多的连接错误。在此配方中，您将学习如何更新 MySQL 卡带的最大连接数设置。
- en: Getting ready
  id: totrans-127
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: To complete this recipe, you will need an application with a MySQL cartridge.
    Please refer to the *Adding a MySQL cartridge to your application* recipe of this
    chapter to learn how to install the MySQL cartridge.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 要完成此配方，您需要一个带有 MySQL 卡带的应用程序。请参考本章的*将 MySQL 卡带添加到你的应用程序*配方，了解如何安装 MySQL 卡带。
- en: How to do it…
  id: totrans-129
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做到…
- en: 'Follow these steps to update the MySQL max connection setting:'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤更新 MySQL 最大连接数设置：
- en: 'To set the maximum connections to `200`, open a command-line terminal, and
    run the following command:'
  id: totrans-131
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要将最大连接数设置为`200`，请打开命令行终端，并运行以下命令：
- en: '[PRE22]'
  id: totrans-132
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'After setting the environment variable, you have to restart the MySQL cartridge
    for changes to take effect using the following command:'
  id: totrans-133
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 设置环境变量后，必须使用以下命令重启 MySQL 卡带，才能使更改生效：
- en: '[PRE23]'
  id: totrans-134
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE23]'
- en: How it works…
  id: totrans-135
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的…
- en: 'The number of connections supported by the MySQL database is controlled by
    the `max_connections` system variable. The default value of `max_connections`
    is `151`. You can see the current value by running the following SQL query against
    your MySQL database. To see `max_connections` for your OpenShift application,
    SSH into the application gear, and run the following command:'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: MySQL 数据库支持的连接数由 `max_connections` 系统变量控制。`max_connections` 的默认值是 `151`。您可以通过运行以下
    SQL 查询来查看当前值。要查看 OpenShift 应用程序的 `max_connections`，请 SSH 进入应用程序 gear，并运行以下命令：
- en: '[PRE24]'
  id: totrans-137
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'One way to configure the `max_connections` system variable is to add `max_connections
    = 200` under the `[mysqld]` section in the `my.cnf` MySQL configuration file.
    This solution does not work with OpenShift as the `my.cnf` file is read-only.
    To allow users to change the `max_connections` value, OpenShift provides an environment
    variable called `OPENSHIFT_MYSQL_MAX_CONNECTIONS` that can be used to set the
    `max_connections` system variable. In step 1, you set the `OPENSHIFT_MYSQL_MAX_CONNECTIONS`
    environment variable to `200`. The MySQL server will not read the new value unless
    you restart the database. So, in step 2, you restarted the database using the
    `rhc cartridge-restart` command. To verify whether the `max_connections` value
    is updated, you can run the following SQL command again:'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 配置 `max_connections` 系统变量的一种方法是在 `my.cnf` MySQL 配置文件中的 `[mysqld]` 部分添加 `max_connections
    = 200`。此方案在 OpenShift 中不起作用，因为 `my.cnf` 文件是只读的。为了允许用户更改 `max_connections` 值，OpenShift
    提供了一个名为 `OPENSHIFT_MYSQL_MAX_CONNECTIONS` 的环境变量，可以用来设置 `max_connections` 系统变量。在第
    1 步中，您将 `OPENSHIFT_MYSQL_MAX_CONNECTIONS` 环境变量设置为 `200`。MySQL 服务器不会读取新值，除非您重启数据库。因此，在第
    2 步中，您通过 `rhc cartridge-restart` 命令重启了数据库。要验证 `max_connections` 值是否更新，您可以再次运行以下
    SQL 命令：
- en: '[PRE25]'
  id: totrans-139
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'This is the recommended way to update the MySQL `max_connections` system variable
    value. The only drawback with this approach is that you have to restart the MySQL
    database, which, depending on the circumstances, may not be the ideal way. Another
    way you could update the `max_connections` system variable is by issuing the following
    SQL command:'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 这是更新 MySQL `max_connections` 系统变量值的推荐方式。此方法的唯一缺点是您必须重启 MySQL 数据库，根据情况，这可能不是理想的方式。您还可以通过执行以下
    SQL 命令来更新 `max_connections` 系统变量：
- en: '[PRE26]'
  id: totrans-141
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: This will take immediate effect and will not require a restart. However, this
    value will be lost once the MySQL database is restarted.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 这将立即生效，并且无需重启。但是，一旦 MySQL 数据库重启，此值将会丢失。
- en: The best solution is to combine the two approaches. Run the `set global max_connections
    = 200;` SQL command to make sure `max_connections` is instantly updated, and then
    create a new environment variable using the `rhc env-set` command. This means
    the next time your MySQL database is started, it will pick the value from the
    environment variable.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 最佳方案是将两种方法结合起来。首先运行 `set global max_connections = 200;` SQL 命令，确保 `max_connections`
    被即时更新，然后使用 `rhc env-set` 命令创建一个新的环境变量。这意味着下次启动 MySQL 数据库时，它将从环境变量中获取该值。
- en: See also
  id: totrans-144
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另请参见
- en: The *Adding a MySQL cartridge to your application* recipe
  id: totrans-145
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*将 MySQL 卡带添加到你的应用程序*的配方'
- en: The *Updating the MySQL configuration settings* recipe
  id: totrans-146
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*更新 MySQL 配置设置* 配方'
- en: Updating the MySQL configuration settings
  id: totrans-147
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 更新 MySQL 配置设置
- en: The MySQL database stores its configuration settings in the `my.cnf` file. This
    file is located under the `conf` directory inside the MySQL cartridge installation.
    As mentioned in the previous recipe, OpenShift does not allow users to update
    the `my.cnf` configuration file. The solution is to use a set of environment variables
    to configure various settings of the MySQL database.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: MySQL 数据库将其配置设置存储在 `my.cnf` 文件中。该文件位于 MySQL 插件安装目录下的 `conf` 文件夹中。如前所述，OpenShift
    不允许用户更新 `my.cnf` 配置文件。解决方法是使用一组环境变量来配置 MySQL 数据库的各种设置。
- en: 'At the time of writing this book, you could configure the following MySQL settings
    through the environment variables:'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 在撰写本书时，你可以通过环境变量配置以下 MySQL 设置：
- en: '| MySQL setting | OpenShift environment variable |'
  id: totrans-150
  prefs: []
  type: TYPE_TB
  zh: '| MySQL 设置 | OpenShift 环境变量 |'
- en: '| --- | --- |'
  id: totrans-151
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| `lower_case_table_names` | `OPENSHIFT_MYSQL_LOWER_CASE_TABLE_NAMES` |'
  id: totrans-152
  prefs: []
  type: TYPE_TB
  zh: '| `lower_case_table_names` | `OPENSHIFT_MYSQL_LOWER_CASE_TABLE_NAMES` |'
- en: '| `default-storage-engine` | `OPENSHIFT_MYSQL_DEFAULT_STORAGE_ENGINE` |'
  id: totrans-153
  prefs: []
  type: TYPE_TB
  zh: '| `default-storage-engine` | `OPENSHIFT_MYSQL_DEFAULT_STORAGE_ENGINE` |'
- en: '| `max_connections` | `OPENSHIFT_MYSQL_MAX_CONNECTIONS` |'
  id: totrans-154
  prefs: []
  type: TYPE_TB
  zh: '| `max_connections` | `OPENSHIFT_MYSQL_MAX_CONNECTIONS` |'
- en: '| `ft_min_word_len` | `OPENSHIFT_MYSQL_FT_MIN_WORD_LEN` |'
  id: totrans-155
  prefs: []
  type: TYPE_TB
  zh: '| `ft_min_word_len` | `OPENSHIFT_MYSQL_FT_MIN_WORD_LEN` |'
- en: '| `ft_max_word_len` | `OPENSHIFT_MYSQL_FT_MAX_WORD_LEN` |'
  id: totrans-156
  prefs: []
  type: TYPE_TB
  zh: '| `ft_max_word_len` | `OPENSHIFT_MYSQL_FT_MAX_WORD_LEN` |'
- en: '| `innodb_use_native_aio` | `OPENSHIFT_MYSQL_AIO` |'
  id: totrans-157
  prefs: []
  type: TYPE_TB
  zh: '| `innodb_use_native_aio` | `OPENSHIFT_MYSQL_AIO` |'
- en: '| `default-time-zone` | `OPENSHIFT_MYSQL_TIMEZONE` |'
  id: totrans-158
  prefs: []
  type: TYPE_TB
  zh: '| `default-time-zone` | `OPENSHIFT_MYSQL_TIMEZONE` |'
- en: '| `table_open_cache` | `OPENSHIFT_MYSQL_TABLE_OPEN_CACHE` |'
  id: totrans-159
  prefs: []
  type: TYPE_TB
  zh: '| `table_open_cache` | `OPENSHIFT_MYSQL_TABLE_OPEN_CACHE` |'
- en: Getting ready
  id: totrans-160
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: To complete this recipe, you will need an application with a MySQL cartridge.
    Please refer to the *Adding a MySQL cartridge to your application* recipe of this
    chapter to learn how to add a MySQL cartridge to your application.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 要完成这个配方，你需要一个包含 MySQL 插件的应用程序。请参考本章的 *将 MySQL 插件添加到你的应用程序* 配方，学习如何将 MySQL 插件添加到你的应用程序中。
- en: How to do it…
  id: totrans-162
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: 'Follow these steps to update the MySQL `lower_case_table_names` configuration:'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤更新 MySQL 的 `lower_case_table_names` 配置：
- en: 'To set the `lower_case_table_names` setting, you should type the following
    command:'
  id: totrans-164
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要设置 `lower_case_table_names` 设置，你应该输入以下命令：
- en: '[PRE27]'
  id: totrans-165
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'After setting the environment variable, you have to restart the MySQL cartridge
    for changes to take effect using the following command:'
  id: totrans-166
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 设置环境变量后，你需要使用以下命令重启 MySQL 插件，以使更改生效：
- en: '[PRE28]'
  id: totrans-167
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE28]'
- en: How it works…
  id: totrans-168
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它的工作原理…
- en: The way it works is that OpenShift provides a set of environment variables that
    you can set to configure the MySQL configuration settings. After setting the environment
    variable, you have to restart the MySQL database so that it can use the new configuration
    value.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 它的工作原理是，OpenShift 提供了一组环境变量，你可以设置这些变量来配置 MySQL 的配置设置。在设置好环境变量后，你需要重启 MySQL 数据库，以便它能使用新的配置值。
- en: See also
  id: totrans-170
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另见
- en: The *Adding a MySQL cartridge to your application* recipe
  id: totrans-171
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*将 MySQL 插件添加到你的应用程序* 配方'
- en: The *Updating the MySQL max connections setting* recipe
  id: totrans-172
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*更新 MySQL 最大连接数设置* 配方'
- en: Performing scheduled MySQL database backups
  id: totrans-173
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 执行定期 MySQL 数据库备份
- en: In this recipe, you will learn how to perform a scheduled backup of your MySQL
    database and upload it to Amazon S3.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个配方中，你将学习如何执行 MySQL 数据库的定期备份并将其上传到 Amazon S3。
- en: Getting ready
  id: totrans-175
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: To complete this recipe, you will need an application with a MySQL cartridge.
    Please refer to the *Adding a MySQL cartridge to your application* recipe of this
    chapter to learn how to install the MySQL cartridge. Also, you need to have an
    Amazon AWS account. Visit [http://aws.amazon.com/](http://aws.amazon.com/), and
    sign up for a new account if you don't have one already.
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 要完成这个配方，你需要一个包含 MySQL 插件的应用程序。请参考本章的 *将 MySQL 插件添加到你的应用程序* 配方，学习如何安装 MySQL 插件。另外，你需要一个
    Amazon AWS 账户。访问 [http://aws.amazon.com/](http://aws.amazon.com/)，如果你还没有账户，请注册一个新的账户。
- en: How to do it…
  id: totrans-177
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: 'Follow these steps to schedule a daily backup of your MySQL cartridge:'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤设置 MySQL 插件的每日备份：
- en: Go to [https://console.aws.amazon.com/s3/home](https://console.aws.amazon.com/s3/home),
    and create a new bucket to store your database backups.
  id: totrans-179
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 访问 [https://console.aws.amazon.com/s3/home](https://console.aws.amazon.com/s3/home)，并创建一个新的存储桶来存储你的数据库备份。
- en: 'Add a `cron` cartridge to your application by running the following command:'
  id: totrans-180
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过运行以下命令向你的应用程序添加一个 `cron` 插件：
- en: '[PRE29]'
  id: totrans-181
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'SSH into the application gear, and download the `s3-bash` utility in `$OPENSHIFT_DATA_DIR`.
    Then, extract it to the `s3-bash` directory by running the following commands:'
  id: totrans-182
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: SSH进入应用服务器，并在`$OPENSHIFT_DATA_DIR`下载`s3-bash`工具。然后，运行以下命令将其解压到`s3-bash`目录：
- en: '[PRE30]'
  id: totrans-183
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE30]'
- en: Create a new file called `AWSSecretAccessKeyIdFile` in the `$OPENSHIFT_DATA_DIR/s3-bash`
    directory, and store your Amazon access key secret to it. This is required by
    `s3-bash` to communicate with Amazon S3.
  id: totrans-184
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`$OPENSHIFT_DATA_DIR/s3-bash`目录中创建一个名为`AWSSecretAccessKeyIdFile`的新文件，并将你的Amazon访问密钥秘密存储其中。这是`s3-bash`与Amazon
    S3通信所必需的。
- en: 'Create a script on your local machine at `.openshift/cron/minutely` named `database_backup.sh`,
    and add the following contents to it:'
  id: totrans-185
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在你的本地机器上创建一个位于`.openshift/cron/minutely`的脚本，名为`database_backup.sh`，并将以下内容添加到该脚本中：
- en: '[PRE31]'
  id: totrans-186
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE31]'
- en: The preceding script will run every day at `23:50` and run the `mysqldump` command
    to create the data dump file. The file is then transferred to Amazon S3 using
    the `s3-bash` API. Finally, after uploading the file, it deletes the SQL dump
    file from the application gear.
  id: totrans-187
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 上述脚本将每天`23:50`运行，并执行`mysqldump`命令生成数据转储文件。然后，使用`s3-bash` API将该文件传输到Amazon S3。最后，上传文件后，它会从应用服务器删除SQL转储文件。
- en: 'Create the following environment variables. Please refer to the Amazon EC2
    documentation for detailed steps on how to create access keys and `S3 bucket`.
    You then run the following commands:'
  id: totrans-188
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建以下环境变量。请参考Amazon EC2文档，了解如何创建访问密钥和`S3桶`的详细步骤。然后，运行以下命令：
- en: '[PRE32]'
  id: totrans-189
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'Following this, commit the code, and push it to the OpenShift application gear.
    The scheduled job will run every night at `23:50` (11:50 pm) to take database
    backup, and your backup will be uploaded to Amazon S3:'
  id: totrans-190
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，提交代码并将其推送到OpenShift应用服务器。该计划任务将在每晚`23:50`（11:50 pm）执行，以进行数据库备份，并将备份上传到Amazon
    S3：
- en: '[PRE33]'
  id: totrans-191
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE33]'
- en: How it works…
  id: totrans-192
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的……
- en: In step 1, you created a new Amazon S3 bucket to store your MySQL database backups.
    Amazon S3 is widely used to store static files and is an ideal choice for this
    job. Next, in step 2, you added the `cron` cartridge to your application. The
    `cron` cartridge will be used to perform daily backups at a particular time.
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 在第1步中，你创建了一个新的Amazon S3桶来存储MySQL数据库备份。Amazon S3被广泛用于存储静态文件，是进行此任务的理想选择。接下来，在第2步中，你为应用添加了`cron`插件。`cron`插件将用于在特定时间执行每日备份。
- en: Amazon S3 exposes its REST service, which users can use to perform operations
    on S3 buckets. Amazon provides many programming languages wrapped around its REST
    API to make it easy for developers to integrate with their application. As we
    wanted to keep this recipe language agnostic, we used the Amazon `S3-bash` wrapper.
    Amazon does not officially support this wrapper but it works very well nonetheless.
    In step 3, you downloaded the `s3-bash` wrapper using the `wget` utility. The
    `tar.gz` file was stored in `$OPENSHIFT_DATA_DIR`. You then extracted the `tar.gz`
    file to the `s3-bash` directory.
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: Amazon S3提供其REST服务，用户可以使用这些服务对S3桶执行操作。Amazon为多个编程语言提供了围绕其REST API的封装，方便开发者将其集成到应用中。为了保持本食谱的语言无关性，我们使用了Amazon的`S3-bash`包装器。尽管Amazon官方并不支持此包装器，但它仍然能够很好地工作。在第3步中，你使用`wget`工具下载了`s3-bash`包装器。`tar.gz`文件被存储在`$OPENSHIFT_DATA_DIR`中，然后你将其解压到`s3-bash`目录。
- en: In step 4, you created a file called `AWSSecretAccessKeyIdFile` to store the
    Amazon access key secret. The `s3-bash` wrapper uses this file for the AWS secret
    access key ID so that it does not appear in the list of running processes with
    `ps`.
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 在第4步中，你创建了一个名为`AWSSecretAccessKeyIdFile`的文件来存储Amazon访问密钥的秘密。`s3-bash`包装器使用此文件来获取AWS的秘密访问密钥ID，从而确保它不会出现在使用`ps`命令查看的运行进程列表中。
- en: 'In step 5, you created a bash script that will be executed every night at 11:50
    pm. The script first takes the database backup using the `mysqldump` command and
    then uploads the file to Amazon S3\. The filename is the current timestamp. Finally,
    after uploading the backup to S3, the script deletes the backup to save disk space.
    If your MySQL database is big, then you might want to compress the `mysqldump`
    output. You just have to update the `mysqldump` command in step 5 to the one shown
    in the following command:'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 在第5步中，你创建了一个bash脚本，该脚本将在每晚11:50 pm执行。该脚本首先使用`mysqldump`命令进行数据库备份，然后将文件上传到Amazon
    S3。文件名为当前的时间戳。最后，上传备份到S3后，脚本会删除备份文件以节省磁盘空间。如果你的MySQL数据库较大，可能希望压缩`mysqldump`的输出。你只需更新第5步中的`mysqldump`命令，使用以下命令所示的方式：
- en: '[PRE34]'
  id: totrans-197
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: In the preceding command, we have used `gzip`, a popular data compression program,
    to compress the `mysqldump` output.
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 在上述命令中，我们使用了`gzip`，一种流行的数据压缩程序，来压缩`mysqldump`输出。
- en: In Step 6, you created three environment variables required by the backup script.
    Finally, you committed the changes in step 7 and pushed them to the OpenShift
    application gear.
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 在第 6 步中，你创建了备份脚本所需的三个环境变量。最后，在第 7 步中，你提交了更改并将其推送到 OpenShift 应用程序配置。
- en: See also
  id: totrans-200
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另请参见
- en: The *Adding a MySQL cartridge to your application* recipe
  id: totrans-201
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*将 MySQL 卡片添加到你的应用程序*配方'
- en: Using an Amazon RDS MySQL DB instance with OpenShift
  id: totrans-202
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Amazon RDS MySQL DB 实例与 OpenShift
- en: '**Amazon Relational Database Service** (**Amazon RDS**) is a web service that
    makes it easy for you to set up, operate, and scale a relational database on top
    of Amazon EC2\. It provides access to MySQL, Oracle, PostgreSQL, and Microsoft
    SQL Server database engines. In addition to the standard database features, RDS
    offers the following functionality:'
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: '**Amazon 关系型数据库服务**（**Amazon RDS**）是一个 Web 服务，它使你可以轻松地在 Amazon EC2 上设置、操作和扩展关系型数据库。它提供了对
    MySQL、Oracle、PostgreSQL 和 Microsoft SQL Server 数据库引擎的访问。除了标准的数据库功能外，RDS 还提供以下功能：'
- en: Automatic database patches
  id: totrans-204
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 自动数据库补丁
- en: Automated backup
  id: totrans-205
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 自动备份
- en: Point-in-time recovery
  id: totrans-206
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 时间点恢复
- en: Vertical scaling of a database instance via a single API call
  id: totrans-207
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过单个 API 调用进行数据库实例的垂直扩展
- en: In this recipe, you will learn how to use the Amazon RDS MySQL database service
    with your OpenShift applications.
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 在本配方中，你将学习如何在 OpenShift 应用程序中使用 Amazon RDS MySQL 数据库服务。
- en: Getting ready
  id: totrans-209
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: To complete this recipe, you will need an application with a MySQL cartridge.
    Please refer to the *Adding a MySQL cartridge to your application* recipe of this
    chapter to learn how to install the MySQL cartridge. Also, you need to have an
    Amazon AWS account. Visit [http://aws.amazon.com/](http://aws.amazon.com/), and
    sign up for a new account if you don't have one already.
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 要完成此配方，你需要一个带有 MySQL 卡片的应用程序。请参考本章的*将 MySQL 卡片添加到你的应用程序*配方，学习如何安装 MySQL 卡片。另外，你需要有一个
    Amazon AWS 账户。如果你还没有，请访问 [http://aws.amazon.com/](http://aws.amazon.com/)，并注册一个新账户。
- en: How to do it…
  id: totrans-211
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: 'Follow these steps to learn how to use the Amazon RDS MySQL database with your
    OpenShift applications:'
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤，了解如何在 OpenShift 应用程序中使用 Amazon RDS MySQL 数据库：
- en: Go to [https://console.aws.amazon.com/rds/home](https://console.aws.amazon.com/rds/home),
    and then click on **Security Groups** as shown in the following screenshot:![How
    to do it…](img/00031.jpeg)
  id: totrans-213
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 访问 [https://console.aws.amazon.com/rds/home](https://console.aws.amazon.com/rds/home)，然后点击**安全组**，如下面的截图所示：![如何操作…](img/00031.jpeg)
- en: Click on the **Create DB Security Group** option to create a new security group,
    and then enter the details for your new security group (as shown in the following
    screenshot) before clicking on the **Add** button:![How to do it…](img/00032.jpeg)
  id: totrans-214
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**创建 DB 安全组**选项以创建一个新的安全组，然后在点击**添加**按钮之前，输入新安全组的详细信息（如下图所示）：![如何操作…](img/00032.jpeg)
- en: The new security group will be visible in the security group list. Click on
    the details icon to view the security group details.
  id: totrans-215
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 新的安全组将显示在安全组列表中。点击详情图标查看安全组详情。
- en: Next, configure the security group to permit ingress from all IPs. After entering
    the CIDR value `0.0.0.0/0`, click on the **Add** button as shown in the following
    screenshot:![How to do it…](img/00033.jpeg)
  id: totrans-216
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，配置安全组以允许来自所有 IP 的流量。输入 CIDR 值`0.0.0.0/0`后，点击**添加**按钮，如下图所示：![如何操作…](img/00033.jpeg)
- en: After a few seconds, the new CIDR connection type will be visible under **Security
    Group Details**:![How to do it…](img/00034.jpeg)
  id: totrans-217
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 几秒钟后，新创建的 CIDR 连接类型将在**安全组详情**下显示：![如何操作…](img/00034.jpeg)
- en: Click on the **Instances** option in the left-hand side navigation bar, and
    then click on **Launch DB Instance**:![How to do it…](img/00035.jpeg)
  id: totrans-218
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击左侧导航栏中的**实例**选项，然后点击**启动 DB 实例**：![如何操作…](img/00035.jpeg)
- en: Next, you have to choose the database engine that you want to work with. Select
    the **use MySQL database** option.
  id: totrans-219
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，你需要选择你想要使用的数据库引擎。选择**使用 MySQL 数据库**选项。
- en: Next, you have to choose whether you want to use this database for production
    or development purposes. We will choose **No**, but for production, it is recommended
    that you choose **Yes**.
  id: totrans-220
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，你需要选择是否将这个数据库用于生产还是开发目的。我们选择**否**，但对于生产环境，建议选择**是**。
- en: Then, enter the database details, which will include the MySQL version, database
    identifier, username, and password to connect to the MySQL database and many others
    as shown in the following screenshot:![How to do it…](img/00036.jpeg)
  id: totrans-221
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，输入数据库的详细信息，包括 MySQL 版本、数据库标识符、用户名和连接 MySQL 数据库的密码等，具体内容如下图所示：![如何操作…](img/00036.jpeg)
- en: On the **Additional Config** page, you have to provide the additional information
    that RDS needs to launch the MySQL database. You have to specify the database
    name, port, availability zone, DB security group, and so on. The DB security group
    is very important as we want to use the security group we created in step 3\.
    Enter the details and click on **Next Step**. Have a look at the following screenshot:![How
    to do it…](img/00037.jpeg)
  id: totrans-222
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**附加配置**页面，你需要提供RDS启动MySQL数据库所需的附加信息。你需要指定数据库名称、端口、可用区、数据库安全组等。数据库安全组非常重要，因为我们希望使用在第3步中创建的安全组。输入详细信息后点击**下一步**。请看以下截图：![操作方法…](img/00037.jpeg)
- en: Next, on the **Management Options** page, you can specify the backup and maintenance
    options for your DB instance as shown in the following screenshot:![How to do
    it…](img/00038.jpeg)
  id: totrans-223
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，在**管理选项**页面，你可以指定数据库实例的备份和维护选项，如以下截图所示：![操作方法…](img/00038.jpeg)
- en: Finally, you can review the details of your DB instance on the **Review** page.
  id: totrans-224
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，你可以在**审核**页面查看你的数据库实例的详细信息。
- en: The creation and provisioning of the new MySQL DB instance will take a minute
    or so, and once done, it will be available under the list of DB instances, as
    you can see in the following screenshot:![How to do it…](img/00039.jpeg)
  id: totrans-225
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 新MySQL数据库实例的创建和配置大约需要一分钟左右，完成后，它将出现在数据库实例列表中，正如以下截图所示：![操作方法…](img/00039.jpeg)
- en: Before you can connect to the Amazon RDS MySQL DB instance, you should know
    the details of the newly created instance. The details of the MySQL DB instance
    can be found by clicking on the details icon in the DB instance list, as you can
    see in the following screenshot:![How to do it…](img/00040.jpeg)
  id: totrans-226
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在你能够连接到Amazon RDS MySQL数据库实例之前，你需要了解新创建实例的详细信息。可以通过点击数据库实例列表中的详细信息图标来查看MySQL数据库实例的详细信息，正如以下截图所示：![操作方法…](img/00040.jpeg)
- en: After clicking on the details page icon, you can view the MySQL hostname that
    you can connect to. The host information is next to **Endpoint**, and it will
    be a subdomain of `*.rds.amazonaws.com`, as shown in the following screenshot:![How
    to do it…](img/00041.jpeg)
  id: totrans-227
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击详细信息页面图标后，你可以查看到可以连接的MySQL主机名。主机信息位于**Endpoint**旁边，且它将是`*.rds.amazonaws.com`的子域名，如以下截图所示：![操作方法…](img/00041.jpeg)
- en: 'To connect to the MySQL DB instance, you will need to have the MySQL command-line
    client on the gear. Every OpenShift application gear already has the `mysql` command-line
    agent installed, so you don''t have to do anything. Just SSH into the application
    gear using the `rhc ssh` command and then running the following command:'
  id: totrans-228
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 若要连接到MySQL数据库实例，你需要在Gear上安装MySQL命令行客户端。每个OpenShift应用Gear已经预装了`mysql`命令行代理，所以你无需做任何额外操作。只需使用`rhc
    ssh`命令SSH连接到应用Gear，然后运行以下命令：
- en: Tip
  id: totrans-229
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: The username and password corresponds to the one you created during step 10.
  id: totrans-230
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 用户名和密码对应你在第10步中创建的内容。
- en: '[PRE35]'
  id: totrans-231
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE35]'
- en: 'Once connected, you can run any SQL command. To check the uptime of your MySQL
    database, you can run the following command:'
  id: totrans-232
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦连接成功，你可以执行任何SQL命令。要检查MySQL数据库的运行时，你可以运行以下命令：
- en: '[PRE36]'
  id: totrans-233
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE36]'
- en: How it works…
  id: totrans-234
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的…
- en: Every Amazon RDS instance has a firewall that prevents any outside access to
    it. So, before you can create an Amazon RDS instance, you should create a new
    DB security group that gives access to an IP range. From step 1 through to step
    6, you created a new security group that would allow all the IP addresses to connect
    to your Amazon MySQL DB instance. The `0.0.0.0/0` value allows all the IPs to
    access the database instance. This is important with environments such as OpenShift
    that do not provide static IPs.
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 每个Amazon RDS实例都有一个防火墙，防止任何外部访问。因此，在你创建Amazon RDS实例之前，你应该创建一个新的数据库安全组，允许某个IP范围的访问。从第1步到第6步，你已经创建了一个新的安全组，允许所有IP地址连接到你的Amazon
    MySQL数据库实例。`0.0.0.0/0`值允许所有IP访问数据库实例。这在如OpenShift等不提供静态IP的环境中尤为重要。
- en: Step 7 through to step 14 helped you create a new instance of Amazon RDS MySQL
    DB. You are required to provide details related to your DB instance, and Amazon
    RDS will provision a DB instance based on the details you entered. By step 14,
    you had a running MySQL DB instance that you could connect to from the outside
    world. You can connect to it from your local machine or the OpenShift application
    gear.
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 第7步到第14步帮助你创建了一个新的Amazon RDS MySQL数据库实例。你需要提供与数据库实例相关的详细信息，Amazon RDS会根据你输入的详细信息来配置数据库实例。在第14步时，你已经有了一个可以从外部世界连接的MySQL数据库实例。你可以从本地机器或者OpenShift应用Gear连接到它。
- en: Step 15 and step 16 helped you to view the details of your MySQL DB instance.
    The most important detail is the hostname on which the MySQL DB instance is hosted.
    In step 17, you used the details to connect to the Amazon RDS MySQL DB instance
    using the `mysql` command-line client. In step 18, you ran a simple SQL query
    against your database to check its uptime.
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 步骤 15 和步骤 16 帮助你查看了 MySQL 数据库实例的详细信息。最重要的细节是 MySQL 数据库实例所托管的主机名。在步骤 17 中，你使用这些详细信息通过
    `mysql` 命令行客户端连接到 Amazon RDS MySQL 数据库实例。在步骤 18 中，你运行了一个简单的 SQL 查询以检查数据库的运行时间。
- en: There's more…
  id: totrans-238
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多…
- en: 'You can make the MySQL database connection secure by configuring the RDS instance
    to only accept SSL-encrypted connections from authorized users. To configure SSL,
    execute the following SQL command. Please replace the username with your MySQL
    DB instance username:'
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过配置 RDS 实例只接受来自授权用户的 SSL 加密连接来使 MySQL 数据库连接更加安全。要配置 SSL，请执行以下 SQL 命令。请将用户名替换为你的
    MySQL 数据库实例的用户名：
- en: '[PRE37]'
  id: totrans-240
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: 'Now, if you quit the connection and try to log in again using the `mysql` command
    mentioned in step 5, you will get an access denied error:'
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，如果你退出连接并尝试使用步骤 5 中提到的 `mysql` 命令重新登录，你将会遇到访问被拒绝的错误：
- en: '[PRE38]'
  id: totrans-242
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: 'To connect to the MySQL DB instance, you have to first download the Amazon
    RDS CA certificate. Go to `$OPENSHIFT_DATA_DIR`, and run the following `wget`
    command:'
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: 要连接到 MySQL 数据库实例，首先需要下载 Amazon RDS CA 证书。请前往 `$OPENSHIFT_DATA_DIR`，然后运行以下 `wget`
    命令：
- en: '[PRE39]'
  id: totrans-244
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: See also
  id: totrans-245
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 参见
- en: The *Adding a MySQL cartridge to your application* recipe
  id: totrans-246
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*将 MySQL 扩展包添加到应用程序* 配方'
