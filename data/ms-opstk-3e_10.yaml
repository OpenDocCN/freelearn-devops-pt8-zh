- en: '10'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '10'
- en: OpenStack Hybrid Cloud – Design Patterns
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: OpenStack混合云——设计模式
- en: “In union there is strength.”
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: “团结就是力量。”
- en: – Aesop
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: — 伊索
- en: 'As organizations continue to leverage cloud technologies, there has been a
    remarkable shift in the way cloud services are consumed through different cloud
    models. Recent studies and experiences have shown an increase in the need to adopt
    a mixed approach to using managed services across multiple vendors at the same
    time. Following the **multi-cloud** track has become a top trend where enterprises
    seek the best options to accommodate their workloads in the most efficient and
    optimized ways. In the previous parts of the book, we have demonstrated the position
    of OpenStack in cloud parlance. However, for many organizations, running only
    a private cloud environment might not be sufficient to satisfy all business requirements.
    Similarly, public cloud providers offer a wider range of service layers including
    **Infrastructure as a Service** ( **IaaS** ), **Platform as a Service** ( **PaaS**
    ), and **Software as a Service** ( **SaaS** ). However, some companies may not
    consume all services publicly for specific reasons. OpenStack’s private cloud
    might be the answer to start a cloud journey but, for whatever reason, it might
    not be enough. The compromise found for several organizations is to adopt a hybrid
    approach where both public and private clouds are used. As we have a running private
    cloud based on OpenStack, this chapter will expand the OpenStack perimeter by
    going through the following topics:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 随着组织不断利用云技术，云服务的消费方式在不同云模型之间发生了显著变化。最近的研究和经验表明，采用混合方法同时使用多个供应商的托管服务的需求不断增加。遵循**多云**路线已经成为一种趋势，企业寻求最优选择，以最有效和最优化的方式来处理其工作负载。在本书的前面部分，我们展示了OpenStack在云领域中的位置。然而，对于许多组织而言，仅运行一个私有云环境可能不足以满足所有业务需求。同样，公有云提供商提供了更广泛的服务层，包括**基础设施即服务**（**IaaS**）、**平台即服务**（**PaaS**）和**软件即服务**（**SaaS**）。然而，一些公司可能由于特定原因不会完全公开使用所有服务。OpenStack的私有云可能是开始云旅程的答案，但由于各种原因，它可能不够。多个组织的妥协方案是采用混合方法，同时使用公有云和私有云。由于我们已经有一个基于OpenStack的私有云，本章将通过以下主题扩展OpenStack的边界：
- en: Exploring the hybrid cloud model
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 探索混合云模型
- en: Revisiting the public cloud model and multi-cloud strategy
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 重新审视公有云模型和多云战略
- en: Constructing a hybrid cloud strategy with OpenStack
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用OpenStack构建混合云战略
- en: Iterating through hybrid cloud design patterns
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 迭代混合云设计模式
- en: Hybrid cloud under scope
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 混合云范围内
- en: Cloud technologies have been immensely adopted for over a decade. When moving
    from the on-premises world, organizations seek different ways to increase agility
    by finding the best offerings based on IaaS, PaaS, and SaaS models. Besides the
    versatility of the service delivery models, the next terms that started emerging
    were the private and public clouds. Other emerging models have been adopted by
    several organizations when seeking the best cloud strategy. In IT parlance, we
    can find references to an organization being multi-cloud by using more than one
    cloud provider or by combining both public and private cloud services, which makes
    a **hybrid** **cloud environment** .
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 云技术已经被广泛采用超过十年。在从本地环境迁移时，组织寻求通过根据IaaS、PaaS和SaaS模型找到最佳方案来提高敏捷性。除了服务交付模型的多样性，接下来开始出现的术语是私有云和公有云。在寻找最佳云战略时，其他新兴模型也被许多组织采用。在IT领域，我们可以看到提到一个组织是多云的，意味着它使用了多个云提供商，或者将公有云和私有云服务相结合，从而形成**混合**
    **云环境**。
- en: Defining the right cloud strategy depends on each organization’s needs, which
    vary based on geographic presence, security, and budget requirements. Ultimately,
    not every workload is permitted to move to the public cloud environment due to
    data compliance control, for example. In other cases, an organization will pick
    a public cloud provider to be present in more than one geographic location that
    has available resources on demand and start serving the business immediately.
    Before getting to grips with the hybrid cloud context, let’s look at the public
    cloud model.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 确定正确的云战略取决于每个组织的需求，这些需求因地理位置、安全性和预算要求而有所不同。最终，并不是所有的工作负载都可以迁移到公有云环境中，例如，出于数据合规控制的原因。在其他情况下，组织会选择一个公有云提供商，在多个地理位置提供按需资源，并立即开始为业务服务。在深入了解混合云的背景之前，让我们先看看公有云模型。
- en: Public cloud strategy
  id: totrans-12
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 公有云战略
- en: The rise of cloud usage has been observed more in the public cloud world. As
    *public* means *available over the internet* , organizations just needed to access
    a self-service portal to provision infrastructure on demand and enjoy elasticity
    and infinite scalability. Major cloud providers such as **Amazon Web Services**
    ( **AWS** ), **Microsoft Azure** , and **Google Cloud Platform** ( **GCP** ) keep
    extending the number of managed services in regular cycles. Public cloud consumers
    benefit from each new managed service that reduces operational overheads and consumes
    services with less effort and even with less required expertise. A presence around
    the world is another important deal for many organizations that are active globally.
    Most of the big public cloud providers have built dozens of data centers across
    several regions worldwide, making them an attractive option to support businesses
    in different locations. Hence, developers can focus on the business logic of the
    application. They can also run experimentation at a lower cost without spending
    an immense budget upfront. The public cloud has also solved the *agility mystery*
    in which startups and medium enterprises have been struggling to afford an infrastructure
    that could provide agility. Although the term *DevOps* existed even before the
    public cloud revolution, the lack of tools and, hence, the infrastructure that
    can leverage the whole agile software life cycle has been a major barrier. Before
    the introduction of the public cloud realm, the **Infrastructure as Code** ( **IaC**
    ) concept was just a theory.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 云计算的使用增长更多地出现在公共云领域。由于*公共*意味着*可以通过互联网访问*，组织只需要访问自服务门户，就可以按需提供基础设施，并享受弹性和无限的可扩展性。主要的云服务提供商如**亚马逊网络服务**（**AWS**）、**微软
    Azure**和**谷歌云平台**（**GCP**）不断在定期的周期中扩展管理服务的数量。公共云消费者从每一个新的管理服务中获益，这些服务减少了运营开销，并且以更少的努力，甚至更少的专业知识，来消费这些服务。全球化的覆盖是许多全球活跃的组织的另一个重要因素。大多数大型公共云提供商在全球多个区域建立了数十个数据中心，使得它们成为支持不同位置业务的有吸引力的选择。因此，开发人员可以专注于应用程序的业务逻辑。他们还可以以较低的成本进行实验，而无需提前投入大量预算。公共云还解决了*敏捷性难题*，许多初创公司和中型企业一直难以负担能够提供敏捷性的基础设施。尽管*DevOps*一词早在公共云革命之前就存在，但由于缺乏工具以及无法利用整个敏捷软件生命周期的基础设施，这一直是一个主要障碍。在公共云领域出现之前，**基础设施即代码**（**IaC**）概念仅仅是一个理论。
- en: Operation teams will not spend the same time and effort on traditional administrative
    tasks but, rather, will seek better performance metrics such as latency and response
    time. Infrastructure resources available from public cloud providers are offered
    without limits to consumers. However, the underlying resources are, at some point,
    still limited. Public cloud providers regularly estimate the resource utilization
    per region, per availability zone, and even per server rack. With local teams
    actively monitoring and extending the resource pools on demand, cloud consumers
    do not need to worry about limits as they can still request more when needed.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 运营团队将不再花费相同的时间和精力在传统的行政任务上，而是会寻求更好的性能指标，如延迟和响应时间。公共云提供商提供的基础设施资源没有限制。然而，底层资源在某些时刻仍然是有限的。公共云提供商定期评估每个区域、每个可用区甚至每个服务器机架的资源使用情况。由于本地团队会积极监控并根据需求扩展资源池，云消费者无需担心限制，因为他们仍然可以在需要时请求更多资源。
- en: 'Today, most of the public cloud vendors offer different service delivery models
    including IaaS, PaaS, and SaaS. As shown in the following figure, moving from
    left to right, more layers fall under the responsibility of the cloud provider.
    Most cloud providers aim to offer the three service delivery models that can be
    found in major hyperscale public cloud providers (IaaS, PaaS, and SaaS), but not
    all private providers cover all three. As shown in the next figure, each service
    model defines the perimeter of responsibility shared between a cloud provider
    and cloud consumers:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 如今，大多数公共云供应商提供不同的服务交付模型，包括 IaaS、PaaS 和 SaaS。如下面的图所示，从左到右，越来越多的层级落在云提供商的责任范围内。大多数云提供商旨在提供可以在主要超大规模公共云提供商（IaaS、PaaS
    和 SaaS）中找到的三种服务交付模型，但并非所有的私人提供商都涵盖这三者。如下一图所示，每个服务模型定义了云提供商和云消费者之间共享的责任边界：
- en: '![Figure 10.1 – The responsibility boundaries of cloud service models](img/B21716_10_01.jpg)'
  id: totrans-16
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.1 – 云服务模型的责任边界](img/B21716_10_01.jpg)'
- en: Figure 10.1 – The responsibility boundaries of cloud service models
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.1 – 云服务模型的责任边界
- en: In a traditional on-premises environment, an organization is fully responsible
    for managing all different aspects of the workload running in its infrastructure.
    By moving to a cloud environment, the burden of management and operation is reduced
    when moving from an IaaS to a SaaS model.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 在传统的本地环境中，组织需要全面负责管理其基础设施中运行的所有不同工作负载。通过迁移到云环境，从IaaS到SaaS模型的过渡，管理和运营的负担得到减轻。
- en: We should also add the innovation aspect when choosing a cloud service provider.
    With the rise of each new trending technology, public cloud vendors rush to wrap
    a managed service and make it available for consumption. Taking the example of
    the booming **Artificial Intelligence** ( **AI** ) realm, at the time of writing
    this edition, we find that most of the big public cloud players have harnessed
    notable initiatives for AI. AWS has brought its **Bedrock** cloud service to life
    as a generative AI-specific PaaS in the cloud. Microsoft Azure has quickly run
    to partner with OpenAI, a private AI research organization, and ended up bringing
    it under the umbrella of the Azure AI Service suite. GCP built its own AI PaaS
    platform named **Vertex AI** .
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 在选择云服务提供商时，我们还应该考虑创新因素。随着每个新兴技术的兴起，公共云供应商纷纷推出托管服务，并使其可供使用。以蓬勃发展的**人工智能**（**AI**）领域为例，在撰写本版时，我们发现大多数大型公共云厂商都已推出显著的AI计划。AWS推出了其**Bedrock**云服务，作为一种专门针对生成性AI的PaaS平台。微软Azure迅速与私营AI研究机构OpenAI合作，并最终将其纳入Azure
    AI服务套件中。GCP则构建了自己的AI PaaS平台，命名为**Vertex AI**。
- en: 'AI-managed services in the public cloud can take different names and choosing
    a cloud provider can be a challenging decision. The answer can be simple: *it*
    *really depends!*'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 公共云中的AI托管服务有不同的名称，选择一个云服务提供商可能是一个具有挑战性的决定。答案可能很简单：*这* *真的取决于！*
- en: That answers not only the given AI case but also, ultimately, each new similar-sounding
    service with each cloud provider. For that reason, organizations facing the *paradox
    of choices* should invest time and budget to learn about the new edge service,
    give it an experimental milestone, and conclude whether it fits with what they
    need or not.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 这不仅回答了给定的AI案例，也最终涵盖了每个云服务提供商推出的类似新服务。因此，面临*选择悖论*的组织应该投入时间和预算来了解新的前沿服务，给它设定一个实验性里程碑，并得出是否符合他们需求的结论。
- en: A gazillion advantages can be noted from adopting a public cloud approach. On
    the other hand, after a few months and years of consuming public cloud services,
    organizations have started observing a few shortcomings. The adoption of the public
    cloud is based on a **pay-as-you-go** model; this is what has convinced enterprises
    that it is the right choice to reduce the costs of traditional infrastructure.
    However, if it is not carefully analyzed, it could be more expensive than planned.
    Whether a business is migrating to the cloud or is born in it, as reflected in
    the approaches to investment, building a business case and determining the **Return
    On Investment** ( **ROI** ) is a must-do practice that should be done at the start
    of the journey. A simple business case should look at the capital expenditure
    and cost when leveraging public cloud resources per workload. For example, an
    application can run on top of one or several virtual machines. A virtual machine
    that assumingly runs 100% of the time can keep a linear cost curve. If this is
    not carefully tagged and tracked from the cost point of view, operation teams
    can easily lose track of where the budget is spent. **Hyperscaler** providers
    offer transparent billing options and more granular cost breakdown views to help
    customers understand their usage. However, in most cases, optimizing workload
    spending would require some changes to its architecture and infrastructure components.
    The fear of such changes breaking things in production could discourage operators
    from taking that experimental cost optimization step. Cost in the public cloud
    world can be a major disadvantage if it is not estimated in advance. For that
    reason, a **Financial Operations** ( **FinOps** ) discipline has been created
    that aims to make financial accountability to the cloud a collective matter between
    IT, finance, and business teams. To read more about FinOps, you can check the
    official FinOps foundation website, which can be found at [https://www.finops.org/](https://www.finops.org/)
    .
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 采用公有云方法可以带来无数的优势。另一方面，经过几个月和几年的公有云服务使用后，组织开始注意到一些不足之处。公有云的采用是基于**按需付费**模式；正是这种模式让企业相信它是减少传统基础设施成本的正确选择。然而，如果没有仔细分析，它可能比预期的更昂贵。无论一个企业是迁移到云端，还是天生就是云端企业，如同投资方法所体现的那样，建立商业案例和确定**投资回报率**（**ROI**）是必须在旅程开始时就进行的实践。一个简单的商业案例应该考虑到利用公有云资源时每个工作负载的资本支出和成本。例如，一个应用可以运行在一个或多个虚拟机之上。假设一台虚拟机
    100% 的时间都在运行，那么它的成本曲线将保持线性。如果从成本角度没有仔细标记和跟踪，这样操作团队很容易失去对预算花费的控制。**超级云服务提供商**提供透明的计费选项和更细粒度的成本拆解视图，帮助客户理解他们的使用情况。然而，在大多数情况下，优化工作负载支出需要对其架构和基础设施组件进行一些更改。担心这些更改可能会导致生产环境出现问题，可能会使操作人员不敢采取实验性的成本优化措施。在公有云中，如果事先没有估算好，成本可能成为一个主要的劣势。因此，**财务运维**（**FinOps**）学科应运而生，旨在让云端的财务责任成为
    IT、财务和业务团队之间的集体事务。欲了解更多有关 FinOps 的信息，您可以访问官方的 FinOps 基金会网站，网址是[https://www.finops.org/](https://www.finops.org/)
    。
- en: The next issue with public cloud usage is security and compliance concerns.
    When public cloud providers started exposing managed services, security teams
    brought forth questions about where and how the data was being transferred and
    stored. Although public providers have clarified their compliance certifications
    that prove their underlying infrastructure security, several organizations are
    still not comfortable spreading their data in locations other than their own data
    centers. We know that some compliance controls, such as **Sarbanes-Oxley** ( **SOX**
    ), **International Standards Organization** **(ISO** ), and so on, are well supported
    by public cloud providers. However, organizations that operate around the globe
    should have a hosting infrastructure compliant with each region that is running
    its business. Taking the example of the **General Data Protection Regulation**
    ( **GDPR** ) compliance standard within the **European Union** ( **EU** ), cloud
    providers such as AWS had to take rigorous measurements to protect data for transfer
    from the EU to non-EU countries and regions. Hence, any region other than the
    EU must also comply with it.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 公有云使用中的另一个问题是安全性和合规性问题。当公有云提供商开始提供托管服务时，安全团队提出了关于数据传输和存储的地点和方式的问题。尽管公有云提供商已经澄清了其合规性认证，证明其底层基础设施的安全性，但许多组织仍不愿将数据分散存储在自己数据中心以外的地方。我们知道，一些合规控制，如**萨班斯-奥克斯利法案**（**SOX**）、**国际标准化组织**（**ISO**）等，得到了公有云提供商的良好支持。然而，全球范围内运营的组织应该拥有符合其经营所在地区的托管基础设施。以**欧洲联盟**（**EU**）内的**通用数据保护条例**（**GDPR**）合规标准为例，像AWS这样的云提供商必须采取严格的措施，保护数据从欧盟传输到非欧盟国家和地区。因此，欧盟以外的任何地区也必须遵守此规定。
- en: 'From a security standpoint, cloud providers define security accountability
    as a shared model between the provider and the consumer. As highlighted in the
    following diagram, AWS defines the perimeter of security responsibilities *in*
    and *of* the cloud in its **shared** **responsibility model** :'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 从安全角度来看，云服务提供商将安全责任定义为提供商与消费者之间的共享模型。正如下图所示，AWS在其**共享** **责任模型**中定义了云的安全责任边界：
- en: '![Figure 10.2 – The AWS shared responsibility model](img/B21716_10_02.jpg)'
  id: totrans-25
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.2 – AWS共享责任模型](img/B21716_10_02.jpg)'
- en: Figure 10.2 – The AWS shared responsibility model
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.2 – AWS共享责任模型
- en: The orange layer is where the provider defines its responsibility to secure
    the underlying infrastructure and make sure it is compliant with regional regulations.
    That covers not only security but also resiliency and service availability, which
    varies from one service to another. To read more about the *AWS Risk and Compliance*
    whitepaper, refer to the AWS Compliance web page at [https://aws.amazon.com/compliance/](https://aws.amazon.com/compliance/)
    .
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 橙色层表示提供商定义其责任，确保底层基础设施的安全，并确保其符合区域法规。这不仅涵盖了安全，还包括弹性和服务可用性，这在不同服务之间有所不同。如需了解更多关于*AWS风险与合规*的白皮书，请参考AWS合规网页：[https://aws.amazon.com/compliance/](https://aws.amazon.com/compliance/)。
- en: The next concerning point on the list is the lack of full control over the cloud
    infrastructure. At first glance, the preceding diagram might seem counterintuitive.
    The fact that organizations are looking for a public cloud offering is mainly
    due to running faster time to market without the need to get their hands into
    the hardware details or underlying networking devices. That can be a fair reason
    to adopt the public cloud, but what about when we need the customization of the
    underlying hardware? As that is managed only by the vendor, consumers will not
    have control over it. That might sound odd from the first reflection, but compared
    to traditional on-premises models, sometimes application teams ask for certain
    hardware combinations with granular specifications that cannot be found in the
    public cloud. Network teams, in some edge cases, could be asked to build a network
    map that is not convenient in the public cloud world. Coming from the on-premises
    world, cloud consumers might have some expectations of having a certain degree
    of control of the underlying infrastructure that is not feasible at the beginning.
    That can turn into accepting such limitations at the cost of architecting a complex
    network setup. On the other hand, some cloud providers have responded to many
    customers’ requests and provided certain ways of controlling how hardware can
    be provisioned to run specific workloads. For example, AWS offers a **dedicated
    instances** feature that allows for running a bunch of EC2 instances on hardware
    that is dedicated to a single AWS environment and isolates them from sharing the
    underlying physical machines with other instances belonging to other AWS environments.
    Although cloud providers are aware of such limits, which is the purpose of the
    **managed services model** , enterprises keep seeking the maximum number of ways
    of having control over the cloud to achieve the best results.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 列表中的下一个关注点是缺乏对云基础设施的完全控制。从表面上看，前面的图表可能显得不太直观。组织选择公有云服务的主要原因是可以更快地将产品推向市场，无需深入了解硬件细节或底层网络设备。这是采用公有云的一个合理原因，但当我们需要定制底层硬件时怎么办？由于这仅由供应商管理，消费者将无法控制它。从第一反应来看，这可能显得有些奇怪，但与传统的本地部署模式相比，有时应用团队会要求某些硬件组合和细化的规格，而这些在公有云中无法找到。在某些边缘情况下，网络团队可能会被要求构建在公有云环境下不方便实现的网络拓扑图。来自本地部署环境的云消费者可能对底层基础设施有一定的控制期望，而这在初期是不可行的。这可能变成接受这些限制，代价是构建一个复杂的网络设置。另一方面，一些云服务商已经回应了许多客户的需求，提供了控制硬件配置的方式，以便运行特定工作负载。例如，AWS
    提供了 **专用实例** 功能，允许在专门为单一 AWS 环境提供的硬件上运行一批 EC2 实例，并将这些实例与其他 AWS 环境中的实例隔离，避免它们共享底层物理机器。虽然云服务提供商已经意识到这些限制，这也是
    **托管服务模式** 的目的，但企业仍在不断寻找更多方式来控制云环境，以达到最佳效果。
- en: The last public cloud drawback point is the vendor lock-in dilemma. Protection
    from lock-in situations is a major requirement for most enterprises that seek
    to be *infrastructure-agnostic* before being *cloud-agnostic* . Moving freely
    between environments and platforms is a luxury driver for many businesses to stay
    economical with resource usage and respond to development requirements when needed.
    Lock-in can take different forms. For example, let’s say that an organization
    wishes to move its workload running on a virtual machine between different cloud
    providers or on-premises. That would require a longer time for planning and testing
    before doing such a move, such as building a private connection between the cloud
    source and the environment destination(s), building the application artifact,
    deploying it in the target environment, and testing it. The good news, thanks
    to some amazing open source initiatives, is that containerization technology has
    been a rockstar that has enabled standardized application deployment to a certain
    degree. Hence, moving between environments is a matter of connecting them with
    a shared container registry. The other vendor lock-in form is the way of managing
    the infrastructure itself. We have highlighted previously how the IaC concept
    started shining only when the public cloud went into action. As soon as more services
    and resources became overwhelming to manage, public cloud providers built the
    right managed service to codify the infrastructure. We can find, for example,
    **CloudFormation** in AWS, **Azure Deployment Manager** in Azure, and **Cloud
    Deployment Manager** in GCP. If you land in AWS and start writing code templates
    for your AWS resources, it won’t be a viable option if you later plan to use the
    same code abstract in GCP or Azure. Being cloud-agnostic when it comes to IaC
    is almost a religious matter for many enterprises. In many cases, those enterprises
    skip learning any of those resource management tools and stick to cloud-agnostic
    ones such as **Terraform** and **Pulumi** .
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 公共云的最后一个缺点是供应商锁定困境。防止被锁定的情况是大多数企业在追求*基础设施无关*之前需要*云无关*的主要要求。能够在不同环境和平台之间自由切换，是许多企业为了保持资源使用经济性并在需要时响应开发需求的奢侈驱动因素。锁定有不同的表现形式。例如，假设一个组织希望在不同的云提供商或本地环境之间迁移其运行在虚拟机上的工作负载。为了进行这种迁移，在执行之前需要更多的计划和测试，例如在云源和目标环境之间建立专用连接，构建应用程序工件，将其部署到目标环境并进行测试。好消息是，得益于一些了不起的开源倡议，容器化技术成为了推动标准化应用部署的明星，使得在环境之间的迁移变得更为简单。现在，环境之间的迁移只需要通过共享的容器注册表进行连接。另一种供应商锁定的形式是基础设施管理的方式。我们之前已经强调过，只有当公共云投入使用时，IaC（基础设施即代码）概念才开始崭露头角。随着更多的服务和资源变得难以管理，公共云提供商构建了适当的托管服务来编写基础设施代码。例如，我们可以在AWS中找到**CloudFormation**，在Azure中找到**Azure
    Deployment Manager**，在GCP中找到**Cloud Deployment Manager**。如果你进入AWS并开始为你的AWS资源编写代码模板，那么如果你以后计划在GCP或Azure中使用相同的代码抽象，这将不可行。对于许多企业而言，IaC的云无关性几乎是一个宗教问题。在很多情况下，这些企业跳过了学习任何这些资源管理工具，而坚持使用像**Terraform**和**Pulumi**这样的云无关工具。
- en: As this section summarizes why the public cloud matters and what can be feared
    from adopting it, the next section will show in the same way why the hybrid cloud
    model should be considered.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 本节总结了为什么公共云如此重要，以及采纳公共云可能带来的担忧，接下来的部分将以相同的方式展示为什么混合云模型应该被考虑。
- en: Hybrid cloud strategy
  id: totrans-31
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 混合云战略
- en: 'Based on several *state of the cloud* reports, numbers show the continued growth
    of public cloud services adoption. The *RightScale State of the Cloud Report*
    from *Flexera* (more recently known as *Flexera State of the Cloud Report* ) has
    been following the state of the art of cloud adoption. For more than 12 years,
    Flexera has been conducting surveys of corporate cloud users from small to large
    enterprises. A few interesting numbers are highlighted based on the survey report
    of 2019 ( [https://resources.flexera.com/web/media/documents/rightscale-2019-state-of-the-cloud-report-from-flexera.pdf](https://resources.flexera.com/web/media/documents/rightscale-2019-state-of-the-cloud-report-from-flexera.pdf)
    ), showing that organizations run more than 38% of their workloads in the public
    cloud. Meanwhile, more PaaS services are being adopted and keep skyrocketing with
    50% growth compared to the previous year. The same report shows that 38% of companies
    see the public cloud as a top priority for their IT infrastructure compared to
    the previous year’s 29%. Those numbers seem to be promoting public cloud adoption
    overall. However, we might be surprised by some findings in the same State of
    the Cloud report where enterprises expressed their will to combine public and
    private clouds for their IT usage. As per the report in 2018, 51% of companies
    were looking for a hybrid cloud strategy, which grew in the following year to
    reach 58%. This pattern might match with another *State of Cloud Adoption Report*
    conducted by Forbes in 2017 ( [https://www.forbes.com/sites/louiscolumbus/2017/04/23/2017-state-of-cloud-adoption-and-security/?sh=69d3eacd1848](https://www.forbes.com/sites/louiscolumbus/2017/04/23/2017-state-of-cloud-adoption-and-security/?sh=69d3eacd1848)
    ) showing that hybrid cloud adoption has been increasing by about three times
    compared to the previous years (increasing from 19% to 57%). The following figure
    illustrates the growth of hybrid model adoption between 2015 and 2016, taken from
    the Forbes 2017 report. We can clearly see that both public and private cloud
    adoption decreased in favor of a hybrid model:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 根据几份*云计算状态*报告，数据显示公共云服务的采用持续增长。*Flexera*的*RightScale 云计算状态报告*（最近更名为*Flexera
    云计算状态报告*）一直在跟踪云计算采用的最新动态。超过12年来，Flexera一直在对从小型到大型企业的企业云用户进行调查。根据2019年调查报告（[https://resources.flexera.com/web/media/documents/rightscale-2019-state-of-the-cloud-report-from-flexera.pdf](https://resources.flexera.com/web/media/documents/rightscale-2019-state-of-the-cloud-report-from-flexera.pdf)），一些有趣的数字被突出显示，报告显示组织在公共云上运行了超过38%的工作负载。同时，更多的PaaS服务被采用，并且相比去年增长了50%。同一份报告还显示，38%的公司将公共云视为其IT基础设施的首要任务，而去年为29%。这些数字似乎在整体上推动了公共云的采用。然而，我们可能会被同一份云计算状态报告中的一些发现所惊讶，其中企业表示希望将公共云和私有云结合用于其IT使用。根据2018年的报告，51%的公司正在寻找混合云策略，而这一比例在次年增长至58%。这一趋势可能与《福布斯2017年云计算采用状况报告》（[https://www.forbes.com/sites/louiscolumbus/2017/04/23/2017-state-of-cloud-adoption-and-security/?sh=69d3eacd1848](https://www.forbes.com/sites/louiscolumbus/2017/04/23/2017-state-of-cloud-adoption-and-security/?sh=69d3eacd1848)）中的另一个*云计算采用状态报告*相吻合，报告显示混合云的采用增长了大约三倍（从19%增长到57%）。下图展示了2015年至2016年期间混合云模型采用的增长情况，数据摘自福布斯2017年报告。我们可以清楚地看到，公共云和私有云的采用都有所下降，而混合云模型的采用则有所上升：
- en: '![Figure 10.3 – Types of cloud models used based on the Forbes State of Cloud
    Adoption Report 2017 report](img/B21716_10_03.jpg)'
  id: totrans-33
  prefs: []
  type: TYPE_IMG
  zh: '![图10.3 – 根据福布斯2017年云计算采用报告使用的云模型类型](img/B21716_10_03.jpg)'
- en: Figure 10.3 – Types of cloud models used based on the Forbes State of Cloud
    Adoption Report 2017 report
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.3 – 根据福布斯2017年云计算采用报告使用的云模型类型
- en: 'Although those statistics are from seven years ago, the 2024 *Flexera State
    of the Cloud Report* ( [https://www.flexera.com/about-us/press-center/flexera-2024-state-of-the-cloud-managing-spending-top-challenge](https://www.flexera.com/about-us/press-center/flexera-2024-state-of-the-cloud-managing-spending-top-challenge)
    ) demonstrates that hybrid cloud adoption remains the most preferred option for
    several organizations. By gaining more cloud experience and with more cloud lessons,
    organizations have decided to move to a multi-cloud pattern (either with different
    public or private providers or by combining both). With each public cloud move,
    a company combines the public world with the private cloud. As shown in the latest
    report, about 73% of surveyed cloud decision-makers and cloud enthusiasts consider
    a hybrid cloud strategy for their IT infrastructure:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管这些统计数据来自七年前，但2024年*Flexera云计算状态报告*（ [https://www.flexera.com/about-us/press-center/flexera-2024-state-of-the-cloud-managing-spending-top-challenge](https://www.flexera.com/about-us/press-center/flexera-2024-state-of-the-cloud-managing-spending-top-challenge)
    ）表明，混合云的采用仍然是许多组织首选的方案。通过积累更多的云计算经验和教训，组织已经决定转向多云模式（无论是不同的公共或私有提供商，还是将两者结合）。随着每一次公共云的转移，公司将公共云与私有云相结合。如最新报告所示，约73%的受访云决策者和云爱好者考虑将混合云战略应用于他们的IT基础设施：
- en: '![Figure 10.4 – The results of a multi-cloud adoption survey based on the Flexera
    2024 State of the Cloud Report](img/B21716_10_04.jpg)'
  id: totrans-36
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.4 – 基于Flexera 2024年云计算状态报告的多云采纳调查结果](img/B21716_10_04.jpg)'
- en: Figure 10.4 – The results of a multi-cloud adoption survey based on the Flexera
    2024 State of the Cloud Report
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.4 – 基于Flexera 2024年云计算状态报告的多云采纳调查结果
- en: 'There are various reasons that explain the expansion of hybrid cloud model
    usage. The best definition to get started with is how Gartner defines a hybrid
    cloud environment: *“Hybrid cloud computing refers to policy-based and coordinated
    service provisioning, use, and management across a mixture of internal and external
    cloud services”* ( [https://www.gartner.com/en/information-technology/glossary/hybrid-cloud-computing](https://www.gartner.com/en/information-technology/glossary/hybrid-cloud-computing)
    ). In a nutshell, the combination of more than one public and private cloud addresses
    the shortcomings of using only public or private clouds. We can see that hybrid
    models can satisfy what organizations could not find in the public or private
    model. Let’s iterate through some advantages brought by the adoption of the hybrid
    cloud model:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 有多种原因解释了混合云模型使用的扩展。最好的入门定义是Gartner对混合云环境的定义：*“混合云计算是指基于政策并协调的服务提供、使用和管理，涉及内部和外部云服务的混合”*（
    [https://www.gartner.com/en/information-technology/glossary/hybrid-cloud-computing](https://www.gartner.com/en/information-technology/glossary/hybrid-cloud-computing)
    ）。简而言之，结合多个公共云和私有云解决了仅使用公共云或私有云的不足之处。我们可以看到，混合模型能够满足组织在公共云或私有云模型中无法找到的需求。接下来我们将逐步讨论采用混合云模型所带来的几个优势：
- en: '**Cost efficiency** : With a steady utilization of private cloud resources,
    occasional peaks can be outsourced to the public cloud, thus keeping the cost
    to a minimum. Proofs of concept and testing environments can turn out to be more
    expensive in a public cloud environment if not monitored properly. In some cases,
    developers can spawn large EC2 instances, and forgetting to terminate them after
    testing can be ultra expensive. Such scenarios are very common if cost control
    policies are not set properly. In this case, running in a private cloud can be
    less expensive and can easily be detected as resources are not infinite compared
    to resource pools in the public cloud. For workloads running on servers with periodic
    licensing renewal and maintenance efforts, the public cloud can be the right place
    to host those workloads and save maintenance costs and management overhead compared
    to the private cloud.'
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**成本效益**：通过稳定利用私有云资源，偶尔的高峰可以外包给公共云，从而将成本保持在最低水平。如果没有进行适当监控，概念验证和测试环境在公共云中可能会变得更昂贵。在某些情况下，开发人员可能会启动大型EC2实例，如果在测试后忘记终止它们，可能会非常昂贵。如果没有正确设置成本控制政策，这种情况是非常常见的。在这种情况下，运行在私有云中可能更便宜，而且由于资源不像公共云中的资源池那样无限，容易检测到。对于需要定期授权续期和维护的工作负载，公共云可能是托管这些工作负载的合适地方，并能节省与私有云相比的维护成本和管理开销。'
- en: '**Governance and compliance** : Data residency can be more flexible to meet
    regularity requirements for each workload. Not all data can be hosted in the public
    cloud, and hence, a private infrastructure environment can satisfy such restrictions
    without affecting the application’s business continuity.'
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**治理和合规性**：数据驻留可以更加灵活地满足每个工作负载的监管要求。并非所有数据都可以托管在公有云中，因此，私有基础设施环境可以满足这些限制，而不会影响应用的业务连续性。'
- en: '**Customizability and control** : Not having a hand in the underlying infrastructure
    can be a blocker for some workloads. Public clouds do not offer a direct way to
    dictate low-level configurations, including compute hardware and networking devices.
    Such customization can be adjusted by using private resources alongside public
    environments.'
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**可定制性和控制**：在基础设施的底层没有控制权可能会成为某些工作负载的障碍。公有云无法提供直接的方法来指定低级配置，包括计算硬件和网络设备。通过在公有环境中使用私有资源，可以调整这种定制化。'
- en: '**Lock-in-free** : A multi-cloud strategy is becoming an important aspect for
    some organizations to stay flexible with the deployment of their workloads. Being
    vendor lock-in free in a hybrid model allows for moving workloads between private
    and public infrastructures without being fully committed to a specific vendor.
    Containerization has boosted the adoption of hybrid clouds due to the portability
    criteria allowing applications to run across multiple cloud providers and move
    between environments with the least amount of time and effort.'
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**无锁定**：多云策略正在成为一些组织保持灵活性的一个重要方面，特别是在部署工作负载时。在混合模型中，无供应商锁定意味着可以在私有和公有基础设施之间移动工作负载，而无需完全依赖某一特定供应商。由于容器化的存在，混合云的采用得到了推动，容器化使得应用可以在多个云提供商之间运行，并在环境间迁移时，所需时间和精力最小化。'
- en: '**Empowered resiliency** : Running workloads across dispersed infrastructures
    increases the level of redundancy. Some critical applications can run in both
    private and public environments. That would incorporate a stronger disaster recovery
    strategy if a private cloud availability zone were out of service; the public
    environment could come to the rescue by just pointing to its endpoint in a short
    period of time. Workload components can run in a *dispersed* mode in both public
    and private environments. Such a case requires a workload component, for example,
    to run in the private environment and interoperate with other components via a
    secured connection in the public cloud to leverage a managed service.'
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**增强的弹性**：跨分布式基础设施运行工作负载增加了冗余级别。一些关键应用可以同时在私有和公有环境中运行。如果私有云可用性区域出现故障，这将包含更强的灾难恢复策略；公有环境可以通过快速指向其端点来提供救援。工作负载组件可以在公有和私有环境中以*分散*模式运行。这种情况要求工作负载组件例如在私有环境中运行，并通过公有云中的安全连接与其他组件互操作，以利用托管服务。'
- en: '**Increased scalability** : **Cloud bursting** is a key element of a hybrid
    architecture model. Having more options to deploy a workload with the combination
    of the private and public worlds increases agility. Organizations use cloud bursting
    to scale faster and respond to spikes when demand exceeds the private cloud capacity.
    Cloud bursting use cases will be explored in more detail later in this chapter.'
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**增加的可扩展性**：**云爆发**是混合架构模型的关键要素。通过结合私有和公有云世界，拥有更多的工作负载部署选项能够提高灵活性。当需求超过私有云容量时，组织可以利用云爆发来加速扩展并应对负载高峰。本章后续将更详细探讨云爆发的使用案例。'
- en: Recently, hyperscaler providers have been following the hybrid cloud adoption
    trend and offering hybrid cloud platforms as part of their managed cloud services.
    For example, AWS has launched the **AWS Outposts** service enabling cloud users
    to run AWS services locally within the organization’s perimeter. To read more
    about the AWS Outposts case, refer to the AWS official document at [https://docs.aws.amazon.com/outposts/latest/userguide/what-is-outposts.html](https://docs.aws.amazon.com/outposts/latest/userguide/what-is-outposts.html)
    .
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 最近，超大规模云服务提供商正在跟随混合云采用趋势，并将混合云平台作为其托管云服务的一部分。例如，AWS推出了**AWS Outposts**服务，允许云用户在组织的边界内本地运行AWS服务。欲了解更多关于AWS
    Outposts的案例，请参考AWS官方文档：[https://docs.aws.amazon.com/outposts/latest/userguide/what-is-outposts.html](https://docs.aws.amazon.com/outposts/latest/userguide/what-is-outposts.html)。
- en: Similarly, we can find the **Azure Stack** service in Azure and the **Google
    Anthos** service in GCP.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 同样，我们可以在Azure中找到**Azure Stack**服务，在GCP中找到**Google Anthos**服务。
- en: Enterprises have realized from their public cloud experiences that a public
    cloud is not always the best bus to ride. The rise of private cloud capabilities
    such as OpenStack makes it possible to be present in both public and private clouds.
    Organizations adopting OpenStack as a private cloud solution find themselves in
    a great position to maximize the benefits of using both worlds. The modular architecture
    and its rich APIs make OpenStack a great fit to work in conjunction with the public
    cloud environment, which we will look at in the following section.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 企业通过他们在公有云中的经验已经意识到，公有云并不总是最合适的选择。私有云能力的崛起，如OpenStack，使得同时在公有云和私有云中存在成为可能。采用OpenStack作为私有云解决方案的组织，发现自己处于一个非常有利的位置，能够最大化利用这两种环境的优势。OpenStack的模块化架构及其丰富的API使其与公有云环境协同工作成为一种理想选择，接下来我们将探讨这一点。
- en: OpenStack meeting the public world
  id: totrans-48
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: OpenStack与公有云的对接
- en: 'Architecting for hybrid cloud models can be a great deal for several organizations
    seeking the aforementioned hybrid cloud benefits. If you are building a private
    cloud based on OpenStack either for internal usage or for potential customers,
    cloud operators can extend the infrastructure perimeter to combine with public
    cloud services to create valuable outcomes. In a hybrid model, it is a good method
    to create a centralized platform that manages both the private and public clouds
    acting as a single pane of glass. The platform does not need to add complexity
    to talk to different cloud providers’ APIs but simply an administration dashboard
    with proxying capabilities to route requests that span different environments.
    With an existing OpenStack environment, cloud operators can establish secured
    connections in high bandwidths between the OpenStack private cloud and each of
    the public cloud endpoints, as shown in the next diagram:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 为混合云模型进行架构设计对许多寻求上述混合云优势的组织来说可能是一个很好的选择。如果你正在基于OpenStack构建一个私有云，无论是为了内部使用还是为潜在客户使用，云运营商可以扩展基础设施边界，与公有云服务结合，创造有价值的成果。在混合模型中，创建一个集中的平台来管理私有云和公有云，使其像一个统一的界面一样工作是一个好的方法。该平台无需增加复杂性来与不同云提供商的API进行交互，而只需要一个具有代理能力的管理仪表板，用于路由跨不同环境的请求。借助现有的OpenStack环境，云运营商可以在OpenStack私有云和每个公有云端点之间建立安全的高带宽连接，正如下图所示：
- en: '![Figure 10.5 – A generic hybrid cloud architecture](img/B21716_10_05.jpg)'
  id: totrans-50
  prefs: []
  type: TYPE_IMG
  zh: '![图10.5 – 通用混合云架构](img/B21716_10_05.jpg)'
- en: Figure 10.5 – A generic hybrid cloud architecture
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.5 – 通用混合云架构
- en: Combining both the OpenStack private cloud and public cloud vendors needs to
    satisfy certain conditions to make a complete hybrid cloud picture. In this case,
    a business workload should be designed to run in an OpenStack environment, in
    the public cloud, or both. The other important condition is the readiness for
    data mobility between private and public clouds. That would require a good understanding
    of when data is allowed to be stored in public or private infrastructure. Some
    other cases would require, for example, having short-lived data in the public
    cloud while keeping long-lived data in a private cloud.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 将OpenStack私有云与公有云服务结合需要满足一定条件，才能形成一个完整的混合云图景。在这种情况下，业务工作负载应设计为在OpenStack环境、公有云或两者中运行。另一个重要条件是私有云与公有云之间的数据迁移准备。这需要对何时可以将数据存储在公有云或私有云基础设施中有充分的了解。例如，有些情况可能要求在公有云中存储短期数据，而将长期数据保存在私有云中。
- en: Another essential aspect to be considered when running workloads in a hybrid
    setup is the compatibility and variation between the different types of cloud.
    You might run a workload between two or more different clouds supporting multiple
    APIs of the same kind with the same technology stack. That can be less complex
    to run with easier implementation. The other variation is when different clouds
    do not support the same kind of APIs with different types of components, such
    as database engines or types of hypervisors. In this case, more tweaking is required
    to increase the degree of complexity. The good news is that OpenStack has been
    designed to leverage some of the public cloud capabilities. The secret sauce is
    its rich API exposure. As a private cloud software, OpenStack is considered a
    good choice that can power the network of private and public clouds. OpenStack
    is leveraged to manage resources for other public cloud providers such as AWS.
    For example, OpenStack supports a few drivers for AWS such as Nova for EC2, Neutron
    for VPC, and Cinder driver for EBS in AWS. Those drivers come under the **OpenStack-Omni**
    project, which can be found at [https://opendev.org/x/omni](https://opendev.org/x/omni)
    . Although this initiative is still moving at a slow pace, the OpenStack community
    is looking at integrating more capabilities to the OpenStack API to manage hybrid
    and multi-cloud environments such as GCP and Azure.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 在混合云环境中运行工作负载时，另一个需要考虑的重要方面是不同类型云之间的兼容性和差异。你可能在两个或更多不同的云之间运行工作负载，支持相同类型的多个 API，并且使用相同的技术栈。这种情况下，运行起来可能更简单，实施起来也更容易。另一个差异是不同云不支持相同类型的
    API，具有不同类型的组件，例如数据库引擎或虚拟化管理程序的类型。在这种情况下，需要更多的调整来提高复杂度。好消息是，OpenStack 已经被设计为利用一些公有云的能力。它的秘密武器是其丰富的
    API 曝露。作为一款私有云软件，OpenStack 被认为是一个不错的选择，能够驱动私有云和公有云的网络。OpenStack 被用于管理其他公有云提供商（如
    AWS）的资源。例如，OpenStack 支持 AWS 的一些驱动程序，如 Nova 用于 EC2，Neutron 用于 VPC，以及 Cinder 驱动程序用于
    AWS 的 EBS。这些驱动程序属于**OpenStack-Omni**项目，可以在 [https://opendev.org/x/omni](https://opendev.org/x/omni)
    中找到。尽管这个项目的进展较慢，OpenStack 社区正在考虑将更多的能力集成到 OpenStack API 中，以管理混合云和多云环境，如 GCP 和
    Azure。
- en: 'Ideal cloud hybrid implementations leverage ways to centrally control different
    resources in public, private, and on-premises through a unified **Cloud Management
    Platform** ( **CMP** ). As shown in the next figure, providing an extra layer
    or tools for hybrid cloud management helps centralize the administration of workloads
    and data across any kind of infrastructure:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 理想的云混合实现方式利用统一的**云管理平台**（**CMP**）集中控制公有云、私有云和本地资源。正如下图所示，为混合云管理提供额外的层或工具有助于集中管理任何基础设施中的工作负载和数据：
- en: '![Figure 10.6 – The capabilities of a CMP](img/B21716_10_06.jpg)'
  id: totrans-55
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.6 – CMP 的能力](img/B21716_10_06.jpg)'
- en: Figure 10.6 – The capabilities of a CMP
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.6 – CMP 的能力
- en: Today, more organizations are learning to develop their own CMPs for their own
    business needs or for public consumption. In the market landscape, Flexera, CloudBolt,
    OVHcloud, and Nutanix (to name a few) provide a unified platform to administer
    resources in both public and private clouds. A CMP for hybrid architectures is
    empowered by orchestration tools to operate across cloud environments. A hybrid
    management layer can be provided by a service catalog and reusable blueprints
    to provision infrastructure across all linked cloud endpoints with the maximum
    degree of automation.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 如今，越来越多的组织正在学习根据自己的业务需求或公共需求开发自己的 CMP。在市场中，Flexera、CloudBolt、OVHcloud 和 Nutanix（仅举几个例子）提供统一的平台，用于管理公有云和私有云中的资源。混合架构的
    CMP 由编排工具提供支持，能够跨云环境运行。服务目录和可重用蓝图可以提供混合管理层，以在所有连接的云端点之间部署基础设施，并实现最大程度的自动化。
- en: Cloud providers realize the different needs of cloud customers to design more
    services that facilitate a hybrid cloud deployment. Such services can be part
    of a CMP or run on their own to operate a workload across private and public clouds,
    as we will explore in the next section.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 云服务提供商意识到云客户的不同需求，设计更多的服务以促进混合云部署。这些服务可以是 CMP 的一部分，也可以单独运行，跨私有云和公有云操作工作负载，正如我们在下一节中将要探讨的那样。
- en: Enabling the hybrid cloud
  id: totrans-59
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 启用混合云
- en: 'Today, we can find a range of managed services by giant public providers that
    facilitate building hybrid architectures. AWS has been one step ahead by offering
    multiple cloud services to satisfy customers’ wishes with a hybrid model. For
    example, AWS Outposts leverages AWS resources by using the same AWS APIs and tools
    but provisioned and located at the organization’s premises. On top of Outposts,
    cloud users are offered the opportunity to run **Relational Database Service**
    ( **RDS** ) managed databases to take advantage of fully managed databases that
    scale for MySQL, Microsoft SQL Server, and PostgreSQL. To read more about RDS
    Outposts, refer to the following link: [https://aws.amazon.com/rds/outposts/](https://aws.amazon.com/rds/outposts/)'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 今天，我们可以找到由大型公共提供商提供的一系列托管服务，方便构建混合架构。AWS一直走在前面，通过提供多种云服务来满足客户对混合模型的需求。例如，AWS
    Outposts通过使用相同的AWS API和工具来利用AWS资源，但这些资源是在组织的本地部署的。在Outposts之上，云用户可以运行**Relational
    Database Service**（**RDS**）托管数据库，享受MySQL、Microsoft SQL Server和PostgreSQL的完全托管数据库服务。要了解更多关于RDS
    Outposts的内容，请访问以下链接：[https://aws.amazon.com/rds/outposts/](https://aws.amazon.com/rds/outposts/)
- en: Some amazing hybrid services have been unleashed for containers, including **Elastic
    Container Services Anywhere** ( **ECS Anywhere** ), which you can read about at
    [https://aws.amazon.com/blogs/containers/introducing-amazon-ecs-anywhere/](https://aws.amazon.com/blogs/containers/introducing-amazon-ecs-anywhere/)
    , and **Elastic Kubernetes Service Anywhere** ( **EKS Anywhere** ), which you
    can read about at [https://aws.amazon.com/eks/eks-anywhere/](https://aws.amazon.com/eks/eks-anywhere/)
    . Both hybrid container services enable cloud users to run containerized workloads
    on-premises by keeping the benefits of scalability and orchestration toolsets.
    Hybrid storage solutions have become necessary for several organizations to perform
    backup, restoration, and disaster recovery between on-premises and public environments.
    AWS provides the **AWS Storage Gateway** service for hybrid cloud storage solutions.
    More information about the AWS Storage Gateway service can be found at [https://aws.amazon.com/hybrid/services/](https://aws.amazon.com/hybrid/services/)
    . Other use cases would require an accelerated way to transfer data between private
    and public clouds. AWS has introduced the **AWS Datasync** service ( [https://aws.amazon.com/datasync/](https://aws.amazon.com/datasync/)
    ) as a hybrid storage solution.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 一些令人惊叹的混合服务已经为容器推出，包括**Elastic Container Services Anywhere**（**ECS Anywhere**），你可以在[https://aws.amazon.com/blogs/containers/introducing-amazon-ecs-anywhere/](https://aws.amazon.com/blogs/containers/introducing-amazon-ecs-anywhere/)了解更多内容，以及**Elastic
    Kubernetes Service Anywhere**（**EKS Anywhere**），你可以在[https://aws.amazon.com/eks/eks-anywhere/](https://aws.amazon.com/eks/eks-anywhere/)阅读更多信息。
    这两项混合容器服务使云用户能够在本地运行容器化工作负载，同时保留可扩展性和编排工具集的优势。混合存储解决方案已成为许多组织在本地环境和公共环境之间执行备份、恢复和灾难恢复所必需的。AWS
    提供了**AWS Storage Gateway**服务，用于混合云存储解决方案。有关AWS Storage Gateway服务的更多信息，请访问[https://aws.amazon.com/hybrid/services/](https://aws.amazon.com/hybrid/services/)。其他使用案例可能需要加速在私有云和公共云之间传输数据的方式。AWS推出了**AWS
    Datasync**服务（[https://aws.amazon.com/datasync/](https://aws.amazon.com/datasync/)），作为一种混合存储解决方案。
- en: Cloud bursting
  id: totrans-62
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 云爆发
- en: 'Choosing where to run workloads depends mainly on customer business and governance
    requirements. Some organizations might dictate in which region and cloud they
    wish to host their applications. Others might prefer to deploy their services
    on one cloud or the other, but data (including databases or big data) must reside
    in a private cloud environment or even on-premises bare metal. Anything else that
    does not include data can run on the public cloud. With this variety of requirements,
    cloud operators should find a hybrid model that can fit each workload’s needs.
    With the rich set of APIs of OpenStack, integration with the automation tools
    and external APIs of other vendors makes it easy to run as a hybrid with the least
    risk of vendor lock-in. By gaining such flexibility, growing the business application
    is no longer a concern to run in any public or private cloud environment. For
    example, let’s say that an organization develops a service that gets packed on
    a container image. The image is deployed in a private OpenStack cloud environment
    and, quickly, a global presence of the application becomes a business requirement
    with a larger audience. That is where bursting comes into play. The workload would
    burst into a public cloud by using its resources in the nearest requested region.
    With the right design, cloud architects should be able to make any application
    live in both worlds and take advantage of the hybrid model capabilities without
    being locked into one model. Cloud bursting is a very common use case of a hybrid
    cloud, and is even considered a hybrid feature in other literature. As shown in
    the following diagram, cloud bursting leverages the utilization of the hybrid
    cloud infrastructures to more rapidly process sudden increases in requests and
    spikes in traffic for an application:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 选择运行工作负载的位置主要取决于客户的业务和治理需求。一些组织可能会指定希望在哪个区域和云中托管其应用程序。其他组织可能更倾向于在一个云上部署其服务，但数据（包括数据库或大数据）必须存储在私有云环境中，甚至是本地裸金属环境中。任何不涉及数据的内容可以运行在公有云中。面对这些不同的需求，云运营商应当找到一个可以满足每个工作负载需求的混合模型。借助
    OpenStack 提供的丰富 API 集合，与其他厂商的自动化工具和外部 API 的集成使得实现混合云变得更加简单，并且风险最小化，避免被单一厂商锁定。通过获得这种灵活性，企业应用的增长将不再担心是否能够在任何公有或私有云环境中运行。例如，假设一个组织开发了一个打包成容器镜像的服务。该镜像被部署在私有
    OpenStack 云环境中，很快，应用程序的全球覆盖成为了一个业务需求，目标用户群体扩大。这时，云爆发就起到了作用。工作负载将利用公有云在最近请求区域的资源进行扩展。通过正确的设计，云架构师应能够让任何应用程序同时在两个环境中运行，并且利用混合云模型的能力，而不被某一模型锁定。云爆发是混合云中非常常见的使用案例，甚至在其他文献中被视为混合云特性。正如下图所示，云爆发利用混合云基础设施的使用率来更快速地处理应用程序的突发请求和流量高峰：
- en: '![Figure 10.7 – Cloud bursting for the hybrid cloud use case](img/B21716_10_07.jpg)'
  id: totrans-64
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.7 – 混合云使用案例中的云爆发](img/B21716_10_07.jpg)'
- en: Figure 10.7 – Cloud bursting for the hybrid cloud use case
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.7 – 混合云使用案例中的云爆发
- en: Ultimately, a company predicts its private cloud infrastructure utilization
    and responds to additional load by spreading it to public cloud resources. Cloud
    bursting is essentially a dynamic deployment of workloads to increase elasticity
    and scalability in peak times once the private cloud resource demand becomes overwhelming.
    The common pattern of cloud bursting is that companies rely primarily on their
    private cloud resources and enable bursting only during traffic spikes to accommodate
    the additional load. Once the sudden surge of the workload spike is over, public
    cloud resources are terminated and the application keeps running only in the private
    cloud environment.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 最终，一家公司预测其私有云基础设施的使用情况，并通过将负载分配到公有云资源来应对额外的负载。云爆发本质上是一种动态部署工作负载的方式，它能够在私有云资源需求过载时，通过弹性和可扩展性来应对高峰期的需求。云爆发的常见模式是，企业主要依赖其私有云资源，并仅在流量激增时启用云爆发以应对额外负载。一旦突发的工作负载激增结束，公有云资源将被终止，应用程序将继续在私有云环境中运行。
- en: Security in the hybrid cloud
  id: totrans-67
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 混合云中的安全性
- en: Security *in* and *of* the cloud are two aspects that do not differ between
    the private and public clouds. In a hybrid model, cloud operators would review
    what is offered from a security standpoint. To a certain extent, security in a
    hybrid model can be enforced more when leveraging the private part, but additional
    threats can be observed with insecure API endpoints, data leaks, or missing encryption
    at rest and in transit. In the OpenStack world, cloud operators should think of
    the security *of* the private cloud, whereas security *in* the cloud is the task
    of the user. Following a security discipline would not differ from pure private
    or public clouds when dealing with a hybrid cloud environment. Starting with the
    principle of **zero-trust** , cloud architects should take security as a core
    principle at the earliest stage when designing a hybrid environment, in the same
    way as building a private cloud. In a hybrid setup, more components are involved
    in the security configuration. Based on a zero-trust approach, any entity of the
    architecture is considered a threat by default, including user access, workloads,
    data, network devices, and traffic. If you have ensured that your private cloud
    based on OpenStack is following the same approach, you would just need to combine
    the security boundaries of the cloud provider and shared responsibilities. The
    good news is that most hyperscaler providers have defined a shared responsibility
    model. Boundary responsibilities should be clarified at the start of the hybrid
    cloud journey. For example, if a user is looking at a SaaS solution that is not
    supported by the private OpenStack cloud, the security responsibility is shifted
    to the target public cloud provider. Several entities are engaged when defining
    a shared responsibility based on a hybrid cloud setup, including hardware, storage,
    encryption, physical network, guest operating system, network and platform security,
    data location, user authentication, and authorization, to name a few.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 云中的安全*和*云的安全是私有云和公有云之间没有差异的两个方面。在混合模型中，云运营商会从安全角度审查所提供的内容。在一定程度上，混合模型中的安全性可以在利用私有部分时得到更多的执行，但也可能会遇到由于不安全的API端点、数据泄露或缺少静态和传输加密等原因带来的额外威胁。在OpenStack世界中，云运营商应该考虑私有云的安全*性*，而云中的安全*性*则是用户的责任。遵循安全纪律在处理混合云环境时与纯私有云或公有云并无不同。从**零信任**原则开始，云架构师应该在设计混合环境的最早阶段就将安全性作为核心原则，这与构建私有云时的做法相同。在混合配置中，更多的组件参与到安全配置中。基于零信任方法，架构中的任何实体默认都被视为威胁，包括用户访问、工作负载、数据、网络设备和流量。如果你已经确保基于OpenStack的私有云遵循相同的方法，你只需结合云服务提供商的安全边界和共享责任模型即可。好消息是，大多数超大规模提供商已经定义了共享责任模型。在混合云之旅开始时，应明确责任边界。例如，如果用户正在查看一个不受私有OpenStack云支持的SaaS解决方案，那么安全责任将转移到目标公有云提供商。定义基于混合云设置的共享责任时，会涉及多个实体，包括硬件、存储、加密、物理网络、客户操作系统、网络和平台安全、数据位置、用户认证和授权等。
- en: In the following sections, we will take an iterative approach to demonstrate
    different entities involved in establishing security patterns around a workload
    running in a hybrid cloud environment. That includes the use case of scaling an
    application running on Kubernetes between an OpenStack environment and a public
    cloud.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的章节中，我们将采用迭代的方法，展示在混合云环境中运行的工作负载周围建立安全模式时涉及的不同实体。这包括在OpenStack环境和公有云之间扩展在Kubernetes上运行的应用程序的用例。
- en: Governance first
  id: totrans-70
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 治理优先
- en: 'Data protection is one of the major motivators that encourage organizations
    to adopt a hybrid environment setup. Businesses and decision-makers define the
    rules of data privacy requirements and cloud users are responsible for adhering
    to them. Cloud providers should comply with defined rules of data protection,
    which will vary from one region to another. Taking the example of GDPR rules,
    the hybrid cloud should provide the insurance of data protection within the EU,
    including data privacy, residency, and retention. In a hybrid world, a mix of
    a private cloud based on OpenStack and a public cloud should be aligned with the
    following shortened list of requirements:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 数据保护是鼓励组织采用混合环境设置的主要动因之一。企业和决策者定义数据隐私要求的规则，而云用户则负责遵守这些规则。云服务提供商应遵守定义好的数据保护规则，这些规则会因地区不同而有所差异。以GDPR规则为例，混合云应在欧盟范围内提供数据保护的保障，包括数据隐私、存储地和保留期。在混合云环境中，基于OpenStack的私有云与公共云的结合应该符合以下简化的要求列表：
- en: Transparently define an extended version of the shared responsibility model.
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 透明地定义共享责任模型的扩展版本。
- en: Document different aspects of security configuration within the hybrid environment.
    This includes how private and public clouds are connected and how data is transmitted
    and stored.
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 记录混合环境中安全配置的不同方面。这包括如何连接私有云和公共云，以及数据如何传输和存储。
- en: Provide ways for users to access and leverage best practices using access policies,
    the least privilege principle, and encryption.
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 提供用户访问和利用最佳实践的方法，使用访问策略、最小权限原则和加密。
- en: Define data life cycle standards and measurements of data classification.
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 定义数据生命周期标准和数据分类的衡量标准。
- en: 'Ultimately, workloads hosted in a hybrid cloud should not stick to a single
    compliance requirement but rather to several due to the mixed nature of such a
    public and private combination. Such a process can be error-prone if not all governance
    measures are checked before starting to receive workloads. For this matter, it
    is essential to spend a good time establishing a well-secured platform between
    both private and public clouds. A containerized application can be easier to deploy
    across private and public clouds. We have covered the maturity of the OpenStack
    ecosystem when dealing with containers in previous chapters. For example, spreading
    a containerized application across an OpenStack private cloud and a public cloud
    environment should prompt the following governance and compliance considerations:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 最终，托管在混合云中的工作负载不应仅符合单一的合规性要求，而应符合多个要求，因为这种公私结合的特性。若在接收工作负载之前未能检查所有治理措施，这样的过程可能容易出错。为此，在私有云与公共云之间建立一个安全的平台至关重要，必须花时间确保两者之间的安全。容器化应用程序在私有云和公共云之间的部署会更容易。我们在前几章已经讨论了OpenStack生态系统在处理容器时的成熟度。例如，在OpenStack私有云和公共云环境中分布一个容器化应用程序时，应考虑以下治理和合规性问题：
- en: How and where will my Kubernetes cluster be running in the short and long term?
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我的Kubernetes集群将如何以及在哪里运行，短期和长期的安排是什么？
- en: Will any data be stored in the private and public clouds?
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 是否会有数据存储在私有云和公共云中？
- en: How does the hybrid cloud control access to my Kubernetes cluster and hence
    the applications running on top of it?
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 混合云如何控制对我的Kubernetes集群的访问，从而控制在其上运行的应用程序？
- en: Does the hybrid cloud provide a single pane of glass for monitoring and logging
    my application?
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 混合云是否提供一个统一的界面来监控和记录我的应用程序？
- en: Is there a standard incident management process to report security issues when
    data leakage or unauthorized access happens?
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 是否有标准的事件管理流程，用于在发生数据泄露或未经授权访问时报告安全问题？
- en: Compliance and governance in the hybrid world can be more complex to establish
    as each workload would present different compliance requirements. Standardizing
    the rules defined for the cloud infrastructure can reduce such complexity but
    requires a deep understanding of analyzing the perimeter of responsibility of
    each public cloud provider. From a private cloud perspective running OpenStack,
    you should have already a greater view of all pieces of the security puzzle when
    designing the private cloud.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 混合云中的合规性和治理可能更复杂，因为每个工作负载都会有不同的合规性要求。标准化云基础设施的规则可以减少这种复杂性，但需要深入理解每个公共云提供商的责任边界。从私有云的角度来看，运行OpenStack时，你应该已经对安全拼图的各个部分有了更全面的了解，尤其是在设计私有云时。
- en: Network security
  id: totrans-83
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 网络安全
- en: 'Networking is usually the next discussed point for a cloud consumer to deploy
    a workload in the cloud of any type. The public cloud provides gazillions of ways
    to design networks for workloads and it is down to the cloud user to define the
    network perimeter. If the application is made to be publicly accessible, cloud
    users would leverage internet gateways or appliances to expose the application
    in its virtual network. Hybrid environments will be required to provide the maximum
    degree of flexibility for networking options. As we have seen in the OpenStack
    world, the underlying infrastructure includes not only the physical routers and
    switches but also an overlay network layer on top of the physical network infrastructure
    (software-defined networks). With both network layers (physical and overlay) being
    virtual, private cloud operators should consider ways of segmenting networks while
    keeping full control. The underlying network security layer that is not visible
    to cloud users must exist before hosting any workload. That can be achieved by
    leveraging firewalls or by putting web application firewalls in place to protect
    against DDoS threats. Similarly, public cloud providers ensure (based on the shared
    responsibility model) a certain level of network security, including hardware
    and traffic management. Traffic circulating within the public provider backbone
    is considered trusted, but it is down to the cloud users to define how the application
    will be isolated or made public. Either way, network services are provided to
    control the type of traffic within its network boundary or in wider exposure.
    If you are scaling an application between a private and public cloud, a variety
    of network security mechanisms must exist, which can be summarized as follows:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 网络通常是云消费者部署工作负载时讨论的下一个要点。公共云提供了无数种方式来为工作负载设计网络，而最终由云用户定义网络边界。如果应用程序是公开可访问的，云用户将利用互联网网关或设备将应用程序暴露在其虚拟网络中。混合环境将被要求提供最大的灵活性以支持网络选项。正如我们在
    OpenStack 世界中所看到的，基础设施不仅包括物理路由器和交换机，还有在物理网络基础设施上方的覆盖网络层（软件定义网络）。由于两个网络层（物理和覆盖层）都是虚拟的，私有云运营商应考虑在保持完全控制的情况下对网络进行分段。在托管任何工作负载之前，必须存在一个云用户无法看到的基础网络安全层。可以通过利用防火墙或部署
    Web 应用防火墙来防御 DDoS 威胁来实现这一目标。同样，公共云提供商根据共享责任模型确保一定程度的网络安全，包括硬件和流量管理。公共提供商骨干网络中的流量被视为可信的，但如何隔离应用程序或将其公开，仍然由云用户定义。无论哪种方式，都会提供网络服务以控制其网络边界内或更广泛暴露范围内的流量类型。如果您在私有云和公共云之间扩展应用程序，必须存在多种网络安全机制，可以总结如下：
- en: Secure traffic reaching any cloud-type endpoint that supports the **Transport
    Layer Security** ( **TLS** ) protocol (v2 and v3).
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 确保到达任何支持**传输层安全性**（**TLS**）协议（v2 和 v3）云端点的流量是安全的。
- en: Make sure application containers are deployed and encrypted at rest.
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 确保应用程序容器已部署并加密静态数据。
- en: Provide secure mechanisms to protect applications publicly accessible via load
    balancers.
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 提供安全机制，保护通过负载均衡器公开访问的应用程序。
- en: Enforce application security by leveraging **Web Application Firewall** ( **WAF**
    ) solutions that can protect applications across several cloud environments.
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过利用**Web 应用防火墙**（**WAF**）解决方案，强制执行应用程序安全，保护多个云环境中的应用程序。
- en: Implement a layered network architecture by segmenting an application network
    to run in different subnets for each layer. Dispersed environments (public and
    private) can be configured to use a private address space (RFC 1918). That way,
    different parts of the application can still reach each other while being contained
    in isolated networks, reducing the risk of public exposure.
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过将应用程序网络划分为不同子网以运行在每个层级上，实现分层网络架构。分散环境（公共和私有）可以配置为使用私有地址空间（RFC 1918）。这样，不同部分的应用程序仍然可以相互访问，同时被隔离在独立的网络中，从而降低公共暴露的风险。
- en: Build private connections between different cloud environments. This is an extension
    of the previous point whereby an application can reach any cloud in the hybrid
    environment through a private connection without traversing the internet. Taking
    the example of a Kubernetes cluster, pods in an OpenStack environment can reach
    other pods of the same cluster context in AWS via a private connection such as
    **DirectConnect** or a **VPN** . Cloud operators would need to define the different
    routes to reach each of the cloud endpoints so the application components’ interconnectivity
    stays private even across different cloud environments.
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在不同的云环境之间建立私有连接。这是前一个要点的延伸，其中应用程序可以通过私有连接而非互联网访问混合环境中的任何云。例如，在Kubernetes集群中，OpenStack环境中的Pod可以通过如**DirectConnect**或**VPN**等私有连接访问AWS中同一集群上下文的其他Pod。云运营商需要定义不同的路由，以便即使在不同的云环境之间，应用组件的互联互通仍然保持私密。
- en: Hybrid clouds can be designed to use different types of connections and network
    implementations. Looking at the network security aspect requires solid preparation
    for securing endpoints for both private and public clouds. The private part would
    require more hardening as a cloud operator has a full hand on the network infrastructure.
    In our case, securing the API endpoints in each service in the OpenStack private
    cloud is a must. The OpenStack community provides an updated version of a security
    guide upon each new release that is worth visiting. The API endpoint security
    guide can be found at [https://docs.openstack.org/security-guide/api-endpoints/api-endpoint-configuration-recommendations.html](https://docs.openstack.org/security-guide/api-endpoints/api-endpoint-configuration-recommendations.html)
    .
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 混合云可以设计为使用不同类型的连接和网络实现。考虑到网络安全方面，需要为私有云和公有云的端点安全做好充分准备。私有部分需要更多的加固，因为云运营商对网络基础设施有完全的控制权。在我们的案例中，必须确保OpenStack私有云中每个服务的API端点安全。OpenStack社区会在每次新版本发布时提供更新的安全指南，值得参考。API端点安全指南可以在[https://docs.openstack.org/security-guide/api-endpoints/api-endpoint-configuration-recommendations.html](https://docs.openstack.org/security-guide/api-endpoints/api-endpoint-configuration-recommendations.html)找到。
- en: Hardening operation security
  id: totrans-92
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 加固操作安全。
- en: 'The nature of the dispersed architecture of an application across different
    cloud infrastructures can be a challenge when it comes to its operation. Taking
    advantage of cloud bursting in a hybrid setup comes with the price of the definition
    of operation security responsibilities. By inheriting the practices of the **DevSecOps**
    mantra, the operation complexity in a hybrid environment can be much more simplified.
    We have dedicated the second chapter in this edition to illustrating how DevSecOps
    is an essential style to automate security in the operation of an OpenStack infrastructure.
    We will just need to apply the same approach when dealing with workloads that
    are spread across several infrastructures. The use case of an application running
    in a Kubernetes cluster in a hybrid cloud setup would require the following additional
    checks to operate in the most secure way:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 应用跨不同云基础设施的分布式架构的特点，可能会在操作时带来挑战。在混合架构中利用云溢出技术，虽然能提高灵活性，但也需要明确操作安全责任的定义。通过继承**DevSecOps**的实践，混合环境中的操作复杂性可以大大简化。我们在本章中专门介绍了DevSecOps如何成为自动化OpenStack基础设施操作安全的关键风格。当处理跨多个基础设施分布的工作负载时，我们只需应用相同的方法。一个在混合云环境中运行的Kubernetes集群中的应用案例，要求进行以下额外检查，以确保以最安全的方式运行：
- en: Use CI/CD pipelines to automate image scans of vulnerabilities.
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用CI/CD管道自动扫描镜像中的漏洞。
- en: Dry run tests to detect and alert of any potential security gaps.
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 干运行测试，以检测并警告任何潜在的安全漏洞。
- en: Use a container image registry that is only accessible privately.
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用仅限私有访问的容器镜像注册表。
- en: Make the image registry available to public or private cloud endpoints only
    via private connections.
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使镜像注册表仅通过私有连接对公有云或私有云端点可用。
- en: Harden and automate the creation of container images in regular cycles and share
    only stable and well-tested versions with the rest of the cloud endpoints.
  id: totrans-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 加固并自动化容器镜像的创建，定期发布并仅分享稳定且经过充分测试的版本给其他云端点。
- en: Deploy application container images from one single CI/CD pipeline.
  id: totrans-99
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从单一的CI/CD管道部署应用容器镜像。
- en: Set up a logging pipeline to collect logs across different infrastructures.
    This can be achieved in a centralized way by pulling network flows, application
    logs, and firewall logs for potential issues analysis.
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设置日志管道以收集不同基础设施中的日志。这可以通过集中式方式实现，拉取网络流量、应用日志和防火墙日志来分析潜在问题。
- en: Configure monitoring and metrics to report centrally on security issues for
    each cloud infrastructure endpoint.
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置监控和指标，集中报告每个云基础设施端点的安全问题。
- en: Security in a hybrid model can be a lot more complex since having data flowing
    in all different infrastructures requires additional controls. Data handling should
    be carefully performed as improper data movement can raise major data leakages
    that are not easy to recover. The other challenge of hybrid implementation is
    the complexity of access management. Users will need to be authenticated and authorized
    in a flexible way that grants access across multiple infrastructures. Using **Identity
    and Access Management** ( **IAM** ) coupled with single sign-on tools can help
    to remediate access complexity challenges.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 混合模型中的安全性可能会更加复杂，因为数据流动在不同的基础设施中，需要额外的控制措施。数据处理应谨慎执行，因为不当的数据流动可能会引发重大数据泄露，而这些问题难以恢复。混合实施的另一个挑战是访问管理的复杂性。用户需要以灵活的方式进行身份验证和授权，以便在多个基础设施中授予访问权限。使用**身份与访问管理**（**IAM**）并结合单点登录工具，可以帮助解决访问复杂性问题。
- en: Summary
  id: totrans-103
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: This chapter exposed the hybrid cloud novelty. Beyond the OpenStack private
    cloud capacity, there is always an opportunity to reach public cloud environments
    and construct a hybrid environment, as we learned in this chapter. The latter
    model keeps expanding as a new cloud style as enterprises have felt the necessity
    to have combined cloud modes to enjoy each type of cloud’s benefits. We learned
    that recent cloud experiences have shown that a multi-cloud strategy is still
    not enough to fill cost gaps in addition to compliance concerns. The increase
    of the hybrid model dominance has been accompanied by more additional OpenStack
    private cloud implementations. Gaining skills to build and manage an OpenStack
    private cloud is one of the cornerstones to moving to a hybrid model, which is
    why we focused on this in this chapter. Furthermore, we learned that OpenStack
    provides various cloud capabilities and, thanks to its rich APIs, our private
    cloud can integrate well into a hybrid cloud model.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 本章揭示了混合云的新颖性。除了 OpenStack 私有云的功能外，总有机会接入公共云环境并构建混合环境，正如我们在本章中所学到的那样。后者作为一种新的云模式持续扩展，因为企业已经意识到，结合不同云模式以享受各自的云优势是非常必要的。我们了解到，最近的云体验表明，单一的多云战略仍然不足以填补成本差距，还需要解决合规性问题。混合模型的主导地位日益增加，并伴随着更多的
    OpenStack 私有云实现。掌握构建和管理 OpenStack 私有云的技能是过渡到混合模型的基石之一，这也是我们在本章中重点讨论的内容。此外，我们还学到，OpenStack
    提供了多种云能力，凭借其丰富的 API，我们的私有云能够很好地融入混合云模型。
- en: In the next chapter, we will demonstrate how building a private cloud environment
    based on OpenStack will ensure a successful hybrid cloud experience in which OpenStack
    keeps shining.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将展示如何基于 OpenStack 构建私有云环境，以确保成功的混合云体验，其中 OpenStack 将继续发挥重要作用。
