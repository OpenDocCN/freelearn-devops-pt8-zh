- en: Chapter 6. Using MongoDB and Third-party Database Cartridges with OpenShift
    Applications
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第 6 章. 使用 MongoDB 和第三方数据库扩展包与 OpenShift 应用程序一起使用
- en: 'This chapter presents a number of recipes that show you how to get started
    with the OpenShift MongoDB cartridge. We will also look at how you can use downloadable
    cartridges for MariaDB and **Remote Dictionary Server** (**Redis**). The specific
    recipes within this chapter are:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 本章节提供了多个教程，向您展示如何开始使用 OpenShift MongoDB 扩展包。我们还将介绍如何使用可下载的 MariaDB 和 **远程字典服务器**（**Redis**）扩展包。本章节中的具体教程包括：
- en: Adding a MongoDB cartridge to your application
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将 MongoDB 扩展包添加到您的应用程序
- en: Adding a RockMongo cartridge to your application
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将 RockMongo 扩展包添加到您的应用程序
- en: Accessing a MongoDB cartridge from your local machine
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从本地机器访问 MongoDB 扩展包
- en: Connecting to a MongoDB cartridge using Robomongo from your local machine
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 Robomongo 从本地机器连接到 MongoDB 扩展包
- en: Enabling the MongoDB cartridge REST interface
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 启用 MongoDB 扩展包的 REST 接口
- en: Performing scheduled MongoDB database backups
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 执行定期的 MongoDB 数据库备份
- en: Using MongoLab MongoDB-as-a-Service with OpenShift
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 MongoLab MongoDB-as-a-Service 与 OpenShift 配合使用
- en: Adding a MariaDB cartridge to your application
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将 MariaDB 扩展包添加到您的应用程序
- en: Adding a Redis cartridge to your application
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将 Redis 扩展包添加到您的应用程序
- en: Introduction
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍
- en: MongoDB is a popular and open source document-oriented NoSQL data store. It
    is designed for scalability and stores complex object graphs in a single document.
    It has support for dynamic queries, secondary indexes, fast atomic updates, aggregation,
    and inbuilt support for replication and sharding.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: MongoDB 是一个流行的开源面向文档的 NoSQL 数据存储。它设计用于可扩展性，并将复杂的对象图存储在单个文档中。它支持动态查询、二级索引、快速的原子更新、聚合以及内建的复制和分片支持。
- en: 'This chapter will use the PHP 5.4 application we created in [Chapter 3](part0041_split_000.html#page
    "Chapter 3. Creating and Managing Applications"), *Creating and Managing Applications*.
    If you do not have any OpenShift application running, then you can create a new
    OpenShift application by running the following command:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 本章节将使用我们在[第 3 章](part0041_split_000.html#page "Chapter 3. Creating and Managing
    Applications")，*创建和管理应用程序*中创建的 PHP 5.4 应用程序。如果您没有正在运行的 OpenShift 应用程序，则可以通过运行以下命令创建一个新的
    OpenShift 应用程序：
- en: '[PRE0]'
  id: totrans-14
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Adding a MongoDB cartridge to your application
  id: totrans-15
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将 MongoDB 扩展包添加到您的应用程序
- en: In this recipe, you will learn how to add a MongoDB cartridge to your OpenShift
    application. MongoDB is a document-oriented, horizontally scalable, and NoSQL
    data store.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 在本教程中，您将学习如何将 MongoDB 扩展包添加到您的 OpenShift 应用程序。MongoDB 是一个面向文档的、水平可扩展的 NoSQL
    数据存储。
- en: Getting ready
  id: totrans-17
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: To step through this recipe, you will need the `rhc` command-line client installed
    on your machine. Refer to the *Installing the OpenShift rhc command-line client*
    recipe in [Chapter 1](part0014_split_000.html#page "Chapter 1. Getting Started
    with OpenShift"), *Getting Started with OpenShift* for details. Also, we will
    use the application created in the *Creating an OpenShift application using the
    rhc command-line client* recipe in [Chapter 3](part0041_split_000.html#page "Chapter 3. Creating
    and Managing Applications"), *Creating and Managing Applications*.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 为了执行这个教程，您需要在机器上安装 `rhc` 命令行客户端。有关详细信息，请参考[第 1 章](part0014_split_000.html#page
    "Chapter 1. Getting Started with OpenShift")，*OpenShift 入门*中的 *安装 OpenShift rhc
    命令行客户端* 章节。另外，我们将使用在[第 3 章](part0041_split_000.html#page "Chapter 3. Creating
    and Managing Applications")，*创建和管理应用程序*中创建的应用程序。
- en: How to do it…
  id: totrans-19
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: 'To install the MongoDB cartridge to the `myapp` application, use the following
    steps:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 要将 MongoDB 扩展包安装到 `myapp` 应用程序中，请按照以下步骤操作：
- en: 'Open a new command-line terminal, then change the directory to the `myapp`
    directory location and execute the following command:'
  id: totrans-21
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开一个新的命令行终端，切换到 `myapp` 目录位置并执行以下命令：
- en: '[PRE1]'
  id: totrans-22
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: This will install a new instance of MongoDB on your application gear. The `-c`
    option is used to specify the cartridge name and the `--app` option is used to
    specify the application name.
  id: totrans-23
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这将会在您的应用程序服务器上安装一个新的 MongoDB 实例。`-c` 选项用于指定扩展包名称，`--app` 选项用于指定应用程序名称。
- en: 'You can view the cartridge details using the `rhc show-cartridge` command:'
  id: totrans-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您可以使用 `rhc show-cartridge` 命令查看扩展包的详细信息：
- en: '[PRE2]'
  id: totrans-25
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'You can also stop the MongoDB server using the `stop` command:'
  id: totrans-26
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您还可以使用 `stop` 命令停止 MongoDB 服务器：
- en: '[PRE3]'
  id: totrans-27
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'You can restart the MongoDB server using the `restart` command:'
  id: totrans-28
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 您可以使用 `restart` 命令重启 MongoDB 服务器：
- en: '[PRE4]'
  id: totrans-29
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'If you want to remove the MongoDB server from your application, you can use
    the `remove` command:'
  id: totrans-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果您想从应用程序中移除 MongoDB 服务器，可以使用 `remove` 命令：
- en: '[PRE5]'
  id: totrans-31
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: How it works…
  id: totrans-32
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的…
- en: When you run the `rhc add-cartridge` command, `rhc` will make an HTTP POST request
    to the OpenShift server. The OpenShift server will receive the request and instantiate
    a new instance of the MongoDB database for your application. After provisioning
    the MongoDB database, the `rhc` client will show the database details on the command-line
    terminal.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 当你运行`rhc add-cartridge`命令时，`rhc`会向OpenShift服务器发出一个HTTP POST请求。OpenShift服务器将接收该请求，并为你的应用程序创建一个新的MongoDB数据库实例。在创建完MongoDB数据库后，`rhc`客户端将在命令行终端上显示数据库的详细信息。
- en: 'You can view the MongoDB installation by performing an SSH into your application
    gear:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过执行SSH连接到你的应用程序gear来查看MongoDB的安装情况：
- en: '[PRE6]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Then, run the `ls` command to view the gear directory structure and you will
    see the `mongodb` directory:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，运行`ls`命令查看gear的目录结构，你将看到`mongodb`目录：
- en: '[PRE7]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: The `mongodb` directory is your `mongodb` installation, and it is not shared
    with any other OpenShift application or user. It is only for your application,
    and only your application can access it.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: '`mongodb`目录是你的`mongodb`安装，它不会与其他OpenShift应用程序或用户共享。它仅供你的应用程序使用，只有你的应用程序可以访问它。'
- en: 'You can also connect with your MongoDB database by using the `mongo` command-line
    client, as shown in the following command. The *Accessing a MongoDB cartridge
    from your local machine* recipe will cover how to connect with MongoDB from your
    local machine:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 你也可以使用`mongo`命令行客户端连接到MongoDB数据库，如下所示。*从本地计算机访问MongoDB插件*配方将讲解如何从本地计算机连接到MongoDB：
- en: '[PRE8]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Now, you can run commands against your MongoDB database. To view all the databases,
    run the following command:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，你可以对MongoDB数据库运行命令。要查看所有数据库，请运行以下命令：
- en: '[PRE9]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: The `myapp` database corresponds to your application database.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: '`myapp`数据库对应的是你的应用程序数据库。'
- en: 'You can view all the MongoDB command-line utilities available on the gear by
    typing in `mongo` and hitting *Tab* twice:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过输入`mongo`并按*Tab*键两次来查看gear上所有可用的MongoDB命令行工具：
- en: '[PRE10]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: There's more…
  id: totrans-46
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多…
- en: You can also add a MongoDB database from the OpenShift web console. Go to [https://openshift.redhat.com/app/console/applications](https://openshift.redhat.com/app/console/applications),
    and click on the **myapp** application for details. On the `myapp` application's
    details web page, you will see an option to add a MongoDB database. Click on the
    **Add MongoDB 2.4** option to add a MongoDB 2.4 cartridge.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 你也可以通过OpenShift网页控制台添加MongoDB数据库。访问[https://openshift.redhat.com/app/console/applications](https://openshift.redhat.com/app/console/applications)，点击**myapp**应用程序查看详细信息。在`myapp`应用程序的详细网页上，你将看到一个添加MongoDB数据库的选项。点击**Add
    MongoDB 2.4**选项来添加MongoDB 2.4插件。
- en: See also
  id: totrans-48
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另见
- en: The *Adding a RockMongo cartridge to your application* recipe
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*将RockMongo插件添加到你的应用程序*配方'
- en: Adding a RockMongo cartridge to your application
  id: totrans-50
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将RockMongo插件添加到你的应用程序
- en: RockMongo ([http://rockmongo.com/](http://rockmongo.com/)) is a free, open source,
    and popular tool written in the PHP programming language to handle the administration
    of the MongoDB database via a web browser. As a web application, RockMongo makes
    it easy to administer the MongoDB server without any installation on your local
    machine. In this recipe, you will learn how to install a RockMongo cartridge on
    your application.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: RockMongo ([http://rockmongo.com/](http://rockmongo.com/))是一个免费的开源流行工具，使用PHP编程语言编写，通过网页浏览器管理MongoDB数据库。作为一个Web应用程序，RockMongo使得无需在本地计算机上安装，即可轻松管理MongoDB服务器。在本配方中，你将学习如何在应用程序上安装RockMongo插件。
- en: Getting ready
  id: totrans-52
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: To complete this recipe, you will need an application with a MongoDB cartridge.
    Refer to the *Adding a MongoDB cartridge to your application* recipe to learn
    how to install a MongoDB cartridge.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 要完成这个配方，你需要一个包含MongoDB插件的应用程序。参考*将MongoDB插件添加到你的应用程序*配方，了解如何安装MongoDB插件。
- en: How to do it…
  id: totrans-54
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: 'The steps needed to add the RockMongo cartridge are as follows:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 添加RockMongo插件的步骤如下：
- en: 'To install the RockMongo cartridge on the `myapp` application, open a new command-line
    terminal, then change the directory to the `myapp` directory location and execute
    the following command:'
  id: totrans-56
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要在`myapp`应用程序上安装RockMongo插件，请打开一个新的命令行终端，然后将目录切换到`myapp`所在的目录，并执行以下命令：
- en: '[PRE11]'
  id: totrans-57
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Note the username and password returned by the `rhc cartridge-add` command.
    You will need these to log in to RockMongo. The RockMongo credentials are the
    same as your MongoDB database credentials, and you can view them anytime by executing
    the `rhc show-app` or `rhc cartridge-show mongodb-2.4` command.
  id: totrans-58
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 记下`rhc cartridge-add`命令返回的用户名和密码。你将需要这些凭据来登录RockMongo。RockMongo凭据与MongoDB数据库凭据相同，你可以随时通过执行`rhc
    show-app`或`rhc cartridge-show mongodb-2.4`命令查看它们。
- en: Log in to RockMongo (`https://myapp-{domain-name}.rhcloud.com/rockmongo/`) using
    the credentials from step 1.
  id: totrans-59
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用第一步中的凭据登录到RockMongo（`https://myapp-{domain-name}.rhcloud.com/rockmongo/`）。
- en: How it works…
  id: totrans-60
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作原理……
- en: When you run the `rhc add-cartridge` command, the `rhc` client makes an HTTP
    POST request to the OpenShift server. The OpenShift server receives the request
    and installs the RockMongo cartridge on the application gear. The RockMongo cartridge
    works with all the supported application types (Java, Python, Node.js, Ruby, Perl,
    and PHP). You don't need to create PHP applications in order to use the RockMongo
    cartridge. OpenShift will start an Apache process to run the RockMongo application.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 当你运行`rhc add-cartridge`命令时，`rhc`客户端会向OpenShift服务器发送一个HTTP POST请求。OpenShift服务器收到请求后，会在应用程序Gear上安装RockMongo
    Cartridge。RockMongo Cartridge支持所有受支持的应用程序类型（Java、Python、Node.js、Ruby、Perl和PHP）。你不需要创建PHP应用程序就能使用RockMongo
    Cartridge。OpenShift将启动一个Apache进程来运行RockMongo应用程序。
- en: Note
  id: totrans-62
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: You can only add the RockMongo cartridge after you have added a MongoDB cartridge
    to your application. If you try to add RockMongo before adding a MongoDB cartridge,
    then you will receive the `Cartridge 'rockmongo-1.1' can not be added without
    mongodb` error.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 只有在向应用程序添加了MongoDB Cartridge之后，你才能添加RockMongo Cartridge。如果在添加MongoDB Cartridge之前尝试添加RockMongo，系统会显示`Cartridge
    'rockmongo-1.1' can not be added without mongodb`错误。
- en: There's more…
  id: totrans-64
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多……
- en: You can also add a RockMongo cartridge from the OpenShift web console. Go to
    [https://openshift.redhat.com/app/console/applications](https://openshift.redhat.com/app/console/applications)
    and click on the `myapp` application. To install a RockMongo cartridge, click
    on the **Add RockMongo 1.1** web link.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 你还可以通过OpenShift Web控制台添加RockMongo Cartridge。访问[https://openshift.redhat.com/app/console/applications](https://openshift.redhat.com/app/console/applications)，然后点击`myapp`应用程序。要安装RockMongo
    Cartridge，点击**Add RockMongo 1.1**网页链接。
- en: See also
  id: totrans-66
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另见
- en: The *Accessing a MongoDB cartridge from your local machine* recipe
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*从本地机器访问MongoDB Cartridge* 这一篇'
- en: The *Connecting to a MongoDB cartridge using Robomongo from your local machine*
    recipe
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*使用Robomongo从本地机器连接到MongoDB Cartridge*这一篇'
- en: Accessing a MongoDB cartridge from your local machine
  id: totrans-69
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 从本地机器访问MongoDB Cartridge
- en: In the *Adding a MongoDB cartridge to your application* recipe, you learned
    how to access a MongoDB database by performing an SSH into the application gear.
    In this recipe, you will learn how to connect with the MongoDB database from your
    local machine.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 在*将MongoDB Cartridge添加到你的应用程序*这一篇中，你学习了如何通过SSH访问应用程序Gear中的MongoDB数据库。在本篇中，你将学习如何从本地机器连接到MongoDB数据库。
- en: Getting ready
  id: totrans-71
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: To complete this recipe, you will need an application with a MongoDB cartridge.
    Refer to the *Adding a MongoDB cartridge to your application* recipe in this chapter
    to learn how to add a MongoDB cartridge. Also, you will need the `mongo` command-line
    client on your machine. You can download the MongoDB database from the official
    website at [http://www.mongodb.org/downloads/](http://www.mongodb.org/downloads/).
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 要完成本教程，你需要一个带有MongoDB Cartridge的应用程序。请参考本章中的*将MongoDB Cartridge添加到你的应用程序*一节，了解如何添加MongoDB
    Cartridge。此外，你的机器上还需要安装`mongo`命令行客户端。你可以从官方网站下载MongoDB数据库：[http://www.mongodb.org/downloads/](http://www.mongodb.org/downloads/)。
- en: How to do it…
  id: totrans-73
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作……
- en: 'Perform the following steps to connect to a MongoDB cartridge from your local
    machine:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 执行以下步骤，从本地机器连接到MongoDB Cartridge：
- en: 'Open a command-line terminal and change the directory to the `myapp` application
    directory. Execute the following command to forward remote ports to the local
    machine:'
  id: totrans-75
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开命令行终端，并将目录切换到`myapp`应用程序目录。执行以下命令将远程端口转发到本地机器：
- en: '[PRE12]'
  id: totrans-76
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Open another command-line terminal and connect to the MongoDB database from
    the `mongo` command-line client from your local machine using the following command:'
  id: totrans-77
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开另一个命令行终端，并使用以下命令从本地机器的`mongo`命令行客户端连接到MongoDB数据库：
- en: '[PRE13]'
  id: totrans-78
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Replace `<username>` and `<password>` with your MongoDB cartridge username and
    password. The host and port values can be found in the output of the `rhc port-forward`
    command. As you can see in step 1, the `MongoDB` database is available on the
    `127.0.0.1` host and `27017` port number. You can view the username and password
    by running the `rhc show-app` or `rhc cartridge-show mongodb-2.4` command.
  id: totrans-79
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将 `<username>` 和 `<password>` 替换为您的 MongoDB 插件的用户名和密码。主机和端口值可以在 `rhc port-forward`
    命令的输出中找到。如步骤 1 所示，`MongoDB` 数据库在 `127.0.0.1` 主机和 `27017` 端口上可用。您可以通过运行 `rhc show-app`
    或 `rhc cartridge-show mongodb-2.4` 命令查看用户名和密码。
- en: 'Once connected to the MongoDB database, you can run any legitimate command,
    as follows:'
  id: totrans-80
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 连接到 MongoDB 数据库后，您可以执行任何合法命令，如下所示：
- en: '[PRE14]'
  id: totrans-81
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE14]'
- en: How it works…
  id: totrans-82
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的……
- en: In step 1, you used the `rhc port-forward` command to forward all the remote
    ports to the local machine. The `rhc port-forward` command is a wrapper around
    the SSH port forwarding that makes a port on the remote machine available on your
    local machine. A port on the remote machine, which would otherwise be unavailable
    to you, can be used as if it's on your local machine. The command returns the
    list of ports that you can connect from your local machine, as shown in step 1.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 在步骤 1 中，您使用了 `rhc port-forward` 命令将所有远程端口转发到本地机器。`rhc port-forward` 命令是 SSH
    端口转发的封装器，它使得远程机器上的端口在本地机器上可用。原本无法访问的远程机器上的端口，您可以像访问本地机器上的端口一样使用。该命令返回一个可以从本地机器连接的端口列表，如步骤
    1 所示。
- en: As you can see in the output, the `mongod` process is available on the `27017`
    port and `127.0.0.1` host.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 如输出所示，`mongod` 进程可在 `27017` 端口和 `127.0.0.1` 主机上访问。
- en: In step 2, you connected to the MongoDB database from your local machine, passing
    in the username, password, host, and port of the database. After a successful
    connection, you ran a command in step 3.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 在步骤 2 中，您从本地机器连接到 MongoDB 数据库，传入数据库的用户名、密码、主机和端口。成功连接后，您在步骤 3 中执行了一个命令。
- en: To terminate port forwarding, just press *Ctrl* + *C* on the command-line terminal
    where the `rhc port-forward` command is running.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 要终止端口转发，只需在运行 `rhc port-forward` 命令的命令行终端中按下 *Ctrl* + *C*。
- en: See also
  id: totrans-87
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另见
- en: The *Connecting to a MongoDB cartridge using Robomongo from your local machine*
    recipe
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*从本地机器使用 Robomongo 连接到 MongoDB 插件*的教程'
- en: The *Adding a MongoDB cartridge to your application* recipe
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*将 MongoDB 插件添加到您的应用程序*的教程'
- en: Connecting to a MongoDB cartridge using Robomongo from your local machine
  id: totrans-90
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 从本地机器使用 Robomongo 连接到 MongoDB 插件
- en: In the *Accessing a MongoDB cartridge from your local machine* recipe, you learned
    how to connect to a MongoDB cartridge using the `mongo` command-line client from
    your local machine. In this recipe, you will learn how to connect to a MongoDB
    cartridge using RoboMongo from your local machine. RoboMongo ([http://robomongo.org/](http://robomongo.org/))
    is an open source, cross-platform MongoDB GUI management tool. We used RoboMongo
    because it is available across all the operating systems, and you can type in
    all the commands you type in the mongo shell in RoboMongo. It feels natural to
    developers who are used to the mongo shell.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 在 *从本地机器访问 MongoDB 插件* 教程中，您学习了如何使用 `mongo` 命令行客户端从本地机器连接到 MongoDB 插件。在本教程中，您将学习如何使用
    RoboMongo 从本地机器连接到 MongoDB 插件。RoboMongo ([http://robomongo.org/](http://robomongo.org/))
    是一个开源、跨平台的 MongoDB 图形化管理工具。我们使用 RoboMongo 因为它在所有操作系统上都有支持，并且您可以在 RoboMongo 中输入在
    mongo shell 中输入的所有命令。对于习惯使用 mongo shell 的开发者来说，它非常自然。
- en: Getting ready
  id: totrans-92
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: To complete this recipe, you will need an application with a MongoDB cartridge.
    Refer to the *Adding a MongoDB cartridge to your application* recipe in this chapter
    to learn how to add a MongoDB cartridge. Also, you will need the RoboMongo tool
    installed on your local machine. You can download the RoboMongo tool from its
    website at [http://robomongo.org/](http://robomongo.org/).
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 为了完成这个教程，您需要一个带有 MongoDB 插件的应用程序。请参考本章中的 *将 MongoDB 插件添加到您的应用程序* 教程，了解如何添加 MongoDB
    插件。此外，您还需要在本地机器上安装 RoboMongo 工具。您可以从其网站 [http://robomongo.org/](http://robomongo.org/)
    下载 RoboMongo 工具。
- en: How to do it…
  id: totrans-94
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作……
- en: 'Perform the following steps to connect to RoboMongo with your MongoDB cartridge:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 执行以下步骤，通过 RoboMongo 连接到您的 MongoDB 插件：
- en: 'Open a command-line terminal and change the directory to the `myapp` application
    directory. Execute the following command to forward remote ports to the local
    machine:'
  id: totrans-96
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开命令行终端，并切换到 `myapp` 应用程序目录。执行以下命令，将远程端口转发到本地机器：
- en: '[PRE15]'
  id: totrans-97
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Start the RoboMongo application, and you will see the following screenshot.
    Click on the connect icon in the top-left corner:![How to do it…](img/00050.jpeg)
  id: totrans-98
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启动 RoboMongo 应用程序，你将看到以下截图。点击左上角的连接图标：![如何操作…](img/00050.jpeg)
- en: After clicking on the connect icon, you will see a new window with options to
    create a new connection. Click on the **Create** link to create a new connection:![How
    to do it…](img/00051.jpeg)
  id: totrans-99
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击连接图标后，你将看到一个新窗口，提供创建新连接的选项。点击**创建**链接以创建新连接：![如何操作…](img/00051.jpeg)
- en: Set up a new connection by entering the MongoDB database details. The host and
    port can be found in the output of the `rhc port-forward` command in step 1, as
    shown in the following screenshot:![How to do it…](img/00052.jpeg)
  id: totrans-100
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输入 MongoDB 数据库的详细信息，设置一个新连接。主机和端口可以在第 1 步中`rhc port-forward`命令的输出中找到，如以下截图所示：![如何操作…](img/00052.jpeg)
- en: Click on the **Authentication** tab to enter the username and password required
    to connect with the MongoDB cartridge. You can view the MongoDB cartridge details
    using the `rhc show-app` or `rhc cartridge-show mongodb-2.4` command. The following
    screenshot shows the **Authentication** tab details:![How to do it…](img/00053.jpeg)
  id: totrans-101
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**身份验证**标签，输入连接 MongoDB cartridge 所需的用户名和密码。你可以使用`rhc show-app`或`rhc cartridge-show
    mongodb-2.4`命令查看 MongoDB cartridge 的详细信息。以下截图展示了**身份验证**标签的详情：![如何操作…](img/00053.jpeg)
- en: Click on the **Save** button and you will see the new connection listed in the
    **MongoDB Connections** window:![How to do it…](img/00054.jpeg)
  id: totrans-102
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**保存**按钮，你将看到新连接在**MongoDB 连接**窗口中列出：![如何操作…](img/00054.jpeg)
- en: Click on the **Connect** button and you will be connected to the MongoDB cartridge.
  id: totrans-103
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**连接**按钮，你将连接到 MongoDB cartridge。
- en: Once connected to your MongoDB cartridge, you can click on any database and
    view all its collections. When you double-click on a collection, you can see the
    first 50 documents inside it. The following screenshot shows the documents inside
    the `msgs` collection:![How to do it…](img/00055.jpeg)
  id: totrans-104
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 连接到 MongoDB cartridge 后，你可以点击任何数据库并查看其所有集合。当你双击一个集合时，你可以查看其中的前 50 个文档。以下截图展示了`msgs`集合中的文档：![如何操作…](img/00055.jpeg)
- en: How it works…
  id: totrans-105
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的…
- en: In step 1, you used the `rhc port-forward` command to forward all the remote
    ports to the local machine. This will make it possible to connect to the MongoDB
    database running inside your application gear. In steps 2 through 7, you created
    a new MongoDB connection and connected with the MongoDB cartridge from within
    RoboMongo. In step 8, you navigated to the **msgs** collection in the **test**
    database.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 在步骤 1 中，你使用了`rhc port-forward`命令将所有远程端口转发到本地机器。这将使得你能够连接到运行在应用程序 gear 中的 MongoDB
    数据库。在步骤 2 到 7 中，你创建了一个新的 MongoDB 连接，并从 RoboMongo 内部连接到了 MongoDB cartridge。在步骤
    8 中，你导航到了**test**数据库中的**msgs**集合。
- en: See also
  id: totrans-107
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另见
- en: The *Accessing a MongoDB cartridge from your local machine* recipe
  id: totrans-108
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*从本地机器访问 MongoDB cartridge*教程'
- en: The *Enabling the MongoDB cartridge REST interface* recipe
  id: totrans-109
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*启用 MongoDB cartridge REST 接口*教程'
- en: Enabling the MongoDB cartridge REST interface
  id: totrans-110
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 启用 MongoDB cartridge REST 接口
- en: MongoDB exposes a minimal REST interface that allows users to query collections.
    The interface does not expose operations to insert, update, or remove documents.
    In this recipe, you will learn how to enable the MongoDB cartridge REST interface.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: MongoDB 提供了一个最小化的 REST 接口，允许用户查询集合。该接口不暴露插入、更新或删除文档的操作。在本教程中，你将学习如何启用 MongoDB
    cartridge 的 REST 接口。
- en: Getting ready
  id: totrans-112
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: To complete this recipe, you will need an application with a MongoDB cartridge.
    Refer to the *Adding a MongoDB cartridge to your application* recipe in this chapter
    to learn how to add one.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 要完成本教程，你需要一个包含 MongoDB cartridge 的应用程序。请参考本章中的*将 MongoDB cartridge 添加到应用程序*教程，了解如何添加一个
    MongoDB cartridge。
- en: How to do it…
  id: totrans-114
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: 'Perform the following steps to enable the MongoDB REST interface:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤启用 MongoDB REST 接口：
- en: 'Open a new command-line terminal and SSH into the `myapp` application gear
    using the `ssh` command:'
  id: totrans-116
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开一个新的命令行终端，使用`ssh`命令 SSH 进入`myapp`应用程序 gear：
- en: '[PRE16]'
  id: totrans-117
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE16]'
- en: Once inside the application gear, change the directory to `mongodb/conf` and
    edit the `mongodb.conf` file using Vim.
  id: totrans-118
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 进入应用程序 gear 后，切换到`mongodb/conf`目录，并使用 Vim 编辑`mongodb.conf`文件。
- en: 'Now, we need to update the `nohttpinterface` property value to `false` so that
    MongoDB enables the HTTP frontend on the `28017` port. To enable the REST interface,
    you have to add a new property, `rest`, and set its value equal to `true`, as
    shown in the following code:'
  id: totrans-119
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们需要将`nohttpinterface`属性值更新为`false`，以便MongoDB在`28017`端口启用HTTP前端。要启用REST接口，您需要添加一个新属性`rest`，并将其值设置为`true`，如下所示：
- en: '[PRE17]'
  id: totrans-120
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'Exit the SSH session and restart the MongoDB cartridge to allow the changes
    to take effect:'
  id: totrans-121
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 退出SSH会话并重启MongoDB组件，以使更改生效：
- en: '[PRE18]'
  id: totrans-122
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'Execute the `rhc port-forward` command on your local machine to enable port
    forwarding. This will list all the applications that you can connect to from your
    local machine. The REST interface will be exposed at the `28017` port:'
  id: totrans-123
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在本地机器上执行`rhc port-forward`命令以启用端口转发。这将列出您可以从本地机器连接的所有应用程序。REST接口将在`28017`端口暴露：
- en: '[PRE19]'
  id: totrans-124
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE19]'
- en: Open `http://127.0.0.1:28017/` in a web browser. You have to authenticate using
    the MongoDB cartridge credentials. It uses the HTTP basic authentication.
  id: totrans-125
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在浏览器中打开`http://127.0.0.1:28017/`。您需要使用MongoDB组件的凭证进行身份验证。它使用HTTP基本身份验证。
- en: Then, to view all the documents in the `msgs` collection in the `test` document,
    you can go to `http://127.0.0.1:28017/test/msgs/`. This will list a JSON document
    that contains all the messages in the `msgs` collection.
  id: totrans-126
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，要查看`test`文档中`msgs`集合的所有文档，可以访问`http://127.0.0.1:28017/test/msgs/`。这将列出一个包含`msgs`集合中所有消息的JSON文档。
- en: How it works…
  id: totrans-127
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作原理……
- en: By default, MongoDB disables the REST interface. To enable the REST interface,
    you have to update the `mongodb.conf` MongoDB configuration file. In step 3, you
    updated the `mongodb.conf` file to enable the REST API. Then, you restarted the
    MongoDB cartridge in step 4 to reload the configuration. To connect with the REST
    interface from your local machine, you enabled port forwarding in step 5\. The
    `rhc port-forward` command lists all the remote services that you can connect
    to from your local machine. The MongoDB REST interface is available on the `28017`
    port. In step 7, you viewed the details of the `msgs` collection in the `test`
    database by opening `http://127.0.0.1:28017/test/msgs/` in the browser.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，MongoDB禁用了REST接口。要启用REST接口，您需要更新`mongodb.conf` MongoDB配置文件。在第3步中，您更新了`mongodb.conf`文件以启用REST
    API。然后，在第4步中，您重启了MongoDB组件以重新加载配置。为了从本地机器连接到REST接口，您在第5步启用了端口转发。`rhc port-forward`命令列出了您可以从本地机器连接的所有远程服务。MongoDB的REST接口可在`28017`端口访问。在第7步中，您通过在浏览器中打开`http://127.0.0.1:28017/test/msgs/`来查看`test`数据库中`msgs`集合的详细信息。
- en: See also
  id: totrans-129
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另见
- en: The *Using MongoLab MongoDB-as-a-Service with OpenShift* recipe
  id: totrans-130
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*将MongoLab MongoDB即服务与OpenShift结合使用*教程'
- en: The *Performing scheduled MongoDB database backups* recipe
  id: totrans-131
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*执行定时MongoDB数据库备份*教程'
- en: Performing scheduled MongoDB database backups
  id: totrans-132
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 执行定时MongoDB数据库备份
- en: In this recipe, you will learn how to perform a scheduled backup of your MongoDB
    database and upload the backup to Amazon S3.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 在本教程中，您将学习如何执行MongoDB数据库的定时备份，并将备份上传到Amazon S3。
- en: Getting ready
  id: totrans-134
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: To complete this recipe, you will need an application with a MongoDB cartridge.
    Refer to the *Adding a MongoDB cartridge to your application* recipe in this chapter
    to learn how to install one. Also, you need to have an Amazon AWS account. Go
    to [http://aws.amazon.com/](http://aws.amazon.com/) and sign up for a new account
    if you don't have one already.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 要完成本教程，您需要一个包含MongoDB组件的应用程序。请参阅本章中的*将MongoDB组件添加到应用程序*教程，了解如何安装该组件。同时，您还需要拥有一个Amazon
    AWS账户。如果没有，请访问[http://aws.amazon.com/](http://aws.amazon.com/)并注册一个新账户。
- en: How to do it…
  id: totrans-136
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做……
- en: 'Perform the following steps to enable a daily scheduled backup of the MongoDB
    cartridge:'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 执行以下步骤以启用MongoDB组件的每日定时备份：
- en: Go to [https://console.aws.amazon.com/s3/home](https://console.aws.amazon.com/s3/home)
    and create a new bucket to store your database backups.
  id: totrans-138
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 访问[https://console.aws.amazon.com/s3/home](https://console.aws.amazon.com/s3/home)，并创建一个新的存储桶来存储您的数据库备份。
- en: 'Add the `cron` cartridge to your application by running the following command:'
  id: totrans-139
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过运行以下命令，将`cron`组件添加到您的应用程序中：
- en: '[PRE20]'
  id: totrans-140
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'SSH into the application gear and download the `s3-bash` utility in `$OPENSHIFT_DATA_DIR`.
    Extract it to the `s3-bash` directory using the following commands:'
  id: totrans-141
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用SSH连接到应用程序节点，并在`$OPENSHIFT_DATA_DIR`中下载`s3-bash`工具。使用以下命令将其解压到`s3-bash`目录：
- en: '[PRE21]'
  id: totrans-142
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE21]'
- en: Create a new file, `AWSSecretAccessKeyIdFile`, in the `$OPENSHIFT_DATA_DIR/s3-bash`
    directory and store your Amazon secret access key to it. This is required by `s3-bash`
    to communicate with Amazon S3.
  id: totrans-143
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`$OPENSHIFT_DATA_DIR/s3-bash`目录中创建一个名为`AWSSecretAccessKeyIdFile`的新文件，并将你的Amazon密钥访问秘钥存储到其中。这是`s3-bash`与Amazon
    S3通信所需的。
- en: 'Create a script on your local machine in `.openshift/cron/minutely/database_backup.sh`
    and add the following content to it:'
  id: totrans-144
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在本地机器上创建一个脚本，路径为`.openshift/cron/minutely/database_backup.sh`，并将以下内容添加到其中：
- en: '[PRE22]'
  id: totrans-145
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE22]'
- en: The preceding script will run every day at 23:50 (11:50 p.m.) and also run the
    `mongodump` command to create the database backup file. The file is then transferred
    to Amazon S3 using the `s3-bash` API. Finally, after uploading the file, it deletes
    the database dump file from the application gear.
  id: totrans-146
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 上述脚本将每天在23:50（11:50 p.m.）运行，并执行`mongodump`命令以创建数据库备份文件。然后，使用`s3-bash` API将文件传输到Amazon
    S3。最后，在上传文件后，脚本会从应用程序设备中删除数据库转储文件。
- en: 'Now, we have to set the environment variables so that our script can talk with
    Amazon S3\. If you are not sure how to access your security credentials, then
    refer to the documentation at [http://docs.aws.amazon.com/general/latest/gr/getting-aws-sec-creds.html](http://docs.aws.amazon.com/general/latest/gr/getting-aws-sec-creds.html).
    We run the following commands:'
  id: totrans-147
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们需要设置环境变量，以便脚本能够与Amazon S3进行通信。如果你不确定如何访问你的安全凭证，可以参考文档：[http://docs.aws.amazon.com/general/latest/gr/getting-aws-sec-creds.html](http://docs.aws.amazon.com/general/latest/gr/getting-aws-sec-creds.html)。我们运行以下命令：
- en: '[PRE23]'
  id: totrans-148
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE23]'
- en: Commit the code and push it to the OpenShift gear. Every night, at 23:50 (11:50
    p.m.), database backup will be done and your backup will be uploaded to Amazon
    S3.
  id: totrans-149
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 提交代码并推送到OpenShift应用。每晚23:50（11:50 p.m.）时，将进行数据库备份，并将备份文件上传到Amazon S3。
- en: How it works…
  id: totrans-150
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的……
- en: In step 1, you created a new Amazon S3 bucket to store your MongoDB database
    backups. Amazon S3 is widely used to store static files and is an ideal choice
    for this job. Next, you added the `cron` cartridge to the application. The `cron`
    cartridge will be used to perform daily backups at a particular time.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 在第1步中，你创建了一个新的Amazon S3存储桶，用于存储MongoDB数据库备份。Amazon S3广泛用于存储静态文件，是此任务的理想选择。接下来，你将`cron`组件添加到应用程序中。`cron`组件将用于在特定时间执行每日备份。
- en: Amazon S3 exposes its REST service that users can use to perform operations
    on S3 buckets. Amazon provides many programming languages wrapped around their
    REST API to make it easy for developers to integrate with their application. As
    we wanted to keep this recipe's language agnostic, we used the Amazon S3 bash
    wrapper. Amazon does not officially support this wrapper, but it works very well.
    In step 3, you downloaded the `s3-bash` utility using `wget`. The `tar.gz` file
    was stored in `$OPENSHIFT_DATA_DIR`. You then extracted the `tar.gz` file to the
    `s3-bash` directory.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: Amazon S3暴露了其REST服务，用户可以利用这些服务对S3存储桶进行操作。Amazon为多种编程语言提供了包装的REST API，简化了开发者与应用程序的集成。由于我们希望保持本配方的语言中立，我们使用了Amazon
    S3的bash包装器。虽然Amazon并未正式支持该包装器，但它的运行效果非常好。在第3步中，你通过`wget`下载了`s3-bash`工具。`tar.gz`文件存储在`$OPENSHIFT_DATA_DIR`中。然后，你解压了该`tar.gz`文件到`s3-bash`目录。
- en: Next, in step 4, you created a file called `AWSSecretAccessKeyIdFile` to store
    the Amazon access key secret. The `s3-bash` wrapper uses a file for the AWS secret
    access key ID so that it does not appear in the list of running processes with
    `ps`.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，在第4步中，你创建了一个名为`AWSSecretAccessKeyIdFile`的文件，用于存储Amazon访问密钥密钥。`s3-bash`包装器使用该文件作为AWS密钥访问秘钥ID，以避免它出现在使用`ps`命令查看的运行进程列表中。
- en: In step 5, you created a bash script that will be executed every night at 23:50
    (11:50 p.m.). The script first takes the database backup using the `mongodump`
    command and then uploads the file to Amazon S3\. The filename is the current timestamp.
    Finally, after uploading the backup to S3, the script deletes the backup to save
    disk space.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 在第5步中，你创建了一个bash脚本，该脚本将在每晚23:50（11:50 p.m.）执行。脚本首先使用`mongodump`命令进行数据库备份，然后将文件上传到Amazon
    S3。文件名为当前的时间戳。最后，在将备份上传到S3后，脚本会删除备份文件，以节省磁盘空间。
- en: Step 6 creates two environment variables required by the backup script. Finally,
    in step 7, you push the code to the application gear.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 第6步创建了备份脚本所需的两个环境变量。最后，在第7步中，你将代码推送到应用程序设备。
- en: See also
  id: totrans-156
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另见
- en: The *Using MongoLab MongoDB-as-a-Service with OpenShift* recipe
  id: totrans-157
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*使用MongoLab MongoDB-as-a-Service与OpenShift* 配方'
- en: Using MongoLab MongoDB-as-a-Service with OpenShift
  id: totrans-158
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用MongoLab MongoDB-as-a-Service与OpenShift
- en: 'The MongoLab ([https://mongolab.com](https://mongolab.com)) MongoDB-as-a-Service
    makes it easy for you to set up, operate, and scale a MongoDB database on top
    of various cloud providers. In addition to the standard MongoDB features, MongoLab
    also offers the following functionality:'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: MongoLab ([https://mongolab.com](https://mongolab.com)) 的 MongoDB 服务使你能够轻松地在各种云提供商上设置、操作和扩展
    MongoDB 数据库。除了标准的 MongoDB 功能外，MongoLab 还提供以下功能：
- en: Running MongoDB on all the major cloud providers, such as Amazon, Google, Rackspace,
    and so on
  id: totrans-160
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在所有主要云提供商上运行 MongoDB，如 Amazon、Google、Rackspace 等
- en: Highly available MongoDB
  id: totrans-161
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 高可用 MongoDB
- en: Automated backups
  id: totrans-162
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 自动备份
- en: Monitoring support
  id: totrans-163
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 监控支持
- en: In this recipe, you will learn how to use the MongoLab MongoDB-as-a-Service
    with your OpenShift applications.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 在本教程中，你将学习如何将 MongoLab 的 MongoDB 服务与 OpenShift 应用一起使用。
- en: Getting ready
  id: totrans-165
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备开始
- en: To complete this recipe, you will need an OpenShift application. Also, you need
    to have a MongoLab account. Go to [https://mongolab.com/](https://mongolab.com/)
    and sign up for a new account if you don't have one already.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 要完成这个操作，你需要一个 OpenShift 应用。此外，你还需要一个 MongoLab 账户。如果你还没有账户，请访问 [https://mongolab.com/](https://mongolab.com/)
    并注册一个新账户。
- en: How to do it…
  id: totrans-167
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: 'Perform the following steps to connect with the MongoLab MongoDB server from
    the OpenShift application:'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 执行以下步骤，以便从 OpenShift 应用连接到 MongoLab MongoDB 服务器：
- en: After you have created a MongoLab account, you will be shown a screen to create
    your first database. Click on the **Create new** button:![How to do it…](img/00056.jpeg)
  id: totrans-169
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建 MongoLab 账户后，你将看到一个页面，用于创建你的第一个数据库。点击 **创建新数据库** 按钮：![如何操作…](img/00056.jpeg)
- en: Enter the details of your MongoDB instance. In the following screenshot, the
    database name is `myapp` and Amazon EC2 is the cloud-hosting provider. We choose
    the US East coast data center, as this is where the OpenShift Online application
    instances are located. This helps to minimize the latency between the OpenShift
    application and the database instance:![How to do it…](img/00057.jpeg)
  id: totrans-170
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输入你的 MongoDB 实例的详细信息。在以下截图中，数据库名称为 `myapp`，而 Amazon EC2 是云托管提供商。我们选择了美国东海岸的数据中心，因为
    OpenShift Online 应用实例位于此处。这有助于最小化 OpenShift 应用与数据库实例之间的延迟：![如何操作…](img/00057.jpeg)
- en: After the database is successfully provisioned, you will see it listed, as shown
    in the following screenshot:![How to do it…](img/00058.jpeg)
  id: totrans-171
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 数据库成功创建后，你会看到它被列出，如以下截图所示：![如何操作…](img/00058.jpeg)
- en: Click on the **myapp** database and you will be shown details of the database:![How
    to do it…](img/00059.jpeg)
  id: totrans-172
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击 **myapp** 数据库，你将看到数据库的详细信息：![如何操作…](img/00059.jpeg)
- en: Before you can connect with the database, you need to create a database user.
    Click on the **Click here** link to create a new database user, as shown in the
    following screenshot:![How to do it…](img/00060.jpeg)
  id: totrans-173
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在你可以连接到数据库之前，你需要创建一个数据库用户。点击 **点击这里** 链接以创建一个新的数据库用户，如以下截图所示：![如何操作…](img/00060.jpeg)
- en: This will open a pop up, as shown in the following screenshot, where you have
    to enter the username and password for the new database user:![How to do it…](img/00061.jpeg)
  id: totrans-174
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这将弹出一个窗口，如以下截图所示，你需要在此输入新数据库用户的用户名和密码：![如何操作…](img/00061.jpeg)
- en: After creation, the database user will be shown on the database details page
    under the **Users** tab.
  id: totrans-175
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建后，数据库用户将在数据库详情页的 **用户** 标签下显示。
- en: 'To connect to the MongoLab MongoDB instance, you will need to have the `mongo`
    command-line client on the gear. Every OpenShift application gear already has
    the `mongo` command-line client installed, so you don''t have to do anything.
    Just SSH into the application gear using the `rhc ssh` command and then enter
    the following command. The username and password corresponds to the one you created
    during step 6\. The host, port, and database name correspond to the information
    found in step 4:'
  id: totrans-176
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要连接到 MongoLab MongoDB 实例，你需要在 gear 上安装 `mongo` 命令行客户端。每个 OpenShift 应用 gear 都已安装了
    `mongo` 命令行客户端，因此你无需执行任何操作。只需使用 `rhc ssh` 命令 SSH 进入应用 gear，然后输入以下命令。用户名和密码对应于你在第
    6 步中创建的凭据。主机、端口和数据库名称对应于第 4 步中找到的信息：
- en: '[PRE24]'
  id: totrans-177
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'Once connected to the MongoLab MongoDB instance, you can run any valid MongoDB
    command, as follows:'
  id: totrans-178
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦连接到 MongoLab MongoDB 实例，你就可以运行任何有效的 MongoDB 命令，如下所示：
- en: '[PRE25]'
  id: totrans-179
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE25]'
- en: How it works…
  id: totrans-180
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的…
- en: Step 1 through 4 helped you create a new instance of the MongoLab MongoDB database
    instance. You are required to provide details related to your database instance,
    and MongoLab will provision a MongoDB database instance based on the details you
    entered. From step 5 through step 7, you created a new database user that will
    allow you to connect to the MongoDB database instance from the outside world.
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 第 1 至第 4 步帮助你创建了一个新的 MongoLab MongoDB 数据库实例。你需要提供与数据库实例相关的详细信息，MongoLab 将根据你输入的详细信息配置一个
    MongoDB 数据库实例。从第 5 步到第 7 步，你创建了一个新的数据库用户，使你能够从外部世界连接到 MongoDB 数据库实例。
- en: In step 8, you used the database details to connect to the MongoDB instance
    from the OpenShift application gear using the `mongo` command-line client. Finally,
    you ran a few Mongo commands on the connected MongoLab MongoDB database instance.
    To learn how to connect to MongoLab with your PHP code, you can refer to the OpenShift
    official blog at [https://www.openshift.com/blogs/getting-started-with-mongodb-mongolab-php-and-openshift](https://www.openshift.com/blogs/getting-started-with-mongodb-mongolab-php-and-openshift).
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 在第 8 步中，你使用数据库详细信息通过 `mongo` 命令行客户端连接到 MongoDB 实例，从 OpenShift 应用程序装备进行连接。最后，你在已连接的
    MongoLab MongoDB 数据库实例上运行了一些 Mongo 命令。要了解如何使用 PHP 代码连接到 MongoLab，你可以参考 OpenShift
    官方博客：[https://www.openshift.com/blogs/getting-started-with-mongodb-mongolab-php-and-openshift](https://www.openshift.com/blogs/getting-started-with-mongodb-mongolab-php-and-openshift)。
- en: See also
  id: totrans-183
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另请参见
- en: The *Adding a MongoDB cartridge to your application* recipe
  id: totrans-184
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*将 MongoDB 卡带添加到你的应用程序* 章节'
- en: Adding a MariaDB cartridge to your application
  id: totrans-185
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将 MariaDB 卡带添加到你的应用程序
- en: In this recipe, you will learn how to add the MariaDB downloadable cartridge
    to your OpenShift application. MariaDB ([https://mariadb.org/](https://mariadb.org/))
    is a community fork of the MySQL database. It is intended to be a drop-in replacement
    for the MySQL database.
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，你将学习如何将 MariaDB 可下载卡带添加到你的 OpenShift 应用程序。MariaDB ([https://mariadb.org/](https://mariadb.org/))
    是 MySQL 数据库的社区分支，旨在作为 MySQL 数据库的直接替代。
- en: Getting ready
  id: totrans-187
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: To step through this recipe, you will need the `rhc` command-line client installed
    on your machine. Refer to the *Installing the OpenShift rhc command-line client*
    recipe in [Chapter 1](part0014_split_000.html#page "Chapter 1. Getting Started
    with OpenShift"), *Getting Started with OpenShift* for details. Also, we will
    use the application created in the *Creating an OpenShift application using the
    rhc command-line client* recipe in [Chapter 3](part0041_split_000.html#page "Chapter 3. Creating
    and Managing Applications"), *Creating and Managing Applications*.
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 要执行此操作步骤，你需要在你的机器上安装 `rhc` 命令行客户端。有关详细信息，请参阅 [第 1 章](part0014_split_000.html#page
    "Chapter 1. Getting Started with OpenShift") 中的 *安装 OpenShift rhc 命令行客户端* 章节，*OpenShift
    入门*。另外，我们将使用在 [第 3 章](part0041_split_000.html#page "Chapter 3. Creating and Managing
    Applications") 中 *使用 rhc 命令行客户端创建 OpenShift 应用程序* 章节中创建的应用程序，*创建与管理应用程序*。
- en: How to do it…
  id: totrans-189
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: 'To install the MariaDB 5.5 downloadable cartridge on the `myapp` application,
    open a new command-line terminal, then change the directory to the `myapp` directory
    location and execute the following command:'
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 要在 `myapp` 应用程序上安装 MariaDB 5.5 可下载卡带，打开一个新的命令行终端，然后将目录更改为 `myapp` 目录的位置，并执行以下命令：
- en: '[PRE26]'
  id: totrans-191
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: The preceding command will install a new instance of the MariaDB server on your
    application gear.
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 上述命令将会在你的应用程序装备上安装一个新的 MariaDB 服务器实例。
- en: 'You can view the cartridge details using the `rhc cartridge-s` `how` command:'
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用 `rhc cartridge-s` `how` 命令查看卡带的详细信息：
- en: '[PRE27]'
  id: totrans-194
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'You can also stop the MariaDB server using the `stop` command:'
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 你还可以使用`stop`命令停止 MariaDB 服务器：
- en: '[PRE28]'
  id: totrans-196
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'You can restart the MariaDB server using the `restart` command:'
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用`restart`命令重启 MariaDB 服务器：
- en: '[PRE29]'
  id: totrans-198
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'If you want to remove the MariaDB server from your application, you can use
    the `remove` command:'
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想从应用程序中移除 MariaDB 服务器，可以使用 `remove` 命令：
- en: '[PRE30]'
  id: totrans-200
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: How it works…
  id: totrans-201
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的…
- en: When you run the `rhc cartridge-add` command, `rhc` will make an HTTP POST request
    to the OpenShift server. The OpenShift server will receive the request and instantiate
    a new instance of the MariaDB server for your application using the manifest file.
    After provisioning the MariaDB server, the `rhc` client will show the database
    details on the command-line terminal.
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 当你运行`rhc cartridge-add`命令时，`rhc`将向 OpenShift 服务器发送一个 HTTP POST 请求。OpenShift
    服务器将接收该请求，并使用清单文件为你的应用程序实例化一个新的 MariaDB 服务器实例。在配置好 MariaDB 服务器后，`rhc` 客户端会在命令行终端显示数据库的详细信息。
- en: 'You can view the MariaDB installation by performing an SSH into your application
    gear:'
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过 SSH 连接到你的应用程序装备，查看 MariaDB 的安装情况：
- en: '[PRE31]'
  id: totrans-204
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'Then, run the `ls` command to view the gear directory structure and you will
    see the `mariadb` directory:'
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，运行 `ls` 命令查看 gear 目录结构，你将看到 `mariadb` 目录：
- en: '[PRE32]'
  id: totrans-206
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: The `mariadb` directory is your `mariadb` installation, and it is not shared
    with any other OpenShift application or user. It is only for your application,
    and only your application can access it.
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: '`mariadb` 目录是你的 `mariadb` 安装目录，它不会与任何其他 OpenShift 应用程序或用户共享。它仅供你的应用程序使用，只有你的应用程序可以访问它。'
- en: You can also connect with your MariaDB server using the `mysql` command-line
    client. We used the `mysql` client because it is already installed and compatible
    with MariaDB.
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 你也可以使用 `mysql` 命令行客户端连接到你的 MariaDB 服务器。我们使用 `mysql` 客户端，因为它已安装并与 MariaDB 兼容。
- en: 'Now, you can run SQL commands against your MariaDB server. To view all the
    databases, run the following command:'
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，你可以对 MariaDB 服务器运行 SQL 命令。要查看所有数据库，运行以下命令：
- en: '[PRE33]'
  id: totrans-210
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: The `myapp` database corresponds to your application database.
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: '`myapp` 数据库对应于你的应用程序数据库。'
- en: See also
  id: totrans-212
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另见
- en: The *Adding a MongoDB cartridge to your application* recipe
  id: totrans-213
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*将 MongoDB 组件添加到你的应用程序* 的教程'
- en: Adding a Redis cartridge to your application
  id: totrans-214
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将 Redis 组件添加到你的应用程序
- en: In this recipe, you will learn how to add the Redis downloadable cartridge to
    your OpenShift application. Redis is an open source, advanced, NoSQL key value
    data store, written in the ANSI C programming language. It is an in-memory data
    store but also writes to the disk for durability.
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个教程中，你将学习如何将 Redis 可下载的组件添加到你的 OpenShift 应用程序中。Redis 是一个开源的先进 NoSQL 键值数据存储系统，使用
    ANSI C 编程语言编写。它是一个内存数据存储，但也会写入磁盘以保证数据持久性。
- en: Getting ready
  id: totrans-216
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备就绪
- en: To step through this recipe, you will need the `rhc` command-line client installed
    on your machine. Refer to the *Installing the OpenShift rhc command-line client*
    recipe in [Chapter 1](part0014_split_000.html#page "Chapter 1. Getting Started
    with OpenShift"), *Getting Started with OpenShift* for details. Also, we will
    use the application created in the *Creating an OpenShift application using the
    rhc command-line client* recipe in [Chapter 3](part0041_split_000.html#page "Chapter 3. Creating
    and Managing Applications"), *Creating and Managing Applications*.
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 为了执行这个教程，你需要在你的机器上安装 `rhc` 命令行客户端。有关详细信息，请参考 [第 1 章](part0014_split_000.html#page
    "Chapter 1. Getting Started with OpenShift") 中的 *安装 OpenShift rhc 命令行客户端* 教程，*开始使用
    OpenShift*。另外，我们将使用在 [第 3 章](part0041_split_000.html#page "Chapter 3. Creating
    and Managing Applications") 中 *使用 rhc 命令行客户端创建 OpenShift 应用程序* 教程中创建的应用程序，*创建和管理应用程序*。
- en: How to do it…
  id: totrans-218
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: 'To install the Redis downloadable cartridge to the `myapp` application, open
    a new command-line terminal, then change the directory to the `myapp` directory
    location, and execute the following command:'
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 要将 Redis 可下载的组件安装到 `myapp` 应用程序中，打开一个新的命令行终端，然后切换到 `myapp` 目录位置，并执行以下命令：
- en: '[PRE34]'
  id: totrans-220
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: This will install a new instance of the Redis server on your application gear.
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 这将在你的应用程序 gear 上安装一个新的 Redis 服务器实例。
- en: You can view the cartridge details using the `rhc cartridge-show` command.
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用 `rhc cartridge-show` 命令查看组件详情。
- en: 'You can also stop the Redis server using the `stop` command:'
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 你也可以使用 `stop` 命令停止 Redis 服务器：
- en: '[PRE35]'
  id: totrans-224
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: 'You can restart the Redis server using the `restart` command:'
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用 `restart` 命令重新启动 Redis 服务器：
- en: '[PRE36]'
  id: totrans-226
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: 'If you want to remove the Redis server from your application, you can use the
    `remove` command:'
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想从应用程序中移除 Redis 服务器，可以使用 `remove` 命令：
- en: '[PRE37]'
  id: totrans-228
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: How it works…
  id: totrans-229
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的…
- en: 'When you run the `rhc cartridge-add` command, `rhc` will make an HTTP POST
    request to the OpenShift server. The OpenShift server will receive the request
    and instantiate a new instance of the Redis server for your application using
    the manifest file. After provisioning the Redis server, the `rhc` client will
    show the database details on the command-line terminal, as follows:'
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 当你运行 `rhc cartridge-add` 命令时，`rhc` 会向 OpenShift 服务器发出 HTTP POST 请求。OpenShift
    服务器会接收请求，并根据清单文件为你的应用程序实例化一个新的 Redis 服务器实例。在为 Redis 服务器配置完成后，`rhc` 客户端将在命令行终端显示数据库详情，如下所示：
- en: '[PRE38]'
  id: totrans-231
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: 'You can view the Redis installation by performing an SSH into your application
    gear:'
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过 SSH 登录到你的应用程序 gear 来查看 Redis 的安装情况：
- en: '[PRE39]'
  id: totrans-233
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: 'Then, run the `ls` command to view the gear directory structure, and you will
    see the `redis` directory:'
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，运行 `ls` 命令查看 gear 目录结构，你将看到 `redis` 目录：
- en: '[PRE40]'
  id: totrans-235
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: The `redis` directory is your `redis` installation, and it is not shared with
    any other OpenShift application or user. It is only for your application, and
    only your application can access it.
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: '`redis` 目录是你的 `redis` 安装目录，它不会与任何其他 OpenShift 应用程序或用户共享。它仅供你的应用程序使用，只有你的应用程序可以访问它。'
- en: 'You can also connect with your Redis server using the `redis-cli` command-line
    client:'
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 你也可以使用 `redis-cli` 命令行客户端连接到你的 Redis 服务器：
- en: '[PRE41]'
  id: totrans-238
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: 'Now, you can run commands against your Redis server. To view the details about
    your Redis installation, you can run the `INFO` command:'
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，你可以对 Redis 服务器执行命令。要查看有关你的 Redis 安装的详细信息，可以运行 `INFO` 命令：
- en: '[PRE42]'
  id: totrans-240
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: There's more…
  id: totrans-241
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 这还不是全部…
- en: To learn how to use Redis with a Java application, you can read my blog at [https://www.openshift.com/blogs/build-cloud-enabled-java-redis-applications-with-spring-on-openshift](https://www.openshift.com/blogs/build-cloud-enabled-java-redis-applications-with-spring-on-openshift).
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: 想了解如何在 Java 应用程序中使用 Redis，可以阅读我在 [https://www.openshift.com/blogs/build-cloud-enabled-java-redis-applications-with-spring-on-openshift](https://www.openshift.com/blogs/build-cloud-enabled-java-redis-applications-with-spring-on-openshift)
    的博客。
- en: See also
  id: totrans-243
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另见
- en: The *Adding a MariaDB cartridge to your application* recipe
  id: totrans-244
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*将 MariaDB 载入你的应用程序* 的方法'
