- en: What's New in AWS?
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: AWS有什么新变化？
- en: Having spent many years in the IT industry, you get to see a lot of new technologies,
    products, and platforms that start to evolve, gradually mature, and eventually
    be replaced by something that's faster and better! I guess in some ways, this
    concept applies to this book as well. When I first started out writing the first
    edition of this series in 2016, I felt that this would be the pinnacle of technology
    and nothing could be created to replace it! And now, here I am doing precisely
    the opposite! Writing this second edition is a just small testament that everything
    evolves with time! Just look at AWS, and you will see how much the platform has
    changed and grown, especially in the last couple of years!
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在信息技术行业工作多年后，你会看到许多新技术、产品和平台的出现，它们开始发展，逐渐成熟，最终被更快、更好的技术所取代！我想在某些方面，这个概念也适用于这本书。当我在2016年首次开始撰写这本系列的第一版时，我认为这将是技术的巅峰，任何东西都无法取代它！而现在，我正做着完全相反的事情！撰写第二版只是一个小小的证明，证明一切都会随着时间的推移而发展！看看AWS，你就能看到平台在过去几年中发生了多么巨大的变化和成长！
- en: I still remember the time when I first started exploring AWS way back in 2009,
    when it was the early days for the likes of EC2 and CloudFront, still adding new
    features to them, SimpleDB and VPC just starting to take shape, and so on; the
    thing that really amazes me is how far the platform has come today! With more
    than 50 different solutions and service offerings ranging from big data analytics,
    to serverless computing, to data warehousing and ETL solutions, digital workspaces
    and code development services, AWS has got it all! Which is one of the reasons
    why I have always been a huge fan of it! It's not only about revenue and the number
    of customers, but how well do you adapt and evolve to changing times and demands.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 我还记得2009年我第一次开始探索AWS的时候，那时EC2和CloudFront仍处于早期阶段，仍在为它们添加新功能，SimpleDB和VPC刚刚开始成形，等等；真正让我感到惊讶的是平台今天已经发展到如此地步！AWS提供了50多种不同的解决方案和服务，涵盖了从大数据分析、无服务器计算，到数据仓库和ETL解决方案、数字工作空间和代码开发服务，AWS应有尽有！这也是我一直是其忠实粉丝的原因之一！它不仅仅关乎收入和客户数量，更关乎如何适应和发展以应对不断变化的时代和需求。
- en: So here we are, back at it again! A new book with a lot of new things to learn
    and explore! But before we begin with the deep dives into some really interesting
    and powerful services, let's take this time to traverse a little way back in time
    and understand what has been happening in AWS over this past year, and how the
    services that we explored in the first edition are shaping up today!
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，我们又回来了！一本新书，里面有许多新的内容等待我们学习和探索！但在我们深入研究一些非常有趣且强大的服务之前，让我们先回顾一下过去一年里AWS发生了什么变化，以及在第一版中我们探讨的那些服务今天是如何发展的！
- en: 'In this chapter, we will be covering the following topics:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将涵盖以下主题：
- en: Improvements in existing AWS services.
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 现有AWS服务的改进。
- en: A brief introduction to newer AWS services and what they are used for.
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 简要介绍新推出的AWS服务及其用途。
- en: Plan of attack! How we will progress through the book.
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 进攻计划！我们将如何推进本书的学习。
- en: Improvements in existing services
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 现有服务的改进
- en: There have been quite a few improvements in the services that were covered back
    in the first edition of *AWS Administration - The Definitive Guide*. In this section,
    we will highlight a few of these essential improvements and understand their uses.
    To start off, let's look at some of the key enhancements made in EC2 over the
    past year or two.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 在第一版《*AWS管理 - 权威指南*》中涵盖的服务中，有很多改进。在本节中，我们将重点介绍这些重要的改进，并理解它们的用途。首先，让我们看看过去一两年中EC2的关键增强功能。
- en: Elastic Compute Cloud
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 弹性计算云
- en: '**Elastic Compute Cloud** (**EC2**) is by far one of the oldest running services
    in AWS, and yet it still continues to evolve and add new features as the years
    progress. Some of the notable feature improvements and additions are mentioned
    here:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '**弹性计算云**（**EC2**）迄今为止是AWS中运行时间最长的服务之一，然而，它仍然在不断发展，随着时间的推移添加新的功能。这里提到了一些值得注意的功能改进和新增内容：'
- en: '**Introduction of the t2.xlarge and t2.2xlarge instances**: The **t2** workloads
    are a special type of workload, as they offer a low-cost burstable compute that
    is ideal for running general purpose applications that don''t require the use
    of CPU all the time, such as web servers, application servers, LOB applications,
    development, to name a few. The *t2.xlarge* and *t2.2xlarge* instance types provide
    16 GB of memory and 4 vCPU, and 32 GB of memory and 8 vCPU respectively.'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**t2.xlarge 和 t2.2xlarge 实例的介绍**：**t2** 工作负载是一种特殊类型的工作负载，因为它提供低成本的可突发计算，适合运行不需要持续使用
    CPU 的通用应用程序，如 Web 服务器、应用服务器、LOB 应用、开发等。*t2.xlarge* 和 *t2.2xlarge* 实例类型分别提供 16
    GB 内存和 4 vCPU，以及 32 GB 内存和 8 vCPU。'
- en: '**Introduction of the I3 instance family**: Although EC2 provides a comprehensive
    set of instance families, there was a growing demand for a specialized storage-optimized
    instance family that was ideal for running workloads such as relational or NoSQL
    databases, analytical workloads, data warehousing, Elasticsearch applications,
    and so on. Enter I3 instances! I3 instances are run using non-volatile memory
    express (NVMe) based SSDs that are suited to provide extremely optimized high
    I/O operations. The maximum resource capacity provided is up to 64 vCPUs with
    488 GB of memory, and 15.2 TB of locally attached SSD storage.'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**I3 实例家族的介绍**：虽然 EC2 提供了一个全面的实例家族集合，但对于专门优化存储的实例家族的需求日益增加，这些实例非常适合运行诸如关系数据库或
    NoSQL 数据库、分析工作负载、数据仓库、Elasticsearch 应用等工作负载。于是，I3 实例应运而生！I3 实例使用基于非易失性内存快速接口（NVMe）SSD
    运行，能够提供极为优化的高 I/O 操作。最大资源容量为 64 vCPU、488 GB 内存和 15.2 TB 本地附加 SSD 存储。'
- en: This is not an exhaustive list in any way. If you would like to know more about
    the changes brought about in AWS, check this out, at [https://aws.amazon.com/about-aws/whats-new/2016/](https://aws.amazon.com/about-aws/whats-new/2016/).
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 这并不是一个详尽无遗的列表。如果你想了解 AWS 带来的更多变化，可以查看这个链接：[https://aws.amazon.com/about-aws/whats-new/2016/](https://aws.amazon.com/about-aws/whats-new/2016/)。
- en: Availability of FPGAs and GPUs
  id: totrans-15
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: FPGA 和 GPU 的可用性
- en: One of the key use cases for customers adopting the public cloud has been the
    availability of high-end processing units that are required to run HPC applications.
    One such new instance type added last year was the F1 instance, which comes equipped
    with field programmable gate arrays (FPGAs) that you can program to create custom
    hardware accelerations for your applications. Another awesome feature to be added
    to the EC2 instance family was the introduction of the Elastic GPUs concept. This
    allows you to easily provide graphics acceleration support to your applications
    at significantly lower costs but with greater performance levels. Elastic GPUs
    are ideal if you need a small amount of GPU for graphics acceleration, or have
    applications that could benefit from some GPU, but also require high amounts of
    compute, memory, or storage.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 采用公共云的客户的一个关键用例是高端处理单元的可用性，这些处理单元是运行高性能计算（HPC）应用所需的。去年新增的一种实例类型是 F1 实例，它配备了现场可编程门阵列（FPGA），你可以编程来为应用程序创建自定义硬件加速。另一项加入
    EC2 实例家族的令人兴奋的特性是引入了弹性 GPU 概念。这使你可以以显著更低的成本为应用程序提供图形加速支持，同时提高性能。弹性 GPU 非常适合需要少量
    GPU 来进行图形加速，或者有一些应用程序可能从某些 GPU 中受益，但同时还需要大量计算、内存或存储的场景。
- en: Simple Storage Service
  id: totrans-17
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 简单存储服务
- en: 'Similar to EC2, **Simple Storage Service** (**S3**) has had its own share of
    new features and support added to it. Some of these are explained here:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 与 EC2 类似，**简单存储服务**（**S3**）也增加了许多新特性和支持。以下是一些说明：
- en: '**S3 Object Tagging**: S3 Object Tagging is like any other tagging mechanism
    provided by AWS, used commonly for managing and controlling access to your S3
    resources. The tags are simple key-value pairs that you can use for creating and
    associating IAM policies for your S3 resources, to set up S3 life cycle policies,
    and to manage transitions of objects between various storage classes.'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**S3 对象标签**：S3 对象标签类似于 AWS 提供的其他标签机制，通常用于管理和控制对 S3 资源的访问。标签是简单的键值对，你可以用它们为
    S3 资源创建和关联 IAM 策略，设置 S3 生命周期策略，并管理对象在不同存储类别之间的转换。'
- en: '**S3 Inventory**: S3 Inventory was a special feature provided with the sole
    purpose of cataloging the various objects and providing that as a useable CSV
    file for further analysis and inventorying. Using S3 Inventory, you can now extract
    a list of all objects present in your bucket, along with its metadata, on a daily
    or weekly basis.'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**S3 清单**：S3 清单是一个特别功能，专门用于目录化各种对象，并将其提供为可用于进一步分析和盘点的 CSV 文件。通过 S3 清单，您现在可以每天或每周提取存储桶中所有对象及其元数据的列表。'
- en: '**S3 Analytics**: A lot of work and effort has been put into S3 so that it
    is not only used just as another infinitely scalable storage. S3 Analytics provides
    end users with a medium for analyzing storage access patterns and defines the
    right set of storage class based on these analytical results. You can enable this
    feature by simply setting a storage class analysis policy, either on an object,
    prefix, or the entire bucket as well. Once enabled, the policy monitors the storage
    access patterns and provides daily visualizations of your storage usage in the
    AWS Management Console. You can even export these results to an S3 bucket for
    analyzing them using other business intelligence tools of your choice, such as
    Amazon QuickSight.'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**S3 分析**：AWS 在 S3 上投入了大量的工作和努力，使其不仅仅是另一个无限可扩展的存储解决方案。S3 分析为最终用户提供了分析存储访问模式的手段，并根据这些分析结果定义合适的存储类别。您只需设置一个存储类别分析策略（无论是针对对象、前缀还是整个存储桶），即可启用此功能。启用后，该策略将监控存储访问模式，并在
    AWS 管理控制台中提供您的存储使用情况的每日可视化报告。您甚至可以将这些结果导出到 S3 存储桶，以便使用您选择的其他商业智能工具（如 Amazon QuickSight）进行进一步分析。'
- en: '**S3 CloudWatch metrics**: It has been a long time coming, but it is finally
    here! You can now leverage 13 new CloudWatch metrics specifically designed to
    work with your S3 buckets objects. You can receive one minute CloudWatch metrics,
    set CloudWatch alarms, and access CloudWatch dashboards to view real-time operations
    and the performance of your S3 resources, such as total bytes downloaded, number
    of 4xx HTTP response counts, and so on.'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**S3 CloudWatch 指标**：这一功能终于来了！您现在可以利用 13 个专为您的 S3 存储桶对象设计的全新 CloudWatch 指标。您可以接收每分钟的
    CloudWatch 指标，设置 CloudWatch 告警，并访问 CloudWatch 仪表盘，以查看 S3 资源的实时操作和性能，如已下载的总字节数、4xx
    HTTP 响应计数等。'
- en: '**Brand new** **dashboard**: Although the dashboards and structures of the
    AWS Management Console change from time to time, it is the new S3 dashboard that
    I''m really fond of. The object tagging and the storage analysis policy features
    are all now provided using the new S3 dashboard, along with other impressive and
    long-awaited features, such as searching for buckets using keywords and the ability
    to copy bucket properties from an existing bucket while creating new buckets,
    as depicted in the following screenshot:'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**全新** **仪表盘**：尽管 AWS 管理控制台的仪表盘和结构时常变化，但我最喜欢的还是全新的 S3 仪表盘。对象标签和存储分析策略功能现已通过新的
    S3 仪表盘提供，此外，还有其他令人印象深刻且备受期待的功能，例如使用关键字搜索存储桶，以及在创建新存储桶时，能够从现有存储桶复制存储桶属性，如下图所示：'
- en: '![](img/8b42813f-4dba-44c0-a513-992a5bb754bc.png)'
  id: totrans-24
  prefs: []
  type: TYPE_IMG
  zh: '![](img/8b42813f-4dba-44c0-a513-992a5bb754bc.png)'
- en: '**Amazon S3 transfer acceleration**: This feature allows you to move large
    workloads across geographies into S3 at really fast speeds. It leverages Amazon
    CloudFront endpoints in conjunction with S3 to enable up to 300 times faster data
    uploads without having to worry about any firewall rules or upfront fees to pay.'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Amazon S3 传输加速**：此功能允许您以非常快速的速度将大量工作负载跨地域迁移到 S3。它通过将 Amazon CloudFront 终端与
    S3 配合使用，实现了数据上传速度最高可达 300 倍，无需担心任何防火墙规则或前期费用。'
- en: Virtual Private Cloud
  id: totrans-26
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 虚拟私有云
- en: 'Similar to other services, **Virtual Private Cloud** (**VPC**) has seen quite
    a few functionalities added to it over the past years; a few important ones are
    highlighted here:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 与其他服务类似，**虚拟私有云**（**VPC**）在过去几年中增加了许多新功能；这里突出了其中一些重要的功能：
- en: '**Support for IPv6**: With the exponential growth of the IT industry as well
    as the internet, it was only a matter of time before VPC too started support for
    IPv6\. Today, IPv6 is extended and available across all AWS regions. It even works
    with services such as EC2 and S3\. Enabling IPv6 for your applications and instances
    is an extremely easy process. All you need to do is enable the IPv6 CIDR block
    option, as depicted in the VPC creation wizard:'
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**对 IPv6 的支持**：随着信息技术行业和互联网的指数级增长，VPC 也开始支持 IPv6 只不过是时间问题。今天，IPv6 已经在所有 AWS
    区域扩展并可用，甚至与 EC2 和 S3 等服务兼容。为你的应用程序和实例启用 IPv6 是一个非常简单的过程。你需要做的就是在 VPC 创建向导中启用 IPv6
    CIDR 块选项，如下所示：'
- en: '![](img/eb58ae6f-d364-45e8-9377-1c8541d45f1d.png)'
  id: totrans-29
  prefs: []
  type: TYPE_IMG
  zh: '![](img/eb58ae6f-d364-45e8-9377-1c8541d45f1d.png)'
- en: Each IPv6 enabled VPC comes with its own `/56` address prefix, whereas the individual
    subnets created in this VPC support a `/64` CIDR block.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 每个启用 IPv6 的 VPC 都会有一个 `/56` 地址前缀，而在该 VPC 中创建的单独子网支持 `/64` CIDR 块。
- en: '**DNS resolution for VPC Peering**: With DNS resolution enabled for your VPC
    peering, you can now resolve public DNS hostnames to private IP addresses when
    queried from any of your peered VPCs. This actually simplifies the DNS setup for
    your VPCs and enables the seamless extension of your network environments to the
    cloud.'
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**VPC 对等连接的 DNS 解析**：启用 VPC 对等连接的 DNS 解析后，当从任何对等的 VPC 查询时，你现在可以将公共 DNS 主机名解析为私有
    IP 地址。这实际上简化了 VPC 的 DNS 配置，并使你的网络环境能够无缝地扩展到云端。'
- en: '**VPC endpoints for DynamoDB**: Yet another amazing feature to be provided
    for VPCs later this year is the support for endpoints for your DynamoDB tables.
    Why is this so important all of a sudden? Well, for starters, you don''t require
    internet gateways or NAT instances attached to your VPCs if you are leveraging
    the endpoints for DynamoDB. This essentially saves costs and makes the traffic
    between your application to the DB stay local to the AWS internal network, unlike
    previously where the traffic from your app would have to bypass the internet in
    order to reach your DynamoDB instance. Secondly, endpoints for DynamoDB virtually
    eliminate the need for maintaining complex firewall rules to secure your VPC.
    And thirdly, and most importantly, it''s free!'
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**DynamoDB 的 VPC 终端节点**：今年晚些时候，将为 VPC 提供的另一个令人惊叹的功能是支持 DynamoDB 表的终端节点。为什么这突然变得如此重要？首先，如果你使用
    DynamoDB 终端节点，你就不需要为你的 VPC 附加互联网网关或 NAT 实例。这实际上节省了成本，并使得应用程序与数据库之间的流量保持在 AWS 内部网络内，而不像以前那样流量必须绕过互联网才能到达
    DynamoDB 实例。其次，DynamoDB 的终端节点几乎消除了需要维护复杂防火墙规则来保护 VPC 的需求。第三，也是最重要的，它是免费的！'
- en: CloudWatch
  id: totrans-33
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: CloudWatch
- en: 'CloudWatch has undergone a lot of new and exciting changes and feature additions
    compared to what it originally provided as a service a few years back. Here''s
    a quick look at some of its latest announcements:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: CloudWatch 与几年前它作为服务首次推出时相比，已经经历了许多新的令人兴奋的变化和功能新增。下面是一些最新公告的快速概览：
- en: '**CloudWatch events**: One of the most anticipated and useful features added
    to CloudWatch is CloudWatch events! Events are a way for you to respond to changes
    in your AWS environment in near real time. This is made possible with the use
    of event rules that you need to configure, along with a corresponding set of actionable
    steps that must be performed when that particular event is triggered. For example,
    designing a simple back-up or clean-up script to be invoked when an instance is
    powered off at the end of the day, and so on. You can, alternatively, schedule
    your event rules to be triggered at a particular interval of time during the day,
    week, month, or even year! Now that''s really awesome!'
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**CloudWatch 事件**：CloudWatch 新增的最受期待和最有用的功能之一就是 CloudWatch 事件！事件是一种让你能够几乎实时响应
    AWS 环境中变化的方式。通过配置事件规则，并在触发特定事件时执行相应的操作步骤，这使得这一切成为可能。例如，设计一个简单的备份或清理脚本，在实例每天结束时关闭时被调用，等等。你也可以选择将事件规则安排在一天、一周、一个月甚至一年中的特定时间间隔触发！这真是太棒了！'
- en: '**High-resolution custom metrics**: We have all felt the need to monitor our
    applications and resources running on AWS at near real time, however, with the
    least amount of configurable monitoring interval set at 10 seconds, this was always
    going to be a challenge. But not now! With the introduction of the high-resolution
    custom metrics, you can now monitor your applications down to a 1-second resolution!
    The best part of all this is that there is no special difference between the configuration
    or use of a standard alarm and that of a high resolution one. Both alarms can
    perform the exact same functions, however, the latter is much faster than the
    other.'
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**高分辨率自定义指标**：我们都曾感受到需要实时监控在 AWS 上运行的应用程序和资源的需求，然而，最小的可配置监控间隔为 10 秒，这一直是一个挑战。但现在不再是这样了！随着高分辨率自定义指标的引入，您现在可以将监控精确到
    1 秒的分辨率！所有这一切的最佳部分是，标准警报和高分辨率警报的配置和使用之间没有特殊区别。两者都可以执行完全相同的功能，然而，后者比前者要快得多。'
- en: '**CloudWatch dashboard widgets**: A lot of users have had trouble adopting
    CloudWatch as their centralized monitoring solution due to its inability to create
    custom dashboards. But all that has now changed as CloudWatch today supports the
    creation of highly-customizable dashboards based on your application''s needs.
    It also supports out-of-the box widgets in the form of the *number* widget, which
    provides a view of the latest data point of the monitored metric, such as the
    number of EC2 instances being monitored, or the *stacked graph*, which provides
    a handy visualization of individual metrics and their impact in totality.'
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**CloudWatch 仪表板小部件**：许多用户在将 CloudWatch 作为其集中式监控解决方案时遇到了问题，原因在于它无法创建自定义仪表板。但这一切现在已经改变，今天的
    CloudWatch 支持根据应用程序的需求创建高度可自定义的仪表板。它还支持开箱即用的小部件，如 *数字* 小部件，它提供了被监控指标的最新数据点的视图，例如被监控的
    EC2 实例数量，或者 *堆叠图*，它提供了个别指标及其对整体影响的便捷可视化。'
- en: Elastic Load Balancer
  id: totrans-38
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 弹性负载均衡器
- en: One of the most significant and useful additions to ELB over the past year has
    been the introduction of the Application Load Balancer. Unlike its predecessor,
    the ELB, the Application Load Balancer is a strict Layer 7 (application) load
    balancer designed to support content-based routing and applications that run on
    containers as well. The ALB is also designed to provide additional visibility
    of the health of the target EC2 instances as well as the containers. Ideally,
    such ALBs would be used to dynamically balance loads across a fleet of containers
    running scalable web and mobile applications.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 在过去一年中，ELB 最重要和最有用的新增功能之一就是应用程序负载均衡器的引入。与前身 ELB 不同，应用程序负载均衡器是严格的第 7 层（应用层）负载均衡器，旨在支持基于内容的路由以及运行在容器上的应用程序。ALB
    还旨在提供目标 EC2 实例和容器健康状态的额外可视化。理想情况下，这些 ALB 将用于在一组容器中动态地平衡负载，这些容器运行着可扩展的 Web 和移动应用程序。
- en: This is just the tip of the iceberg compared to the vast plethora of services
    and functionality that AWS has added to its services in just a span of one year!
    Let's quickly glance through the various services that we will be covering in
    this book.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 与 AWS 在过去一年中所增加的各种服务和功能相比，这只是冰山一角！让我们快速浏览一下本书中将涵盖的各种服务。
- en: Introduction of newer services
  id: totrans-41
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 新服务介绍
- en: 'The first edition of *AWS Administration - The Definitive Guide* covered a
    lot of the core AWS services, such as EC2, EBS, Auto Scaling, ELB, RDS, S3, and
    so on. In this edition, we will be exploring and learning things a bit differently
    by exploring a lot of the services and functionalities that work in conjunction
    with the core services:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 《AWS 管理 - 权威指南》第一版涵盖了许多核心的 AWS 服务，如 EC2、EBS、自动扩展、ELB、RDS、S3 等等。在本版中，我们将以不同的方式来探索和学习，通过探索许多与核心服务协同工作的服务和功能：
- en: '**EC2 Systems Manager**: EC2 Systems Manager is a service that basically provides
    a lot of add-on features for managing your compute infrastructure. Each compute
    entity that''s managed by EC2 Systems Manager is called a *managed instance* and
    this can be either an EC2 instance or an on-premise machine! EC2 Systems Manager
    provides out-of-the-box capabilities to create and baseline patches for operating
    systems, automate the creation of AMIs, run configuration scripts, and much more!'
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**EC2 系统管理器**：EC2 系统管理器是一项基本上为管理你的计算基础设施提供许多附加功能的服务。每个由 EC2 系统管理器管理的计算实体被称为*受管实例*，它可以是一个
    EC2 实例或一台本地机器！EC2 系统管理器提供开箱即用的功能，创建并基准化操作系统的补丁、自动创建 AMI、运行配置脚本等更多功能！'
- en: '**Elastic Beanstalk**: Beanstalk is a powerful yet simple service designed
    for developers to easily deploy and scale their web applications. At the moment,
    Beanstalk supports web applications developed using Java, .NET, PHP, Node.js,
    Python, Ruby, and Go. Developers simply design and upload their code to Beanstalk
    ,which automatically takes care of the application''s load balancing, auto-scaling,
    monitoring, and so on. At the time of writing, Elastic Beanstalk supports the
    deployment of your apps using either Docker containers or even directly over EC2
    instances, and the best part of using this service is that it''s completely free!
    You only need to pay for the underlying AWS resources that you consume.'
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Elastic Beanstalk**：Beanstalk 是一项强大而简便的服务，旨在帮助开发者轻松部署和扩展他们的 web 应用程序。目前，Beanstalk
    支持使用 Java、.NET、PHP、Node.js、Python、Ruby 和 Go 开发的 web 应用程序。开发者只需设计并上传他们的代码到 Beanstalk，后者会自动处理应用程序的负载均衡、自动扩展、监控等功能。在写作时，Elastic
    Beanstalk 支持通过 Docker 容器或直接通过 EC2 实例部署应用程序，而使用该服务的最佳部分是它完全免费！你只需为所消费的底层 AWS 资源付费。'
- en: '**Elastic File System**: The simplest way to define **Elastic File System**,
    or **EFS**, is an NFS share on steroids! EFS provides simple and highly scalable
    file storage as a service designed to be used with your EC2 instances. You can
    have multiple EC2 instances attach themselves to a single EFS mount point which
    can provide a common data store for your applications and workloads.'
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**弹性文件系统**：定义 **弹性文件系统** 或 **EFS** 最简单的方法是把它看作是一个超强版的 NFS 共享！EFS 提供简单且高度可扩展的文件存储服务，旨在与
    EC2 实例一起使用。你可以让多个 EC2 实例连接到单个 EFS 挂载点，从而为你的应用程序和工作负载提供一个公共的数据存储。'
- en: '**WAF and Shield**: In this book, we will be exploring quite a few security
    and compliance providing services that provide an additional layer of security
    besides your standard VPC. Two such services we will learn about are WAF and Shield.
    **WAF**, or **Web Application Firewall**, is designed to safeguard your applications
    against web exploits that could potentially impact their availability and security
    maliciously. Using WAF you can create custom rules that safeguard your web applications
    against common attack patterns, such as SQL injection, cross-site scripting, and
    so on.'
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**WAF 和 Shield**：在本书中，我们将探索一些提供安全性和合规性服务的服务，这些服务为你的标准 VPC 提供额外的安全层。我们将学习的其中两个服务是
    WAF 和 Shield。**WAF**，或称 **Web 应用防火墙**，旨在保护你的应用程序免受可能影响其可用性和安全性的 web 漏洞攻击。通过使用
    WAF，你可以创建自定义规则，以防止你的 web 应用程序受到常见攻击模式的侵害，例如 SQL 注入、跨站脚本等。'
- en: 'Similar to WAF, Shield is also a managed service that provides security against
    DDoS attacks that target your website or web application:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 类似于 WAF，Shield 也是一项托管服务，提供防御 DDoS 攻击的功能，保护你的网页或 web 应用程序免受攻击：
- en: '**CloudTrail and Config**: CloudTrail is yet another service that we will learn
    about in the coming chapters. It is designed to log and monitor your AWS account
    and infrastructure activities. This service comes in really handy when you need
    to govern your AWS accounts against compliances, audits, and standards, and take
    necessary action to mitigate against them. Config, on the other hand, provides
    a very similar set of features, however, it specializes in assessing and auditing
    the configurations of your AWS resources. Both services are used synonymously
    to provide compliance and governance, which help in operational analysis, troubleshooting
    issues, and meeting security demands.'
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**CloudTrail 和 Config**：CloudTrail 是我们将在接下来的章节中学习的另一个服务。它旨在记录和监控你的 AWS 账户和基础设施活动。当你需要确保你的
    AWS 账户符合合规性、审计和标准时，这项服务非常有用，并可以采取必要的措施来缓解这些问题。另一方面，Config 提供了一套非常相似的功能，但它专注于评估和审计
    AWS 资源的配置。两项服务被同义使用，以提供合规性和治理，帮助进行操作分析、故障排除以及满足安全需求。'
- en: '**Cognito**: Cognito is an awesome service which simplifies the build and creation
    of sign-up pages for your web and even mobile applications. You also get options
    to integrate social identity providers, such as Facebook, Twitter, and Amazon,
    using SAML identity solutions.'
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Cognito**：Cognito 是一个非常棒的服务，可以简化你为网站甚至移动应用创建注册页面的过程。你还可以选择集成社交身份提供商，如 Facebook、Twitter
    和 Amazon，使用 SAML 身份解决方案。'
- en: '**CodeCommit, CodeBuild, and CodeDeploy**: AWS provides a really rich set of
    tools and services for developers, which are designed to deliver software rapidly
    and securely. At the core of this are three services that we will be learning
    and exploring in this book, namely CodeCommit, CodeBuild, and CodeDeploy. As the
    names suggest, the services provide you with the ability to securely store and
    version control your application''s source code, as well as to automatically build,
    test, and deploy your application to AWS or your on-premises environment.'
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**CodeCommit、CodeBuild 和 CodeDeploy**：AWS 为开发人员提供了一套非常丰富的工具和服务，旨在快速且安全地交付软件。这些工具的核心包括
    CodeCommit、CodeBuild 和 CodeDeploy 三个服务，我们将在本书中学习和探索它们。正如名字所示，这些服务为你提供了安全存储和版本控制应用程序源代码的能力，同时还能自动构建、测试并将你的应用程序部署到
    AWS 或本地环境。'
- en: '**SQS and SNS**: **SQS**, or **Simple Queue Service**, is a fully-managed queuing
    service provided by AWS, designed to decouple your microservices-based or distributed
    applications. You can even use SQS to send, store, and receive messages between
    different applications at high volumes without any infrastructure management as
    well. **SNS** is a **Simple Notification Service** used primarily as a pub/ sub
    messaging service or as a notification service. You can additionally use SNS to
    trigger custom events for other AWS services, such as EC2, S3, and CloudWatch.'
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**SQS 和 SNS**：**SQS**，即 **简单队列服务**，是 AWS 提供的完全托管的队列服务，旨在解耦基于微服务或分布式应用程序的架构。你甚至可以使用
    SQS 在不同的应用程序之间发送、存储和接收消息，并且无需管理任何基础设施，同时还能处理高流量。**SNS** 是一个 **简单通知服务**，主要用作发布/订阅消息服务或通知服务。你还可以利用
    SNS 触发其他 AWS 服务的自定义事件，例如 EC2、S3 和 CloudWatch。'
- en: '**EMR**: **Elastic MapReduce** is a managed *Hadoop as a Service* that provides
    a clustered platform on EC2 instances for running Apache Hadoop and Apache Spark
    frameworks. EMR is highly useful for crunching massive amounts of data as well
    as to transform and move large quantities of data from one AWS data source to
    another. EMR also provides a lot of flexibility and scalability to your workloads
    with the ability to resize your cluster depending on the amount of data being
    processed at a given point in time. It is also designed to integrate effortlessly
    with other AWS services, such as S3 for storing the data, CloudWatch for monitoring
    your cluster, CloudTrail to audit the requests made to your cluster, and so on.'
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**EMR**：**弹性 MapReduce** 是一个托管的 *Hadoop 即服务*，提供一个基于 EC2 实例的集群平台，用于运行 Apache
    Hadoop 和 Apache Spark 框架。EMR 非常适用于处理大量数据，并用于将大量数据从一个 AWS 数据源转换和迁移到另一个数据源。EMR 还提供了高度的灵活性和可扩展性，你可以根据当前处理的数据量调整集群的大小。此外，它还设计为可以与其他
    AWS 服务无缝集成，如 S3 用于存储数据，CloudWatch 用于监控集群，CloudTrail 用于审核请求等。'
- en: '**Redshift:** Redshift is a petabyte scale, managed data warehousing service
    in the cloud. Similar to its counterpart, EMR, Redshift also works on the concept
    of clustered EC2 instances on which you upload large datasets and run your analytical
    queries.'
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Redshift**：Redshift 是一个云中的千兆字节级别托管数据仓库服务。与其对应的 EMR 类似，Redshift 也基于集群化的 EC2
    实例工作，在这些实例上，你可以上传大型数据集并执行分析查询。'
- en: '**Data Pipeline**: Data Pipeline is a managed service that provides end users
    with an ability to process and move datasets from one AWS service to another as
    well as from on-premise datastores into AWS storage services, such as RDS, S3,
    DynamoDB, and even EMR! You can schedule data migration jobs, track dependencies
    and errors, and even write and create preconditions and activities that define
    what actions Data Pipeline has to take against the data, such as run it through
    an EMR cluster, perform a SQL query over it, and so on.'
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**数据管道**：数据管道是一个托管服务，使用户能够处理和迁移数据集，从一个 AWS 服务迁移到另一个服务，甚至从本地数据存储迁移到 AWS 存储服务，如
    RDS、S3、DynamoDB，甚至 EMR！你可以调度数据迁移任务，跟踪依赖关系和错误，甚至编写并创建前置条件和活动，定义数据管道对数据采取的操作，比如将数据运行通过
    EMR 集群，执行 SQL 查询等。'
- en: '**IoT and Greengrass:** AWS IoT and Greengrass are two really amazing services
    that are designed to collect and aggregate various device sensor data and stream
    that data into the AWS cloud for processing and analysis. AWS IoT provides a scalable
    and secure platform, using which you can connect billions of sensor devices to
    the cloud or other AWS services and leverage the same for gathering, processing,
    and analyzing the data without having to worry about the underlying infrastructure
    or scalability needs. Greengrass is an extension of the AWS IoT platform and essentially
    provides a mechanism that allows you to run and manage executions of data pre-processing
    jobs directly on the sensor devices.'
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**IoT和Greengrass：** AWS IoT和Greengrass是两个非常强大的服务，旨在收集和聚合各种设备传感器数据，并将这些数据流式传输到AWS云中进行处理和分析。AWS
    IoT提供了一个可扩展且安全的平台，借助该平台，您可以将数十亿的传感器设备连接到云或其他AWS服务，并利用它们收集、处理和分析数据，而无需担心底层基础设施或可扩展性需求。Greengrass是AWS
    IoT平台的扩展，基本上提供了一种机制，允许您在传感器设备上直接运行和管理数据预处理作业。'
- en: With these services out of the way, let's quickly look at how we plan to move
    forward with the rest of the chapters in this book!
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 这些服务完成后，让我们快速看一下如何计划推进本书其余章节的内容！
- en: Plan of attack!
  id: totrans-57
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 攻略计划！
- en: 'Just as in the previous edition, we will be leveraging a simple plan of attack
    even for this book! By plan of attack, I just mean how I''ve planned to structure
    the contents of the chapters and tie them all together! For the most part of the
    book, we will be focusing on a simple use case, such as hosting a WordPress application
    on AWS with the use of some really cool services in the form of Elastic Beanstalk,
    Elastic File System, WAF and Shield, EMR, and Redshift, and much more! Here''s
    a simple depiction of what we will aim to achieve by the end of the book:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 就像上一版一样，我们将为本书制定一个简单的攻击计划！所谓攻击计划，我只是指我如何规划章节内容的结构并将它们整合在一起！在本书的大部分内容中，我们将专注于一个简单的用例，比如使用Elastic
    Beanstalk、Elastic File System、WAF和Shield、EMR、Redshift等一些非常酷的服务在AWS上托管WordPress应用程序，等等！以下是我们目标在书末实现的简单展示：
- en: '![](img/b1949993-f2c7-4b13-8fa2-570739a621ae.png)'
  id: totrans-59
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b1949993-f2c7-4b13-8fa2-570739a621ae.png)'
- en: 'Here is the brief outline of how the next few chapters are spread out:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是下一些章节的大致结构：
- en: We will begin the setup of our WordPress by first hosting it manually over an
    EC2 instance as a standalone installation and then learning how to manage those
    instances with the help of the EC2 Systems Manager utility.
  id: totrans-61
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们将通过首先在EC2实例上手动托管WordPress，作为独立安装，然后学习如何借助EC2 Systems Manager实用工具管理这些实例，开始设置我们的WordPress。
- en: With this completed, we shall then use a combination of Elastic Beanstalk and
    Elastic File System to host the same WordPress with some more control over high
    availability and scalability, all the while learning the internals of both these
    services and use cases as we go along.
  id: totrans-62
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 完成此步骤后，我们将使用Elastic Beanstalk和Elastic File System的组合来托管相同的WordPress，并对高可用性和可扩展性有更多的控制，同时在此过程中学习这两项服务的内部工作原理及其用例。
- en: Now that the site is hosted, we will create an added layer of security over
    it by leveraging both WAF and Shield as well as enabling governance in the form
    of CloudTrail and Config.
  id: totrans-63
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 既然站点已经托管，我们将通过利用WAF和Shield以及启用CloudTrail和Config等治理功能，为其增加一层安全保护。
- en: Later we will also see how to leverage the code development services provided
    by AWS, namely CodeCommit, CodeBuild, and CodeDeploy, to create an effective CICD
    pipeline to push updates to our site.
  id: totrans-64
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 稍后我们还将学习如何利用AWS提供的代码开发服务，分别是CodeCommit、CodeBuild和CodeDeploy，来创建一个有效的CICD流水线，以便将更新推送到我们的网站。
- en: Finally, we will also be executing some essential log analysis over the site
    using Elastic MapReduce and Redshift, and learn how to back up our site's data
    using Data Pipeline.
  id: totrans-65
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，我们还将执行一些对站点至关重要的日志分析，使用Elastic MapReduce和Redshift，并学习如何使用Data Pipeline备份我们站点的数据。
- en: But that's not all! As mentioned earlier, we will also be learning about a few
    additional services in the form of IAM and AWS Cognito services for authentication
    and security, as well as AWS IoT and AWS Greengrass.
  id: totrans-66
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 但这还不是全部！正如前面提到的，我们还将学习一些额外的服务，形式包括IAM和AWS Cognito服务，用于身份验证和安全性，以及AWS IoT和AWS
    Greengrass。
- en: Summary
  id: totrans-67
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: Let's quickly summarize what we have learned so far in this chapter! We started
    off by quickly recapping some of the key features and additions included in the
    core AWS services over the past few years. Remember, however, that this is in
    no way a complete list! There's a lot more to cover and learn, but for the sake
    of simplicity, I'll leave that part for self-reading. Later, we also glanced through
    and understood the services that are going to be included in this particular series
    of *AWS Administration - The Definitive Guide*. Finally, we topped it all off
    with a look at how we are going to structure the rest of the chapters by leveraging
    a simple WordPress application as a focal point for our deployments and use cases!
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们快速总结一下到目前为止在本章中学到的内容！我们首先快速回顾了过去几年内核心AWS服务中包含的一些关键功能和新增内容。不过，请记住，这绝不是一个完整的列表！还有很多内容需要覆盖和学习，但为了简便起见，我会将这些内容留给大家自行阅读。之后，我们还浏览并了解了将会在这系列*AWS管理
    - 权威指南*中包含的服务。最后，我们通过利用一个简单的WordPress应用程序作为我们部署和用例的焦点，展示了我们将如何构建接下来的章节！
- en: In the next chapter, we will kick things off by first deploying our simple WordPress
    application on an EC2 instance and then leverage EC2 Systems Manager along with
    its peripheral services for managing and tracking an EC2 instance's system configurations,
    so stick around! We are just getting started!
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将首先在EC2实例上部署我们的简单WordPress应用程序，然后结合EC2系统管理器及其附加服务来管理和跟踪EC2实例的系统配置，所以请继续关注！我们才刚刚开始！
