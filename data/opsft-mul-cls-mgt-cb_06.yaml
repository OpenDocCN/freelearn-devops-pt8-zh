- en: '6'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '6'
- en: OpenShift Troubleshooting, Performance, and Best Practices
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: OpenShift 故障排除、性能与最佳实践
- en: The concepts explained in [*Chapter 5*](B18015_05.xhtml#_idTextAnchor090), *OpenShift
    Deployment*, provided the foundation for you to initiate your first contact with
    an OpenShift cluster. In this chapter, we will give some tips on how to perform
    a health check on a cluster, dive into some **root cause analysis** (**RCA**),
    and also provide details on how to make a cluster run according to some best practices.
    Our intention with this chapter is to give you some general guidance about troubleshooting,
    however, it is important you always open a support ticket with Red Hat before
    making any changes in the platform due to troubleshooting attempts.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第 5 章*](B18015_05.xhtml#_idTextAnchor090)中解释的概念，*OpenShift 部署*，为你与 OpenShift
    集群的首次接触提供了基础。在本章中，我们将给出一些如何执行集群健康检查的建议，深入分析一些**根本原因分析**（**RCA**），并提供一些让集群按照最佳实践运行的详细信息。我们在本章中的目的是为你提供一些关于故障排除的通用指导，但在进行任何更改之前，尤其是出于故障排除的目的，始终建议你向
    Red Hat 提交支持票。'
- en: 'This chapter covers the following topics:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 本章涵盖以下主题：
- en: Things that can crash a cluster
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可能导致集群崩溃的因素
- en: Troubleshooting reference guide—how to start
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 故障排除参考指南——如何开始
- en: Understanding misleading error messages
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 理解误导性的错误信息
- en: Note
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: The source code used in this chapter is available at [https://github.com/PacktPublishing/OpenShift-Multi-Cluster-Management-Handbook/tree/main/chapter06](https://github.com/PacktPublishing/OpenShift-Multi-Cluster-Management-Handbook/tree/main/chapter06).
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 本章使用的源代码可以在[https://github.com/PacktPublishing/OpenShift-Multi-Cluster-Management-Handbook/tree/main/chapter06](https://github.com/PacktPublishing/OpenShift-Multi-Cluster-Management-Handbook/tree/main/chapter06)找到。
- en: Things that can crash a cluster
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 可能导致集群崩溃的因素
- en: Every time we start learning about some technology, it is common to be twice
    as careful with the installation, configuration, or adjustment to be as thorough
    as possible. Sometimes, to achieve these goals related to troubleshooting, performance,
    and best practices, the reader would turn to multiple expert readings on each
    of the related topics, or go through the pain of trial and error, which takes
    a lot of effort to succeed.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 每当我们开始学习某项技术时，通常会特别小心安装、配置或调整，以尽可能做到全面。有时，为了实现这些与故障排除、性能和最佳实践相关的目标，读者可能会转向多篇专家文章，或者经历不断试错的痛苦，这需要付出大量的努力才能成功。
- en: OpenShift is a great and disruptive technology, but you will navigate through
    a puzzle of different aspects related to storage, compute, network, and others.
    Obviously, in the official documentation—or even in quick internet searches—you
    will find commands to start from scratch, but in many situations, even with the
    necessary commands and parameters, it is difficult to navigate from troubleshooting
    to a solution.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: OpenShift 是一项伟大且颠覆性的技术，但你将会面对与存储、计算、网络等相关的各种复杂问题。显然，在官方文档中——或者甚至在快速的互联网搜索中——你会找到从零开始的命令，但在许多情况下，即使有了必要的命令和参数，仍然很难从故障排除到达解决方案。
- en: Currently, OpenShift has an automatic recovery system, but this is usually not
    enough to ensure a stable environment. For this self-healing to take place successfully,
    many prerequisites need to be checked on the cluster first. So, before we understand
    what can potentially crash, let’s understand how this self-adjustment mechanism
    works.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 目前，OpenShift 有一个自动恢复系统，但这通常不足以确保环境的稳定。为了让这种自我修复成功发生，必须首先检查集群中的许多前提条件。因此，在我们理解可能导致崩溃的因素之前，让我们先了解一下这种自我调整机制是如何工作的。
- en: Operators
  id: totrans-13
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 运维人员
- en: In the world of technology, there are many roles played, and some of them are
    linked to the administration of the infrastructure. There are several names for
    this role, the most common still being the **system administrator**, or **sysadmin**,
    who operates the servers and services of an **information technology** (**IT**)
    infrastructure. Likewise, OpenShift has *operators* that are nothing more than
    **applications designed to monitor platform behavior and maintain an operation**.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 在技术世界中，有许多角色，部分角色与基础设施的管理相关。这个角色有很多名称，最常见的仍然是**系统管理员**，或称**sysadmin**，他们负责操作**信息技术**（**IT**）基础设施中的服务器和服务。同样，OpenShift
    也有*操作员*，他们其实就是**用于监控平台行为并维持操作的应用程序**。
- en: How do operators work? Operators are assigned to fulfill a single task of maintaining
    the application and all its components according to a standard. Understand that
    operators are not the same for all applications—that is, operators are unique,
    each with its own parameter definitions, configurations that are required and
    optional, and others.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 操作员是如何工作的？操作员被指定来完成维护应用程序及其所有组件的单一任务，遵循一个标准。要理解的是，操作员对于所有应用程序并不相同——即，操作员是独特的，每个操作员都有其独特的参数定义、必需和可选配置等。
- en: The operator parameters’ contract is described in the **Custom Resource Definition**
    (**CRD**). A CRD is a definition that extends a Kubernetes **application programming
    interface** (**API**) functionality, giving more flexibility to the cluster to
    store a collection of objects of a certain type. Once a CRD is defined, you can
    create a **Custom Resource** (**CR**) that will allow you to add a Kubernetes’
    custom API to the cluster.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 操作员参数的契约在**自定义资源定义**（**CRD**）中描述。CRD 是一种扩展 Kubernetes **应用程序编程接口**（**API**）功能的定义，它为集群提供了更多的灵活性，以便存储特定类型的对象集合。一旦定义了
    CRD，你就可以创建一个**自定义资源**（**CR**），这将允许你将 Kubernetes 的自定义 API 添加到集群中。
- en: Operators are a tool for keeping a cluster or application healthy, so why should
    we care about learning about OpenShift troubleshooting if it fixes itself? Indeed,
    operators are a powerful tool, but as we mentioned earlier, OpenShift is a big
    puzzle, and the pieces need to fit together perfectly for it to work properly.
    Although it is reigned by operators that are somehow prepared to maintain its
    integrity, failures can occur, and the role of the cluster administrator and their
    experience in solving problems will help keep all these operators healthy.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 操作员是保持集群或应用健康的工具，那么既然 OpenShift 可以自我修复，为什么我们还要关心 OpenShift 故障排除？的确，操作员是一个强大的工具，但正如我们之前提到的，OpenShift
    是一个复杂的拼图，只有各个部分完美地拼接在一起，它才能正常工作。尽管它由准备好维护其完整性的操作员管理，但故障仍然可能发生，集群管理员的角色和他们解决问题的经验将有助于保持所有这些操作员的健康。
- en: In the next sections, we’ll go deeper into the main components of OpenShift
    and which aspects to be concerned about.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的章节中，我们将深入探讨 OpenShift 的主要组件以及需要关注的方面。
- en: etcd
  id: totrans-19
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: etcd
- en: 'In the case of OpenShift clusters, etcd is a distributed key-value service
    responsible for storing the state of the cluster. Through it, all objects contained
    in the cluster are shown in a key-value format, so it is important to consider
    at least three important factors in this service, which is the heart of the control
    plane’s operation. Note the following:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 在 OpenShift 集群中，etcd 是一个分布式键值服务，负责存储集群的状态。通过它，集群中包含的所有对象以键值格式展示，因此在这个服务中，作为控制平面操作核心的组件，有三个重要因素需要考虑。请注意以下几点：
- en: etcd is *highly sensitive* to an infrastructure’s **latency** and **bandwidth**.
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: etcd 对基础设施的**延迟**和**带宽***高度敏感*。
- en: etcd needs to be distributed on all master nodes—that is, to be highly available,
    an OpenShift cluster infrastructure demands this service be distributed on three
    master nodes.
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: etcd 需要分布在所有主节点上——也就是说，要实现高可用，OpenShift 集群基础设施要求此服务分布在三个主节点上。
- en: Unlike many **high-availability** (**HA**) services, in which you have a main
    and a secondary server, with etcd, this concept is based on **quorum** members
    and **leadership**.
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 与许多**高可用**（**HA**）服务不同，在这些服务中你有一个主服务器和一个备用服务器，etcd 的概念是基于**法定人数**成员和**领导权**。
- en: Red Hat made the etcd complexity easier by establishing the number of master
    nodes to be `3` as default and also by using a cluster operator that manages etcd
    and reports any issue in it; however, you must still understand how etcd works
    to be able to troubleshoot if any complex issue occurs. Go ahead to learn how
    the quorum and leader-based etcd algorithm works.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: Red Hat 通过将主节点数量默认为`3`并使用一个管理 etcd 并报告其问题的集群操作员，使得 etcd 的复杂性变得更加简易；然而，若发生任何复杂问题，你仍然需要理解
    etcd 的工作原理，以便进行故障排除。继续学习如何实现基于法定人数和领导者的 etcd 算法。
- en: How do the quorum and leader-based schemes work?
  id: totrans-25
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 法定人数和基于领导者的方案是如何工作的？
- en: An etcd cluster works on the concept of **leader** and **followers**, which
    is known as the **Raft Distributed Consensus** protocol. This protocol implements
    an algorithm based on a *leader election* to establish a distributed consensus
    among all members of an etcd cluster. Once members are added to an etcd cluster
    and a leader is elected, the process only requires sending periodic heartbeats
    to confirm that the leader still responds within a suitable latency time.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: Etcd 集群工作在**领导者**和**跟随者**的概念上，这被称为**Raft 分布式共识**协议。该协议实现了基于*领导者选举*的算法，以在整个 etcd
    集群的所有成员之间建立分布式共识。一旦成员被添加到 etcd 集群并选出领导者，进程只需要定期发送心跳以确认领导者在合适的延迟时间内仍然响应。
- en: In case of an unanswered heartbeat time frame, the members start a new election
    to guarantee cluster resilience, self-healing, and continuity of service.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 如果在未答复的心跳时间范围内，成员开始新的选举以保证集群的弹性、自愈和服务的连续性。
- en: 'It is recommended that an etcd cluster has an odd number of nodes so that the
    following formula guarantees the tolerance of a given number of failing members.
    To this we give the name of **quorum**:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 建议 etcd 集群具有奇数节点数量，以便以下公式保证给定数量失败成员的容忍度。我们称之为**法定人数**：
- en: '*Quorum = (n/2)+1, where “n” represents the number of members.*'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '*法定人数 = (n/2)+1，其中“n”表示成员数量。*'
- en: 'A cluster must always have at least the *quorum* number of members working
    to be functioning properly. For the sake of clarity, let’s check out some scenarios,
    as follows:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 为了保持正常运行，集群必须始终至少具有*法定人数*的成员。为了明确起见，让我们查看一些场景，如下所示：
- en: '**Scenario 1**: Three-member cluster, all up and running, as illustrated in
    the following diagram:'
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**场景 1**：三成员集群，全部运行中，如下图所示：'
- en: '![Figure 6.1 – Healthy etcd cluster (three-node member health) ](img/B18015_06_01.jpg)'
  id: totrans-32
  prefs: []
  type: TYPE_IMG
  zh: '![图 6.1 – 健康的 etcd 集群（三节点成员健康）](img/B18015_06_01.jpg)'
- en: Figure 6.1 – Healthy etcd cluster (three-node member health)
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.1 – 健康的 etcd 集群（三节点成员健康）
- en: '*Analysis*: Quorum is OK as there are a majority of working members and leadership
    is assured, so the cluster is healthy.'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '*分析*：法定人数是 OK 的，因为有大多数工作成员并确保领导权，所以集群是健康的。'
- en: '**Scenario 2**: Three-member cluster with two members working, as illustrated
    in the following diagram:'
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**场景 2**：三成员集群中有两个成员工作，如下图所示：'
- en: '![Figure 6.2 – Healthy etcd cluster (two-node member health; risk of outage)
    ](img/B18015_06_02.jpg)'
  id: totrans-36
  prefs: []
  type: TYPE_IMG
  zh: '![图 6.2 – 健康的 etcd 集群（两节点成员健康；风险停机）](img/B18015_06_02.jpg)'
- en: Figure 6.2 – Healthy etcd cluster (two-node member health; risk of outage)
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.2 – 健康的 etcd 集群（两节点成员健康；风险停机）
- en: '*Analysis*: Quorum is OK as there are a majority of working members and leadership
    is assured. There is a degradation risk in case of disruption of one more node,
    but the cluster is healthy.'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: '*分析*：法定人数是 OK 的，因为有大多数工作成员并确保领导权。如果再有一个节点中断，存在降级风险，但集群是健康的。'
- en: '**Scenario 3**: Three-member cluster with one member working, as illustrated
    in the following diagram:'
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**场景 3**：三成员集群中有一个成员工作，如下图所示：'
- en: '![Figure 6.3 – Degraded etcd cluster (one-node member health; unhealthy cluster)
    ](img/B18015_06_03.jpg)'
  id: totrans-40
  prefs: []
  type: TYPE_IMG
  zh: '![图 6.3 – 降级的 etcd 集群（一个节点成员健康；不健康的集群）](img/B18015_06_03.jpg)'
- en: Figure 6.3 – Degraded etcd cluster (one-node member health; unhealthy cluster)
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.3 – 降级的 etcd 集群（一个节点成员健康；不健康的集群）
- en: '*Analysis*: There is no quorum as the majority of members are down, so it is
    no longer possible to elect a new leader, and the cluster is degraded.'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: '*分析*：由于大多数成员宕机，无法再选出新的领导者，集群降级。'
- en: Troubleshooting etcd
  id: totrans-43
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 故障排除 etcd
- en: As mentioned earlier, OpenShift is managed by its operators, which can provide
    standardization, self-healing, and activities metrics, but this is not always
    enough to keep the cluster fully functional.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，OpenShift 由其运算符管理，这些运算符可以提供标准化、自愈和活动指标，但这并不总能保持集群完全功能。
- en: Situations such as scenarios *2* and *3* can occur due to different factors
    related to any infrastructure layer. It is important to carry out an in-depth
    analysis to restore the cluster to a functional state. Here’s an approach to troubleshooting
    etcd.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 由于与任何基础架构层相关的不同因素，可能会发生诸如场景 *2* 和 *3* 的情况。重要的是进行深入分析以将集群恢复到功能状态。以下是故障排除 etcd
    的方法。
- en: For troubleshooting, it is important to consider what kind of disruption the
    cluster has been hit with. If we are still able to use the OpenShift API to access
    the nodes, you can use the first approach. Otherwise, if the API is unavailable,
    you must refer to the second scenario.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 在故障排除时，重要的是考虑集群遇到的中断类型。如果我们仍然能够使用OpenShift API访问节点，则可以使用第一种方法。否则，如果API不可用，则必须参考第二种情境。
- en: Scenario 1 – etcd member is degraded
  id: totrans-47
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 情境 1 – etcd成员降级
- en: In cases where it is still possible to execute `oc` or `kubectl` commands, use
    the `rsh` command to the etcd pod, and performing the following steps through
    `etcdctl` is the quickest approach.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 在仍然可以执行`oc`或`kubectl`命令的情况下，使用`rsh`命令进入etcd pod，通过`etcdctl`执行以下步骤是最快的方式。
- en: An etcd degradation can occur for many different reasons, such as storage or
    network failures, live migration of the master nodes, or even manipulations in
    the **operating system** (**OS**), which may cause immediate disruption of the
    cluster.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: etcd降级可能由多种原因引起，例如存储或网络故障、主节点的在线迁移，甚至是**操作系统**（**OS**）的操作，这些都可能导致集群的即时中断。
- en: 'As mentioned before, run the following commands to open a terminal in an etcd
    pod and identify the failure:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，运行以下命令打开etcd pod中的终端并识别故障：
- en: '[PRE0]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Notice that in the previous output, two out of three masters are getting issues,
    so let’s `rsh` to `master-3`, perform a backup, and recreate the etcd nodes, as
    follows:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，在之前的输出中，三台主节点中的两台出现了问题，所以我们需要`rsh`进入`master-3`，进行备份，并重新创建etcd节点，具体步骤如下：
- en: '[PRE1]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Once the **identifiers** (**IDs**) of the failed members are determined, the
    next step is to remove the etcd members, leaving only the one that is running
    as part of the cluster. To do so, first run the backup of etcd, like so:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦确定了故障成员的**标识符**（**IDs**），下一步是移除etcd成员，留下唯一运行并作为集群一部分的节点。为此，首先运行etcd的备份，如下所示：
- en: '[PRE2]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Note
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: The etcd backup will be saved in the `home` directory of the `core` user in
    the same node as the one where the etcd pod is running. It is highly recommended
    you copy it to an off-node location as this will avoid the risk of losing access
    to the node and, as such, losing the etcd backup file and putting the cluster
    recovery at risk.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: etcd备份将保存在与etcd pod所在节点相同的`core`用户的`home`目录中。强烈建议你将其复制到节点外的位置，以避免丢失访问节点的风险，从而丢失etcd备份文件并使集群恢复处于风险中。
- en: Now that you have already identified the problem with the etcd cluster, see
    next the suggested steps to recover your cluster.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你已经识别出etcd集群的问题，接下来查看建议的步骤来恢复你的集群。
- en: How to solve it?
  id: totrans-59
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 如何解决这个问题？
- en: 'Formerly, on OpenShift version 3, the usual solution for both cases was reestablishing
    the etcd cluster using a backup. Now, with OpenShift 4, it is easier to provision
    new master nodes in your infrastructure. That said, if your issue is the first
    scenario (API is still available) and your installation is the **installer-provisioned
    infrastructure** (**IPI**) method, we suggest you take the following steps to
    recreate the problematic master node, using a new node name:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 以前，在OpenShift 3版本中，解决这两种情况的常见方法是通过备份重新建立etcd集群。现在，在OpenShift 4中，您可以更轻松地在基础设施中配置新的主节点。也就是说，如果你的问题属于第一种情况（API仍然可用）并且你的安装是**安装程序配置基础设施**（**IPI**）方法，我们建议你采取以下步骤，使用新的节点名称重新创建有问题的主节点：
- en: 'Get the **YAML Ain’t Markup Language** (**YAML**) machine descriptor for any
    current master node by running the following command:'
  id: totrans-61
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过运行以下命令获取当前主节点的**YAML Ain’t Markup Language**（**YAML**）机器描述符：
- en: '[PRE3]'
  id: totrans-62
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'The YAML file should look like this:'
  id: totrans-63
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: YAML文件应如下所示：
- en: '[PRE4]'
  id: totrans-64
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Make the required changes in the YAML file to provision the new master, as
    follows:'
  id: totrans-65
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在YAML文件中进行必要的更改以配置新的主节点，如下所示：
- en: 'Remove the following sections or fields:'
  id: totrans-66
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 移除以下部分或字段：
- en: Entire `status`, `metadata.annotations`, and `metadata.generation` sections.
  id: totrans-67
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 整个`status`、`metadata.annotations`和`metadata.generation`部分。
- en: Delete `metadata.resourceVersion`, `metadata.uid`, and `spec.providerId` fields.
  id: totrans-68
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 删除`metadata.resourceVersion`、`metadata.uid`和`spec.providerId`字段。
- en: II. Change the `metadata.name` field to a new name (for example, `<clustername>-<clusterid>-master-3`).
  id: totrans-69
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: II. 将`metadata.name`字段更改为新名称（例如，`<clustername>-<clusterid>-master-3`）。
- en: Also update the node name in the `metadata.selfLink` field.
  id: totrans-70
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 还需要更新`metadata.selfLink`字段中的节点名称。
- en: 'Delete the problematic master node using the following command:'
  id: totrans-71
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令删除有问题的主节点：
- en: '[PRE5]'
  id: totrans-72
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Use the following command to monitor the deletion process and certify it has
    been deleted:'
  id: totrans-73
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令来监控删除过程并确认已删除：
- en: '[PRE6]'
  id: totrans-74
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'As soon as the problematic master has been deleted, you can now provision a
    new one using the YAML we prepared previously. To do so, run the following command:'
  id: totrans-75
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦有问题的主节点被删除，你现在可以使用我们之前准备好的YAML文件配置一个新的主节点。为此，运行以下命令：
- en: '[PRE7]'
  id: totrans-76
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Note
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: Repeat this procedure if necessary, changing only the `metadata.name` and `metadata.selfLink`
    fields for each problematic master node in your cluster.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 如有必要，重复此过程，仅更改`metadata.name`和`metadata.selfLink`字段，以应对集群中每个有问题的主节点。
- en: 'After the new master nodes have been provisioned, observe the following steps
    to verify whether the etcd cluster is healthy:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 在新的主节点配置完成后，观察以下步骤以验证etcd集群是否健康：
- en: 'Check if all etcd pods are running, as follows. You must see three pods running:'
  id: totrans-80
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 检查所有etcd Pod是否正在运行，具体如下。你必须看到三个Pod在运行：
- en: '[PRE8]'
  id: totrans-81
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'There are some cases in which the etcd pod is not deployed automatically with
    the master provisioning. If you don’t see three pods running, you may run the
    following command to force the etcd operator to deploy the etcd pod in the new
    node:'
  id: totrans-82
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 有些情况下，etcd Pod不会在主节点配置时自动部署。如果你没有看到三个Pod在运行，你可以运行以下命令强制etcd操作员在新节点中部署etcd Pod：
- en: '[PRE9]'
  id: totrans-83
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Now, let’s check from inside the etcd cluster whether it is working as expected.
    To do so, run the following command to open a terminal inside one of the etcd
    pods:'
  id: totrans-84
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，让我们从etcd集群内部检查它是否按预期工作。为此，运行以下命令在其中一个etcd Pod内打开终端：
- en: '[PRE10]'
  id: totrans-85
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Now, check the cluster member list, like so:'
  id: totrans-86
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，检查集群成员列表，如下所示：
- en: '[PRE11]'
  id: totrans-87
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'In some cases, you will still see the problematic etcd node that we already
    removed as part of the cluster members. Therefore, if the previous command shows
    more than three members, use the following command to remove the nonfunctional
    etcd members:'
  id: totrans-88
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在某些情况下，你仍然会看到我们已经移除的有问题的etcd节点作为集群成员。因此，如果前一个命令显示成员超过三个，请使用以下命令移除不正常的etcd成员：
- en: '[PRE12]'
  id: totrans-89
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Scenario 2 – cluster API down
  id: totrans-90
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 场景2 - 集群API故障
- en: If the OpenShift API is down, it is important to perform any steps with much
    more caution to avoid an irreversible loss to the cluster. In such a scenario,
    you can’t use the `rsh` command, get logs using `oc logs`, OR use any `oc` or
    `kubectl` command, as all of them use the OpenShift API, which makes troubleshooting
    and finding a solution much more difficult and complex.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 如果OpenShift API故障，执行任何操作时需要更加谨慎，以避免对集群造成不可逆的损失。在这种情况下，你无法使用`rsh`命令，无法通过`oc logs`获取日志，也无法使用任何`oc`或`kubectl`命令，因为这些命令都依赖于OpenShift
    API，这使得故障排除和找到解决方案变得更加困难和复杂。
- en: 'Due to that, there must be regular etcd backups in place before the cluster
    malfunctions. If there is no previous backup, the first step is to perform a direct
    backup on the node that is in operation. To do so, proceed as follows:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，必须在集群发生故障之前定期进行etcd备份。如果没有之前的备份，第一步是对正在运行的节点进行直接备份。为此，请按以下步骤操作：
- en: 'Run the following command:'
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 运行以下命令：
- en: '[PRE13]'
  id: totrans-94
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Check out the etcd state by running the `crictl` command, like so:'
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过运行`crictl`命令检查etcd状态，如下所示：
- en: '[PRE14]'
  id: totrans-96
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'Get the etcd pod ID and run the `crictl exec` statement to identify the cluster’s
    node state, as follows:'
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 获取etcd Pod ID，运行`crictl exec`命令以识别集群节点的状态，具体如下：
- en: '[PRE15]'
  id: totrans-98
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'Note that the etcd members are unreachable except for one that is in the started
    state. Run a backup by going to the node and running the backup command, as follows:'
  id: totrans-99
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 注意，etcd成员不可达，除了一个处于启动状态的成员。通过前往该节点并运行备份命令，进行备份，具体如下：
- en: '[PRE16]'
  id: totrans-100
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'With the pod ID of etcd, obtained by `crictl`, run the following command to
    identify the cluster nodes and their state:'
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用`crictl`获取etcd的Pod ID，运行以下命令以识别集群节点及其状态：
- en: '[PRE17]'
  id: totrans-102
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE17]'
- en: At this stage, it is possible to draw some conclusions. We understand that there
    is no minimum quorum to keep the cluster up, so the API became unavailable. Continue
    next for a suggestion on how to proceed in this scenario.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 在此阶段，可以得出一些结论。我们理解保持集群运行不需要最低法定人数，因此API变得不可用。接下来，请继续查看如何在这种情况下进行操作的建议。
- en: How to solve it?
  id: totrans-104
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 如何解决？
- en: In general, to restore a cluster in this scenario you will use the command `etcdctl
    member remove` to remove all problematic etcd members and then use the procedure
    we described in the previous *How to solve it?* section to remove problematic
    master nodes and provision new ones. However, troubleshooting a cluster in this
    scenario is much more challenging, work with Red Hat support to find the best
    way to restore it.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 一般来说，在这种情况下，要恢复集群，你将使用命令`etcdctl member remove`来移除所有有问题的etcd成员，然后按照我们在之前的*如何解决？*部分中描述的步骤移除有问题的主节点并配置新的节点。然而，故障排除集群在这种情况下要更具挑战性，建议与Red
    Hat支持团队合作，找到恢复的最佳方法。
- en: 'Now that we have already gone through etcd troubleshooting, let’s discuss another
    important aspect of it: performance analysis.'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 既然我们已经讨论了etcd故障排除，现在让我们讨论它的另一个重要方面：性能分析。
- en: etcd performance analysis
  id: totrans-107
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: etcd性能分析
- en: Kubernetes clusters are highly sensitive to latency and throughput. Due to this,
    some precautions are necessary to have a stable cluster and also great performance.
    OpenShift is a platform designed for HA, and, as such, the expected etcd use and
    consumption are traffic-intensive. It is important, then, to follow some best
    practices to have a stable cluster. Let’s look at some recommended configurations.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: Kubernetes集群对延迟和吞吐量非常敏感。因此，必须采取一些预防措施，以确保集群稳定并提供优异的性能。OpenShift是一个为高可用性（HA）设计的平台，因此，etcd的使用和消耗是流量密集型的。因此，遵循一些最佳实践以保持集群的稳定非常重要。让我们来看一些推荐的配置。
- en: Storage
  id: totrans-109
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 存储
- en: etcd’s disk usage is intensive, so it is recommended to use **solid-state drive**
    (**SSD**) disks for a fast write/read response time. Regarding response times,
    we could say that 50 sequential **input/output operations per second** (**IOPS**)
    would be a minimum requirement, but from our experience, the OpenShift usage grows
    really fast, so we recommend you consider disks that can deliver at least 500
    concurrent IOPS, to maintain the cluster’s health and stability. However, note
    that some providers do not publish the sequential IOPS but only the shared IOPS.
    In such cases, consider that concurrent IOPS is equivalent to 10 times the sequential
    IOPS value.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: etcd的磁盘使用非常密集，因此建议使用**固态硬盘**（**SSD**）来实现快速的读/写响应时间。关于响应时间，我们可以说50次顺序**输入/输出操作每秒**（**IOPS**）是最低要求，但根据我们的经验，OpenShift的使用会非常快速地增长，因此建议考虑能够提供至少500个并发IOPS的磁盘，以维持集群的健康和稳定。然而，请注意，某些提供商不发布顺序IOPS值，只发布共享IOPS。在这种情况下，可以认为并发IOPS值等于顺序IOPS值的10倍。
- en: 'Here is an example of how to measure the performance of the etcd disks using
    a customized version of the `fio` tool. In the OpenShift cluster, run the `debug`
    command to get access to a master node, like so:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个如何使用定制版`fio`工具测量etcd磁盘性能的示例。在OpenShift集群中，运行`debug`命令来访问主节点，如下所示：
- en: '[PRE18]'
  id: totrans-112
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'As soon as the command is executed, the following message will be displayed.
    Execute the `chroot` command after the shell to be able to execute commands in
    privileged mode:'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦命令执行完毕，以下信息将会显示。在shell之后执行`chroot`命令，以便在特权模式下执行命令：
- en: '[PRE19]'
  id: totrans-114
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'Create a container, as indicated in the following code snippet. After the `etcd-perf`
    container starts, it will automatically run performance checks:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 创建一个容器，如下方代码片段所示。启动`etcd-perf`容器后，它将自动运行性能检查：
- en: '[PRE20]'
  id: totrans-116
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'In the preceding code snippet, we have used the following annotations:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的代码片段中，我们使用了以下注释：
- en: '**[1]**: A chunk size of 22 **megabytes** (**MB**) is usually enough to analyze
    performance results.'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: '**[1]**: 22 **兆字节**（**MB**）的块大小通常足以分析性能结果。'
- en: '**[2]**: Instead of using 4k block size, etcd uses small chunks of 2.3k block
    size, so it guarantees performance, including with small writing fragmentations.'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: '**[2]**: 与使用4k块大小不同，etcd使用小块的2.3k块大小，因此它能够保证性能，包括处理小的写入碎片。'
- en: '**[3]**: Bandwidth required considering traffic between the node and underlying
    storage. It is recommended you use at least a network interface of 1 **gigabyte**
    (**GB**). For medium and large clusters, the recommendation is a 10 GB interface.'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: '**[3]**: 考虑到节点与底层存储之间的流量，所需的带宽。建议至少使用1 **千兆字节**（**GB**）的网络接口。对于中型和大型集群，推荐使用10
    GB的接口。'
- en: '**[4]**: The recommendation is at least 500 concurrent IOPS, as explained previously.'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: '**[4]**: 推荐至少500个并发IOPS，如前所述。'
- en: '**[5]**: The report of the etcd IO check. In the example, 5.40 **milliseconds**
    (**ms**) demonstrates a reliable performance—for it to be so, it must be under
    10 ms.'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: '**[5]**：etcd IO 检查报告。在示例中，5.40 **毫秒**（**ms**）展示了可靠的性能——为了达到此标准，必须低于 10 毫秒。'
- en: Besides using `etcd-perf` to check the disk performance, you could also perfectly
    use custom parameters as you need, such as block size, chunk size, and so on,
    using the `fio` binary tool, which is available using the standard Red Hat package
    manager (for example, by executing `yum/dnf install fio`).
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 除了使用`etcd-perf`检查磁盘性能外，您还可以根据需要完美地使用自定义参数，如块大小、块段大小等，使用`fio`二进制工具，该工具可通过标准的
    Red Hat 包管理器获取（例如，执行 `yum/dnf install fio`）。
- en: Note
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 注释
- en: For didactic reasons, we suppressed some results, leaving only items that are
    pertinent to our analysis.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 出于教学目的，我们省略了一些结果，只保留了与我们分析相关的项。
- en: etcd sizing
  id: totrans-126
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: etcd 规模化
- en: To avoid any problems related to the **central processing unit** (**CPU**),
    you must understand whether your cluster is well-sized. You must consider some
    factors to check the cluster sizing, such as the number of customers using the
    platform, the expected number of requests per second, and the amount of storage
    available for etcd.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 为了避免与**中央处理单元**（**CPU**）相关的任何问题，您必须了解您的集群是否经过了良好的规模化。您需要考虑一些因素来检查集群规模化情况，如使用平台的客户数量、每秒请求的预期数量，以及为
    etcd 提供的存储量。
- en: 'First, let’s give you some parameters to consider for your cluster size:'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，让我们为您的集群大小提供一些需要考虑的参数：
- en: '![](img/B18015_06_Table_01.jpg)'
  id: totrans-129
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B18015_06_Table_01.jpg)'
- en: 'The following table demonstrates some use cases using public clouds and on-premises
    infrastructures according to the amount of CPU, memory, disk IOPS, and bandwidth
    linked to the cluster size:'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 下表展示了根据集群大小关联的 CPU、内存、磁盘 IOPS 和带宽等参数，使用公共云和本地基础设施的一些用例：
- en: '![](img/B18015_06_Table_02.jpg)'
  id: totrans-131
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B18015_06_Table_02.jpg)'
- en: In a nutshell, when you size a cluster, you should consider these thresholds
    because this is already benchmarked by the etcd community, and their performance
    will likely be acceptable if these recommendations are followed. Further information
    regarding sizing the etcd cluster can be found at the link we have provided in
    the *Further reading* session of this chapter.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 总而言之，当您为集群进行规模化时，应该考虑这些阈值，因为这已由 etcd 社区进行了基准测试，如果遵循这些建议，它们的性能可能会是可接受的。关于 etcd
    集群规模化的进一步信息，可以在本章的 *进一步阅读* 部分提供的链接中找到。
- en: In this section, you have seen some ways to check etcd performance and troubleshoot,
    and you also got some important information regarding sizing best practices. We
    hope you enjoyed the approach and take a close look at the next section about
    authentication, which will be another interesting theme.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一部分，您已经看到了一些检查 etcd 性能和故障排除的方法，同时也获得了一些关于规模化最佳实践的重要信息。我们希望您喜欢这种方法，并且仔细查看接下来关于身份验证的部分，这将是另一个有趣的主题。
- en: Authentication
  id: totrans-134
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 身份验证
- en: 'Another important aspect of an OpenShift cluster is user authentication and
    authorization flow. OpenShift’s flexibility and easy-to-use authentication plugins
    are a smart way of setting up users and groups. Instead of simply having a vault
    of usernames and passwords, OpenShift’s authentication service can authenticate
    a user in a variety of ways—we call it an **identity provider** (**IdP**). In
    this way, OpenShift is responsible for trusting the IdP and allowing or denying
    authentication according to the provider. In the following diagram, you can see
    how the process of authenticating a user works:'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: OpenShift 集群的另一个重要方面是用户身份验证和授权流程。OpenShift 的灵活性和易用的身份验证插件是设置用户和组的智能方式。OpenShift
    的身份验证服务可以通过多种方式验证用户——我们称之为**身份提供者**（**IdP**）。通过这种方式，OpenShift 负责信任 IdP，并根据提供者来允许或拒绝身份验证。在下图中，您可以看到验证用户的过程是如何工作的：
- en: '![Figure 6.4 – Authentication and authorization flow ](img/B18015_06_04.jpg)'
  id: totrans-136
  prefs: []
  type: TYPE_IMG
  zh: '![图 6.4 – 身份验证和授权流程](img/B18015_06_04.jpg)'
- en: Figure 6.4 – Authentication and authorization flow
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.4 – 身份验证和授权流程
- en: The IdP is responsible for notifying OpenShift if the username and password
    are valid and returning to OpenShift the `success` or `failure` authentication
    status. This process is known as **authentication** (**AuthN** in some literature).
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: IdP 负责通知 OpenShift 用户名和密码是否有效，并将`成功`或`失败`的身份验证状态返回给 OpenShift。这个过程被称为**身份验证**（在一些文献中称为**AuthN**）。
- en: We mentioned that the authentication process uses IdPs to validate the user
    against an authentication provider, but, more importantly, you need to understand
    how **authorization** (aka as **AuthZ**) occurs. Initially, a user on OpenShift
    doesn’t have any permissions in any project; however, they can log on. They will
    not have rights to perform any tasks except creating their own new projects if
    the cluster has the self-provisioner role enabled (self-provisioner is a role
    that allows any logged user to create their own projects). To add permissions
    to a user, it is necessary to inform the appropriate role. This can be accomplished
    through the inclusion of a user group or by directly assigning it to the user.
    This process of adding roles to users or groups is named **RoleBindings**.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 我们提到过，身份验证过程使用IdP来验证用户与身份验证提供者的匹配，但更重要的是，你需要理解**授权**（也称为**AuthZ**）是如何发生的。最初，OpenShift上的用户在任何项目中都没有任何权限；然而，他们可以登录。除非集群启用了自我创建者角色，否则他们无法执行任何任务，只能创建自己的新项目（自我创建者是一种允许任何已登录用户创建自己项目的角色）。要为用户添加权限，需要指派适当的角色。这可以通过将用户添加到用户组或直接分配给用户来实现。将角色分配给用户或组的过程被称为**RoleBindings**。
- en: 'To better understand which role best fits a user or group, consider looking
    at the default roles that already exist in an OpenShift cluster, as set out here:'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 为了更好地了解哪个角色最适合某个用户或组，可以查看在OpenShift集群中已存在的默认角色，如下所示：
- en: '`admin`—This is a project admin. It allows changes with all project-scoped
    resources, including the ability to create RoleBindings using ClusterRoles. It
    does not allow the modification of quotas, limits, or cluster resources.'
  id: totrans-141
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`admin`—这是一个项目管理员角色。它允许对所有项目范围内的资源进行修改，包括使用ClusterRoles创建RoleBindings的能力。它不允许修改配额、限制或集群资源。'
- en: '`edit`—This is a project editor. It allows usage and manipulation of all project-scoped
    resources, but cannot change authorization objects.'
  id: totrans-142
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`edit`—这是一个项目编辑器。它允许使用和操作所有项目范围内的资源，但不能更改授权对象。'
- en: '`view`—This is a project viewer. It allows the inspection of project-scoped
    resources and works like a read-only RoleBinding. Secrets inspections are not
    allowed.'
  id: totrans-143
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`view`—这是一个项目查看器。它允许查看项目范围内的资源，类似于只读的RoleBinding。禁止查看秘密信息。'
- en: '`cluster-admin`—This is the equivalent of a root user on a *nix-like OS. It
    allows total control of any resource in the entire cluster.'
  id: totrans-144
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`cluster-admin`—这是类Unix操作系统中的root用户的等价物。它允许对整个集群中的任何资源进行完全控制。'
- en: '`cluster-reader`—This is useful for allowing special users permissions, especially
    those that work with cluster monitoring. This RoleBinding is read-only and does
    not allow users to escalate or manipulate objects on the cluster.'
  id: totrans-145
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`cluster-reader`—这个角色对特别用户特别有用，尤其是那些负责集群监控的用户。该RoleBinding是只读的，不允许用户提升权限或操纵集群中的对象。'
- en: 'You must also understand the scope of the RoleBinding, which can be one of
    the following:'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 你还需要理解RoleBinding的作用范围，它可以是以下之一：
- en: '`edit` role to user *X* in project *Z*. Creating local RoleBindings is as simple
    as running the following command:'
  id: totrans-147
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将`edit`角色分配给项目*Z*中的用户*X*。创建本地RoleBindings就像运行以下命令一样简单：
- en: '[PRE21]'
  id: totrans-148
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE21]'
- en: '`cluster-admin` role to user *X*. To create a cluster RoleBinding, run the
    following command:'
  id: totrans-149
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将`cluster-admin`角色分配给用户*X*。要创建一个集群RoleBinding，可以运行以下命令：
- en: '[PRE22]'
  id: totrans-150
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'Similar commands can be applied to groups, just replacing `user` with `group`
    (for example, `add-role-to-group` and `add-cluster-role-to-group`). Similarly,
    to remove a role from a user or group, use `remove-role-from-user/group`, as in
    the following example:'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 相似的命令也可以应用于组，只需将`user`替换为`group`（例如，`add-role-to-group`和`add-cluster-role-to-group`）。同样，要从用户或组中删除角色，使用`remove-role-from-user/group`，如下所示：
- en: '[PRE23]'
  id: totrans-152
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'These are some of the most popular default roles that are used with OpenShift,
    but you can create custom ones if needed. To create a custom role, you need to
    first understand what are **verbs** and **resources**, so here are definitions
    of these:'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 这些是与OpenShift一起使用的最常见的默认角色，但如果需要，你可以创建自定义角色。要创建自定义角色，你需要首先了解什么是**动词**和**资源**，以下是这些术语的定义：
- en: A `get`, `list`, `create`, `update`, and so on.
  id: totrans-154
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`get`、`list`、`create`、`update`等。'
- en: A `pod`, `deployment`, `service`, `secret`, and so on.
  id: totrans-155
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pod`、`deployment`、`service`、`secret`等。'
- en: 'That said, to define a custom role, you need to know which verbs for the user
    or group will be allowed to run over which objects. As soon as you have defined
    verbs and resources, a role can be created using the following command:'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 也就是说，要定义自定义角色，你需要知道哪些动词可以让用户或组在哪些对象上执行。定义了动词和资源后，可以使用以下命令创建角色：
- en: '[PRE24]'
  id: totrans-157
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'Have a look at the following example:'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 看一下以下示例：
- en: '[PRE25]'
  id: totrans-159
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: There are more things about authentication and authorization with OpenShift
    that it's not our intention to bring to light here. We tried to highlight some
    of the important aspects you need to know about it, and we left a set of links
    in the *Further reading* section of this chapter if you want to go even deeper
    into this subject.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 关于OpenShift的认证和授权，还有许多内容我们这里不打算详细介绍。我们尝试突出一些你需要了解的重要方面，并在本章的*进一步阅读*部分留下了一些链接，如果你希望更深入地了解这个话题，可以查阅。
- en: 'With that, we have demystified the authentication process a bit, and you can
    now perform the process of **AuthN** and **AuthZ**. The previous diagram showed
    a quick point of view about the steps of an authentication process. It is important
    to give proper permissions to each user or group, and—more importantly—to plan
    the roles you will need to have in place to give your users and groups the proper
    permissions to perform their job. In the following section, we will cover another
    important aspect that an OpenShift operator needs to know about: troubleshooting.'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 通过这个步骤，我们已经稍微揭开了认证过程的神秘面纱，现在你可以执行**AuthN**和**AuthZ**的过程。前面的图表展示了认证过程步骤的一个简要视角。为每个用户或用户组授予适当的权限非常重要，而更重要的是要规划你需要为用户和用户组分配的角色，以便赋予他们执行工作所需的适当权限。在接下来的部分中，我们将讨论OpenShift运维人员需要了解的另一个重要方面：故障排除。
- en: Troubleshooting reference guide – how to start
  id: totrans-162
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 故障排除参考指南 – 如何开始
- en: In this section, you will see some approaches to troubleshooting your OpenShift
    cluster if you face any issues. Due to the power of the `oc` **command-line interface**
    (**CLI**), you will have different ways to succeed in almost any troubleshooting
    scenario of your OpenShift cluster. Along with your training, you will gain the
    experience you need to take a step further in using and troubleshooting your OpenShift/Kubernetes
    cluster.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，你将看到一些故障排除OpenShift集群的方法，如果你遇到任何问题。由于`oc` **命令行界面**（**CLI**）的强大功能，你将有多种方式来解决几乎所有的OpenShift集群故障排除场景。通过培训，你将积累经验，进一步提高使用和故障排除OpenShift/Kubernetes集群的能力。
- en: Describing objects
  id: totrans-164
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 描述对象
- en: 'As we have mentioned, the `oc` CLI is a powerful tool to help OpenShift users
    to do a lot of operations and also do some troubleshooting. One of the first steps
    of troubleshooting is to get some details and descriptions of the objects. Suppose,
    for instance, you have an issue related to a pod that is not coming up, for some
    reason. Let’s start our troubleshooting by checking the pod details, as follows:'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们提到的，`oc` CLI是一个强大的工具，可以帮助OpenShift用户进行多种操作，并且进行故障排除。故障排除的第一步之一是获取对象的详细信息和描述。假设你遇到了一个与Pod相关的问题，原因是Pod未能启动。让我们通过检查Pod的详细信息来开始我们的故障排除，具体操作如下：
- en: '[PRE26]'
  id: totrans-166
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'Check the output in the `Events` section of the object to see what is preventing
    the pod from spinning up, as illustrated in the following code snippet:'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 检查对象的`Events`部分输出，看看是什么阻止了Pod启动，如下代码片段所示：
- en: '[PRE27]'
  id: totrans-168
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: In this case, you were able to see quickly in the `oc describe` command that
    the error is related to the connection between the node and the image registry
    (`no route to host`). You can act accordingly to fix the connectivity issue and
    get the pod up and running. You can also use the `Events` log to see other meaningful
    information, as you can see in the following section.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，你可以通过`oc describe`命令快速查看到错误与节点和镜像注册表之间的连接有关（`no route to host`）。你可以相应地采取行动来修复连接问题，使Pod顺利启动。你还可以使用`Events`日志查看其他有意义的信息，正如接下来你将看到的那样。
- en: Events
  id: totrans-170
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 事件
- en: 'Another parameter on the `oc` CLI that helps with problem investigation is
    the `oc get events` command. This is very useful for showing a log of tasks recently
    executed, along with presenting *success* or *error* messages. Events can be executed
    cluster-wide or project scoped. Check out the following sample of event logs:'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: '`oc` CLI中另一个帮助问题排查的参数是`oc get events`命令。这个命令非常有用，可以展示最近执行的任务日志，同时呈现*成功*或*错误*信息。事件可以在整个集群或项目范围内执行。查看以下事件日志示例：'
- en: '[PRE28]'
  id: totrans-172
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: If the pod is up and running but you still have some issues in an application,
    you can also use OpenShift to check the application logs, as you will see next.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 如果Pod已启动并运行，但你在应用程序中仍然遇到问题，你也可以使用OpenShift检查应用程序日志，接下来你将看到如何操作。
- en: Pod logs
  id: totrans-174
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Pod日志
- en: 'Regularly, pod logs bring important information related to the scheduler, pod
    affinity/anti-affinity, container images, and persistent volumes. There are several
    ways to check the pod logs, as outlined here:'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，Pod日志提供与调度程序、Pod亲和性/反亲和性、容器镜像和持久卷相关的重要信息。这里列出了几种检查Pod日志的方法：
- en: 'The common way—inside the namespace—is shown here:'
  id: totrans-176
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 常见方式——在命名空间内——如下所示：
- en: '[PRE29]'
  id: totrans-177
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'Here’s how to check them from any namespace:'
  id: totrans-178
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这是如何从任何命名空间中检查它们的方法：
- en: '[PRE30]'
  id: totrans-179
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'Here’s how to check the logs of a specific container inside a pod:'
  id: totrans-180
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这是检查Pod中某个特定容器日志的方法：
- en: '[PRE31]'
  id: totrans-181
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'You can also check the logs using the OpenShift console `Logs` tab of the desired
    namespace and pod, as illustrated in the following screenshot:'
  id: totrans-182
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你还可以使用OpenShift控制台的`Logs`选项卡检查日志，选择所需的命名空间和Pod，示例如下截图：
- en: '![Figure 6.5 – Pod logs example (OpenShift console graphical UI (GUI)) ](img/B18015_06_05.jpg)'
  id: totrans-183
  prefs: []
  type: TYPE_IMG
  zh: '![图6.5 – Pod日志示例（OpenShift控制台图形用户界面（GUI））](img/B18015_06_05.jpg)'
- en: Figure 6.5 – Pod logs example (OpenShift console graphical UI (GUI))
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.5 – Pod日志示例（OpenShift控制台图形用户界面（GUI））
- en: You may also have issues during the application deployment. See next what you
    can check to find evidence of deployment problems.
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 在应用程序部署过程中，你也可能遇到问题。接下来，请查看你可以检查哪些内容以发现部署问题的证据。
- en: Deployment logs
  id: totrans-186
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 部署日志
- en: In some cases, a pod does not start and remains in a constant crashing state,
    which makes it difficult to get any logs. In such cases, you can check the `deployment`
    or `deploymentconfig` logs, which can help you to identify deployment misconfigurations.
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 在某些情况下，Pod无法启动并持续处于崩溃状态，这使得获取日志变得困难。在这种情况下，你可以检查`deployment`或`deploymentconfig`日志，这有助于你识别部署配置错误。
- en: 'Similar to pod logs, `deployment` logs are accessible by running the `oc logs`
    command. For `deployment` logs, run the following command:'
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 与Pod日志类似，`deployment`日志可以通过运行`oc logs`命令访问。对于`deployment`日志，运行以下命令：
- en: '[PRE32]'
  id: totrans-189
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'For `deploymentconfigs` logs, use this one:'
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 对于`deploymentconfigs`日志，请使用以下命令：
- en: '[PRE33]'
  id: totrans-191
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: Usually, you will not find the exact issue or the root cause and the solution
    to be applied, but it will give you a good indication of why it is failing—for
    example, dependent components that are missing in the solution, such as images
    not available; security context constraint with incorrect permissions; configmaps,
    secrets, and serviceaccounts missing; and so on.
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，你不会找到确切的问题或根本原因和解决方案，但它会给你一个关于失败原因的良好指示——例如，缺失的依赖组件，如不可用的镜像；具有不正确权限的安全上下文约束；缺失的configmaps、secrets和serviceaccounts等。
- en: Another useful way you may use to troubleshoot an issue is to use the `debug`
    command with temporary root privileges. Learn more on this in the following section.
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 另一种有用的故障排除方法是使用带有临时根权限的`debug`命令。有关更多信息，请参阅以下部分。
- en: Debugging pods
  id: totrans-194
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 调试Pods
- en: 'Another interesting tool to troubleshoot a pod that is constantly crashing
    can be used by executing the `oc debug deployment` or `oc debug deploymentconfig`
    command. Through this, you can instruct OpenShift to not fail and restart the
    pod as it crashes. The pod will still be alive, so you can check the logs, access
    it, and troubleshoot it from inside the container. To use the tool, run the following
    command:'
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个有趣的工具，用于排查持续崩溃的Pod，可以通过执行`oc debug deployment`或`oc debug deploymentconfig`命令来使用。通过这个命令，你可以指示OpenShift在Pod崩溃时不要失败并重启它。Pod将继续运行，你可以检查日志、访问Pod并在容器内部进行故障排除。要使用这个工具，请运行以下命令：
- en: '[PRE34]'
  id: totrans-196
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: Note
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: The `oc debug` command allows some interesting options, such as `--as-user`
    to run the pod with a defined user. To see a comprehensive list of allowed parameters
    and examples, run the `oc debug -h` command.
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: '`oc debug`命令提供了一些有趣的选项，例如使用`--as-user`以指定用户身份运行Pod。要查看允许的参数和示例的完整列表，请运行`oc
    debug -h`命令。'
- en: Operator logs
  id: totrans-199
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 操作符日志
- en: As we already covered in this book, OpenShift uses several operators to deploy
    and monitor critical features for the platform. That said, operators bring helpful
    logs to identify some configuration issues and instability with the platform.
    Those logs are stored in namespaces starting with the name `openshift-*`, which
    is a standard for most tools included with OpenShift.
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们在本书中已经提到的，OpenShift使用多个操作符来部署和监控平台的关键功能。也就是说，操作符会提供有用的日志，以帮助识别配置问题和平台不稳定性。这些日志存储在以`openshift-*`开头的命名空间中，这是OpenShift中大多数工具的标准做法。
- en: The reason to maintain several operator pods as a part of project pods is related
    to some affinity/anti-affinity rules and taints/toleration strategies that a user
    can apply to the cluster. Operator pods are the watchdog to maintain namespaces’
    health, watching the CRD, its standards, liveness, and readiness, and preventing
    OpenShift’s critical namespaces from suffering undesirable changes.
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 维护多个运维者 pod 作为项目 pod 的一部分，原因与用户可以应用于集群的某些亲和性/反亲和性规则以及污点/容忍策略有关。运维者 pod 是监视器，负责维持命名空间的健康，观察
    CRD 及其标准、存活性和就绪性，防止 OpenShift 的关键命名空间受到不良变化的影响。
- en: One of the main benefits of operators for the cluster’s stability is the ability
    to maintain the desired state of the operator namespace’s objects. In other words,
    if any unwanted changes are made by mistake directly into the namespace’s objects,
    they will be reverted by the operator itself. Every change in the operator’s objects
    needs to be done through the operator itself, by editing ConfigMaps or CR objects,
    according to the operator’s specification. That also means that any changes are
    checked and confirmed by operators before they are effectively applied.
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 运维者为集群稳定性带来的主要好处之一是能够维护运维者命名空间对象的期望状态。换句话说，如果直接对命名空间的对象做出任何不希望发生的更改，它们将被运维者本身恢复。运维者的对象的每次更改都必须通过运维者本身进行，方法是编辑
    ConfigMaps 或 CR 对象，按照运维者的规范进行。这也意味着，在这些更改被实际应用之前，它们会被运维者检查并确认。
- en: 'To check the cluster operators’ functions, you must do the following:'
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 要检查集群运维者的功能，你必须执行以下操作：
- en: 'List the cluster operators, like so:'
  id: totrans-204
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 列出集群运维者，如下所示：
- en: '[PRE35]'
  id: totrans-205
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE35]'
- en: 'Describe the details of the cluster operator, as follows:'
  id: totrans-206
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 描述集群运维者的详细信息，如下所示：
- en: '[PRE36]'
  id: totrans-207
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE36]'
- en: 'Here’s an example:'
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个示例：
- en: '[PRE37]'
  id: totrans-209
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: 'Check the status output for error messages, if they exist, like so:'
  id: totrans-210
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 检查状态输出中的错误信息（如果存在），如下所示：
- en: '[PRE38]'
  id: totrans-211
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE38]'
- en: In the previous example, only a warning message about setting up a default storage
    class for a cluster is shown. No critical issues were found at storage. In case
    of any issue, look at the events and pod logs in the operator’s namespace.
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 在之前的示例中，仅显示了关于为集群设置默认存储类的警告信息。存储方面没有发现严重问题。如有问题，请查看运维人员命名空间中的事件和 pod 日志。
- en: Other oc CLI commands and options
  id: totrans-213
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 其他 oc CLI 命令和选项：
- en: 'The `oc` CLI has some other powerful commands for troubleshooting. Some useful
    and powerful commands for troubleshooting are listed here:'
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: '`oc` CLI 还有一些其他强大的命令用于故障排除。以下是一些有用且强大的故障排除命令：'
- en: 'Here’s an example command for high-verbosity logs:'
  id: totrans-215
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这是一个用于高详细日志的示例命令：
- en: '[PRE39]'
  id: totrans-216
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE39]'
- en: 'And here’s one for cluster events:'
  id: totrans-217
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这是一个用于集群事件的例子：
- en: '[PRE40]'
  id: totrans-218
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE40]'
- en: 'Here, you can see an example command for namespaced events:'
  id: totrans-219
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这里，你可以看到一个关于命名空间事件的示例命令：
- en: '[PRE41]'
  id: totrans-220
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE41]'
- en: 'Here’s how to execute a single command inside the pod (double dash required):'
  id: totrans-221
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 以下是在 pod 中执行单个命令的方式（需要双破折号）：
- en: '[PRE42]'
  id: totrans-222
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE42]'
- en: 'Here’s how to execute a single command inside a pod in a specific container
    (double dash required):'
  id: totrans-223
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 以下是在特定容器中执行单个命令的方式（需要双破折号）：
- en: '[PRE43]'
  id: totrans-224
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE43]'
- en: 'Create iterative commands spawning a pseudo-terminal, like so:'
  id: totrans-225
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建迭代命令以生成伪终端，如下所示：
- en: '[PRE44]'
  id: totrans-226
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE44]'
- en: 'Similar to the `exec` command, `rsh`—shown here—opens a terminal inside the
    pod:'
  id: totrans-227
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 类似于`exec`命令，`rsh`—如这里所示—在 pod 内打开一个终端：
- en: '[PRE45]'
  id: totrans-228
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE45]'
- en: 'All of the previous commands help you to identify problems in a cluster or
    even an application. Furthermore, you can investigate the node directly using
    the `oc debug` command, like so:'
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 所有前述命令都可以帮助你识别集群或甚至应用程序中的问题。此外，你还可以使用`oc debug`命令直接检查节点，如下所示：
- en: '[PRE46]'
  id: totrans-230
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: 'The `oc debug` command gives you non-root privilege access, and you cannot
    run many OS commands without escalation. To do so, we recommend you run the `chroot`
    command, like so. After that, you can regularly use OS shell commands:'
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: '`oc debug`命令为你提供了非根用户权限访问，且在没有提升权限的情况下，你无法运行许多操作系统命令。为此，我们建议你运行`chroot`命令，如下所示。之后，你可以正常使用操作系统的
    shell 命令：'
- en: '[PRE47]'
  id: totrans-232
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: As you can see, OpenShift has a lot of useful debugging commands to help you
    identify cluster-wide or scoped issues. It is not recommended, but it is possible
    to also directly `ssh` on nodes. This kind of approach requires good knowledge
    of the *Red Hat CoreOS* OS, `podman`, and `crio` to avoid node disruption.
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 正如你所看到的，OpenShift 有许多有用的调试命令，可以帮助你识别集群范围或特定范围的问题。虽然不推荐，但也可以直接通过`ssh`连接到节点。这种方式需要对*Red
    Hat CoreOS*操作系统、`podman`和`crio`有很好的了解，以避免节点中断。
- en: In any situation, we also recommend you open a support ticket with Red Hat,
    which will assist and give you the right guidance to solve your problem. The Red
    Hat support team often asks for the result of the `must-gather` command, which
    generates a temporary pod and concatenates meaningful logs and configurations
    that are useful for the Red Hat engineering team to analyze and correlate events
    and find the issue or root cause.
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 在任何情况下，我们还建议你向 Red Hat 提交支持票，Red Hat 将为你提供指导，帮助你解决问题。Red Hat 支持团队通常会要求提供 `must-gather`
    命令的结果，该命令会生成一个临时 pod，并将有意义的日志和配置串联起来，供 Red Hat 工程团队分析、关联事件，并找出问题或根本原因。
- en: 'The most common way to run `must-gather` is shown here:'
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 运行 `must-gather` 的最常见方法如下所示：
- en: '[PRE48]'
  id: totrans-236
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: This will create a `tar` file under the chosen directory with all logs collected,
    which can be very useful to identify problems. We suggest you always run this
    command and upload it when you are opening the support ticket to speed up the
    process of analyzing the issue.
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 这将在选定目录下创建一个 `tar` 文件，包含所有收集的日志，这对于识别问题非常有用。我们建议你在打开支持票时始终运行此命令并上传它，以加快问题分析的过程。
- en: In this section, you saw different debug approaches that will certainly help
    you in everyday life. In the next section, you will see the most common error
    messages that occur at pod startup, and in this way, you will be able to draw
    your own line of reasoning that will help you in the problem solution.
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，你看到了不同的调试方法，它们肯定会在日常生活中对你有所帮助。在下一节中，你将看到 pod 启动时最常见的错误消息，通过这些信息，你将能够形成自己的推理方法，帮助你解决问题。
- en: Understanding misleading error messages
  id: totrans-239
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解误导性错误信息
- en: Even if you have learned the different ways to identify a problem, it is not
    unusual that the error shown does not provide enough information to help you to
    detect the issue and fix it. Having that in mind, we decided to highlight some
    very common error messages in this section and also some suggestions to solve
    the problem.
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 即使你已经学会了识别问题的不同方式，错误信息有时也不足以帮助你定位问题并修复它。考虑到这一点，我们决定在本节中突出一些非常常见的错误消息，并提供一些解决问题的建议。
- en: ImagePullBackOff
  id: totrans-241
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: ImagePullBackOff
- en: 'This is a common error related to a missing container image. Check out the
    following lines of code to become familiarized with this kind of issue when you
    face it:'
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个常见的与缺失容器镜像相关的错误。查看以下代码行，了解当你遇到这种问题时如何处理：
- en: '[PRE49]'
  id: totrans-243
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
- en: 'Here’s a message that may come up when investigating the pod log:'
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 这是你在调查 pod 日志时可能出现的消息：
- en: '[PRE50]'
  id: totrans-245
  prefs: []
  type: TYPE_PRE
  zh: '[PRE50]'
- en: Looking at the error message, it is typically linked to the absence of the image
    in the registry. This can occur due to some problems, such as the image and its
    tags not being available in the registry, or incorrect pointing in the **deployment/deployment
    config**. Another correlation would be the node where the pod is running is not
    able to reach the image registry.
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: 从错误消息来看，它通常与镜像在镜像库中缺失有关。这可能是由于一些问题导致的，例如镜像及其标签在镜像库中不可用，或者在**部署/部署配置**中指向不正确。另一种可能是
    pod 运行的节点无法访问镜像库。
- en: CrashLoopBackOff
  id: totrans-247
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: CrashLoopBackOff
- en: 'This is an error that requires some knowledge before acting on solving it effectively.
    It occurs because the application crashes constantly, so the root cause issue
    can be due to several different reasons. You can see an example of this here:'
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个需要一定知识才能有效解决的错误。它发生是因为应用程序不断崩溃，因此根本原因可能有多个不同的原因。你可以在这里看到一个示例：
- en: '[PRE51]'
  id: totrans-249
  prefs: []
  type: TYPE_PRE
  zh: '[PRE51]'
- en: 'Here’s a message you may see when investigating the pod log:'
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 这是你在调查 pod 日志时可能看到的消息：
- en: '[PRE52]'
  id: totrans-251
  prefs: []
  type: TYPE_PRE
  zh: '[PRE52]'
- en: The log usually gives you some hints about the issue’s root cause, but it can
    also be a trap to conduct you to a wrong conclusion. It is important to take into
    account when a pod has a persistent volume or it has a precedence order that depends
    on another application to start first and prepare a persistent volume, as well
    as many other different scenarios that can lead to this error.
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: 日志通常会给出一些有关问题根本原因的提示，但它也可能是一个陷阱，引导你得出错误的结论。需要考虑的是，当一个 pod 拥有持久卷，或者它有一个依赖于其他应用程序先启动并准备持久卷的优先顺序时，以及许多其他可能导致此错误的不同场景。
- en: Init:0/1
  id: totrans-253
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Init:0/1
- en: 'When you get an `Init:0/1` error message, it typically means the pod is waiting
    for another pod or a condition that hasn’t been satisfied yet. The following lines
    of code demonstrate what kinds of conditions can result from this message and
    how to solve this:'
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: 当您收到`Init:0/1`错误消息时，通常意味着 Pod 正在等待另一个 Pod 或尚未满足的条件。以下代码行演示了可能导致此消息的条件，并说明如何解决：
- en: '[PRE53]'
  id: totrans-255
  prefs: []
  type: TYPE_PRE
  zh: '[PRE53]'
- en: 'Here’s a message you may see when investigating the pod log:'
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: 这是您在调查 Pod 日志时可能看到的一条消息：
- en: '[PRE54]'
  id: totrans-257
  prefs: []
  type: TYPE_PRE
  zh: '[PRE54]'
- en: This, perhaps, can be a confusing status when you are troubleshooting error
    messages. Certainly, it can be anything wrong in the namespace, so the error message
    only shows `PodInitializing`. You could interpret it as a condition when a pod
    is waiting to start; meanwhile, this message means that a condition isn’t satisfied.
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个可能会让您在故障排除错误消息时感到困惑的状态。显然，它可能是命名空间中的某些问题，因此错误消息仅显示`PodInitializing`。您可以将其解读为
    Pod 正在等待启动的条件；然而，这条消息意味着某个条件未得到满足。
- en: 'To help you, we have listed here some items that must be checked that may be
    preventing the pod from starting:'
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: 为了帮助您，我们在这里列出了一些必须检查的项，这些项可能会阻止 Pod 启动：
- en: Check whether the service account used in the pod exists in the namespace, as
    some containers need a specific service account name and policy applied to start.
  id: totrans-260
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 检查 Pod 中使用的服务帐户是否存在于命名空间中，因为某些容器需要特定的服务帐户名称和策略才能启动。
- en: Check the **security context constraints** (**SCCs**) and make sure that these
    are properly set according to the required permissions for the pod.
  id: totrans-261
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 检查**安全上下文约束**（**SCCs**），确保这些设置符合 Pod 所需的权限。
- en: 'Check other containers and pods in the namespace: depending on the build strategy,
    it is possible to define pod dependencies.'
  id: totrans-262
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 检查命名空间中的其他容器和 Pod：根据构建策略，可以定义 Pod 之间的依赖关系。
- en: If you are not familiar with SCC yet, don’t freak out. We will be covering it
    in depth in [*Chapter 8*](B18015_08.xhtml#_idTextAnchor153), *OpenShift Security*.
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您还不熟悉 SCC，请不要担心。我们将在[*第8章*](B18015_08.xhtml#_idTextAnchor153)中深入讲解，*OpenShift
    安全性*。
- en: Summary
  id: totrans-264
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we focused on important components of OpenShift, such as operators
    and their role in maintaining the resilience of a cluster, and we also talked
    about situations that can cause damage to the cluster.
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: 本章重点介绍了 OpenShift 的重要组件，如操作员及其在维护集群韧性中的作用，我们还讨论了可能对集群造成损害的情况。
- en: We have dived into the heart of OpenShift, which is its distributed database
    (known as etcd), understanding its importance in the cluster and how to prepare
    it to receive a high volume of traffic, as well as verifying its sizing and performance,
    and understanding how to perform troubleshooting in some cases.
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经深入探讨了 OpenShift 的核心部分，即其分布式数据库（称为 etcd），了解了它在集群中的重要性，以及如何准备它以接收大量流量，还验证了其大小和性能，并了解了在某些情况下如何进行故障排除。
- en: We have also discussed a bit about the AuthN and AuthZ process, so you now know
    the power and flexibility of the Openshift IDPs. We finally have seen some important
    troubleshooting tips and tools that will certainly help you in your daily job,
    operating OpenShift clusters and applications.
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还讨论了 AuthN 和 AuthZ 过程的一些内容，现在您已经了解了 OpenShift IDP 的强大和灵活性。最后，我们看到了几个重要的故障排除技巧和工具，它们肯定会帮助您在日常工作中操作
    OpenShift 集群和应用程序。
- en: In the next chapter, we will present some other important information about
    the network on OpenShift. We will discuss and give examples to understand the
    main differences between a pod network and a service network, as well as understand
    the difference between North-South and East-West traffic. Keep up with us in this
    interesting reading and learn more in [*Chapter 7*](B18015_07.xhtml#_idTextAnchor133),
    *OpenShift Network*.
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将介绍关于 OpenShift 网络的其他重要信息。我们将讨论并举例说明 Pod 网络和服务网络之间的主要区别，以及了解南北流量（North-South）和东西流量（East-West）的区别。请继续关注我们这篇有趣的文章，并在[*第7章*](B18015_07.xhtml#_idTextAnchor133)中了解更多内容，*OpenShift
    网络*。
- en: Further reading
  id: totrans-269
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 进一步阅读
- en: 'If you want to look at more information on what we covered in this chapter,
    check out the following references:'
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您想查看更多关于本章内容的信息，可以查阅以下参考资料：
- en: '*Red Hat Knowledgebase—etcd recommendation*: [https://access.redhat.com/solutions/4770281](https://access.redhat.com/solutions/4770281)'
  id: totrans-271
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*Red Hat 知识库——etcd 推荐*：[https://access.redhat.com/solutions/4770281](https://access.redhat.com/solutions/4770281)'
- en: '*etcd quorum model*: [https://etcd.io/docs/v3.5/faq/](https://etcd.io/docs/v3.5/faq/)'
  id: totrans-272
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*etcd 委员会模型*：[https://etcd.io/docs/v3.5/faq/](https://etcd.io/docs/v3.5/faq/)'
- en: '*Understanding etcd quorum*: [http://thesecretlivesofdata.com/raft/](http://thesecretlivesofdata.com/raft/)'
  id: totrans-273
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*理解 etcd 的仲裁机制*: [http://thesecretlivesofdata.com/raft/](http://thesecretlivesofdata.com/raft/)'
- en: '*etcd hardware sizing recommendations*: [https://etcd.io/docs/v3.5/op-guide/hardware/](https://etcd.io/docs/v3.5/op-guide/hardware/)'
  id: totrans-274
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*etcd 硬件规格建议*: [https://etcd.io/docs/v3.5/op-guide/hardware/](https://etcd.io/docs/v3.5/op-guide/hardware/)'
- en: '*etcd tuning options*: [https://etcd.io/docs/v3.5/tuning/](https://etcd.io/docs/v3.5/tuning/)'
  id: totrans-275
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*etcd 调优选项*: [https://etcd.io/docs/v3.5/tuning/](https://etcd.io/docs/v3.5/tuning/)'
- en: '*etcd benchmarking thresholds*: [https://etcd.io/docs/v3.5/benchmarks/](https://etcd.io/docs/v3.5/benchmarks/)'
  id: totrans-276
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*etcd 基准测试阈值*: [https://etcd.io/docs/v3.5/benchmarks/](https://etcd.io/docs/v3.5/benchmarks/)'
- en: '*etcd benchmark CLI tool*: [https://etcd.io/docs/v3.5/op-guide/performance/#benchmarks](https://etcd.io/docs/v3.5/op-guide/performance/#benchmarks)'
  id: totrans-277
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*etcd 基准测试 CLI 工具*: [https://etcd.io/docs/v3.5/op-guide/performance/#benchmarks](https://etcd.io/docs/v3.5/op-guide/performance/#benchmarks)'
- en: '*Kubernetes authentication flow*: [https://kubernetes.io/docs/reference/access-authn-authz/authentication/](https://kubernetes.io/docs/reference/access-authn-authz/authentication/)'
  id: totrans-278
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*Kubernetes 身份验证流程*: [https://kubernetes.io/docs/reference/access-authn-authz/authentication/](https://kubernetes.io/docs/reference/access-authn-authz/authentication/)'
- en: '*Openshift IDPs*: [https://docs.openshift.com/container-platform/4.7/authentication/understanding-identity-provider.html](https://docs.openshift.com/container-platform/4.7/authentication/understanding-identity-provider.html)'
  id: totrans-279
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*Openshift 身份提供者（IDP）*: [https://docs.openshift.com/container-platform/4.7/authentication/understanding-identity-provider.html](https://docs.openshift.com/container-platform/4.7/authentication/understanding-identity-provider.html)'
- en: '*Learn more about SCCs*: [https://docs.openshift.com/container-platform/4.8/authentication/managing-security-context-constraints.html](https://docs.openshift.com/container-platform/4.8/authentication/managing-security-context-constraints.html)'
  id: totrans-280
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*了解更多关于 SCC 的信息*: [https://docs.openshift.com/container-platform/4.8/authentication/managing-security-context-constraints.html](https://docs.openshift.com/container-platform/4.8/authentication/managing-security-context-constraints.html)'
- en: '*More information about troubleshooting*: [https://docs.openshift.com/container-platform/4.7/support/troubleshooting/investigating-pod-issues.html](https://docs.openshift.com/container-platform/4.7/support/troubleshooting/investigating-pod-issues.html)'
  id: totrans-281
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*更多关于故障排除的信息*: [https://docs.openshift.com/container-platform/4.7/support/troubleshooting/investigating-pod-issues.html](https://docs.openshift.com/container-platform/4.7/support/troubleshooting/investigating-pod-issues.html)'
- en: '*Recommended etcd practices*: [https://docs.openshift.com/container-platform/4.10/scalability_and_performance/recommended-host-practices.html#recommended-etcd-practices_recommended-host-practices](https://docs.openshift.com/container-platform/4.10/scalability_and_performance/recommended-host-practices.html#recommended-etcd-practices_recommended-host-practices)'
  id: totrans-282
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*推荐的 etcd 实践*: [https://docs.openshift.com/container-platform/4.10/scalability_and_performance/recommended-host-practices.html#recommended-etcd-practices_recommended-host-practices](https://docs.openshift.com/container-platform/4.10/scalability_and_performance/recommended-host-practices.html#recommended-etcd-practices_recommended-host-practices)'
- en: '*How to calculate IOPS in a storage array (blog article)*: [https://www.techrepublic.com/article/calculate-iops-in-a-storage-array/](https://www.techrepublic.com/article/calculate-iops-in-a-storage-array/)'
  id: totrans-283
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*如何计算存储阵列中的 IOPS（博客文章）*: [https://www.techrepublic.com/article/calculate-iops-in-a-storage-array/](https://www.techrepublic.com/article/calculate-iops-in-a-storage-array/)'
