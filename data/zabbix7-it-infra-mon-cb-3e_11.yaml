- en: '11'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '11'
- en: Maintaining Your Zabbix Setup
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 维护你的 Zabbix 设置
- en: Like any good piece of software, Zabbix needs to be maintained in order to keep
    working over the years. A lot of users have been running their setups since the
    days of Zabbix 2.0\. It’s perfectly viable to do this if you bring the right knowledge
    of Zabbix to the equation.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 就像任何一款优秀的软件一样，Zabbix 也需要维护，以便它能够多年持续运行。许多用户从 Zabbix 2.0 时代起就一直在使用他们的设置。如果你具备正确的
    Zabbix 知识，这种做法完全是可行的。
- en: In this chapter, we are going to see how to do some of the most important parts
    of Zabbix maintenance to make sure you can keep your setup available and running
    smoothly. We are going to cover creating maintenance periods, how to make backups,
    how to upgrade Zabbix and various Zabbix components, and how to do some performance
    maintenance.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一章中，我们将了解如何进行一些最重要的 Zabbix 维护工作，以确保你能够保持设置的可用性并顺利运行。我们将覆盖如何创建维护周期、如何备份、如何升级
    Zabbix 及其各种组件，并进行一些性能维护。
- en: 'We’ll cover these in the following recipes:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在接下来的教程中讨论这些内容：
- en: Setting Zabbix maintenance periods
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设置 Zabbix 维护周期
- en: Backing up your Zabbix setup
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 备份你的 Zabbix 设置
- en: Upgrading the Zabbix backend from older PHP versions to PHP 8.2 or higher
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将 Zabbix 后端从较旧的 PHP 版本升级到 PHP 8.2 或更高版本
- en: Upgrading a Zabbix database from older MariaDB versions to MariaDB 10.11
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将 Zabbix 数据库从较旧的 MariaDB 版本升级到 MariaDB 10.11
- en: Upgrading your Zabbix setup
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 升级你的 Zabbix 设置
- en: Maintaining Zabbix performance over time
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 随着时间推移维护 Zabbix 性能
- en: Technical requirements
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: We are going to need several important servers for these recipes. First of all,
    we are going to need a running Zabbix 7 server for which to set up maintenance
    periods and do performance tuning.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将需要几个重要的服务器来完成这些教程。首先，我们需要一台运行 Zabbix 7 服务器，用于设置维护周期并进行性能调优。
- en: 'For the upgrade part, we will need one of the following servers:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 对于升级部分，我们将需要以下之一的服务器：
- en: A Rocky Linux 8 server running Zabbix server 6, a PHP version before 8.2, and
    a MariaDB version before 11.4
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一台运行 Zabbix 服务器 6、PHP 版本低于 8.2、MariaDB 版本低于 11.4 的 Rocky Linux 8 服务器
- en: An Ubuntu 22.04 server running Zabbix server 6 a PHP version before 8.3, and
    a MariaDB version before 11.4
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一台运行 Zabbix 服务器 6、PHP 版本低于 8.3、MariaDB 版本低于 11.4 的 Ubuntu 22.04 服务器
- en: I will call the upgrade server `lar-book-zbx6`, which you can run with a distribution
    of your choice.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 我将把升级服务器命名为 `lar-book-zbx6`，你可以使用任何你选择的发行版运行它。
- en: If you do not have any prior experience with Zabbix, this chapter may prove
    a good challenge, as we are going to go into the more advanced Zabbix processes
    in depth.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你之前没有使用过 Zabbix，这一章可能会是一个不错的挑战，因为我们将深入探讨 Zabbix 中一些更高级的过程。
- en: Setting Zabbix maintenance periods
  id: totrans-18
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置 Zabbix 维护周期
- en: When we are working on our Zabbix server or on other hosts, it’s super useful
    to set up maintenance periods in the Zabbix frontend. With maintenance periods
    we can make sure that our Zabbix users don’t get alerts going off because of our
    maintenance. One improvement you’ll find in Zabbix 7 is the inclusion of near-instant
    maintenance periods. As we no longer have to wait long for the config cache reload,
    Zabbix also altered the timer process to instantly enable a new maintenance period.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们在处理 Zabbix 服务器或其他主机时，设置 Zabbix 前端的维护周期非常有用。通过维护周期，我们可以确保在维护期间不会触发警报。在 Zabbix
    7 中，您会发现一个改进，即引入了近乎即时的维护周期。由于我们不再需要等待很长时间才能重新加载配置缓存，Zabbix 还调整了定时器流程，可以即时启用新的维护周期。
- en: Let’s see how we can schedule maintenance periods in this recipe.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看如何在这个教程中安排维护周期。
- en: Getting ready
  id: totrans-21
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: All we are going to need in this recipe is our Zabbix server, for which I’ll
    use `lar-book-rocky`. The server will need at least some hosts and host groups
    to create maintenance periods for. Furthermore, we’ll need to know how to navigate
    the Zabbix frontend.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 在本教程中，我们只需要我们的 Zabbix 服务器，我将使用 `lar-book-rocky`。该服务器至少需要一些主机和主机组，以便为其创建维护周期。此外，我们需要了解如何导航
    Zabbix 前端。
- en: How to do it…
  id: totrans-23
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作……
- en: Let’s get started with this recipe by logging in to our frontend and navigating
    to **Data collection** | **Maintenance**.
  id: totrans-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们通过登录前端并导航到**数据采集** | **维护**，开始这个教程。
- en: We are going to click on the blue **Create maintenance period** button in the
    top-right corner.
  id: totrans-25
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们将点击右上角的蓝色**创建维护周期**按钮。
- en: 'This will show us a popup, where we can set up our maintenance period. Let’s
    start by defining the maintenance period parameters. Fill in the following:'
  id: totrans-26
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这将显示一个弹出窗口，在其中我们可以设置我们的维护周期。让我们从定义维护周期参数开始。填写以下内容：
- en: '![Figure 11.1 – Zabbix Data collection | Maintenance, create maintenance window,
    Patch Tuesday](img/B19803_11_01.jpg)'
  id: totrans-27
  prefs: []
  type: TYPE_IMG
  zh: '![图 11.1 – Zabbix 数据收集 | 维护，创建维护窗口，Patch Tuesday](img/B19803_11_01.jpg)'
- en: Figure 11.1 – Zabbix Data collection | Maintenance, create maintenance window,
    Patch Tuesday
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11.1 – Zabbix 数据收集 | 维护，创建维护窗口，Patch Tuesday
- en: Now, at the **Periods** part, we’ll create a new maintenance period. We need
    to click on the underlined **Add** text.
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，在**周期**部分，我们将创建一个新的维护周期。我们需要点击下划线的**添加**文本。
- en: 'This will bring us to another pop-up window where we can set the maintenance
    period. We need to fill in the following information:'
  id: totrans-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这将带我们到另一个弹出窗口，在那里我们可以设置维护周期。我们需要填写以下信息：
- en: '![Figure 11.2 – Zabbix Data collection | Maintenance, create maintenance period
    window, Patch Tuesday](img/B19803_11_02.jpg)'
  id: totrans-31
  prefs: []
  type: TYPE_IMG
  zh: '![图 11.2 – Zabbix 数据收集 | 维护，创建维护周期窗口，Patch Tuesday](img/B19803_11_02.jpg)'
- en: Figure 11.2 – Zabbix Data collection | Maintenance, create maintenance period
    window, Patch Tuesday
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11.2 – Zabbix 数据收集 | 维护，创建维护周期窗口，Patch Tuesday
- en: 'Now click the blue **Add** button to continue. You should now see that our
    maintenance period is filled in:'
  id: totrans-33
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在点击蓝色的**添加**按钮继续。你现在应该能看到我们的维护周期已经填写完成：
- en: '![Figure 11.3 – Zabbix Configuration | Maintenance, create maintenance period
    page, Patch Tuesday](img/B19803_11_03.jpg)'
  id: totrans-34
  prefs: []
  type: TYPE_IMG
  zh: '![图 11.3 – Zabbix 配置 | 维护，创建维护周期页面，Patch Tuesday](img/B19803_11_03.jpg)'
- en: Figure 11.3 – Zabbix Configuration | Maintenance, create maintenance period
    page, Patch Tuesday
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11.3 – Zabbix 配置 | 维护，创建维护周期页面，Patch Tuesday
- en: 'Now, next to the **Host groups** field, click on the **Select** button and
    select the **Linux servers** host group. Our page should look like this:'
  id: totrans-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，在**主机组**字段旁边，点击**选择**按钮，选择**Linux 服务器**主机组。我们的页面应该看起来像这样：
- en: '![Figure 11.4 – Zabbix Configuration | Maintenance, add hosts to maintenance
    page, Patch Tuesday](img/B19803_11_04.jpg)'
  id: totrans-37
  prefs: []
  type: TYPE_IMG
  zh: '![图 11.4 – Zabbix 配置 | 维护，添加主机到维护页面，Patch Tuesday](img/B19803_11_04.jpg)'
- en: Figure 11.4 – Zabbix Configuration | Maintenance, add hosts to maintenance page,
    Patch Tuesday
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11.4 – Zabbix 配置 | 维护，添加主机到维护页面，Patch Tuesday
- en: You can still add a **Description** if you’d like.
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果你愿意，仍然可以添加一个**描述**。
- en: Next, click on the blue **Add** button at the bottom of the page to finish creating
    the maintenance period. This will bring us back to our **Maintenance periods**
    page, where we should see that our maintenance window has been created.
  id: totrans-40
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，点击页面底部的蓝色**添加**按钮，完成创建维护周期。这将带我们回到**维护周期**页面，在那里我们应该能看到我们的维护窗口已经创建成功。
- en: How it works…
  id: totrans-41
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的…
- en: When configuring actions in Zabbix, we tell Zabbix to do a certain defined operation
    when a trigger is fired. Maintenance periods (with data collection) work by suppressing
    these Zabbix operations for the time period defined in the maintenance period.
    We do this to make sure that no Zabbix users are notified of any problems going
    on as maintenance is being done on a host. Of course, it’s a good idea to only
    use this during the time that we are actually working on the hosts in question.
    This only works if the **Pause operations for suppressed problems** checkbox is
    ticked on the action, though.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Zabbix 中配置操作时，我们告诉 Zabbix 在触发器被触发时执行某个定义的操作。维护周期（带数据收集）通过在维护周期定义的时间段内抑制这些
    Zabbix 操作来工作。我们这样做是为了确保在进行主机维护时，Zabbix 用户不会收到任何关于问题的通知。当然，最好只在我们实际在相关主机上工作时使用此功能。不过，只有在操作上勾选了**暂停被抑制问题的操作**复选框时，这才有效。
- en: In the case of this recipe, we’ve created a recurring maintenance period (with
    data collection) for the entire year of 2023\. Let’s say the organization we’re
    working for has a lot of Linux hosts that need to be patched weekly. We set up
    the maintenance period to recur weekly every Tuesday between 22:00 and 04:00.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个示例中，我们已经为 2023 年整个年度创建了一个定期维护周期（带数据收集）。假设我们工作的组织有许多 Linux 主机，每周需要进行补丁更新。我们将维护周期设置为每周二晚上
    22:00 到次日凌晨 04:00 之间重复。
- en: Now keep in mind that after December 31, 2023, Zabbix will stop this maintenance
    period as it won’t be active any longer. We have two time/date values to bear
    in mind when setting up scheduled maintenance. The **Active since**/**Active till**
    time/date value of the maintenance period and the **Periods** time/date value
    of the maintenance period. This allows us to create more flexible periods, along
    with recurring ones as we just did.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，2023 年 12 月 31 日后，Zabbix 将停止此维护期，因为它将不再处于活动状态。在设置计划维护时，我们需要牢记两个时间/日期值。一个是维护期的
    **Active since**/**Active till** 时间/日期值，另一个是 **Periods** 时间/日期值。这让我们可以创建更灵活的维护期，以及像我们刚才做的那样的定期维护期。
- en: Also, note that this maintenance period is `nodata` trigger function is also
    affected by maintenance and it won’t fire in both situations.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 另外，请注意，`nodata` 触发功能也会受到维护期的影响，在这两种情况下它都不会触发。
- en: Backing up your Zabbix setup
  id: totrans-46
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 备份你的 Zabbix 配置
- en: Before working on any Zabbix setup, it is vital to make a backup of everything
    important. In this recipe, we will go through some of the most important steps
    you should always take before doing maintenance on your Zabbix setup.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 在进行任何 Zabbix 配置之前，备份所有重要内容至关重要。在本教程中，我们将介绍在对 Zabbix 配置进行维护之前，应该始终采取的一些最重要的步骤。
- en: Getting ready
  id: totrans-48
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: We are going to need our Zabbix server, for which I’ll use `lar-book-rocky`.
    Make sure to get the CLI to the server ready, as this whole recipe will use the
    Linux CLI.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要 Zabbix 服务器，对于此我将使用 `lar-book-rocky`。确保准备好 CLI 连接到服务器，因为整个过程将使用 Linux CLI。
- en: How to do it…
  id: totrans-50
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作……
- en: 'Let’s start by logging in to our Zabbix server via the Linux CLI and create
    some new directories that we are going to use for our Zabbix backups. Preferably,
    this directory would be on another partition:'
  id: totrans-51
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，通过 Linux CLI 登录到我们的 Zabbix 服务器，并创建一些新的目录，我们将用于 Zabbix 备份。最好将这个目录放在另一个分区上：
- en: '[PRE0]'
  id: totrans-52
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'It’s important to back up all of our Zabbix configuration data, which is located
    at **/etc/zabbix/**. We can manually copy the data from our current folder to
    our new backup folder by issuing the following command:'
  id: totrans-53
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 备份我们所有的 Zabbix 配置数据非常重要，这些数据位于 **/etc/zabbix/**。我们可以通过执行以下命令手动将数据从当前文件夹复制到新的备份文件夹：
- en: '[PRE1]'
  id: totrans-54
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Now, let’s do the same for our **nginx** configuration:'
  id: totrans-55
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们对 **nginx** 配置做同样的操作：
- en: '[PRE2]'
  id: totrans-56
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Important note
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 重要说明
- en: Please note that if you are using Apache, your web configuration location might
    be different. Adjust your command accordingly. For Red Hat-based systems it’s
    usually **/etc/httpd** and for Debian-based systems, **/etc/apache2**.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，如果你使用的是 Apache，Web 配置的位置可能会有所不同。请根据需要调整你的命令。对于基于 Red Hat 的系统，通常是 **/etc/httpd**，对于基于
    Debian 的系统，通常是 **/etc/apache2**。
- en: 'It’s also important to keep our Zabbix PHP files and binaries backed up. We
    can do that using the following commands:'
  id: totrans-59
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 备份我们的 Zabbix PHP 文件和二进制文件也很重要。我们可以使用以下命令来完成：
- en: '[PRE3]'
  id: totrans-60
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Lastly, let’s make sure to also back up the Zabbix files in **/usr/lib**:'
  id: totrans-61
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，确保也备份 **/usr/lib** 中的 Zabbix 文件：
- en: '[PRE4]'
  id: totrans-62
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'We could also create a cronjob to automatically compress and back up these
    files for us every day at **00:00**. Simply issue the following command:'
  id: totrans-63
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们还可以创建一个 cronjob，每天 **00:00** 自动压缩并备份这些文件。只需执行以下命令：
- en: '[PRE5]'
  id: totrans-64
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'And add the following information:'
  id: totrans-65
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 并添加以下信息：
- en: '[PRE6]'
  id: totrans-66
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: These are all of the most important files we need to back up from our Zabbix
    stack. Let’s move on to our database. We could now additionally use a rotation
    tool such as **logrotate** to manage our files.
  id: totrans-67
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这些是我们需要从 Zabbix 堆栈中备份的最重要文件。接下来，我们处理数据库。我们现在还可以使用像 **logrotate** 这样的轮换工具来管理我们的文件。
- en: 'Backing up our database is quite easy. We can simply use the built-in tools
    provided by MySQL and PostgreSQL. Issue the following command for your respective
    database (make sure to fill in the right username, database name, and password):'
  id: totrans-68
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 备份我们的数据库非常简单。我们可以直接使用 MySQL 和 PostgreSQL 提供的内置工具。为你的相应数据库执行以下命令（确保填写正确的用户名、数据库名和密码）：
- en: 'For MySQL databases:'
  id: totrans-69
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对于 MySQL 数据库：
- en: '[PRE7]'
  id: totrans-70
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'For PostgreSQL databases:'
  id: totrans-71
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对于 PostgreSQL 数据库：
- en: '[PRE8]'
  id: totrans-72
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Make sure to add the right location, as the database dump will be quite large
    if the database itself is large. Preferably, dump to another disk/partition or
    even better, another machine. As such, **/opt/** might not be the best location.
  id: totrans-73
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确保添加正确的位置，因为如果数据库本身很大，数据库转储将会非常庞大。最好将其转储到另一个磁盘/分区，甚至更好的是，转储到另一台机器上。因此，**/opt/**
    可能不是最佳位置。
- en: 'We can also do this with a cronjob by issuing the following command:'
  id: totrans-74
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们还可以通过设置一个 cronjob，执行以下命令来实现：
- en: '[PRE9]'
  id: totrans-75
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Then for MySQL, add the following line where **-u** is the username, **-p**
    is the password, and the database name is **zabbix**. This is the command for
    MySQL:'
  id: totrans-76
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后对于MySQL，添加以下行，其中**-u**是用户名，**-p**是密码，数据库名是**zabbix**。这是MySQL的命令：
- en: '[PRE10]'
  id: totrans-77
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'If you want to back up a PostgreSQL database with a cronjob, we will need to
    create a file in our user’s home directory:'
  id: totrans-78
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果你想通过cronjob备份PostgreSQL数据库，我们需要在用户的主目录中创建一个文件：
- en: '[PRE11]'
  id: totrans-79
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'We add the following to this file, where **zabbixuser** is the username and
    **zabbixdb** is the database name:'
  id: totrans-80
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们将以下内容添加到此文件中，其中**zabbixuser**是用户名，**zabbixdb**是数据库名：
- en: '[PRE12]'
  id: totrans-81
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Then we can add a cronjob for PostgreSQL as follows:'
  id: totrans-82
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后我们可以为PostgreSQL添加一个cronjob，如下所示：
- en: '[PRE13]'
  id: totrans-83
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'We can also add a cronjob to only keep a certain number of days’ worth of backups.
    Issue the following command:'
  id: totrans-84
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们还可以添加一个cronjob，只保留一定天数的备份。运行以下命令：
- en: '[PRE14]'
  id: totrans-85
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'Then add the following line, where **+60** is the number of days you want to
    keep backups for:'
  id: totrans-86
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后添加以下行，其中**+60**是你希望保留备份的天数：
- en: '[PRE15]'
  id: totrans-87
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE15]'
- en: That concludes our demonstration of backing up our Zabbix components the easy
    way.
  id: totrans-88
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这就结束了我们展示的以简便方式备份Zabbix组件的过程。
- en: Important note
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: For MySQL databases, there are also tools such as ExtraBackup, and for Postgres
    we could use PGBarman. It’s never a bad idea to look into tools such as these
    to create backups for your system, but the built-in examples provided here can
    prove to be just as useful.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 对于MySQL数据库，也有ExtraBackup等工具，而对于Postgres，我们可以使用PGBarman。虽然这些工具可以用于为系统创建备份，但此处提供的内建示例同样非常实用。
- en: How it works…
  id: totrans-91
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的……
- en: 'A Zabbix setup consists of several components. We have the Zabbix frontend,
    Zabbix server, and Zabbix database. These components in this setup require different
    pieces of software to run on, as shown in the following diagram:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: Zabbix设置由多个组件组成。我们有Zabbix前端、Zabbix服务器和Zabbix数据库。这些组件在此设置中需要运行不同的软件，如下图所示：
- en: '![Figure 11.5 – Zabbix key components setup diagram](img/B19803_11_05.jpg)'
  id: totrans-93
  prefs: []
  type: TYPE_IMG
  zh: '![图11.5 – Zabbix关键组件设置图](img/B19803_11_05.jpg)'
- en: Figure 11.5 – Zabbix key components setup diagram
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 图11.5 – Zabbix关键组件设置图
- en: 'Looking at the preceding diagram, we can see that our Zabbix frontend runs
    on a web engine such as NGINX or Apache. We also need PHP to run our Zabbix web
    pages. This means that we have to back up two components:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 从前面的图表中，我们可以看到我们的Zabbix前端运行在NGINX或Apache等Web引擎上。我们还需要PHP来运行我们的Zabbix网页。这意味着我们需要备份两个组件：
- en: 'The web engine: NGINX, Apache, or another'
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Web引擎：NGINX、Apache或其他
- en: PHP
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: PHP
- en: 'The Zabbix server is the application designed by Zabbix, so we only need to
    back up one thing here: the **Zabbix server** **config files**.'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: Zabbix服务器是Zabbix设计的应用程序，所以我们这里只需备份一件事：**Zabbix服务器的配置文件**。
- en: 'Then last, but definitely not least, we need to make a backup of our database.
    The most common databases used are MySQL and PostgreSQL, so we only need to do
    one thing for this: **create a dump of the** **Zabbix database**.'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 最后但绝对重要的是，我们需要备份我们的数据库。最常用的数据库是MySQL和PostgreSQL，因此我们只需要做一件事：**创建Zabbix数据库的转储**。
- en: There’s more…
  id: totrans-100
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多……
- en: Backing up your Zabbix setup like this is one thing, but of course, it’s not
    everything. Make sure you take the correct backups of your Linux system using
    snapshots and other technologies.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 以这种方式备份Zabbix设置是一方面，但当然，这还不是全部。确保你使用快照和其他技术正确备份Linux系统。
- en: When you follow standard backup implementations, you should be prepared for
    any unforeseen circumstances with your Zabbix setup.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 当你遵循标准备份实施方案时，你应该为Zabbix设置中任何不可预见的情况做好准备。
- en: Upgrading the Zabbix backend from older PHP versions to PHP 8.2 or higher
  id: totrans-103
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将Zabbix后端从较旧的PHP版本升级到PHP 8.2或更高版本
- en: RHEL7, Ubuntu 20.04, and Debian 9 (Stretch) are no longer supported by Zabbix,
    thus our upgrade recipe no longer includes any information about the upgrade path
    from PHP versions before 7.2 to version 8.2 or higher. Newer Linux versions already
    ship with PHP8.0 or higher, which means that when we are upgrading a Zabbix setup
    from Zabbix version 6 to Zabbix 7, we can upgrade immediately.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: RHEL7、Ubuntu 20.04和Debian 9（Stretch）已不再受到Zabbix支持，因此我们的升级方案不再包括从PHP版本7.2之前升级到8.2或更高版本的任何信息。较新的Linux版本已随PHP8.0或更高版本一起发布，这意味着当我们将Zabbix设置从Zabbix
    6版本升级到Zabbix 7时，可以直接进行升级。
- en: The PHP requirement for Zabbix 7 is different than it was for Zabbix 6, meaning
    that if we are running PHP 7.2, we actually have a mandatory upgrade to do before
    we can run the latest Zabbix 7 release. I also like to work in a *future-proofing*
    kind of way, so in this recipe, we will go over how to upgrade PHP 7.2 to 8.2
    which is the latest supported version on RHEL8-based systems at the time of writing.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: Zabbix 7对PHP的要求与Zabbix 6不同，这意味着如果我们正在运行PHP 7.2，实际上在运行最新的Zabbix 7版本之前，我们必须进行强制性升级。我个人也倾向于以*面向未来*的方式工作，所以在本教程中，我们将讲解如何将PHP
    7.2升级到8.2，这是截至写作时在基于RHEL8的系统上支持的最新版本。
- en: Getting ready
  id: totrans-106
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: For this recipe, we will need our server installed with a RHEL8-based system,
    which will be running Zabbix server 6 with PHP version 7.2.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 对于本教程，我们需要的服务器是安装了基于RHEL8的系统，并运行Zabbix服务器6和PHP 7.2版本。
- en: Another possibility is that you have a server running a Debian-based distribution
    such as Ubuntu 20.04, Debian 11, or a newer version of those Linux distributions.
    These include PHP version 7.2 or higher by default.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 另一种可能是你有一台运行Debian系发行版（如Ubuntu 20.04、Debian 11或更高版本）服务器。这些系统默认包括PHP 7.2或更高版本。
- en: I will refer to both possible servers as `lar-book-zbx6` throughout this recipe.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 在本教程中，我将始终把两个可能的服务器称作`lar-book-zbx6`。
- en: Lastly, make sure to take backups of your system and read the release notes
    for the new version you’re installing.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，确保备份你的系统并阅读你正在安装的新版本的发布说明。
- en: How to do it…
  id: totrans-111
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: This recipe is split into two different sections, one for RHEL8-based systems
    and another for Ubuntu systems. We will start by going through the steps for RHEL8.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 本教程分为两个不同的部分，一个针对基于RHEL8的系统，另一个针对Ubuntu系统。我们将首先讲解RHEL8的步骤。
- en: RHEL8-based systems
  id: totrans-113
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 基于RHEL8的系统
- en: 'If you are already running PHP version 7.2 on a RHEL8-based system, the upgrade
    process is a bit simpler. Let’s check out how we can upgrade our `lar-book-zbx6`
    server in this scenario:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你已经在基于RHEL8的系统上运行PHP 7.2版本，升级过程会更简单。让我们看看在这种情况下如何升级我们的`lar-book-zbx6`服务器：
- en: 'First, always verify what PHP version we are running with the following command:'
  id: totrans-115
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，始终通过以下命令验证我们正在运行的PHP版本：
- en: '[PRE16]'
  id: totrans-116
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'If the version is older than 8.2, we can continue with the next step. We’ll
    execute the following:'
  id: totrans-117
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果版本低于8.2，我们可以继续执行下一步。我们将执行以下命令：
- en: '[PRE17]'
  id: totrans-118
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'This will show us something like the following screenshot:'
  id: totrans-119
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这将显示类似以下截图的内容：
- en: '![Figure 11.6 – RHEL8 DNF module list for PHP](img/B19803_11_06.jpg)'
  id: totrans-120
  prefs: []
  type: TYPE_IMG
  zh: '![图11.6 – RHEL8 DNF模块列表（PHP）](img/B19803_11_06.jpg)'
- en: Figure 11.6 – RHEL8 DNF module list for PHP
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 图11.6 – RHEL8 DNF模块列表（PHP）
- en: Unfortunately, on RHEL8, the latest stable PHP 8.3 version is not included in
    the DNF modules from AppStream. This means we will have to find an alternative
    route for RHEL8-based systems. If you want to install PHP 8.3 or higher, continue
    to *step 9*.
  id: totrans-122
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 不幸的是，在RHEL8上，最新稳定的PHP 8.3版本并未包含在来自AppStream的DNF模块中。这意味着我们必须为基于RHEL8的系统找到替代的解决方案。如果你想安装PHP
    8.3或更高版本，请继续到*步骤9*。
- en: 'Since PHP 8.2 is included in the AppStream list, reset your already available
    PHP modules:'
  id: totrans-123
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 由于PHP 8.2已包含在AppStream列表中，请重置你当前可用的PHP模块：
- en: '[PRE18]'
  id: totrans-124
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'Make sure to answer with **Y**. Then we will enable the latest PHP version
    with the following command:'
  id: totrans-125
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确保回答为**Y**。然后，我们将通过以下命令启用最新的PHP版本：
- en: '[PRE19]'
  id: totrans-126
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'Answer with **Y** again to enable PHP 8.2 and then we can upgrade our PHP version
    by using the following command:'
  id: totrans-127
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 再次回答**Y**以启用PHP 8.2，然后我们可以通过以下命令升级PHP版本：
- en: '[PRE20]'
  id: totrans-128
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE20]'
- en: Answer **Y** again and your PHP version will now be running the latest PHP 8.2
    version.
  id: totrans-129
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 再次回答**Y**，你的PHP版本现在将运行最新的PHP 8.2版本。
- en: If we cannot use the **dnf module enable** method to reach the version you want
    to install, we are going to have to rely on different means of getting PHP, the
    most popular route being the REMI repositories.
  id: totrans-130
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果我们无法使用**dnf module enable**方法来安装你想要的版本，我们将不得不依赖其他方式来获取PHP，最常见的方法是使用REMI仓库。
- en: 'Make sure your system is up to date with the following command:'
  id: totrans-131
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过以下命令确保系统是最新的：
- en: '[PRE21]'
  id: totrans-132
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'REMI depends on the EPEL repository, so we will have to add that first:'
  id: totrans-133
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: REMI依赖于EPEL仓库，所以我们需要首先添加EPEL仓库：
- en: '[PRE22]'
  id: totrans-134
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'After installing **epel-release**, make sure to exclude Zabbix from it. This
    ensures that Zabbix is only downloaded and updated from the official Zabbix repositories:'
  id: totrans-135
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装**epel-release**后，确保将Zabbix从中排除。这可以确保Zabbix仅从官方Zabbix仓库下载和更新：
- en: '[PRE23]'
  id: totrans-136
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE23]'
- en: '.Then we install the REMI repository with the following command:'
  id: totrans-137
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: .然后通过以下命令安装REMI仓库：
- en: '[PRE24]'
  id: totrans-138
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'Reset the PHP modules and enable the REMI PHP 8.3 version:'
  id: totrans-139
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 重置PHP模块并启用REMI PHP 8.3版本：
- en: '[PRE25]'
  id: totrans-140
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE25]'
- en: Enter **Y** or **Yes** everywhere during the installation procedure.
  id: totrans-141
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在安装过程中，随时输入 **Y** 或 **Yes**。
- en: 'Then, verify whether the upgrade was successful:'
  id: totrans-142
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，验证升级是否成功：
- en: '[PRE26]'
  id: totrans-143
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'Make sure to restart NGINX (or Apache) and **php-fpm**:'
  id: totrans-144
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确保重新启动 NGINX（或 Apache）和 **php-fpm**：
- en: '[PRE27]'
  id: totrans-145
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE27]'
- en: These steps have been tested on a Rocky Linux RHEL system, but they should work
    with any RHEL8-based system, be it in Stream or when it’s a full rebuild as with
    Alma Linux.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 这些步骤已在 Rocky Linux RHEL 系统上测试过，但它们应该适用于任何基于 RHEL8 的系统，无论是 Stream 版本还是像 Alma
    Linux 这样的完整重建版本。
- en: Consider upgrading to RHEL9-based systems for further support for newer versions
    of the PHP packages.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑升级到基于 RHEL9 的系统，以便支持 PHP 包的更新版本。
- en: Ubuntu systems
  id: totrans-148
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Ubuntu 系统
- en: 'Let’s upgrade to the latest version of PHP available on our Ubuntu system:'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们将 Ubuntu 系统升级到可用的最新版本 PHP：
- en: 'First, start by adding the PPA repository to our host with the following command:'
  id: totrans-150
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，通过以下命令将 PPA 仓库添加到我们的主机中：
- en: '[PRE28]'
  id: totrans-151
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'Now update the repositories with the following command:'
  id: totrans-152
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在通过以下命令更新仓库：
- en: '[PRE29]'
  id: totrans-153
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'On some installations, the key for the repository might not be available, in
    which case we might see an error reading **Key is not available**. We can fix
    this with the following command, where **PUB_KEY_HERE** is the key shown in the
    error:'
  id: totrans-154
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在某些安装中，仓库的密钥可能不可用，在这种情况下，我们可能会看到错误提示 **Key is not available**。我们可以通过以下命令修复此问题，其中
    **PUB_KEY_HERE** 是错误中显示的密钥：
- en: '[PRE30]'
  id: totrans-155
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'Now we can install PHP version 8.3 with the following command:'
  id: totrans-156
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们可以通过以下命令安装 PHP 8.3 版本：
- en: '[PRE31]'
  id: totrans-157
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'That’s it, the version of PHP should now be the one we want. Check the version
    of PHP with the following command:'
  id: totrans-158
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 就这样，PHP 版本现在应该是我们想要的版本。可以通过以下命令检查 PHP 版本：
- en: '[PRE32]'
  id: totrans-159
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE32]'
- en: How it works…
  id: totrans-160
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的……
- en: Because Zabbix 7 requires us to install PHP version 8.0 or higher, we need to
    upgrade the PHP version if we are still using PHP 7.2 for our Zabbix 6 install.
    It’s a different requirement than for Zabbix 6, making the upgrade process fairly
    long in some cases. If you are still running RHEL7, Ubuntu 20.04, or Debian 9
    (Stretch), then you will need to upgrade your Linux system first as well. Zabbix
    has dropped support for these older Linux versions in favor of installation simplicity
    in terms of package management, security, and support.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 因为 Zabbix 7 要求我们安装 PHP 8.0 或更高版本，如果我们仍然使用 PHP 7.2 来安装 Zabbix 6，就需要升级 PHP 版本。这是与
    Zabbix 6 的不同要求，因此在某些情况下升级过程可能会比较长。如果你仍然使用 RHEL7、Ubuntu 20.04 或 Debian 9（Stretch），那么也需要先升级你的
    Linux 系统。Zabbix 已停止支持这些较旧的 Linux 版本，以便简化软件包管理、安全性和支持。
- en: Now, it is still possible to run Zabbix on older Linux versions by building
    from sources, but it is not recommended.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 目前，仍然可以通过从源代码构建的方式在较旧的 Linux 版本上运行 Zabbix，但不推荐这么做。
- en: In this recipe, we did an upgrade from PHP 7.2 to PHP 8.2 or 8.3, which are
    some of the latest supported stable versions at the time of writing. Doing this
    upgrade will not break our current Zabbix server installation. As mentioned, this
    is a mandatory upgrade as PHP versions below 8.0 are too old to run Zabbix 7\.
    Even if the upgrade was optional, it is always good to consider running the latest
    stable release of software to make sure that we are ready for the future.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 在本配方中，我们将 PHP 从 7.2 升级到 PHP 8.2 或 8.3，这些是本文写作时支持的最新稳定版本。进行此升级不会破坏我们当前的 Zabbix
    服务器安装。如前所述，这是一个强制升级，因为 PHP 8.0 以下的版本已太旧，无法运行 Zabbix 7。即使升级是可选的，考虑运行最新的稳定软件版本总是好的，这样我们才能为未来做好准备。
- en: Now that we have upgraded PHP, we are ready to move on to upgrading the Zabbix
    database engine.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经升级了 PHP，可以继续升级 Zabbix 数据库引擎。
- en: Upgrading a Zabbix database from older MariaDB versions to MariaDB 11.4
  id: totrans-165
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将 Zabbix 数据库从旧版本的 MariaDB 升级到 MariaDB 11.4
- en: For our Zabbix 7 installation, we are going to need MariaDB 10.5 or a newer
    supported version, so, it is a good idea to keep your database version up to date.
    MariaDB regularly makes improvements to how it handles certain aspects of performance.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 对于我们的 Zabbix 7 安装，我们需要 MariaDB 10.5 或更高版本，因此保持数据库版本最新是个好主意。MariaDB 定期改进其处理某些性能方面的方式。
- en: This recipe details how to upgrade MariaDB to the latest stable LTS version,
    which is MariaDB 11.4 at the time of writing.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 本配方详细说明了如何将 MariaDB 升级到最新的稳定 LTS 版本，即本文写作时的 MariaDB 11.4。
- en: Getting ready
  id: totrans-168
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: For this recipe, we will need our server which we called `lar-book-zbx6`. At
    this point, the server is running a RHEL8-based distribution.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 对于本配方，我们需要我们的服务器，我们将其命名为 `lar-book-zbx6`。此时，服务器正在运行基于 RHEL8 的发行版。
- en: Another option is to have a server running a Debian-based distribution such
    as Ubuntu 22.04, Debian 12, or a newer version of those Linux distributions. We
    will be upgrading the MariaDB instance on this server to version 11.4.
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个选项是在运行 Debian-based 发行版（如 Ubuntu 22.04、Debian 12 或这些 Linux 发行版的更新版本）的服务器上。我们将升级此服务器上的
    MariaDB 实例到 11.4 版本。
- en: If you’ve followed the *Upgrading the Zabbix backend from older PHP versions
    to PHP 8.2 or higher* recipe, your server will now be running PHP version 8.2
    or higher. If not, it’s a good idea to follow that recipe first.
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您已经按照 *将 Zabbix 后端从较旧的 PHP 版本升级到 PHP 8.2 或更高版本* 文档操作，则您的服务器现在将运行 PHP 版本 8.2
    或更高版本。如果没有，请首先按照该文档操作是个好主意。
- en: Also, make sure to take backups of your system and read the release notes for
    the new version you’re installing. We covered this in the *Backing up your Zabbix*
    *setup* recipe.
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 另外，请确保备份系统并阅读您安装的新版本的发布说明。我们在 *备份您的 Zabbix 设置* 文档中涵盖了这一点。
- en: How to do it…
  id: totrans-173
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做…
- en: 'First things first, let’s log in to our Linux host CLI to check out our versions.
    Issue the following commands:'
  id: totrans-174
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先要做的是，让我们登录到我们的 Linux 主机 CLI，检查我们的版本。执行以下命令：
- en: 'For Zabbix server:'
  id: totrans-175
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对于 Zabbix 服务器：
- en: '[PRE33]'
  id: totrans-176
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'For MariaDB:'
  id: totrans-177
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对于 MariaDB：
- en: '[PRE34]'
  id: totrans-178
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE34]'
- en: After verifying our versions match the versions mentioned in the *Getting ready*
    section of this recipe, let’s move on to upgrade our version of MariaDB.
  id: totrans-179
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在验证我们的版本与本文档 *准备工作* 部分中提到的版本相匹配后，让我们继续升级 MariaDB 的版本。
- en: RHEL-based systems
  id: totrans-180
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 基于 RHEL 的系统
- en: 'On our RHEL-based server, the first thing we’ll do after checking the versions
    is to stop our Zabbix environment:'
  id: totrans-181
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在我们的基于 RHEL 的服务器上，在检查版本后，我们首先要做的是停止我们的 Zabbix 环境：
- en: '[PRE35]'
  id: totrans-182
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE35]'
- en: 'Now set up a repository file for MariaDB with the following command:'
  id: totrans-183
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在使用以下命令设置 MariaDB 的仓库文件：
- en: '[PRE36]'
  id: totrans-184
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE36]'
- en: 'We will add the following code to this new file. Make sure to add the correct
    architecture after **baseurl** if using anything other than **amd64**:'
  id: totrans-185
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们将把以下代码添加到这个新文件中。如果使用除 **amd64** 以外的任何其他架构，请确保在 **baseurl** 后面添加正确的架构：
- en: '[PRE37]'
  id: totrans-186
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE37]'
- en: 'Alternatively and probably the best method is to use the MariaDB setup script:'
  id: totrans-187
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 或者更好的方法是使用 MariaDB 设置脚本：
- en: '[PRE38]'
  id: totrans-188
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE38]'
- en: 'Now upgrade your MariaDB server with the following command:'
  id: totrans-189
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在使用以下命令升级您的 MariaDB 服务器：
- en: '[PRE39]'
  id: totrans-190
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE39]'
- en: 'Restart the MariaDB service with the following command:'
  id: totrans-191
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令重新启动 MariaDB 服务：
- en: '[PRE40]'
  id: totrans-192
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE40]'
- en: 'That’s it, MariaDB should now be upgraded to the intended version. Check the
    version again with the following command to make sure:'
  id: totrans-193
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，MariaDB 应该已经升级到预期的版本。使用以下命令再次检查版本以确保：
- en: '[PRE41]'
  id: totrans-194
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE41]'
- en: Ubuntu systems
  id: totrans-195
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Ubuntu 系统
- en: 'On our Ubuntu server, the first thing we’ll do after checking the versions
    is to stop our Zabbix server environment:'
  id: totrans-196
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在我们的 Ubuntu 服务器上，检查版本后，我们首先要做的是停止我们的 Zabbix 服务器环境：
- en: '[PRE42]'
  id: totrans-197
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE42]'
- en: 'Check for the MariaDB repository file at **/etc/apt/sources.list.d/mariadb.list**.
    To check whether it is on version 11.4, edit it with the following command:'
  id: totrans-198
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 检查 **/etc/apt/sources.list.d/mariadb.list** 中的 MariaDB 仓库文件。要检查它是否在 11.4 版本上，请使用以下命令编辑它：
- en: '[PRE43]'
  id: totrans-199
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE43]'
- en: 'The file should look like the following code block. If it doesn’t look right,
    edit it to match. Make sure to add the correct architecture on the **deb** lines
    if using anything other than **amd64**:'
  id: totrans-200
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 文件应该看起来像以下的代码块。如果看起来不对，请编辑它以匹配。如果使用除 **amd64** 外的任何其他架构，请确保在 **deb** 行上添加正确的架构：
- en: '[PRE44]'
  id: totrans-201
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE44]'
- en: 'Alternatively, we can use the MariaDB repository setup script to update to
    the right repository. Execute the following command:'
  id: totrans-202
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 或者，我们可以使用 MariaDB 仓库设置脚本来更新到正确的仓库。执行以下命令：
- en: '[PRE45]'
  id: totrans-203
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE45]'
- en: 'We need to remove our old MariaDB packages with the following command:'
  id: totrans-204
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们需要使用以下命令移除旧的 MariaDB 包：
- en: '[PRE46]'
  id: totrans-205
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE46]'
- en: 'Now upgrade the MariaDB server version with the following command:'
  id: totrans-206
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在使用以下命令升级 MariaDB 服务器版本：
- en: '[PRE47]'
  id: totrans-207
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE47]'
- en: 'Restart MariaDB with the following command:'
  id: totrans-208
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令重新启动 MariaDB：
- en: '[PRE48]'
  id: totrans-209
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE48]'
- en: 'Then issue the **upgrade** command:'
  id: totrans-210
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后执行 **upgrade** 命令：
- en: '[PRE49]'
  id: totrans-211
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE49]'
- en: 'Now start Zabbix back up:'
  id: totrans-212
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在重新启动 Zabbix：
- en: '[PRE50]'
  id: totrans-213
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE50]'
- en: 'That’s it, MariaDB should now be upgraded to the correct version. Check the
    version again with the following command:'
  id: totrans-214
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，MariaDB 应该已经升级到正确的版本。使用以下命令再次检查版本：
- en: '[PRE51]'
  id: totrans-215
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE51]'
- en: How it works…
  id: totrans-216
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作原理…
- en: Now, while it might not always be a requirement, it is a smart idea to upgrade
    your database version regularly. New versions of your database engine might include
    improvements to stability and performance, both of which could improve your Zabbix
    server greatly.
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，虽然这可能并非总是必要的要求，但定期升级您的数据库版本是一个明智的想法。您的数据库引擎的新版本可能包括对稳定性和性能的改进，这两者都可能极大地改善您的
    Zabbix 服务器。
- en: Do keep the release notes and bug reports on your radar though. MariaDB 11.4
    is, at the time of writing, the newest LTS version on the market. You might want
    to stay behind one or two releases as these are still supported and have been
    running in production for a while already. After all, nobody likes unforeseen
    issues such as bugs.
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 但请保持关注发布说明和错误报告。在撰写本文时，MariaDB 11.4 是市场上最新的 LTS 版本。您可能希望留在一两个版本之后，因为这些版本仍然得到支持，并且已经在生产中运行了一段时间。毕竟，没有人喜欢出现意外问题，比如
    bug。
- en: For Zabbix 7, we do need to install at least MariaDB 10.5 or a newer supported
    version though, so keep that in mind.
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 对于 Zabbix 7，我们确实需要安装至少 MariaDB 10.5 或更新支持的版本，请记住这一点。
- en: There’s more...
  id: totrans-220
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多内容…
- en: 'If you really cannot upgrade to MariaDB version 10.5 or, if you are running
    another database, the supported version for that one, then there’s a new Zabbix
    feature. Zabbix 7 allows us to run unsupported database versions. When we edit
    the Zabbix server configuration files at `/etc/zabbix/zabbix_server.conf`, we
    can add the following parameter:'
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您真的无法升级到 MariaDB 版本 10.5，或者如果您运行的是其他数据库，则支持该数据库的版本，那么就有了一个新的 Zabbix 功能。Zabbix
    7 允许我们运行不受支持的数据库版本。当我们编辑 Zabbix 服务器配置文件 `/etc/zabbix/zabbix_server.conf` 时，我们可以添加以下参数：
- en: '[PRE52]'
  id: totrans-222
  prefs: []
  type: TYPE_PRE
  zh: '[PRE52]'
- en: 'This will allow you to run an older or newer version of your database that
    is not officially tested and supported by Zabbix yet, but keep in mind that it
    is not recommended to do so. Check out the current Zabbix LTS installation requirements
    here:'
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 这将允许您运行一个尚未经 Zabbix 官方测试和支持的旧版或新版数据库版本，但请记住，这样做并不建议。请查看当前 Zabbix LTS 安装要求的信息：
- en: '[https://www.zabbix.com/documentation/current/en/manual/installation/requirements](https://www.zabbix.com/documentation/current/en/manual/installation/requirements)'
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://www.zabbix.com/documentation/current/zh/manual/installation/requirements](https://www.zabbix.com/documentation/current/en/manual/installation/requirements)'
- en: Upgrading your Zabbix setup
  id: totrans-225
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 升级您的 Zabbix 设置
- en: As we’ve seen throughout the book already, Zabbix 7 offers a great deal of cool
    new features. Zabbix 7.0 is a **Long-Term Support** (**LTS**) release, so just
    like 5.0 and 6.0, you will receive long-term support for it. Let’s see how we
    can upgrade a Zabbix server from version 6.0 to version 7.0.
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们在整本书中已经看到的那样，Zabbix 7 提供了许多很酷的新功能。Zabbix 7.0 是一个**长期支持**（**LTS**）版本，因此就像
    5.0 和 6.0 一样，您将会长期支持它。让我们看看如何将 Zabbix 服务器从 6.0 版本升级到 7.0 版本。
- en: Getting ready
  id: totrans-227
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备就绪
- en: For this recipe, we will need our server called `lar-book-zbx6`. At this point,
    your server will be running either a RHEL8-based Linux distribution or a Debian-based
    distribution like Ubuntu 22.04, Debian 12, or newer versions of those distributions.
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 对于此配方，我们将需要名为 `lar-book-zbx6` 的服务器。此时，您的服务器将运行基于 RHEL8 的 Linux 发行版或类似 Ubuntu
    22.04、Debian 12 或更新版本的 Debian 发行版。
- en: If you followed the *Upgrading the Zabbix backend from older PHP versions to
    PHP 8.2 or higher* recipe, your server will now be running PHP version 8.2 or
    higher. If not, it’s a good option to follow that recipe first.
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您按照 *将 Zabbix 后端从较旧的 PHP 版本升级到 PHP 8.2 或更高版本* 的步骤，您的服务器现在将运行 PHP 版本 8.2 或更高版本。如果没有，请首先按照该步骤操作是个不错的选择。
- en: If you followed the *Upgrading a Zabbix database from older MariaDB versions
    to MariaDB 11.4* recipe, it will now be running MariaDB version 11.4\. If not,
    it’s wise to follow that recipe first.
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您按照 *将 Zabbix 数据库从较旧的 MariaDB 版本升级到 MariaDB 11.4* 的步骤，它现在将运行 MariaDB 版本 11.4。如果没有，请首先按照该步骤操作是个明智的选择。
- en: Also, make sure to take backups of your system and read the release notes for
    the new version you’re installing. We covered this in the *Backing up your Zabbix*
    *setup* recipe.
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，请务必备份您的系统并阅读您正在安装的新版本的发布说明。我们在 *备份您的 Zabbix 设置* 配方中已经覆盖了这一点。
- en: How to do it…
  id: totrans-232
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: 'First things first, let’s log in to our Linux host CLI to check out our software
    versions:'
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，让我们登录到我们的 Linux 主机 CLI，检查我们的软件版本：
- en: 'Issue the following commands to check the respective software versions:'
  id: totrans-234
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 发出以下命令检查各自的软件版本：
- en: 'For Zabbix server:'
  id: totrans-235
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对于 Zabbix 服务器：
- en: '[PRE53]'
  id: totrans-236
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE53]'
- en: 'For MariaDB:'
  id: totrans-237
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对于 MariaDB：
- en: '[PRE54]'
  id: totrans-238
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE54]'
- en: After verifying our versions match the versions mentioned in the *Getting ready*
    section of this recipe, let’s move on to upgrade our Zabbix server.
  id: totrans-239
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在验证我们的版本与此配方中 *准备就绪* 部分中提到的版本相匹配后，让我们继续升级我们的 Zabbix 服务器。
- en: RHEL-based systems
  id: totrans-240
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 基于 RHEL 的系统
- en: 'First, we will start with upgrading the Zabbix server on a RHEL-based system:'
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们将从 RHEL-based 系统上升级 Zabbix 服务器：
- en: 'Let’s stop our Zabbix server components with the following command:'
  id: totrans-242
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们使用以下命令停止我们的 Zabbix 服务器组件：
- en: '[PRE55]'
  id: totrans-243
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE55]'
- en: 'On our server, let’s issue the following command to add the new Zabbix 7.0
    repository:'
  id: totrans-244
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在我们的服务器上，使用以下命令添加新的 Zabbix 7.0 软件库：
- en: '[PRE56]'
  id: totrans-245
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE56]'
- en: 'Run the following command to clean the repositories:'
  id: totrans-246
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令清理软件库：
- en: '[PRE57]'
  id: totrans-247
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE57]'
- en: 'Now upgrade the Zabbix setup with the following command:'
  id: totrans-248
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在使用以下命令升级 Zabbix 配置：
- en: '[PRE58]'
  id: totrans-249
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE58]'
- en: 'Additionally, install the Zabbix NGINX configuration:'
  id: totrans-250
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 此外，安装 Zabbix NGINX 配置：
- en: '[PRE59]'
  id: totrans-251
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE59]'
- en: 'Start the Zabbix components with the following command:'
  id: totrans-252
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令启动 Zabbix 组件：
- en: '[PRE60]'
  id: totrans-253
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE60]'
- en: 'When we check if the server is running, it should say **Active** (**running**)
    when we issue the following command:'
  id: totrans-254
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当我们检查服务器是否正在运行时，使用以下命令时，它应该显示**Active**（**running**）：
- en: '[PRE61]'
  id: totrans-255
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE61]'
- en: 'If not, we check the logs with the following command, so we can see what is
    happening:'
  id: totrans-256
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果没有，使用以下命令检查日志，看看发生了什么：
- en: '[PRE62]'
  id: totrans-257
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE62]'
- en: Check the log file for any notable errors and if you find any, fix them before
    continuing.
  id: totrans-258
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 检查日志文件是否有任何明显错误，如果发现问题，修复后再继续。
- en: 'If we start the server again, this error should be gone and the Zabbix server
    should keep running:'
  id: totrans-259
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果我们重新启动服务器，错误应该消失，Zabbix 服务器应继续运行：
- en: '[PRE63]'
  id: totrans-260
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE63]'
- en: 'Now restart the Zabbix components with the following command:'
  id: totrans-261
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在使用以下命令重启 Zabbix 组件：
- en: '[PRE64]'
  id: totrans-262
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE64]'
- en: 'Now everything should be working as expected and we should see the new Zabbix
    7 frontend, as shown in the following screenshot:'
  id: totrans-263
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在一切应该按预期工作，我们应该能够看到新的 Zabbix 7 前端，如下图所示：
- en: "![Figure 11.7 – Zabbix 7 frontend after the up\uFEFFgrade on RHEL](img/B19803_11_07.jpg)"
  id: totrans-264
  prefs: []
  type: TYPE_IMG
  zh: '![图 11.7 – RHEL 上升级后的 Zabbix 7 前端](img/B19803_11_07.jpg)'
- en: Figure 11.7 – Zabbix 7 frontend after the upgrade on RHEL
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11.7 – RHEL 上升级后的 Zabbix 7 前端
- en: Ubuntu systems
  id: totrans-266
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Ubuntu 系统
- en: 'First, let’s stop our Zabbix server components with the following command:'
  id: totrans-267
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，使用以下命令停止 Zabbix 服务器组件：
- en: '[PRE65]'
  id: totrans-268
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE65]'
- en: 'Now add the new repository for Zabbix 7 on Ubuntu with the following commands:'
  id: totrans-269
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在使用以下命令为 Ubuntu 添加 Zabbix 7 的新软件库：
- en: '[PRE66]'
  id: totrans-270
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE66]'
- en: Important note
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: Always check **zabbix.com/download** to get the right repository for your systems.
    In the example, I used the Ubuntu repository. Switch this out for the right repository
    for your system.
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: 始终访问 **zabbix.com/download** 获取适合你系统的软件库。在本例中，我使用了 Ubuntu 的软件库。请根据你的系统替换为正确的软件库。
- en: 'Update the repository information with the following command:'
  id: totrans-273
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令更新软件库信息：
- en: '[PRE67]'
  id: totrans-274
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE67]'
- en: 'Now upgrade the Zabbix server components with the following command:'
  id: totrans-275
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在使用以下命令升级 Zabbix 服务器组件：
- en: '[PRE68]'
  id: totrans-276
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE68]'
- en: Make sure to not overwrite your Zabbix server configuration. If you do overwrite
    your configuration file, you can restore it from the backup taken in the *Backup
    up your Zabbix* *setup* recipe.
  id: totrans-277
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确保不要覆盖 Zabbix 服务器配置文件。如果你不小心覆盖了配置文件，可以从*备份你的 Zabbix 配置*食谱中恢复。
- en: 'Then install the new Zabbix NGINX configuration with the following command:'
  id: totrans-278
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后使用以下命令安装新的 Zabbix NGINX 配置：
- en: '[PRE69]'
  id: totrans-279
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE69]'
- en: 'Restart the Zabbix server components with the following command and you should
    be done:'
  id: totrans-280
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令重启 Zabbix 服务器组件，完成升级：
- en: '[PRE70]'
  id: totrans-281
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE70]'
- en: 'We check the logs with the following command so we can see what is happening:'
  id: totrans-282
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令检查日志，查看发生了什么：
- en: '[PRE71]'
  id: totrans-283
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE71]'
- en: Check the log file for any notable errors and if you find any, fix them before
    continuing.
  id: totrans-284
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 检查日志文件是否有任何明显错误，如果发现问题，修复后再继续。
- en: 'If we start the server again, this error should be gone and the Zabbix server
    should keep running:'
  id: totrans-285
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果我们重新启动服务器，错误应该消失，Zabbix 服务器应继续运行：
- en: '[PRE72]'
  id: totrans-286
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE72]'
- en: 'This should conclude the upgrade process, and if we go to the frontend, we
    should see the new Zabbix 7 frontend:'
  id: totrans-287
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这应该完成升级过程，如果我们进入前端页面，应该看到新的 Zabbix 7 前端：
- en: "![Figure 11.8 \uFEFF\uFEFF– Zabbix \uFEFF7 frontend after the U\uFEFFbuntu\
    \ upgrade](img/B19803_11_08.jpg)"
  id: totrans-288
  prefs: []
  type: TYPE_IMG
  zh: '![图 11.8 – Ubuntu 升级后的 Zabbix 7 前端](img/B19803_11_08.jpg)'
- en: Figure 11.8 – Zabbix 7 frontend after the Ubuntu upgrade
  id: totrans-289
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11.8 – Ubuntu 升级后的 Zabbix 7 前端
- en: How it works…
  id: totrans-290
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的……
- en: Upgrading Zabbix can be an easy task when we are running the latest version
    of Linux. When we are running older versions of software though, we might run
    into some issues.
  id: totrans-291
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们使用最新版本的 Linux 时，升级 Zabbix 可能是个简单的任务。但如果我们使用的是旧版软件，则可能会遇到一些问题。
- en: The recipe we’ve just followed shows us the upgrade process for a Zabbix 6 instance
    resulting in a setup running Zabbix 7, along with the most common issues we might
    run into.
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
  zh: 我们刚刚遵循的步骤展示了一个 Zabbix 6 实例的升级过程，最终将系统升级为运行 Zabbix 7，并且列出了我们可能遇到的最常见问题。
- en: Important note
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: While upgrading, make sure to keep an eye on your **zabbix_server.log** file,
    as this file will tell you if something has gone wrong during the upgrade process.
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
  zh: 在升级过程中，请注意查看你的**zabbix_server.log**文件，因为该文件会告诉你升级过程中是否发生了任何问题。
- en: We made sure to upgrade PHP to a version higher than 8.0 as this was the requirement
    for Zabbix 7, making the upgrade process from Zabbix 6 a bit more complicated
    if we ran an older PHP version. For the database, Zabbix kept the same requirements
    between Zabbix 6 and Zabbix 7, requiring MariaDB 10.5 or a newer supported version
    for your Zabbix setup.
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
  zh: 我们确保将 PHP 升级到高于 8.0 的版本，因为这是 Zabbix 7 的要求。如果我们运行较旧的 PHP 版本，从 Zabbix 6 升级会变得有些复杂。至于数据库，Zabbix
    在 Zabbix 6 和 Zabbix 7 之间保持了相同的要求，要求 MariaDB 10.5 或更新的受支持版本来配置 Zabbix。
- en: Now that you’ve upgraded all the components, you should be ready to work with
    Zabbix 7 and your setup will be future-proof for a while – of course, until Zabbix
    8 comes out, when we might see some new requirements come along.
  id: totrans-296
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，您已经升级了所有组件，应该准备好使用 Zabbix 7，并且您的设置会在一段时间内保持未来兼容——当然，直到 Zabbix 8 发布，届时可能会有新的要求。
- en: See also
  id: totrans-297
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另见
- en: 'Make sure to check out the Zabbix documentation for the versions you are upgrading
    from and to. Zabbix always includes detailed descriptions of the requirements
    and processes to make it as easy as possible for you to upgrade. Check out the
    right documentation for your version:'
  id: totrans-298
  prefs: []
  type: TYPE_NORMAL
  zh: 请确保查看您正在升级的版本的 Zabbix 文档。Zabbix 总是包含详细的要求和流程描述，以便尽可能简化您的升级过程。查看适用于您版本的文档：
- en: '[https://www.zabbix.com/documentation/current/en/manual/installation/upgrade](https://www.zabbix.com/documentation/current/en/manual/installation/upgrade)'
  id: totrans-299
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://www.zabbix.com/documentation/current/en/manual/installation/upgrade](https://www.zabbix.com/documentation/current/en/manual/installation/upgrade)'
- en: Maintaining Zabbix performance over time
  id: totrans-300
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 维持 Zabbix 性能
- en: It’s important to make sure that your Zabbix setup keeps performing well over
    time. There are several key components that are important to keep your Zabbix
    setup performing optimally. Let’s see how to work on some of these components
    and keep your Zabbix setup running smoothly.
  id: totrans-301
  prefs: []
  type: TYPE_NORMAL
  zh: 确保您的 Zabbix 设置在长期内持续保持良好性能非常重要。有几个关键组件对保持 Zabbix 设置的最佳性能至关重要。让我们看看如何处理这些组件，确保
    Zabbix 设置运行顺利。
- en: Getting ready
  id: totrans-302
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: All we are going to need for this recipe is a Zabbix 7 server.
  id: totrans-303
  prefs: []
  type: TYPE_NORMAL
  zh: 这个配方中，我们只需要一台 Zabbix 7 服务器。
- en: How to do it…
  id: totrans-304
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: We will go through three of the main problems people face whilst maintaining
    Zabbix server performance. First things first, let’s look at the Zabbix processes
    and how to edit them.
  id: totrans-305
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将讨论在维护 Zabbix 服务器性能时人们面临的三个主要问题。首先，先来看看 Zabbix 进程以及如何编辑它们。
- en: Zabbix processes
  id: totrans-306
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Zabbix 进程
- en: A regular problem people face is a Zabbix process being too busy. Let’s log
    in to our Zabbix frontend and check out how this problem might look.
  id: totrans-307
  prefs: []
  type: TYPE_NORMAL
  zh: 一个常见问题是 Zabbix 进程过于繁忙。让我们登录 Zabbix 前端，查看这个问题可能是什么样子。
- en: 'First, let’s start by logging in to our Zabbix server frontend and check out
    some messages:'
  id: totrans-308
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，让我们通过登录到 Zabbix 服务器前端来查看一些消息：
- en: 'When we navigate to **Monitoring** | **Dashboard** and then select the default
    dashboard **Global view**, we might see something like this:'
  id: totrans-309
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当我们导航到**监控** | **仪表盘**，然后选择默认仪表盘**全局视图**时，我们可能会看到如下内容：
- en: '![Figure 11.9 – Zabbix problem from our Zabbix server, discoverer processes
    75% busy](img/11.9.jpg)'
  id: totrans-310
  prefs: []
  type: TYPE_IMG
  zh: '![图 11.9 – 来自我们 Zabbix 服务器的问题，发现器进程 75% 繁忙](img/11.9.jpg)'
- en: Figure 11.9 – Zabbix problem from our Zabbix server, discoverer processes 75%
    busy
  id: totrans-311
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11.9 – 来自我们 Zabbix 服务器的问题，发现器进程 75% 繁忙
- en: Then we navigate to **Monitoring** | **Hosts** and click on **Latest data**
    for the Zabbix server host (which, in my case, is called **lar-book-rocky**).
    This will take us to the latest data for our host.
  id: totrans-312
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后我们导航到**监控** | **主机**，点击 Zabbix 服务器主机的**最新数据**（在我的情况下，主机名是**lar-book-rocky**）。这将带我们到该主机的最新数据。
- en: 'For the filters, type **discovery** in the **Name** field, then click on **Graph**
    for the discovery worker item. This will show you the following graph:'
  id: totrans-313
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对于过滤器，在**名称**字段中输入 **discovery**，然后点击**图形**以查看发现工作项。这将展示以下图形：
- en: '![Figure 11.10 – Zabbix server discoverer graph, Utilization of discoverer
    data collector in %](img/B19803_11_10.jpg)'
  id: totrans-314
  prefs: []
  type: TYPE_IMG
  zh: '![图 11.10 – Zabbix 服务器发现图，发现数据收集器的利用率百分比](img/B19803_11_10.jpg)'
- en: Figure 11.10 – Zabbix server discoverer graph, Utilization of discoverer data
    collector in %
  id: totrans-315
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11.10 – Zabbix 服务器发现图，发现数据收集器的利用率百分比
- en: This graph is at 100% almost all the time, which explains why we see the problem
    shown in *Figure 11**.9* on our dashboard.
  id: totrans-316
  prefs: []
  type: TYPE_NORMAL
  zh: 这个图形几乎一直保持在 100%，这也解释了为什么我们在仪表盘上看到了*图 11.9* 中显示的问题。
- en: Let’s log in to the Linux CLI of our Zabbix server to edit this process.
  id: totrans-317
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们登录到 Zabbix 服务器的 Linux CLI，编辑此进程。
- en: 'Edit the following file on your Zabbix server:'
  id: totrans-318
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 编辑以下文件，在你的 Zabbix 服务器上：
- en: '[PRE73]'
  id: totrans-319
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE73]'
- en: 'Now, if we want to give our Zabbix server’s **discoverer** process more room,
    we need to edit the correct parameter. Scroll down until you see the following:'
  id: totrans-320
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，如果我们想要给 Zabbix 服务器的 **发现器** 进程更多空间，我们需要编辑正确的参数。向下滚动，直到你看到以下内容：
- en: "![Figure 11.11 – Zabbix server conf\uFEFFiguration file, StartDiscoverers default](img/B19803_11_11.jpg)"
  id: totrans-321
  prefs: []
  type: TYPE_IMG
  zh: '![图 11.11 – Zabbix 服务器配置文件，StartDiscoverers 默认值](img/B19803_11_11.jpg)'
- en: Figure 11.11 – Zabbix server configuration file, StartDiscoverers default
  id: totrans-322
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11.11 – Zabbix 服务器配置文件，StartDiscoverers 默认值
- en: 'Now add a new line under this and add the following line:'
  id: totrans-323
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，在此基础上添加一行并输入以下内容：
- en: '[PRE74]'
  id: totrans-324
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE74]'
- en: 'If your file now looks like the following screenshot, you can save and exit
    the file:'
  id: totrans-325
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果你的文件现在看起来像下面的截图，你可以保存并退出文件：
- en: '![Figure 11.12 – Zabbix server configuration file, StartDiscoverers 2](img/B19803_11_12.jpg)'
  id: totrans-326
  prefs: []
  type: TYPE_IMG
  zh: '![图 11.12 – Zabbix 服务器配置文件，StartDiscoverers 2](img/B19803_11_12.jpg)'
- en: Figure 11.12 – Zabbix server configuration file, StartDiscoverers 2
  id: totrans-327
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11.12 – Zabbix 服务器配置文件，StartDiscoverers 2
- en: 'For the changes to take effect, we will need to restart the Zabbix server with
    the following command:'
  id: totrans-328
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了使更改生效，我们将需要使用以下命令重启 Zabbix 服务器：
- en: '[PRE75]'
  id: totrans-329
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE75]'
- en: 'Now if we go back to our Zabbix frontend, we should still be at our graph where
    we can see the following:'
  id: totrans-330
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，如果我们返回到 Zabbix 前端，我们应该仍然停留在我们可以看到以下内容的图形界面：
- en: "![Figure 11.13 – Zab\uFEFFbix server discoverer graph](img/B19803_11_13.jpg)"
  id: totrans-331
  prefs: []
  type: TYPE_IMG
  zh: '![图 11.13 – Zabbix 服务器发现器图](img/B19803_11_13.jpg)'
- en: Figure 11.13 – Zabbix server discoverer graph
  id: totrans-332
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11.13 – Zabbix 服务器发现器图
- en: The utilization of our discoverer process has gone down, which means our utilization
    problem won’t show up anymore. That’s how we edit Zabbix server processes.
  id: totrans-333
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的发现器进程的利用率已下降，这意味着我们的利用率问题将不再出现。这就是我们编辑 Zabbix 服务器进程的方式。
- en: Zabbix housekeeper
  id: totrans-334
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Zabbix 维护进程
- en: 'Another very common problem people face is the Zabbix housekeeper process being
    too busy. Let’s log in to our Zabbix frontend and check out the problem:'
  id: totrans-335
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个人们常遇到的问题是 Zabbix 维护进程过于繁忙。让我们登录到 Zabbix 前端并检查这个问题：
- en: 'When we navigate to **Monitoring** | **Dashboard** and then select the default
    dashboard **Global view**, we might see something like this:'
  id: totrans-336
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当我们导航到 **监控** | **仪表板**，然后选择默认仪表板 **全局视图** 时，我们可能会看到类似这样的内容：
- en: '![Figure 11.14 – A problem with Zabbix housekeeper](img/11.14.jpg)'
  id: totrans-337
  prefs: []
  type: TYPE_IMG
  zh: '![图 11.14 – Zabbix 维护进程的问题](img/11.14.jpg)'
- en: Figure 11.14 – A problem with Zabbix housekeeper
  id: totrans-338
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11.14 – Zabbix 维护进程的问题
- en: Similar to editing any Zabbix process, we can also edit the Zabbix housekeeper
    process. Let’s log in to the Linux CLI of our Zabbix server to edit our process.
  id: totrans-339
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 与编辑任何 Zabbix 进程类似，我们也可以编辑 Zabbix 维护进程。让我们登录到 Zabbix 服务器的 Linux 命令行界面来编辑我们的进程。
- en: 'Let’s edit the following file on our Zabbix server:'
  id: totrans-340
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们在 Zabbix 服务器上编辑以下文件：
- en: '[PRE76]'
  id: totrans-341
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE76]'
- en: 'Now, if we want to edit this process, we need to edit the correct parameters.
    Scroll down until you see the following:'
  id: totrans-342
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，如果我们想要编辑这个过程，我们需要编辑正确的参数。向下滚动，直到你看到以下内容：
- en: '![Figure 11.15 – Zabbix configuration file, HousekeepingFrequency 1](img/B19803_11_15.jpg)'
  id: totrans-343
  prefs: []
  type: TYPE_IMG
  zh: '![图 11.15 – Zabbix 配置文件，HousekeepingFrequency 1](img/B19803_11_15.jpg)'
- en: Figure 11.15 – Zabbix configuration file, HousekeepingFrequency 1
  id: totrans-344
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11.15 – Zabbix 配置文件，HousekeepingFrequency 1
- en: 'This is our first housekeeper parameter. Let’s edit this parameter by adding
    the following line under this block:'
  id: totrans-345
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这是我们的第一个维护参数。让我们通过在此代码块下添加以下行来编辑此参数：
- en: '[PRE77]'
  id: totrans-346
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE77]'
- en: Important note
  id: totrans-347
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: Making the interval longer is not going to solve your issue; at most, you are
    delaying the inevitable. It is only recommended to change this setting until the
    next maintenance window, and it should be avoided as much as possible.
  id: totrans-348
  prefs: []
  type: TYPE_NORMAL
  zh: 延长间隔并不能解决你的问题；最多，你只是推迟了不可避免的情况。仅建议在下一个维护窗口期间更改此设置，并应尽量避免这样做。
- en: 'Now scroll down until you see the following:'
  id: totrans-349
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在向下滚动，直到你看到以下内容：
- en: '![Figure 11.16 – Zabbix configuration file, HousekeepingDelete 5000](img/B19803_11_16.jpg)'
  id: totrans-350
  prefs: []
  type: TYPE_IMG
  zh: '![图 11.16 – Zabbix 配置文件，HousekeepingDelete 5000](img/B19803_11_16.jpg)'
- en: Figure 11.16 – Zabbix configuration file, HousekeepingDelete 5000
  id: totrans-351
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11.16 – Zabbix 配置文件，HousekeepingDelete 5000
- en: 'The preceding screenshot shows our second housekeeper parameter. Let’s edit
    this parameter by adding the following line under this code block:'
  id: totrans-352
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 上面的截图显示了我们的第二个维护参数。让我们通过在此代码块下添加以下行来编辑此参数：
- en: '[PRE78]'
  id: totrans-353
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE78]'
- en: 'For the changes to take effect, we need to restart the Zabbix server with the
    following command:'
  id: totrans-354
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了使更改生效，我们需要使用以下命令重启 Zabbix 服务器：
- en: '[PRE79]'
  id: totrans-355
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE79]'
- en: Tuning a MySQL database
  id: totrans-356
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 调整 MySQL 数据库
- en: 'Let’s see how we can tune a MySQL database with ease. First off, let’s go to
    the following link in our browser: [https://github.com/major/MySQLTuner-perl](https://github.com/major/MySQLTuner-perl).'
  id: totrans-357
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们看看如何轻松调优 MySQL 数据库。首先，打开浏览器访问以下链接：[https://github.com/major/MySQLTuner-perl](https://github.com/major/MySQLTuner-perl)。
- en: 'This link brings us to an open source GitHub project started by *Major Hayden*.
    Be sure to follow the repository and do all you can to help out. Let’s download
    the script from the GitHub repository or simply use the following command:'
  id: totrans-358
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这个链接将我们引导到一个由 *Major Hayden* 发起的开源 GitHub 项目。务必关注该项目并尽可能提供帮助。我们可以从 GitHub 仓库下载脚本，或者直接使用以下命令：
- en: '[PRE80]'
  id: totrans-359
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE80]'
- en: 'Now we can execute this script with the following command:'
  id: totrans-360
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在我们可以使用以下命令执行此脚本：
- en: '[PRE81]'
  id: totrans-361
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE81]'
- en: 'This will bring us to a prompt for our MySQL database credentials. Fill them
    out and continue:'
  id: totrans-362
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这将提示我们输入 MySQL 数据库凭证。填写完毕后继续：
- en: '![Figure 11.17 – MySQL tuner script execution](img/B19803_11_17.jpg)'
  id: totrans-363
  prefs: []
  type: TYPE_IMG
  zh: '![图11.17 – MySQL 调优脚本执行](img/B19803_11_17.jpg)'
- en: Figure 11.17 – MySQL tuner script execution
  id: totrans-364
  prefs: []
  type: TYPE_NORMAL
  zh: 图11.17 – MySQL 调优脚本执行
- en: 'Now, the script will output a lot of information that you will need to read
    carefully, but the most important part is at the end – everything after **Variables**
    **to adjust**:'
  id: totrans-365
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，脚本将输出大量信息，你需要仔细阅读，但最重要的部分在最后——**Variables** **to adjust** 之后的所有内容：
- en: '![Figure 11.18 – MySQL tuner script output](img/B19803_11_18.jpg)'
  id: totrans-366
  prefs: []
  type: TYPE_IMG
  zh: '![图11.18 – MySQL 调优脚本输出](img/B19803_11_18.jpg)'
- en: Figure 11.18 – MySQL tuner script output
  id: totrans-367
  prefs: []
  type: TYPE_NORMAL
  zh: 图11.18 – MySQL 调优脚本输出
- en: Important note
  id: totrans-368
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: '*DO NOT* simply copy over the output from this script. The script is simply
    giving us an indicator of what might be tuned in our MySQL settings. Always look
    up the settings suggested and read about the best practices for those settings.'
  id: totrans-369
  prefs: []
  type: TYPE_NORMAL
  zh: '*不要*仅仅复制脚本的输出。该脚本只是给出了可能需要调优的 MySQL 设置的提示。始终查阅建议的设置，并了解这些设置的最佳实践。'
- en: 'We can edit these variables in the MySQL **my.cnf** file. In my case, I edit
    it with the following command:'
  id: totrans-370
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们可以在 MySQL **my.cnf** 文件中编辑这些变量。在我的情况下，我使用以下命令进行编辑：
- en: '[PRE82]'
  id: totrans-371
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE82]'
- en: 'Now, you simply edit or add the variables that are suggested in the script
    and then restart your MySQL server:'
  id: totrans-372
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，你只需编辑或添加脚本中建议的变量，然后重新启动 MySQL 服务器：
- en: '[PRE83]'
  id: totrans-373
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE83]'
- en: How it works…
  id: totrans-374
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的…
- en: We’ve just done three of the main performance tweaks we can do for a Zabbix
    server, but there’s a lot more to do. Let’s take a look at what we’ve just edited,
    consider why we’ve edited it, and find out whether it’s really that simple.
  id: totrans-375
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经做了三个主要的 Zabbix 服务器性能调优，但还有很多工作要做。让我们回顾一下我们刚刚编辑的内容，思考为什么要这么做，并弄清楚它是否真的是这么简单。
- en: Zabbix processes
  id: totrans-376
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Zabbix 进程
- en: Zabbix processes are a big part of your Zabbix server setup and must be edited
    with care. In this recipe, we’ve only just edited the discoverer process on a
    small installation. This problem was easy as the server had more than enough resources
    to account for another process running.
  id: totrans-377
  prefs: []
  type: TYPE_NORMAL
  zh: Zabbix 进程是 Zabbix 服务器配置的重要部分，必须小心编辑。在这个实例中，我们只是在一个小型安装中编辑了发现进程。这个问题很容易解决，因为服务器有足够的资源来支持额外的进程运行。
- en: 'Now if we look at the following diagram, we can see the situation as it was
    before we added a new discoverer process:'
  id: totrans-378
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，如果我们查看以下示意图，可以看到在我们添加新的发现进程之前的情况：
- en: '![Figure 11.19 – Zabbix server single-process setup diagram](img/B19803_11_19.jpg)'
  id: totrans-379
  prefs: []
  type: TYPE_IMG
  zh: '![图11.19 – Zabbix 服务器单进程配置示意图](img/B19803_11_19.jpg)'
- en: Figure 11.19 – Zabbix server single-process setup diagram
  id: totrans-380
  prefs: []
  type: TYPE_NORMAL
  zh: 图11.19 – Zabbix 服务器单进程配置示意图
- en: We can see our **Linux host** running our **Zabbix server** application and
    we can see our **LLDProcessors 1** process discovering **LLD rule 1**. **LLD rule
    2** and **LLD rule 3** are queueing up as one LLDProcessor subprocess can only
    handle one rule at a time.
  id: totrans-381
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以看到我们的 **Linux 主机** 正在运行 **Zabbix 服务器** 应用程序，并且我们可以看到我们的 **LLDProcessors
    1** 进程正在发现 **LLD 规则 1**。**LLD 规则 2** 和 **LLD 规则 3** 正在排队，因为一个 LLDProcessor 子进程一次只能处理一个规则。
- en: 'As we’ve seen that this is apparently too heavy for our system, we have added
    another LLDProcessor:'
  id: totrans-382
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们所看到的，这对我们的系统来说显然太重了，所以我们添加了另一个LLDProcessor：
- en: '![Figure 11.20 – Zabbix server multiple-process setup diagram](img/B19803_11_20.jpg)'
  id: totrans-383
  prefs: []
  type: TYPE_IMG
  zh: '![图11.20 – Zabbix 服务器多进程配置示意图](img/B19803_11_20.jpg)'
- en: Figure 11.20 – Zabbix server multiple-process setup diagram
  id: totrans-384
  prefs: []
  type: TYPE_NORMAL
  zh: 图11.20 – Zabbix 服务器多进程配置示意图
- en: Our new setup will balance the load to a certain extent. It’s only possible
    for a discovery rule to be handled by a single discoverer process. This means
    that if we have multiple discovery rules, we can add discoverers like this to
    make sure there are enough resources available per discovery rule. It works the
    same for the other processes – more processes mean better distributions of tasks.
  id: totrans-385
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的新设置将一定程度上平衡负载。发现规则只能由单个发现进程处理。这意味着如果我们有多个发现规则，我们可以像这样添加发现进程，确保每个发现规则都有足够的资源可用。其他进程也是一样的——更多的进程意味着更好的任务分配。
- en: However, there are several things to be careful of here. First of all, not all
    issues can be solved by simply throwing more resources at them. Some Zabbix setups
    are configured poorly, where there’s something in the configuration making our
    processes unnecessarily busy. If we deal with the poor configuration aspect, we
    can take away the high load, thus we need fewer processes.
  id: totrans-386
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，这里有几件事需要小心。首先，并非所有问题都可以通过简单地增加更多资源来解决。有些 Zabbix 设置配置不当，配置中的某些内容使得我们的进程不必要地繁忙。如果我们解决了配置不当的问题，就可以减少高负载，从而需要更少的进程。
- en: The second thing I’d like to stress is that we can keep adding processes to
    our Zabbix server configuration – within limits. Before we reach those limits
    though, you are definitely going to reach the roof of what our Linux host hardware
    is capable of. Make sure you have enough RAM and CPU power to actually run all
    these processes or use Zabbix proxies for offloading. Also keep in mind that adding
    more processes might require additional database tuning, for example allowing
    more connections to the database.
  id: totrans-387
  prefs: []
  type: TYPE_NORMAL
  zh: 第二点我想强调的是，我们可以不断地向 Zabbix 服务器配置中添加进程——但有其限制。不过，在达到这些限制之前，你肯定会遇到我们的 Linux 主机硬件的极限。确保你有足够的
    RAM 和 CPU 能力来实际运行所有这些进程，或者使用 Zabbix 代理来分担负载。同时也要记住，增加更多进程可能需要额外的数据库调优，例如允许更多的数据库连接。
- en: Last but not least, keep in mind that changing the Zabbix server configuration
    requires a restart of the `zabbix-server` process. On large installations, this
    can take a long time. The Zabbix server might have to do a lot of database writes
    (for example, of the trend data) to get the `zabbix-server` process to shut down.
  id: totrans-388
  prefs: []
  type: TYPE_NORMAL
  zh: 最后但同样重要的是，记住更改 Zabbix 服务器配置需要重启 `zabbix-server` 进程。在大型安装中，这可能需要很长时间。Zabbix 服务器可能需要进行大量的数据库写入（例如，趋势数据），才能完成
    `zabbix-server` 进程的关闭。
- en: Zabbix housekeeper
  id: totrans-389
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Zabbix 清理工具
- en: Now for Zabbix housekeeper, which is a very important process for Zabbix administrators
    who haven’t set up MySQL partitioning or PostgreSQL TimescaleDB partitioning yet.
    The Zabbix housekeeper process connects to our database and then drops information
    line by line that has *expired*. You might think, how do you mean expired? Well,
    we can set limits in the Zabbix server for how long an item should be kept in
    the database.
  id: totrans-390
  prefs: []
  type: TYPE_NORMAL
  zh: 现在谈谈 Zabbix 清理工具，这对于尚未设置 MySQL 分区或 PostgreSQL TimescaleDB 分区的 Zabbix 管理员来说是一个非常重要的进程。Zabbix
    清理进程连接到我们的数据库，然后逐行删除*过期*的信息。你可能会想，什么是过期？其实，我们可以在 Zabbix 服务器中设置项目在数据库中保存多久的时间限制。
- en: 'If we look at **Administration** | **Housekeeping**, part of what we will see
    is shown in the following screenshot:'
  id: totrans-391
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们查看 **管理** | **清理**，我们将看到以下截图所示的部分内容：
- en: '![Figure 11.21 – Zabbix server history and trends housekeeping setup](img/B19803_11_21.JPG)'
  id: totrans-392
  prefs: []
  type: TYPE_IMG
  zh: '![图 11.21 – Zabbix 服务器历史和趋势清理设置](img/B19803_11_21.JPG)'
- en: Figure 11.21 – Zabbix server history and trends housekeeping setup
  id: totrans-393
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11.21 – Zabbix 服务器历史和趋势清理设置
- en: 'These are our global **History** and **Trends** housekeeping parameters. This
    defines how long an item’s data should be kept in our database. If we look at
    an item on a template or host, we can also see these parameters:'
  id: totrans-394
  prefs: []
  type: TYPE_NORMAL
  zh: 这些是我们的全局 **历史** 和 **趋势** 清理参数。这定义了项目数据在数据库中应该保留多久。如果我们查看模板或主机上的项目，我们还可以看到这些参数：
- en: "![Figure 11.22 – Zabbix item hi\uFEFFstory and trends housekeeping parameters](img/B19803_11_22.jpg)"
  id: totrans-395
  prefs: []
  type: TYPE_IMG
  zh: '![图 11.22 – Zabbix 项目历史和趋势清理参数](img/B19803_11_22.jpg)'
- en: Figure 11.22 – Zabbix item history and trends housekeeping parameters
  id: totrans-396
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11.22 – Zabbix 项目历史和趋势清理参数
- en: These settings override the global settings so you can tweak the housekeeper
    further. That’s how the housekeeper keeps your database in check.
  id: totrans-397
  prefs: []
  type: TYPE_NORMAL
  zh: 这些设置会覆盖全局设置，因此你可以进一步调整清理工具。这就是清理工具如何保持你的数据库正常运行的方式。
- en: But now, let’s look at the tweaks we made in our Zabbix server configuration
    file, the first of which is `HousekeepingFrequency`. Housekeeping frequency is
    how often the housekeeper process is started. We’ve lowered this from every hour
    to every two hours. Now you might think that’s worse, but it doesn’t have to be.
    A lot of the time, we see that housekeeping is not done after one hour and then
    it just keeps going on and on.
  id: totrans-398
  prefs: []
  type: TYPE_NORMAL
  zh: 但现在，让我们来看一下我们在 Zabbix 服务器配置文件中所做的调整，第一个就是 `HousekeepingFrequency`。清理频率是指清理程序进程启动的频率。我们将其从每小时一次降低为每两小时一次。现在你可能会认为这样更差，但不一定。很多时候，我们会看到清理工作在一小时后并未完成，然后就一直持续下去。
- en: We also changed the `MaxHousekeeperDelete` parameter, which is something completely
    different. This determines how many database rows our Zabbix housekeeper is allowed
    to delete in each run. The default settings determined that every hour, we can
    delete 5,000 database rows. With our new settings, we can now delete 20,000 database
    rows every two hours. Each row will basically just be a single metric we are allowed
    to delete.
  id: totrans-399
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还更改了 `MaxHousekeeperDelete` 参数，这完全是另一回事。这个参数决定了每次清理程序运行时，Zabbix 清理程序允许删除多少数据库行。默认设置规定每小时可以删除
    5000 行数据库记录。而通过我们的新设置，我们现在每两小时可以删除 20000 行数据库记录。每一行基本上就是我们允许删除的单个指标。
- en: How does this change anything at all? Well, it might not. It completely depends
    on your setup. Tweaking the Zabbix housekeeper is different for every setup, and
    you will have to determine your optimum settings for yourself. Try to balance
    what you see in your graphs with the two settings we’ve discussed here to see
    how well you can optimize it.
  id: totrans-400
  prefs: []
  type: TYPE_NORMAL
  zh: 这会改变任何事情吗？嗯，可能不会。这完全取决于你的设置。调整 Zabbix 的清理程序对于每种设置都不同，你需要自己确定最优设置。尝试平衡你在图表中看到的内容与我们在这里讨论的两个设置，看看你能优化到什么程度。
- en: However, at one point, your Zabbix setup might grow big enough and Zabbix housekeeping
    won’t be able to keep up. This is when you’ll need to look at MySQL partitioning
    or PostgreSQL TimescaleDB. There’s no predefined point where the Zabbix housekeeper
    won’t be able to keep up, so it is smarter to just start with MySQL partitioning
    or PostgreSQL TimescaleDB right from the start. After all, any setup might grow
    larger than expected, right? More on this subject is explained in [*Chapter 12*](B19803_12.xhtml#_idTextAnchor2180)
    of this book.
  id: totrans-401
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，到某个时候，你的 Zabbix 设置可能会变得足够大，以至于 Zabbix 的清理程序无法跟上。这时你就需要考虑 MySQL 分区或 PostgreSQL
    TimescaleDB。没有预定的点可以说明 Zabbix 的清理程序无法跟上，所以从一开始就直接选择 MySQL 分区或 PostgreSQL TimescaleDB会更为明智。毕竟，任何设置都有可能比预期增长得更大，对吧？更多相关内容请参见本书的[*第
    12 章*](B19803_12.xhtml#_idTextAnchor2180)。
- en: Tuning a MySQL database
  id: totrans-402
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 调整 MySQL 数据库
- en: 'Now for tuning your MySQL database with the `mysqltuner.pl` script. This script
    does a lot in the background, but we can summarize it as follows: it looks at
    what the current utilization of your MySQL database is, and then outputs what
    it thinks the correct tuning variables would be.'
  id: totrans-403
  prefs: []
  type: TYPE_NORMAL
  zh: 现在来调整你的 MySQL 数据库，使用 `mysqltuner.pl` 脚本。这个脚本在后台做了很多工作，但我们可以将其总结为：它查看当前 MySQL
    数据库的使用情况，然后输出它认为正确的调整变量。
- en: Do not take the script output as a given, as with Zabbix housekeeping, there
    is no way to give you a definitive setup for your database. Databases are simply
    more complicated than just doing some tweaks and being done with it.
  id: totrans-404
  prefs: []
  type: TYPE_NORMAL
  zh: 不要将脚本输出视为最终结果，因为像 Zabbix 的清理程序一样，无法为你的数据库提供一个明确的设置。数据库的复杂性远超做几个调整就能完成的程度。
- en: The script will definitely help you tweak your MySQL database to an extent,
    especially for smaller setups. But make sure to extend your knowledge by reading
    blogs, guides, and books about databases regularly.
  id: totrans-405
  prefs: []
  type: TYPE_NORMAL
  zh: 这个脚本肯定能在一定程度上帮助你调整 MySQL 数据库，尤其是对于较小的设置。但请确保通过定期阅读博客、指南和数据库书籍来扩展你的知识。
- en: There’s more…
  id: totrans-406
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多内容……
- en: We went over how to tune a MySQL database, but we didn’t go over how to tune
    a PostgreSQL instance. There’s a wide variety of options out there to do this,
    so for more on that I recommend checking out the PostgreSQL wiki at [https://wiki.postgresql.org/wiki/Performance_Optimization](https://wiki.postgresql.org/wiki/Performance_Optimization).
    There are different varieties and different preferences at play here. Make sure
    to check them all out well and pick the one that works the best for you.
  id: totrans-407
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经讨论了如何调整 MySQL 数据库，但还没有讨论如何调整 PostgreSQL 实例。为了更深入了解，建议访问 PostgreSQL 的维基页面
    [https://wiki.postgresql.org/wiki/Performance_Optimization](https://wiki.postgresql.org/wiki/Performance_Optimization)。这里有各种不同的选项和偏好。确保仔细查看它们，并选择最适合你的方案。
- en: 'There’s also a new addition in Zabbix 7.0, which is specifically for the following
    three pollers:'
  id: totrans-408
  prefs: []
  type: TYPE_NORMAL
  zh: Zabbix 7.0 版本中还新增了专门针对以下三种轮询器的功能：
- en: Agent poller
  id: totrans-409
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 代理轮询器
- en: HTTP agent poller
  id: totrans-410
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: HTTP 代理轮询器
- en: SNMP poller (for walk[OID] and get[OID] items)
  id: totrans-411
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: SNMP 轮询器（用于 walk[OID] 和 get[OID] 项目）
- en: These processes now execute checks asynchronously. What that means is that they
    can execute multiple (item) checks at the same time. In older versions of Zabbix,
    these pollers could only execute a single check at the time.
  id: totrans-412
  prefs: []
  type: TYPE_NORMAL
  zh: 这些进程现在异步执行检查。意思是它们可以同时执行多个（项目）检查。在早期版本的 Zabbix 中，这些轮询器每次只能执行一个检查。
- en: It’s still possible to add multiple of these processes with, for example, **StartAgentPollers**,
    but it now functions differently. This will execute a maximum of 1,000 checks
    per poller, which is configurable with the **MaxConcurrentChecksPerPoller** parameter.
  id: totrans-413
  prefs: []
  type: TYPE_NORMAL
  zh: 仍然可以通过例如 **StartAgentPollers** 添加多个这些进程，但现在其功能有所不同。这将每个轮询器执行最多 1,000 次检查，这可以通过
    **MaxConcurrentChecksPerPoller** 参数进行配置。
