- en: Building a Virtual Switching Infrastructure Using Open vSwitch
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Open vSwitch 构建虚拟交换基础设施
- en: In *[Chapter 4](05786c3c-b24e-40dc-82a7-ed6072eca14f.xhtml), Virtual Network
    Infrastructure Using Linux Bridges*, we looked at how the Linux bridge mechanism
    driver and agent build a virtual network infrastructure using different types
    of interfaces and Linux bridges. In this chapter, you will be introduced to the
    Open vSwitch mechanism driver and its respective agent, which utilizes Open vSwitch
    as the virtual switching technology that connect instances and hosts to the physical
    network.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在 *[第4章](05786c3c-b24e-40dc-82a7-ed6072eca14f.xhtml)，使用 Linux 桥接的虚拟网络基础设施* 中，我们研究了
    Linux 桥接机制驱动程序和代理如何使用不同类型的接口和 Linux 桥接构建虚拟网络基础设施。在本章中，你将了解 Open vSwitch 机制驱动程序及其相应的代理，该代理利用
    Open vSwitch 作为虚拟交换技术，将实例和主机连接到物理网络。
- en: 'In this chapter, you will do the following:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你将执行以下操作：
- en: Discover how Open vSwitch is used to build a virtual network infrastructure
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 发现 Open vSwitch 如何用于构建虚拟网络基础设施
- en: Visualize traffic flow through virtual switches
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可视化虚拟交换机中的流量流动
- en: Deploy the Open vSwitch mechanism driver and agent on hosts
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在主机上部署 Open vSwitch 机制驱动程序和代理
- en: Using the Open vSwitch driver
  id: totrans-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Open vSwitch 驱动程序
- en: 'The Open vSwitch mechanism driver supports a range of traditional and overlay
    networking technologies, and has support for the following types of drivers:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: Open vSwitch 机制驱动程序支持多种传统和覆盖网络技术，并支持以下类型的驱动程序：
- en: Local
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 本地
- en: Flat
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 扁平化
- en: VLAN
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: VLAN
- en: VXLAN
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: VXLAN
- en: GRE
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: GRE
- en: Within OpenStack Networking, Open vSwitch operates as a software switch that
    uses virtual network bridges and flow rules to forward packets between hosts.
    Although it is capable of supporting many technologies and protocols, only a subset
    of Open vSwitch features are leveraged by OpenStack Networking.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 在 OpenStack 网络中，Open vSwitch 作为一个软件交换机，使用虚拟网络桥接和流规则在主机之间转发数据包。尽管它能够支持许多技术和协议，但
    OpenStack 网络仅利用 Open vSwitch 的一部分功能。
- en: 'The following are three main components of Open vSwitch:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是 Open vSwitch 的三个主要组件：
- en: '**Kernel module**: The `openvswitch` kernel module is the equivalent of ASICs
    on a hardware switch. It is the data plane of the switch where all packet processing
    takes place.'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**内核模块**：`openvswitch` 内核模块相当于硬件交换机中的 ASIC。它是交换机的数据平面，所有的数据包处理都发生在此处。'
- en: '**vSwitch daemon**: The `ovs-vswitchd` daemon is a Linux process that runs
    in user space on every physical host and dictates how the kernel module will be
    programmed.'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**vSwitch 守护进程**：`ovs-vswitchd` 守护进程是一个 Linux 进程，在每个物理主机的用户空间中运行，决定内核模块如何编程。'
- en: '**Database server**: An OpenStack/Open vSwitch implementation uses a local
    database on every physical host called the **Open vSwitch Database Server** (**OVSDB**),
    which maintains the configuration of the virtual switches.'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**数据库服务器**：OpenStack/Open vSwitch 实现使用每个物理主机上的本地数据库，称为**Open vSwitch 数据库服务器**（**OVSDB**），它维护虚拟交换机的配置。'
- en: 'A high-level architecture diagram of the preceding components can be seen here:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 上述组件的高级架构图可以在这里看到：
- en: '![](img/08b22c1f-e238-4798-8af0-291cd2da79be.png)'
  id: totrans-19
  prefs: []
  type: TYPE_IMG
  zh: '![](img/08b22c1f-e238-4798-8af0-291cd2da79be.png)'
- en: The Neutron Open vSwitch agent, `neutron-openvswitch-agent`, is a service that's
    configured on hosts using the Open vSwitch mechanism driver and is responsible
    for managing the implementation of networks and related interfaces. The agent
    connects tap interfaces to Open vSwitch or Linux bridges, depending on the firewall
    configuration, and programs flows using utilities such as `ovs-vsctl` and `ovs-ofctl` based
    on data provided by the `neutron-server` service.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: Neutron Open vSwitch 代理，`neutron-openvswitch-agent`，是一个服务，它通过 Open vSwitch 机制驱动程序在主机上配置，负责管理网络及相关接口的实施。该代理根据防火墙配置，将
    tap 接口连接到 Open vSwitch 或 Linux 桥接，并使用 `ovs-vsctl` 和 `ovs-ofctl` 等工具，根据 `neutron-server`
    服务提供的数据来编程流。
- en: 'In an Open vSwitch-based network implementation, there are five distinct types
    of virtual networking devices, as follows:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 在基于 Open vSwitch 的网络实现中，有五种不同类型的虚拟网络设备，如下所示：
- en: Tap devices
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Tap 设备
- en: Linux bridges
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Linux 桥接
- en: Virtual ethernet cables
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 虚拟以太网电缆
- en: OVS bridges
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: OVS 桥接
- en: OVS patch ports
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: OVS 补丁端口
- en: Tap devices and Linux bridges were described briefly in the previous section,
    and their use in an Open vSwitch-based network remains the same. Virtual Ethernet
    (**veth**) cables are virtual interfaces that mimic network patch cables. An Ethernet
    frame sent to one end of a veth cable is received by the other end, just like
    a real network patch cable. Neutron makes use of veth cables when making connections
    between network namespaces and Linux bridges, as well as when connecting Linux
    bridges to Open vSwitch switches.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: Tap 设备和 Linux 桥接在前一节中已有简要描述，并且它们在 Open vSwitch 网络中的使用保持不变。虚拟以太网 (**veth**) 电缆是模拟网络补丁电缆的虚拟接口。发送到
    veth 电缆一端的以太网帧将被另一端接收，就像真实的网络补丁电缆一样。当 Neutron 在网络命名空间与 Linux 桥接之间建立连接时，或者将 Linux
    桥接连接到 Open vSwitch 交换机时，它会利用 veth 电缆。
- en: Neutron connects interfaces used by DHCP or router namespaces and instances
    to OVS bridge ports. The ports themselves can be configured much like a physical
    switch port. Open vSwitch maintains information about connected devices, including
    MAC addresses and interface statistics.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: Neutron 将 DHCP 或路由器命名空间和实例使用的接口连接到 OVS 桥接端口。这些端口本身可以像物理交换机端口一样进行配置。Open vSwitch
    维护关于连接设备的信息，包括 MAC 地址和接口统计数据。
- en: 'Open vSwitch has a built-in port type that mimics the behavior of a Linux veth
    cable, but is optimized for use with OVS bridges. When connecting two Open vSwitch
    bridges, a port on each switch is reserved as a **patch port**. Patch ports are
    configured with a peer name that corresponds to the patch port on the other switch.
    Graphically, it looks something like this:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: Open vSwitch 内置了一种端口类型，模拟 Linux veth 电缆的行为，但经过优化以用于 OVS 桥接。当连接两个 Open vSwitch
    桥接时，每个交换机上的一个端口会被保留作为 **patch 端口**。Patch 端口配置了与另一个交换机的 patch 端口相对应的对等名称。从图形上看，它像这样：
- en: '![](img/08895d69-89b1-4519-9485-414488ea8d98.png)'
  id: totrans-30
  prefs: []
  type: TYPE_IMG
  zh: '![](img/08895d69-89b1-4519-9485-414488ea8d98.png)'
- en: Figure 5.1
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.1
- en: In the preceding diagram, two OVS bridges are cross-connected via a patch port
    on each switch. Open vSwitch patch ports are used to connect Open vSwitch bridges
    to each other, while Linux veth interfaces are used to connect Open vSwitch bridges
    to Linux bridges, or Linux bridges to other Linux bridges.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的示意图中，两个 OVS 桥接通过每个交换机上的一个 patch 端口进行交叉连接。Open vSwitch 的 patch 端口用于将 Open
    vSwitch 桥接互联，而 Linux veth 接口用于将 Open vSwitch 桥接与 Linux 桥接连接，或将 Linux 桥接与其他 Linux
    桥接连接。
- en: Basic OpenvSwitch commands
  id: totrans-33
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 基本的 OpenvSwitch 命令
- en: Open vSwitch includes utilities that can be used to manage virtual switches
    created by users, including those created by the OpenStack Networking agent. These
    commands are useful when troubleshooting issues that inevitably occur on the network.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: Open vSwitch 包括可用于管理用户创建的虚拟交换机的实用工具，包括 OpenStack 网络代理创建的虚拟交换机。这些命令在故障排除时非常有用，尤其是在网络上不可避免地出现问题时。
- en: Base commands
  id: totrans-35
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 基本命令
- en: 'The majority of Open vSwitch configuration and troubleshooting can be accomplished
    with the following commands:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数 Open vSwitch 配置和故障排除可以通过以下命令完成：
- en: '`ovs-vsctl`: A tool used to configure the `ovs-vswitchd` database'
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ovs-vsctl`：用于配置 `ovs-vswitchd` 数据库的工具'
- en: '`ovs-ofctl`: A tool used for monitoring and administering OpenFlow switches'
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ovs-ofctl`：用于监控和管理 OpenFlow 交换机的工具'
- en: '`ovs-dpctl`: A tool used to administer Open vSwitch data paths'
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ovs-dpctl`：用于管理 Open vSwitch 数据路径的工具'
- en: '`ovs-appctl`: A tool used to query and manage Open vSwitch daemons'
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ovs-appctl`：用于查询和管理 Open vSwitch 守护进程的工具'
- en: ovs-vsctl
  id: totrans-41
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: ovs-vsctl
- en: The `ovs-vsctl` tool is used to configure and view OVS bridge/switch operations.
    With this tool, users can configure ports on a switch, create and delete virtual
    switches, create bonds, and manage VLAN tagging on ports.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: '`ovs-vsctl` 工具用于配置和查看 OVS 桥接/交换机操作。通过该工具，用户可以配置交换机上的端口，创建和删除虚拟交换机，创建绑定，并管理端口上的
    VLAN 标记。'
- en: 'Useful commands include the following:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 有用的命令包括以下内容：
- en: '`ovs-vsctl show`: Prints a brief overview of the switch database configuration,
    including ports, VLANs, and so on'
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ovs-vsctl show`：打印交换机数据库配置的简要概览，包括端口、VLAN 等'
- en: '`ovs-vsctl list-br`: Prints a list of configured bridges'
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ovs-vsctl list-br`：打印已配置桥接的列表'
- en: '`ovs-vsctl list-ports <bridge>`: Prints a list of ports on the specified bridge'
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ovs-vsctl list-ports <bridge>`：打印指定桥接上的端口列表'
- en: '`ovs-vsctl list interface`: Prints a list of interfaces along with statistics
    and other data'
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ovs-vsctl list interface`：打印接口列表及其统计数据和其他信息'
- en: ovs-ofctl
  id: totrans-48
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: ovs-ofctl
- en: The `ovs-ofctl` tool is used to monitor and administer OpenFlow switches. The
    Neutron Open vSwitch agent uses `ovs-ofctl` to program flows on the virtual switches
    that are used to dictate traffic flow, perform VLAN tagging, perform NAT, and
    more.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: '`ovs-ofctl` 工具用于监控和管理 OpenFlow 交换机。Neutron Open vSwitch 代理使用 `ovs-ofctl` 来编程虚拟交换机上的流量，用以控制流量、执行
    VLAN 标记、执行 NAT 等。'
- en: 'Useful commands include the following:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 有用的命令包括以下内容：
- en: '`ovs-ofctl show <bridge>`: Shows OpenFlow features, actions, and port descriptions
    for the specified bridge.'
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ovs-ofctl show <bridge>`：显示指定桥接器的 OpenFlow 特性、动作和端口描述。'
- en: '`ovs-ofctl dump-flows <bridge> <flow>`: Prints the flow entries for the specified
    bridge. If the flow is specified, only that flow is shown.'
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ovs-ofctl dump-flows <bridge> <flow>`：打印指定桥接器的流条目。如果指定了流，只会显示该流。'
- en: '`ovs-ofctl dump-ports-desc <bridge>`: Prints port statistics for the specified
    bridge, including the state, peer, and speed of the interface.'
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ovs-ofctl dump-ports-desc <bridge>`：打印指定桥接器的端口统计信息，包括接口的状态、对等端和速度。'
- en: ovs-dpctl
  id: totrans-54
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: ovs-dpctl
- en: The `ovs-dpctl` tool is used to administer and query Open vSwitch data paths.
    Unlike `ovs-ofctl`, `ovs-dpctl` reflects flows for packets that have been matched
    by actual traffic traversing the system.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: '`ovs-dpctl` 工具用于管理和查询 Open vSwitch 数据路径。与 `ovs-ofctl` 不同，`ovs-dpctl` 显示的是由实际流量匹配的流。'
- en: 'Useful commands include the following:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 有用的命令包括以下内容：
- en: '`ovs-dpctl dump-flows`: Shows the flow table data for all flows traversing
    the system'
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ovs-dpctl dump-flows`：显示系统中所有流量的流表数据'
- en: ovs-appctl
  id: totrans-58
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: ovs-appctl
- en: The `ovs-appctl` tool is used to query and manage Open vSwitch daemons, including
    `ovs-vswitchd`, `ovs-controller`, and others.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: '`ovs-appctl` 工具用于查询和管理 Open vSwitch 守护进程，包括 `ovs-vswitchd`、`ovs-controller`
    等。'
- en: 'Useful commands include the following:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 有用的命令包括以下内容：
- en: '`ovs-appctl bridge/dump-flows <bridge>`: Dumps OpenFlow flows on the specified
    bridge'
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ovs-appctl bridge/dump-flows <bridge>`：转储指定桥接器上的 OpenFlow 流量'
- en: '`ovs-appctl dpif/dump-flows <bridge>`: Dumps data path flows on the specified
    bridge'
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ovs-appctl dpif/dump-flows <bridge>`：转储指定桥接器的数据路径流'
- en: '`ovs-appctl ofproto/trace <bridge> <flow>`: Shows the entire flow field of
    a given flow, including the matched rule and the action taken'
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ovs-appctl ofproto/trace <bridge> <flow>`：显示给定流的完整流字段，包括匹配的规则和执行的动作'
- en: Many of these commands are used by the Neutron Open vSwitch agent to program
    virtual switches and can often be used by operators to troubleshoot network connectivity
    issues along the way. Familiarizing yourself with these commands and their output
    is highly recommended.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 这些命令多数由 Neutron Open vSwitch 代理用于编程虚拟交换机，操作员也经常用它们来排查网络连接问题。强烈建议熟悉这些命令及其输出。
- en: Visualizing traffic flow when using Open vSwitch
  id: totrans-65
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 可视化 Open vSwitch 的流量
- en: 'When using the Open vSwitch driver, for an Ethernet frame to travel from the
    virtual machine instance to the physical network, it will pass through many different
    interfaces, including the following:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 在使用 Open vSwitch 驱动时，为了让以太网帧从虚拟机实例传输到物理网络，它将经过多个不同的接口，包括以下内容：
- en: '| **Network Type** | **Interface Type** | **Interface Name** |'
  id: totrans-67
  prefs: []
  type: TYPE_TB
  zh: '| **网络类型** | **接口类型** | **接口名称** |'
- en: '| all | tap | tapN |'
  id: totrans-68
  prefs: []
  type: TYPE_TB
  zh: '| all | tap | tapN |'
- en: '| all | bridge | qbrXXXX (only used with the iptables firewall driver) |'
  id: totrans-69
  prefs: []
  type: TYPE_TB
  zh: '| all | bridge | qbrXXXX（仅与 iptables 防火墙驱动一起使用） |'
- en: '| all | veth | `qvbXXXX`, `qvoXXXX` (only used with the iptables firewall driver)
    |'
  id: totrans-70
  prefs: []
  type: TYPE_TB
  zh: '| all | veth | `qvbXXXX`, `qvoXXXX`（仅与 iptables 防火墙驱动一起使用） |'
- en: '| all | vSwitch | br-int |'
  id: totrans-71
  prefs: []
  type: TYPE_TB
  zh: '| all | vSwitch | br-int |'
- en: '| flat, vlan | vSwitch | br-ex (user-configurable) |'
  id: totrans-72
  prefs: []
  type: TYPE_TB
  zh: '| flat, vlan | vSwitch | br-ex（用户可配置） |'
- en: '| vxlan, gre | vSwitch | br-tun |'
  id: totrans-73
  prefs: []
  type: TYPE_TB
  zh: '| vxlan, gre | vSwitch | br-tun |'
- en: '| flat, vlan | patch | `int-br-ethX`, `phy-br-ethX` |'
  id: totrans-74
  prefs: []
  type: TYPE_TB
  zh: '| flat, vlan | patch | `int-br-ethX`, `phy-br-ethX` |'
- en: '| vxlan, gre | patch | patch-tun, patch-int |'
  id: totrans-75
  prefs: []
  type: TYPE_TB
  zh: '| vxlan, gre | patch | patch-tun, patch-int |'
- en: '| flat, vlan | physical | ethX (where X is the interface) |'
  id: totrans-76
  prefs: []
  type: TYPE_TB
  zh: '| flat, vlan | physical | ethX（X 为接口编号） |'
- en: The Open vSwitch bridge `br-int` is known as the **integration bridge**. The
    integration bridge is the central virtual switch that most virtual devices are
    connected to, including instances, DHCP servers, routers, and more. When Neutron
    security groups are enabled and the iptables firewall driver is used, instances
    are not directly connected to the integration bridge. Instead, instances are connected
    to individual Linux bridges that are cross-connected to the integration bridge
    using a veth cable.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: Open vSwitch 桥接器 `br-int` 被称为 **集成桥**。集成桥是大多数虚拟设备连接的中心虚拟交换机，包括实例、DHCP 服务器、路由器等。当启用
    Neutron 安全组并使用 iptables 防火墙驱动程序时，实例不会直接连接到集成桥。相反，实例连接到各个 Linux 桥接器，这些 Linux 桥接器通过
    veth 电缆与集成桥交叉连接。
- en: The `openvswitch` firewall driver is an alternative driver that implements security
    group rules using OpenFlow rules, but this is outside the scope of this book.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: '`openvswitch` 防火墙驱动程序是一个替代驱动程序，它通过 OpenFlow 规则实现安全组规则，但这超出了本书的范围。'
- en: The Open vSwitch bridge `br-ethX` is known as the **provider bridge**. The provider
    bridge provides connectivity to the physical network via a connected physical
    interface. The provider bridge is also connected to the integration bridge by
    a virtual patch cable which is provided by patch ports `int-br-ethX` and `phy-br-ethX`.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: Open vSwitch 桥接器 `br-ethX` 被称为 **提供者桥**。提供者桥通过连接的物理接口提供与物理网络的连接。提供者桥也通过虚拟补丁电缆与集成桥连接，该补丁电缆由补丁端口
    `int-br-ethX` 和 `phy-br-ethX` 提供。
- en: 'A visual representation of the architecture described here can be seen in the
    following diagram:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 这里描述的架构的可视化表示可以在以下图表中看到：
- en: '![](img/d01dc49d-0c21-44e9-bb34-8b00bdc884c8.png)'
  id: totrans-81
  prefs: []
  type: TYPE_IMG
  zh: '![](img/d01dc49d-0c21-44e9-bb34-8b00bdc884c8.png)'
- en: Figure 5.2
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.2
- en: In the preceding diagram, instances are connected to an individual Linux bridge
    via their respective tap interface. The Linux bridges are connected to the OVS
    integration bridge using a **veth** interface. OpenFlow rules on the integration
    bridge dictate how traffic is forwarded through the virtual switch. The integration
    bridge is connected to the provider bridge using an OVS patch cable. Lastly, the
    provider bridge is connected to the physical network interface, which allows traffic
    to enter and exit the host onto the physical network infrastructure.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的图示中，实例通过各自的 tap 接口连接到单独的 Linux 桥接器。Linux 桥接器通过 **veth** 接口与 OVS 集成桥连接。集成桥上的
    OpenFlow 规则决定了如何通过虚拟交换机转发流量。集成桥通过 OVS 补丁电缆连接到提供者桥。最后，提供者桥连接到物理网络接口，允许流量进出主机并进入物理网络基础设施。
- en: When using the Open vSwitch driver, each controller, network, or compute node
    in the environment has its own integration bridge and provider bridge. The virtual
    switches across nodes are effectively cross-connected to one another through the
    physical network. More than one provider bridge can be configured on a host, but
    often requires the use of a dedicated physical interface per provider bridge.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 在使用 Open vSwitch 驱动程序时，环境中的每个控制器、网络或计算节点都有自己的集成桥和提供者桥。跨节点的虚拟交换机通过物理网络有效地相互交叉连接。一个主机上可以配置多个提供者桥，但通常需要为每个提供者桥使用一个专用的物理接口。
- en: Identifying ports on the virtual switch
  id: totrans-85
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 标识虚拟交换机上的端口
- en: 'Using the `ovs-ofctl show br-int` command, we can see a logical representation
    of the integration bridge. The following screenshot demonstrates the use of this
    command to show the switch ports of the integration bridge on `compute02`:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 `ovs-ofctl show br-int` 命令，我们可以看到集成桥的逻辑表示。以下截图展示了使用此命令查看 `compute02` 上集成桥的交换机端口：
- en: '![](img/ea15fddd-3a0c-4ed0-85de-6f0bd970ac59.png)'
  id: totrans-87
  prefs: []
  type: TYPE_IMG
  zh: '![](img/ea15fddd-3a0c-4ed0-85de-6f0bd970ac59.png)'
- en: 'The following are the components demonstrated in the preceding screenshot:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是前面截图中展示的组件：
- en: Port number 1 is named `int-br-eth2` and is one end of an OVS patch cable. The
    other end connects to the provider bridge, `br-eth2` (not shown).
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 端口号 1 被命名为`int-br-eth2`，是 OVS 补丁电缆的一端。另一端连接到提供者桥接器 `br-eth2`（未显示）。
- en: Port number 2 is named `patch-tun` and is one end of an OVS patch cable. The
    other end connects to the tunnel bridge, `br-tun` (not pictured).
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 端口号 2 被命名为 `patch-tun`，是 OVS 补丁电缆的一端。另一端连接到隧道桥 `br-tun`（未显示）。
- en: Port number 3 is named `qvo3de035cc-79` and corresponds to Neutron port `3de035cc-79a9-4172-bb25-d4a7ea96325e`.
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 端口号 3 被命名为 `qvo3de035cc-79`，对应 Neutron 端口 `3de035cc-79a9-4172-bb25-d4a7ea96325e`。
- en: Port number 4 is named `qvoce30da31-3a`a and corresponds to Neutron port `ce30da31-3a71-4c60-a350-ac0453b24d7d`.
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 端口号 4 被命名为`qvoce30da31-3a`，对应的 Neutron 端口是`ce30da31-3a71-4c60-a350-ac0453b24d7d`。
- en: Port number 5 is named `qvoa943af89-8e` and corresponds to Neutron port `` `a943af89-8e21-4b1d-877f-abe946f6e565.`
    ``
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 端口号 5 被命名为 `qvoa943af89-8e`，对应的 Neutron 端口是 `` `a943af89-8e21-4b1d-877f-abe946f6e565.`
    ``
- en: The LOCAL port named `br-int` is used internally by Open vSwitch and can be
    ignored.
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 名为 `br-int` 的本地端口是 Open vSwitch 内部使用的，可以忽略。
- en: 'The following screenshot demonstrates the switch configuration in a graphical
    manner:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图以图形方式展示了交换机的配置：
- en: '![](img/190fb5f1-dbf1-4043-a3ad-38199335ffd6.png)'
  id: totrans-96
  prefs: []
  type: TYPE_IMG
  zh: '![](img/190fb5f1-dbf1-4043-a3ad-38199335ffd6.png)'
- en: Figure 5.3
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.3
- en: Identifying the local VLANs associated with ports
  id: totrans-98
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 确定与端口相关的本地 VLAN
- en: Every port on the integration bridge connected to an instance or other network
    resource is placed in a VLAN that is local to that virtual switch.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 每个连接到实例或其他网络资源的集成桥接器端口，都被分配到一个本地 VLAN，该 VLAN 属于该虚拟交换机。
- en: The Open vSwitch database on each host is independent of all other hosts, and
    the local VLAN database is not directly related to the physical network infrastructure.
    Instances in the same Neutron network on a particular host are placed in the same
    VLAN on the local integration bridge, but there is no VLAN ID consistency expected
    between hosts. That said, flow rules will be implemented on each host that maps
    the local VLAN ID to the ID associated with the respective Neutron network, allowing
    for traffic between hosts across the common VLAN. This behavior will be discussed
    in further detail later in this chapter.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 每个主机上的 Open vSwitch 数据库都是独立的，与其他主机无关，且本地 VLAN 数据库与物理网络基础设施没有直接关系。在特定主机上的同一 Neutron
    网络中的实例被放置在本地集成桥接器的同一 VLAN 中，但不同主机之间的 VLAN ID 不一定保持一致。也就是说，流规则将在每个主机上实现，将本地 VLAN
    ID 映射到与相应 Neutron 网络关联的 ID，从而允许跨共享 VLAN 进行主机之间的流量传输。本行为将在本章后续部分进行详细讨论。
- en: 'Using the `ovs-vsctl show` command, you can identify the local VLAN tag of
    all ports on all virtual switches on the host. The following screenshot demonstrates
    this command in action on `compute02`:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 `ovs-vsctl show` 命令，你可以识别主机上所有虚拟交换机上所有端口的本地 VLAN 标签。以下截图展示了在 `compute02`
    上运行该命令的效果：
- en: '![](img/14c94a42-eda9-4b2a-a887-53cb89438140.png)'
  id: totrans-102
  prefs: []
  type: TYPE_IMG
  zh: '![](img/14c94a42-eda9-4b2a-a887-53cb89438140.png)'
- en: Connected to the integration bridge are three interfaces named `qvoce30da31-3a`,
    `qvoa943af89-8e`, and `qvo3de035cc-79`. Two of the interfaces are in the same
    network and reside in the same local VLAN. The other interface, `qvoa943af89-8e`,
    is in a different network and thus is a different VLAN.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 集成桥接器上连接着三个接口，分别命名为 `qvoce30da31-3a`、`qvoa943af89-8e` 和 `qvo3de035cc-79`。其中两个接口位于同一网络，并处于同一个本地
    VLAN 中。另一个接口 `qvoa943af89-8e` 则位于不同的网络中，因此属于不同的 VLAN。
- en: The local VLAN IDs are arbitrarily assigned by the local Open vSwitch process
    and may change upon restart of the `openvswitch-switch` service or after a reboot.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 本地 VLAN ID 是由本地 Open vSwitch 进程随机分配的，可能会在重启 `openvswitch-switch` 服务或重新启动后发生变化。
- en: Programming flow rules
  id: totrans-105
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 编程流规则
- en: Unlike the Linux bridge architecture, the Open vSwitch driver does not use VLAN
    interfaces on the host to tag traffic. Instead, the Open vSwitch agent programs
    flow rules on the virtual switches that dictate how traffic traversing the switch
    should be manipulated before forwarding. When traffic traverses a virtual switch,
    flow rules on the switch can transform, add, or strip the VLAN tags before forwarding
    the traffic. In addition to this, flow rules can be added that drop traffic if
    it matches certain characteristics. Open vSwitch is capable of performing other
    types of actions on traffic, but those actions are outside the scope of this book.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 与 Linux 桥接架构不同，Open vSwitch 驱动程序不会使用主机上的 VLAN 接口来标记流量。相反，Open vSwitch 代理在虚拟交换机上编程流规则，指示如何在转发前处理通过交换机的流量。当流量经过虚拟交换机时，交换机上的流规则可以在转发流量前转换、添加或去除
    VLAN 标签。此外，还可以添加流规则，丢弃匹配特定特征的流量。Open vSwitch 能执行对流量的其他类型操作，但这些操作超出了本书的范围。
- en: Using the `ovs-ofctl dump-flows <bridge>` command, we can observe the flows
    that are currently programmed on the specified bridge. The Open vSwitch plugin
    agent is responsible for converting information about the network in the Neutron
    database to Open vSwitch flows, and constantly maintains the flows as changes
    are being made to the network.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`ovs-ofctl dump-flows <bridge>`命令，我们可以观察到当前在指定桥上编程的流。Open vSwitch插件代理负责将Neutron数据库中关于网络的信息转换为Open
    vSwitch流，并在网络发生变化时持续维护这些流。
- en: Flow rules for VLAN networks
  id: totrans-108
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: VLAN网络的流规则
- en: In the following example, VLANs `40` and `42` represent two networks in the
    data center. Both VLANs have been trunked down to the `controller` and `compute`
    nodes, and Neutron networks have been configured that utilize those VLAN IDs.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 在以下示例中，VLAN `40`和`42`代表数据中心中的两个网络。这两个VLAN已被中继到`controller`和`compute`节点，并且已经配置了使用这些VLAN
    ID的Neutron网络。
- en: 'On the physical switch, the necessary configuration to facilitate the networking
    described here will resemble the following:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 在物理交换机上，为了实现这里描述的网络配置，所需的配置大致如下：
- en: '[PRE0]'
  id: totrans-111
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'When configured as a trunk port, the provider interface can support multiple
    VLAN networks. Traffic that enters physical interface `eth2` is processed by the
    flow rules on the `br-eth2` bridge it is connected to. Flow rules are processed
    in order of priority from highest to lowest. By default, `ovs-ofctl` returns flow
    entries in the same order that the virtual switch sends them. Using `--rsort`,
    it is possible to return the results in order of priority, from highest to lowest,
    to match the order in which packets are processed:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 当配置为中继端口时，提供商接口可以支持多个VLAN网络。进入物理接口`eth2`的流量会由连接到的`br-eth2`桥上的流规则进行处理。流规则按照从高到低的优先级顺序进行处理。默认情况下，`ovs-ofctl`以虚拟交换机发送流条目的相同顺序返回流条目。使用`--rsort`，可以按照优先级顺序返回结果，从高到低，以匹配数据包处理的顺序：
- en: '![](img/d50adb5c-2202-4c79-88f4-128d13aa80e1.png)'
  id: totrans-113
  prefs: []
  type: TYPE_IMG
  zh: '![](img/d50adb5c-2202-4c79-88f4-128d13aa80e1.png)'
- en: For readability, both the `duration` and `cookie` fields have been removed.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 为了提高可读性，`duration`和`cookie`字段已被移除。
- en: 'The first three rules specify a particular inbound port:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 前三条规则指定了一个特定的入站端口：
- en: '[PRE1]'
  id: totrans-116
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'According to the diagram in Figure 5.3, traffic entering the bridge `br-eth2` from
    physical interface `eth2` does so through port 1, not the port named `phy-br-eth2`,
    so the first three rules do not apply. As a result, traffic is forwarded to the
    integration bridge via the fourth rule, where no particular port is specified:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 根据图5.3中的示意图，流量通过物理接口`eth2`进入桥`br-eth2`时，使用的是端口1，而不是名为`phy-br-eth2`的端口，因此前三条规则不适用。因此，流量将通过第四条规则转发到集成桥接器，其中没有指定特定的端口：
- en: '![](img/0f1662f0-b7d8-4009-be41-3699f8ec0639.png)'
  id: totrans-118
  prefs: []
  type: TYPE_IMG
  zh: '![](img/0f1662f0-b7d8-4009-be41-3699f8ec0639.png)'
- en: Flows with an action of `NORMAL` instructs Open vSwitch to act as a learning
    switch, which means traffic will be forwarded out of all of the ports, other than
    the one where traffic was received, until the switch learns and updates its forwarding
    database. Traffic is forwarded out of the port that's connected to the integration
    bridge.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 动作为`NORMAL`的流指示Open vSwitch充当学习交换机，这意味着流量将从除接收流量的端口以外的所有端口转发，直到交换机学习并更新其转发数据库。流量将从连接到集成桥接器的端口转发出去。
- en: The forwarding database, or FDB table, is the equivalent of a CAM or MAC address
    table on a physical switch. This learning behavior is similar to that of a hardware
    switch that floods traffic out of all ports until it learns the proper path.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 转发数据库，或FDB表，相当于物理交换机上的CAM或MAC地址表。这种学习行为类似于硬件交换机，它会将流量洪泛到所有端口，直到学习到正确的路径。
- en: 'As traffic exits the provider bridge `br-eth2` and enters port 1 of the integration
    bridge `br-int`, it is evaluated by the flow rules on `br-int`, as shown here:'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 当流量从提供商桥接器`br-eth2`退出并进入集成桥接器`br-int`的端口1时，它会根据`br-int`上的流规则进行评估，如下所示：
- en: '![](img/6c6defc2-2ee9-4974-8288-81e16d46edb4.png)'
  id: totrans-122
  prefs: []
  type: TYPE_IMG
  zh: '![](img/6c6defc2-2ee9-4974-8288-81e16d46edb4.png)'
- en: 'Of immediate importance are the flow rules inspecting traffic sourced from
    the `int-br-eth2` interface, as that is where traffic enters the integration bridge
    from the provider bridge. The first rule shown here performs the action of modifying
    the VLAN ID of a packet from its original VLAN to a VLAN that is local to the
    integration bridge on the `compute` node when the original VLAN ID, as identified
    by the `dl_vlan` value, is 42:'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 立即需要关注的是检查来自`int-br-eth2`接口的流规则，因为流量正是从提供者桥接进入集成桥接。这里展示的第一条规则执行的操作是，当原始VLAN
    ID（由`dl_vlan`值标识）为42时，将数据包的VLAN ID从其原始VLAN修改为在`compute`节点上的集成桥接本地VLAN：
- en: '![](img/b80043b2-5731-443f-9fbd-91b99845b63e.png)'
  id: totrans-124
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b80043b2-5731-443f-9fbd-91b99845b63e.png)'
- en: When traffic tagged as VLAN 42 on the physical network is sent to an instance
    and forwarded through the provider bridge to the integration bridge, the VLAN
    tag is modified from 42 to local VLAN 1\. The frame is then forwarded to Table
    60 for additional processing, where the default action is NORMAL. As a result,
    the frame is forwarded to a port on `br-int`, which is connected to the instance
    that matches the destination MAC address.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 当带有VLAN 42标记的流量从物理网络发送到实例并通过提供者桥接转发到集成桥接时，VLAN标签会从42修改为本地VLAN 1。然后，该帧被转发到表60进行进一步处理，默认动作为NORMAL。因此，该帧被转发到`br-int`上的一个端口，该端口连接到与目标MAC地址匹配的实例。
- en: 'The next rule performs a similar action when the data link VLAN is `40` by
    replacing it with local VLAN 2\. If traffic matches the `drop` rule, it means
    that no other rules of a higher priority entering `int-br-eth2` and traffic will
    be dropped:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 下一条规则在数据链路VLAN为`40`时执行类似操作，将其替换为本地VLAN 2。如果流量匹配`drop`规则，意味着没有其他更高优先级的规则进入`int-br-eth2`，流量将被丢弃：
- en: '![](img/b10e51cf-1b8e-4e84-8338-ea2bd1fd7b44.png)'
  id: totrans-127
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b10e51cf-1b8e-4e84-8338-ea2bd1fd7b44.png)'
- en: Return traffic
  id: totrans-128
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 返回流量
- en: 'Return traffic from the instances through the integration bridge `br-int` may
    be processed by various flow rules that are used to inhibit ARP and MAC spoofing
    from instances. If the traffic is allowed, it is forwarded to Table 60 for additional
    processing and out to the provider bridge:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 从实例返回的流量通过集成桥接`br-int`时，可能会被各种流规则处理，这些规则用于抑制ARP和MAC欺骗。如果流量被允许，它将被转发到表60进行进一步处理，并最终转发到提供者桥接：
- en: '![](img/eb4af537-a41d-45e0-a37d-34f7d66f882c.png)'
  id: totrans-130
  prefs: []
  type: TYPE_IMG
  zh: '![](img/eb4af537-a41d-45e0-a37d-34f7d66f882c.png)'
- en: 'Once traffic hits the provider bridge `br-eth2`, it is processed by the flow
    rules as follows:'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦流量到达提供者桥接`br-eth2`，它将按照以下方式由流规则处理：
- en: '![](img/c165d624-1458-4123-99bf-b6cd32ec407d.png)'
  id: totrans-132
  prefs: []
  type: TYPE_IMG
  zh: '![](img/c165d624-1458-4123-99bf-b6cd32ec407d.png)'
- en: If these rules look familiar, it's because they are the same flow rules on the
    provider bridge that we showed you earlier. This time, however, traffic from the
    integration bridge connected to port `phy-br-eth2` is processed by these rules.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 如果这些规则看起来很熟悉，那是因为它们与我们之前展示的提供者桥接上的流规则相同。不过这一次，来自集成桥接连接到端口`phy-br-eth2`的流量将由这些规则处理。
- en: The first flow rule on the provider bridge checks the VLAN ID in the Ethernet
    header, and if it is `1`, modifies it to `42` before forwarding the traffic to
    the physical interface. The second rule modifies the VLAN tag of the frame from
    `2` to `40` before it exits the bridge. All other traffic from the integration
    bridge not tagged as VLAN `1` or `2` is dropped.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 提供者桥接上的第一条流规则检查以太网头部中的VLAN ID，如果是`1`，则在将流量转发到物理接口之前将其修改为`42`。第二条规则在流量离开桥接之前将帧的VLAN标签从`2`修改为`40`。所有来自集成桥接的流量，若未标记为VLAN
    `1`或`2`，则会被丢弃。
- en: Flow rules for a particular network will not exist on a bridge if there are
    no instances or resources in that network scheduled to that node. The Neutron
    Open vSwitch agent on each node is responsible for creating the appropriate flow
    rules for virtual switches on the respective node.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 如果某个网络中没有实例或资源调度到该节点，则该网络的流规则不会存在于桥接上。每个节点上的Neutron Open vSwitch代理负责为相应节点上的虚拟交换机创建适当的流规则。
- en: Flow rules for flat networks
  id: totrans-136
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 平面网络的流规则
- en: Flat networks in Neutron are untagged networks, meaning there is no 802.1q VLAN
    tag associated with the network when it is created. Internally, however, Open
    vSwitch treats flat networks similarly to VLAN networks when programming the virtual
    switches. Flat networks are assigned a local VLAN ID in the Open vSwitch database
    just like a VLAN network, and instances in the same flat network connected to
    the same integration bridge are placed in the same local VLAN. However, there
    is a difference between VLAN and flat networks that can be observed in the flow
    rules that are created on the integration and provider bridges. Instead of mapping
    the local VLAN ID to a physical VLAN ID, and vice versa, as traffic traverses
    the bridges, the local VLAN ID is added to or stripped from the Ethernet header
    by flow rules.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: Neutron 中的平面网络是未标记网络，这意味着在创建网络时，该网络没有与 802.1q VLAN 标签关联。然而，在内部，Open vSwitch
    在编程虚拟交换机时，将平面网络与 VLAN 网络相似地处理。平面网络在 Open vSwitch 数据库中被分配一个本地 VLAN ID，就像 VLAN 网络一样，连接到同一集成桥接的同一平面网络中的实例将被置于相同的本地
    VLAN 中。然而，VLAN 和平面网络之间存在一个差异，这可以通过在集成桥接和提供桥接上创建的流规则来观察。流量通过桥接时，局部 VLAN ID 被添加到以太网头部或从中去除，而不是将本地
    VLAN ID 映射到物理 VLAN ID，反之亦然。
- en: 'On the physical switch, the necessary configuration to facilitate the networking
    described here will resemble the following:'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 在物理交换机上，为了实现这里描述的网络配置，所需的配置将如下所示：
- en: '[PRE2]'
  id: totrans-139
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Alternatively, the interface can also be configured as an access port:'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 或者，接口也可以配置为接入端口：
- en: '[PRE3]'
  id: totrans-141
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Only one flat network is supported per provider interface. When configured as
    a trunk port with a native VLAN, the provider interface can support a single flat
    network and multiple VLAN networks. When configured as an access port, the interface
    can only support a single flat network and any attempt to tag traffic will fail.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 每个提供接口只支持一个平面网络。当配置为 trunk 端口并具有原生 VLAN 时，提供接口可以支持一个平面网络和多个 VLAN 网络。当配置为接入端口时，接口只能支持一个平面网络，任何尝试标记流量的行为将失败。
- en: 'In this example, a flat network has been added in Neutron that has no VLAN
    tag:'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个例子中，Neutron 中已添加了一个没有 VLAN 标签的平面网络：
- en: '![](img/edec1bcf-184a-4aeb-baeb-32d07866335c.png)'
  id: totrans-144
  prefs: []
  type: TYPE_IMG
  zh: '![](img/edec1bcf-184a-4aeb-baeb-32d07866335c.png)'
- en: 'On the physical switch, this network will correspond to the native (untagged)
    VLAN on the switch port connected to `eth2` of `compute02`. In this case, the
    native VLAN is 200\. An instance has been spun up on the network `MyFlatNetwork`,
    which results in the following virtual switch configuration:'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 在物理交换机上，这个网络将对应于连接到 `compute02` 上的 `eth2` 端口的原生（未标记）VLAN。在这种情况下，原生 VLAN 为 200。已在网络
    `MyFlatNetwork` 上启动了一个实例，导致以下虚拟交换机配置：
- en: '![](img/86ddb0bf-dc44-4d2f-8ebf-786e164889c0.png)'
  id: totrans-146
  prefs: []
  type: TYPE_IMG
  zh: '![](img/86ddb0bf-dc44-4d2f-8ebf-786e164889c0.png)'
- en: 'Notice that the port associated with the instance has been assigned a local
    VLAN ID of 3, as identified by the `tag` value, even though it is a flat network.
    On the integration bridge, there now exists a flow rule that modifies the VLAN
    header of an incoming Ethernet frame when it has no VLAN ID set:'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，关联到实例的端口已被分配了本地 VLAN ID 为 3，如 `tag` 值所示，即使它是平面网络。在集成桥接上，现在存在一条流规则，当传入的以太网帧没有设置
    VLAN ID 时，会修改其 VLAN 头：
- en: '![](img/c2129b44-84ff-4641-ad76-3b7674d57f77.png)'
  id: totrans-148
  prefs: []
  type: TYPE_IMG
  zh: '![](img/c2129b44-84ff-4641-ad76-3b7674d57f77.png)'
- en: TCI stands for **Tag Control Information**, and is a 2-byte field of the 802.1q
    header. For packets with an 802.1q header, this field contains VLAN information
    including the VLAN ID. For packets without an 802.1q header, also known as untagged,
    the `vlan_tci` value is set to zero (`0x0000`).
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: TCI 代表 **标签控制信息**，是 802.1q 头部的一个 2 字节字段。对于带有 802.1q 头部的数据包，此字段包含 VLAN 信息，包括
    VLAN ID。对于没有 802.1q 头部的数据包，也称为未标记数据包，`vlan_tci` 值被设置为零（`0x0000`）。
- en: The result is that incoming traffic on the flat network is tagged as VLAN 3
    and forwarded to instances connected to the integration bridge that reside in
    VLAN 3.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 结果是，平面网络上的传入流量被标记为 VLAN 3，并转发到连接到集成桥接并位于 VLAN 3 中的实例。
- en: 'As return traffic from the instance is processed by flow rules on the provider
    bridge, the local VLAN ID is stripped and the traffic becomes untagged:'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 当实例的返回流量由提供桥接上的流规则处理时，本地 VLAN ID 会被去除，流量变为未标记：
- en: '![](img/3797747e-3fb4-4e52-a6dc-7921460f8ecb.png)'
  id: totrans-152
  prefs: []
  type: TYPE_IMG
  zh: '![](img/3797747e-3fb4-4e52-a6dc-7921460f8ecb.png)'
- en: The untagged traffic is then forwarded out to the physical interface `eth2`
    and processed by the physical switch.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 未标记的流量随后被转发到物理接口 `eth2`，并由物理交换机处理。
- en: Flow rules for overlay networks
  id: totrans-154
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 覆盖网络的流规则
- en: Overlay networks in a reference implementation of Neutron are ones that use
    either VXLAN or GRE to encapsulate virtual instance traffic between hosts. Instances
    connected to an overlay network are attached to the integration bridge and use
    a local VLAN mapped to that network, just like the other network types we have
    discussed so far. All instances on the same host are connected to the same local
    VLAN.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Neutron 的参考实现中，覆盖网络是使用 VXLAN 或 GRE 来封装主机之间的虚拟实例流量的网络。连接到覆盖网络的实例附加到集成桥，并使用映射到该网络的本地
    VLAN，就像我们到目前为止讨论的其他网络类型一样。同一主机上的所有实例都连接到相同的本地 VLAN。
- en: In this example, an overlay network has been created with Neutron auto-assigning
    a segmentation ID of 39.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 在此示例中，已创建一个覆盖网络，Neutron 自动分配了分段 ID 39。
- en: '![](img/6db7405b-1a7c-47d4-8c7f-7b4627b034b1.png)'
  id: totrans-157
  prefs: []
  type: TYPE_IMG
  zh: '![](img/6db7405b-1a7c-47d4-8c7f-7b4627b034b1.png)'
- en: No changes are needed on the physical switching infrastructure to support this
    network, as the traffic will be encapsulated and forwarded through the overlay
    network interface, `eth1`.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 无需对物理交换基础设施进行更改以支持此网络，因为流量将通过覆盖网络接口`eth1`进行封装并转发。
- en: 'An instance has been spun up on the network `MyOverlayNetwork`, which results
    in the following virtual switch configuration:'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 在`MyOverlayNetwork`网络上启动了一个实例，这导致了以下虚拟交换机配置：
- en: '![](img/c1786c01-7aa6-4431-a02f-6e6862dcc591.png)'
  id: totrans-160
  prefs: []
  type: TYPE_IMG
  zh: '![](img/c1786c01-7aa6-4431-a02f-6e6862dcc591.png)'
- en: 'Notice that the port associated with the instance has been assigned a local
    VLAN ID of 4, even though it is an overlay network. When an instance sends traffic
    to another instance or device in the same network, the integration bridge forwards
    the traffic out toward the tunnel bridge, `br-tun`, where the following flow rules
    are consulted:'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，虽然这是一个覆盖网络，与实例关联的端口已经分配了本地 VLAN ID 4。当一个实例向同一网络中的另一个实例或设备发送流量时，集成桥会将流量转发到隧道桥`br-tun`，在此会参考以下流量规则：
- en: '![](img/551c9f09-b81b-4760-959b-9aaa8d972ed1.png)'
  id: totrans-162
  prefs: []
  type: TYPE_IMG
  zh: '![](img/551c9f09-b81b-4760-959b-9aaa8d972ed1.png)'
- en: The flows rules implemented on the tunnel bridge are unique, in that they specify
    a **virtual tunnel endpoint**, or VTEP, for every destination MAC address, including
    other instances and routers that are connected to the network. This behavior ensures
    that traffic is forwarded directly to the `compute` or `network` node where the
    destination resides and is not forwarded out on all ports of the bridge. Traffic
    that does not match is dropped.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 隧道桥上实现的流量规则是独特的，因为它们为每个目标 MAC 地址指定了一个**虚拟隧道端点**（VTEP），包括连接到网络的其他实例和路由器。此行为确保流量直接转发到目标所在的`compute`或`network`节点，而不是通过桥的所有端口转发。与之不匹配的流量会被丢弃。
- en: 'In this example, traffic to destination MAC address `fa:16:3e:f1:b0:49` is
    forwarded out to port `vxlan0a140064`, which, as we can see here, is mapped to
    a tunnel endpoint:'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 在此示例中，目标 MAC 地址`fa:16:3e:f1:b0:49`的流量被转发到端口`vxlan0a140064`，正如我们在这里看到的，它被映射到一个隧道端点：
- en: '![](img/d8b315d8-4b63-4939-8bdf-5632ab566eb2.png)'
  id: totrans-165
  prefs: []
  type: TYPE_IMG
  zh: '![](img/d8b315d8-4b63-4939-8bdf-5632ab566eb2.png)'
- en: The address `10.20.0.100` is the VXLAN tunnel endpoint for `controller01`, and
    the MAC address `fa:16:3e:f1:b0:49` belongs to the DHCP server in the `MyOverlayNetwork`
    network.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 地址`10.20.0.100`是`controller01`的 VXLAN 隧道端点，MAC 地址`fa:16:3e:f1:b0:49`属于`MyOverlayNetwork`网络中的
    DHCP 服务器。
- en: Return traffic to the instance is first processed by flow rules on the tunnel
    bridge and then forwarded to the integration bridge, where it is then forwarded
    to the instance.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 返回流量首先会通过隧道桥上的流量规则处理，然后转发到集成桥，最后再转发到实例。
- en: Flow rules for local networks
  id: totrans-168
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 本地网络的流量规则
- en: Local networks in an Open vSwitch implementation behave similar to that of a
    Linux bridge implementation. Instances in local networks are connected to the
    integration bridge and can communicate with other instances in the same network
    and local VLAN. There are no flow rules created for local networks, however.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Open vSwitch 实现中，本地网络的行为类似于 Linux 桥接实现。局域网中的实例连接到集成桥，并能够与同一网络和本地 VLAN 中的其他实例进行通信。然而，对于本地网络，没有创建流量规则。
- en: Traffic between instances in the same network remains local to the virtual switch,
    and by definition, local to the `compute` node on which they reside. This means
    that connectivity to services hosted on other nodes, such as DHCP and metadata,
    will be unavailable to any instance not on the same host as those services.
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 同一网络中实例之间的流量保持本地在虚拟交换机内，并且根据定义，它局限于实例所在的`compute`节点。这意味着，如果服务托管在其他节点上（例如 DHCP
    和元数据服务），任何不在这些服务所在主机上的实例将无法访问这些服务。
- en: Configuring the ML2 networking plugin
  id: totrans-171
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 配置ML2网络插件
- en: The remainder of this chapter is dedicated to providing instructions on installing
    and configuring the Neutron Open vSwitch agent and the ML2 plugin for use with
    the Open vSwitch mechanism driver. In this book, `compute02`, `compute03`, and
    `snat01` will be the only nodes configured for use with Open vSwitch.
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 本章的其余部分将专门提供有关安装和配置Neutron Open vSwitch代理以及ML2插件以便与Open vSwitch机制驱动程序一起使用的说明。在本书中，`compute02`、`compute03`和`snat01`将是唯一配置为与Open
    vSwitch一起使用的节点。
- en: Configuring the bridge interface
  id: totrans-173
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 配置桥接接口
- en: In this installation, physical network interface `eth2` will be utilized as
    the **provider interface** for bridging purposes.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 在本次安装中，物理网络接口`eth2`将作为**提供者接口**用于桥接目的。
- en: 'On `compute02`, `compute03`, and `snat01`, configure the `eth2` interface within
    the `/etc/network/interfaces` file as follows:'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 在`compute02`、`compute03`和`snat01`上，在`/etc/network/interfaces`文件中配置`eth2`接口，如下所示：
- en: '[PRE4]'
  id: totrans-176
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Close and save the file, and bring the interface up with the following command:'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 关闭并保存文件，并使用以下命令启用接口：
- en: '[PRE5]'
  id: totrans-178
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Because the interface will be used in a bridge, an IP address cannot be applied
    directly to the interface. If there is an IP address applied to `eth2`, it will
    become inaccessible once the interface is placed in a bridge. The bridge will
    be created later on in this chapter.
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 由于该接口将用于桥接，无法直接将IP地址应用于该接口。如果`eth2`上应用了IP地址，一旦该接口被置于桥接中，它将变得无法访问。桥接将在本章稍后创建。
- en: Configuring the overlay interface
  id: totrans-180
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 配置覆盖接口
- en: In this installation, physical network interface `eth1` will be utilized as
    the **overlay interface **for overlay networks using VXLAN. For VXLAN networking,
    this is the equivalent of the VXLAN tunnel endpoint, or VTEP. Neutron will be
    responsible for configuring some aspects of Open vSwitch once the initial network
    configuration has been completed.
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 在本次安装中，物理网络接口`eth1`将作为**覆盖接口**用于使用VXLAN的覆盖网络。对于VXLAN网络，这是VXLAN隧道终端（VTEP）的等效物。Neutron将在初始网络配置完成后，负责配置Open
    vSwitch的某些方面。
- en: 'On all hosts, configure the `eth1` interface within the `/etc/network/interfaces`
    file, if it has not already been done:'
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 在所有主机上，如果尚未完成，在`/etc/network/interfaces`文件中配置`eth1`接口：
- en: '[PRE6]'
  id: totrans-183
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Use the following table for the appropriate address. Substitute the address
    with `X` where appropriate:'
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 使用以下表格来确定适当的地址。在适当的地方，将地址替换为`X`：
- en: '| **Host** | **Address** |'
  id: totrans-185
  prefs: []
  type: TYPE_TB
  zh: '| **主机** | **地址** |'
- en: '| `compute02` | 10.20.0.102 |'
  id: totrans-186
  prefs: []
  type: TYPE_TB
  zh: '| `compute02` | 10.20.0.102 |'
- en: '| `compute03` | 10.20.0.103 |'
  id: totrans-187
  prefs: []
  type: TYPE_TB
  zh: '| `compute03` | 10.20.0.103 |'
- en: '| `snat01` | 10.20.0.104 |'
  id: totrans-188
  prefs: []
  type: TYPE_TB
  zh: '| `snat01` | 10.20.0.104 |'
- en: 'Close and save the file, and bring the interface up with the following command:'
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 关闭并保存文件，并使用以下命令启用接口：
- en: '[PRE7]'
  id: totrans-190
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Confirm that the interface is in an `UP` state and that the address has been
    set using the `ip addr show dev eth1` command. Ensure the `compute02` can communicate
    over the newly configured interface by pinging `controller01`:'
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`ip addr show dev eth1`命令确认接口处于`UP`状态，并且地址已被设置。通过ping `controller01`确保`compute02`可以通过新配置的接口进行通信：
- en: '![](img/a8de050c-6945-49b8-96b7-e1971355a34b.png)'
  id: totrans-192
  prefs: []
  type: TYPE_IMG
  zh: '![](img/a8de050c-6945-49b8-96b7-e1971355a34b.png)'
- en: Repeat this process for all of the nodes.
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 对所有节点重复此过程。
- en: If you experience any issues communicating across this interface, you *will*
    experience issues with VXLAN networks that have been created with OpenStack Networking.
    Any issues should be corrected before continuing.
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您在通过此接口通信时遇到任何问题，您*将*遇到使用OpenStack Networking创建的VXLAN网络的问题。任何问题应在继续之前进行修复。
- en: ML2 plugin configuration options
  id: totrans-195
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: ML2插件配置选项
- en: The ML2 plugin was initially installed in *[Chapter 3](bf508e37-ce8a-4116-89db-e8f8a6abf0f4.xhtml),
    Installing Neutron, *and was configured to support the Linux bridge mechanism
    driver in the previous chapter. It must be modified to support the Open vSwitch
    mechanism driver.
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: ML2插件最初安装在*[第3章](bf508e37-ce8a-4116-89db-e8f8a6abf0f4.xhtml)，安装Neutron，*中，并在上一章配置为支持Linux桥接机制驱动程序。它必须修改以支持Open
    vSwitch机制驱动程序。
- en: Mechanism drivers
  id: totrans-197
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 机制驱动程序
- en: Mechanism drivers are responsible for implementing networks described by the
    type driver. Mechanism drivers shipped with the ML2 plugin include `linuxbridge`,
    `openvswitch`, and `l2population`.
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 机制驱动程序负责实现由类型驱动程序描述的网络。随ML2插件一起发布的机制驱动程序包括`linuxbridge`、`openvswitch`和`l2population`。
- en: 'Update the ML2 configuration file on `controller01` and append `openvswitch`
    to the list of mechanism drivers:'
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 更新`controller01`上的ML2配置文件，并将`openvswitch`添加到机制驱动程序列表中：
- en: '[PRE8]'
  id: totrans-200
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: The Neutron Open vSwitch agent requires specific configuration options, which
    will be discussed later on in this chapter.
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: Neutron Open vSwitch 代理需要特定的配置选项，稍后将在本章中讨论。
- en: Flat networks
  id: totrans-202
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 平面网络
- en: The `flat_networks` configuration option defines interfaces that support the
    use of untagged networks, commonly referred to as native or access VLANs. This
    option requires that a provider label is specified. A **provider label** is an
    arbitrary label or name that is mapped to a physical interface or bridge on the
    host. These mappings will be discussed in further detail later on in this chapter.
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: '`flat_networks` 配置选项定义了支持使用无标签网络的接口，通常称为原生或接入 VLAN。此选项要求指定提供商标签。**提供商标签**是映射到主机上物理接口或桥接的任意标签或名称。关于这些映射的详细讨论将在本章稍后部分进行。'
- en: 'In the following example, the `physnet1` interface has been configured to support
    a flat network:'
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 在以下示例中，`physnet1` 接口已配置为支持平面网络：
- en: '[PRE9]'
  id: totrans-205
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Multiple interfaces can be defined using a comma-separated list:'
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 可以使用逗号分隔的列表定义多个接口：
- en: '[PRE10]'
  id: totrans-207
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Due to the lack of an identifier to segregate untagged traffic on the same interface,
    an interface can only support a single flat network.
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 由于缺乏用于隔离同一接口上无标签流量的标识符，因此一个接口只能支持单个平面网络。
- en: In this environment, the `flat_networks` option can remain *unconfigured*.
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种环境中，`flat_networks` 选项可以保持 *未配置*。
- en: Network VLAN ranges
  id: totrans-210
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 网络 VLAN 范围
- en: The `network_vlan_ranges` configuration option defines a range of VLANs that
    project networks will be associated with upon their creation when `tenant_network_types`
    is `vlan`. When the number of available VLANs reaches zero, tenants will no longer
    be able to create VLAN networks.
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: '`network_vlan_ranges` 配置选项定义了一个 VLAN 范围，当 `tenant_network_types` 为 `vlan` 时，项目网络将在创建时与这些
    VLAN 相关联。当可用的 VLAN 数量为零时，租户将无法再创建 VLAN 网络。'
- en: 'In the following example, VLAN IDs `40` through `43` are available for tenant
    network allocation:'
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 在以下示例中，VLAN ID `40` 到 `43` 可用于租户网络分配：
- en: '[PRE11]'
  id: totrans-213
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Non-contiguous VLANs can be allocated by using a comma-separated list:'
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 可以使用逗号分隔的列表分配非连续的 VLAN：
- en: '[PRE12]'
  id: totrans-215
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: In this installation, the provider label `physnet1` will be used with VLANs
    `40` through `43`. Those VLANs will be automatically assigned to `vlan` networks
    upon creation, unless overridden by a user with the `admin` role.
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 在此安装中，提供商标签 `physnet1` 将与 VLAN `40` 到 `43` 一起使用。这些 VLAN 会在创建时自动分配给 `vlan` 网络，除非被具有
    `admin` 角色的用户覆盖。
- en: 'Update the ML2 configuration file on the `controller` node and add the following
    `network_vlan_ranges` to the `[ml2_type_vlan]` section if it doesn''t already
    exist:'
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 如果 `[ml2_type_vlan]` 部分中尚未存在，更新 `controller` 节点上的 ML2 配置文件，并添加以下 `network_vlan_ranges`：
- en: '[PRE13]'
  id: totrans-218
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Tunnel ID ranges
  id: totrans-219
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 隧道 ID 范围
- en: When GRE networks are created, each network is assigned a unique segmentation
    ID that is used to encapsulate traffic. As traffic traverses the Open vSwitch
    tunnel bridge, the segmentation ID is used to populate a field in the encapsulation
    header of the packet. For GRE packets, the `KEY` header field is used.
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 当创建 GRE 网络时，每个网络会分配一个唯一的分段 ID，用于封装流量。当流量穿越 Open vSwitch 隧道桥时，分段 ID 用于填充数据包封装头中的字段。对于
    GRE 数据包，使用 `KEY` 头字段。
- en: The `tunnel_id_ranges` configuration option found under `[ml2_type_gre]` is
    a comma-separated list of ID ranges that are available for tenant network allocation
    when `tunnel_type` is set to `gre`.
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 在 `[ml2_type_gre]` 下找到的 `tunnel_id_ranges` 配置选项是一个以逗号分隔的 ID 范围列表，表示当 `tunnel_type`
    设置为 `gre` 时，可用于租户网络分配的 ID 范围。
- en: 'In the following example, segmentation IDs 1 through 1,000 are reserved for
    allocation to tenant networks upon creation:'
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 在以下示例中，分段 ID 1 到 1,000 保留用于租户网络创建时的分配：
- en: '[PRE14]'
  id: totrans-223
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'The `tunnel_id_ranges` option supports non-contiguous IDs using a comma-separated
    list as follows:'
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: '`tunnel_id_ranges` 选项支持使用逗号分隔的列表指定非连续的 ID 范围，如下所示：'
- en: '[PRE15]'
  id: totrans-225
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: GRE networks will not be configured as part of the exercises in this book, so
    `tunnel_id_ranges` can remain *unconfigured*.
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 本书中的练习不会配置 GRE 网络，因此 `tunnel_id_ranges` 可以保持 *未配置*。
- en: VNI Ranges
  id: totrans-227
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: VNI 范围
- en: When VXLAN networks are created, each network is assigned a unique segmentation
    ID that is used to encapsulate traffic.
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 当创建 VXLAN 网络时，每个网络会分配一个唯一的分段 ID，用于封装流量。
- en: The `vni_ranges` configuration option is a comma-separated list of ID ranges
    that are available for project network allocation when `tunnel_type` is set to `vxlan`.
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: '`vni_ranges` 配置选项是一个以逗号分隔的 ID 范围列表，表示当 `tunnel_type` 设置为 `vxlan` 时，可用于项目网络分配的
    ID 范围。'
- en: 'In the following example, segmentation IDs 1 through 1,000 are reserved for
    allocation to tenant networks upon creation:'
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 在以下示例中，段号1到1,000被保留，用于在创建时分配给租户网络：
- en: '[PRE16]'
  id: totrans-231
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'The `vni_ranges` option supports non-contiguous IDs using a comma-separated
    list as follows:'
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: '`vni_ranges`选项支持使用逗号分隔的列表表示非连续的ID，如下所示：'
- en: '[PRE17]'
  id: totrans-233
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'Update the ML2 configuration file on the `controller` node and add the following
    `vni_ranges` to the `[ml2_type_vxlan]` section if it doesn''t already exist:'
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 如果`ml2_type_vxlan`部分中还没有，更新`controller`节点上的ML2配置文件，并添加以下`vni_ranges`：
- en: '[PRE18]'
  id: totrans-235
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: The 24-bit VNI field in the VXLAN header supports up to approximately 16 million
    unique identifiers.
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: VXLAN头中的24位VNI字段支持最多约1600万个唯一标识符。
- en: Security groups
  id: totrans-237
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安全组
- en: The `enable_security_group` configuration option instructs Neutron to enable
    or disable security group-related API functions. This option is set to `true`
    by default.
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: '`enable_security_group`配置选项指示Neutron启用或禁用与安全组相关的API功能。此选项默认为`true`。'
- en: The `enable_ipset` configuration option instructs Neutron to enable or disable
    the `ipset` extension for iptables when the `iptables_hybrid` firewall driver
    is used. The use of ipsets allows for the creation of firewall rules that match
    entire sets of addresses at once rather than having individual lines per address,
    making lookups very efficient compared to traditional linear lookups. This option
    is set to `true` by default.
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: '`enable_ipset`配置选项指示Neutron在使用`iptables_hybrid`防火墙驱动程序时启用或禁用`ipset`扩展。使用ipset允许创建防火墙规则，匹配一组地址，而不是为每个地址创建单独的规则，从而使查找比传统线性查找更高效。此选项默认为`true`。'
- en: If at any time the ML2 configuration file is updated, you must restart the `neutron-server` service
    and respective Neutron agent for the changes to take effect.
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 如果ML2配置文件在任何时候被更新，必须重启`neutron-server`服务和相应的Neutron代理，才能使更改生效。
- en: Configuring the Open vSwitch driver and agent
  id: totrans-241
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 配置Open vSwitch驱动程序和代理
- en: The Open vSwitch mechanism driver is included with the ML2 plugin, and was installed
    in *[Chapter 3](bf508e37-ce8a-4116-89db-e8f8a6abf0f4.xhtml), Installing Neutron*.
    The following sections will walk you through the configuration of OpenStack Networking
    so that you can utilize the Open vSwitch driver and agent.
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: Open vSwitch机制驱动程序包含在ML2插件中，已安装于*[第3章](bf508e37-ce8a-4116-89db-e8f8a6abf0f4.xhtml)，安装Neutron*。以下各节将引导您配置OpenStack
    Networking，以便您使用Open vSwitch驱动程序和代理。
- en: While the Linux bridge and Open vSwitch agents and drivers can coexist in the
    same environment, they should not be installed and configured simultaneously on
    the same host.
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然Linux桥接和Open vSwitch代理与驱动程序可以在同一环境中共存，但不应在同一主机上同时安装和配置它们。
- en: Installing the Open vSwitch agent
  id: totrans-244
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装Open vSwitch代理
- en: 'To install the Open vSwitch agent, issue the following command on `compute02`,
    `compute03`, and `snat01`:'
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 要安装Open vSwitch代理，请在`compute02`、`compute03`和`snat01`上运行以下命令：
- en: '[PRE19]'
  id: totrans-246
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: Dependencies, such as Open vSwitch components `openvswitch-common` and `openvswitch-switch`,
    will be installed. If prompted to overwrite existing configuration files, type
    `N` at the `[default=N]` prompt.
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: 依赖项，如Open vSwitch组件`openvswitch-common`和`openvswitch-switch`，将被安装。如果提示覆盖现有配置文件，在`[default=N]`提示符下输入`N`。
- en: Updating the Open vSwitch agent configuration file
  id: totrans-248
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 更新Open vSwitch代理配置文件
- en: 'The Open vSwitch agent uses a configuration file located at `/etc/neutron/plugins/ml2/openvswitch_agent.ini`
    . The most common options can be seen as follows:'
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: Open vSwitch代理使用位于`/etc/neutron/plugins/ml2/openvswitch_agent.ini`的配置文件。常见的选项如下所示：
- en: '[PRE20]'
  id: totrans-250
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: Tunnel types
  id: totrans-251
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 隧道类型
- en: The `tunnel_types` configuration option specifies the types of tunnels supported
    by the agent. The two available options are `gre` and/or `vxlan`. The default
    value is `None`, which disables tunneling.
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: '`tunnel_types`配置选项指定代理支持的隧道类型。两个可用选项为`gre`和/或`vxlan`。默认值为`None`，即禁用隧道。'
- en: 'Update the `tunnel_types` configuration option in the `[agent]` section of
    the Open vSwitch agent configuration file accordingly on `compute02`, `compute03`,
    and `snat01`:'
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: 更新`[agent]`部分的` tunnel_types`配置选项，适用于`compute02`、`compute03`和`snat01`上的Open
    vSwitch代理配置文件：
- en: '[PRE21]'
  id: totrans-254
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: L2 population
  id: totrans-255
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: L2人口
- en: 'To enable support for the L2 population driver, the `l2_population` configuration
    option must be set to `true`. Update the `l2_population` configuration option
    in the `[vxlan]` section of the Open vSwitch agent configuration file accordingly
    on `compute02`, `compute03`, and `snat01`:'
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: 要启用对 L2 population 驱动程序的支持，必须将 `l2_population` 配置选项设置为 `true`。在 `compute02`、`compute03`
    和 `snat01` 上相应更新 Open vSwitch 代理配置文件中的 `l2_population` 配置选项：
- en: '[PRE22]'
  id: totrans-257
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: An important feature of the L2 population driver is its ARP responder functionality,
    which avoids the broadcasting of ARP requests across the overlay network. Each
    `compute` node can proxy ARP requests from virtual machines and provide them with
    replies, all without traffic leaving the host.
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: L2 population 驱动程序的一个重要功能是其 ARP 响应器功能，它可以避免在覆盖网络中广播 ARP 请求。每个 `compute` 节点可以代理虚拟机的
    ARP 请求并为其提供回复，所有这些操作都在主机内部完成，数据不会离开主机。
- en: 'To enable the ARP responder, update the following configuration option:'
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: 要启用 ARP 响应器，请更新以下配置选项：
- en: '[PRE23]'
  id: totrans-260
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: The default `arp_responder` configuration is `false` and can remain *unchanged*
    for this environment.
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: 默认的 `arp_responder` 配置是 `false`，在此环境中可以保持 *不变*。
- en: VXLAN UDP port
  id: totrans-262
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: VXLAN UDP 端口
- en: The default port for UDP traffic between VXLAN tunnel endpoints varies depending
    on the system. The Internet Assigned Numbers Authority, or IANA, has assigned
    UDP port 4789 for the purposes of VXLAN and that is the default port used by Open
    vSwitch. The Linux kernel, on the other hand, uses UDP port 8472 for VXLAN. To
    maintain compatibility with the hosts using the Linux bridge mechanism driver
    and `vxlan` kernel module, the port must be changed from its default.
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: VXLAN 隧道端点之间的 UDP 流量默认端口因系统而异。互联网号码分配局（IANA）为 VXLAN 指定了 UDP 端口 4789，Open vSwitch
    使用的是此默认端口。而 Linux 内核则使用 UDP 端口 8472 来处理 VXLAN。为了与使用 Linux 桥接机制驱动程序和 `vxlan` 内核模块的主机兼容，端口必须从其默认端口进行更改。
- en: 'To change the port number, update the following configuration option from 4789
    to 8472:'
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: 要更改端口号，请将以下配置选项从 4789 更新为 8472：
- en: '[PRE24]'
  id: totrans-265
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: This change is typically unnecessary in a pure Open vSwitch-based environment,
    but is required for the environment described in this book.
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: 在纯 Open vSwitch 环境中通常不需要此更改，但对于本书中描述的环境，则需要此更改。
- en: Integration bridge
  id: totrans-267
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 集成桥
- en: The `integration_bridge` configuration option specifies the name of the integration
    bridge used on each node. There is a single integration bridge per node that acts
    as the virtual switch where all virtual machine VIFs, otherwise known as **virtual
    network interfaces**, are connected. The default name of the integration bridge
    is `br-int` and should not be modified.
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: '`integration_bridge` 配置选项指定了每个节点上使用的集成桥的名称。每个节点有一个集成桥，充当虚拟交换机，所有虚拟机 VIF（也称为
    **虚拟网络接口**）都连接到该桥。集成桥的默认名称是 `br-int`，不应修改。'
- en: Since the Icehouse release of OpenStack, the Open vSwitch agent automatically
    creates the integration bridge the first time the agent service is started. You
    do not need to add an interface to the integration bridge, as Neutron is responsible
    for connecting network devices to this virtual switch.
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: 从 OpenStack Icehouse 版本开始，Open vSwitch 代理在第一次启动代理服务时会自动创建集成桥。您无需向集成桥添加接口，因为
    Neutron 负责将网络设备连接到此虚拟交换机。
- en: Tunnel bridge
  id: totrans-270
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 隧道桥
- en: The tunnel bridge is a virtual switch, similar to the integration and provider
    bridges, and is used to connect GRE and VXLAN tunnel endpoints. Flow rules exist
    on this bridge that are responsible for properly encapsulating and decapsulating
    tenant traffic as it traverses the bridge.
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: 隧道桥是一个虚拟交换机，类似于集成桥和提供者桥，用于连接 GRE 和 VXLAN 隧道端点。此桥上存在流规则，负责在流量穿过桥时正确地封装和解封装租户流量。
- en: The `tunnel_bridge` configuration option specifies the name of the tunnel bridge.
    The default value is `br-tun` and should not be modified. It is not necessary
    to create this bridge manually since Neutron does this automatically.
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: '`tunnel_bridge` 配置选项指定了隧道桥的名称。默认值为 `br-tun`，不应修改。由于 Neutron 会自动创建此桥，因此不需要手动创建。'
- en: Local IP
  id: totrans-273
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 本地 IP
- en: The `local_ip` configuration option specifies the local IP address on the node,
    which will be used to build the overlay network between hosts. Refer to *[Chapter
    1](961d71d1-9804-4af7-ad1f-8716e6dd5ac6.xhtml)*, *Introduction to OpenStack Networking*,
    for ideas on how the overlay network should be architected. In this installation,
    all guest traffic through the overlay networks will traverse a dedicated network
    over the `eth1` interface that we configured earlier in this chapter.
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: '`local_ip` 配置选项指定节点上用于构建主机之间覆盖网络的本地 IP 地址。参考 *[第1章](961d71d1-9804-4af7-ad1f-8716e6dd5ac6.xhtml)*，*OpenStack
    网络入门*，以获取关于如何设计覆盖网络的想法。在这个安装过程中，通过我们之前在本章中配置的 `eth1` 接口，所有客户端流量将通过专用网络传输。'
- en: 'Update the `local_ip` configuration option in the `[vxlan]` section of the
    Open vSwitch agent configuration file accordingly on `compute02`, `compute03`, and
    `snat01`:'
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: 在 `compute02`、`compute03` 和 `snat01` 上相应地更新 Open vSwitch 代理配置文件中 `[vxlan]` 部分的
    `local_ip` 配置选项：
- en: '[PRE25]'
  id: totrans-276
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'The following table provides the interfaces and addresses to be configured
    on each host. Substitute these for `X` where appropriate:'
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
  zh: 下表提供了应在每个主机上配置的接口和地址。根据需要替换其中的 `X`：
- en: '| **Hostname** | **Interface** | **IP Address** |'
  id: totrans-278
  prefs: []
  type: TYPE_TB
  zh: '| **主机名** | **接口** | **IP 地址** |'
- en: '| compute02 | eth1 | 10.20.0.102 |'
  id: totrans-279
  prefs: []
  type: TYPE_TB
  zh: '| compute02 | eth1 | 10.20.0.102 |'
- en: '| compute03 | eth1 | 10.20.0.103 |'
  id: totrans-280
  prefs: []
  type: TYPE_TB
  zh: '| compute03 | eth1 | 10.20.0.103 |'
- en: '| snat01 | eth1 | 10.20.0.104 |'
  id: totrans-281
  prefs: []
  type: TYPE_TB
  zh: '| snat01 | eth1 | 10.20.0.104 |'
- en: Bridge mappings
  id: totrans-282
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 桥接映射
- en: The `bridge_mappings` configuration option describes the mapping of an artificial
    label to a virtual switch created with Open vSwitch. Unlike the Linux bridge driver
    that configures a separate bridge for every network, each with its own interface,
    the Open vSwitch driver uses a single virtual switch containing a single physical
    interface and uses flow rules to tag traffic if necessary.
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
  zh: '`bridge_mappings` 配置选项描述了将人工标签映射到使用 Open vSwitch 创建的虚拟交换机的映射。与 Linux 桥接驱动程序不同，后者为每个网络配置单独的桥接，并且每个桥接具有自己的接口，Open
    vSwitch 驱动程序使用单个虚拟交换机，包含单个物理接口，并使用流规则必要时对流量进行标记。'
- en: 'When networks are created, they are associated with an interface label, such
    as `physnet1`. The label `physnet1` is then mapped to a bridge, such as `br-eth1`,
    which contains the physical interface `eth1`. The mapping of the label to the
    bridge interface is handled by the `bridge_mappings` option. This mapping can
    be observed as follows:'
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
  zh: 创建网络时，它们与接口标签关联，例如 `physnet1`。然后，标签 `physnet1` 被映射到桥接 `br-eth1`，其中包含物理接口 `eth1`。标签到桥接接口的映射由
    `bridge_mappings` 选项处理。此映射可以如下所示观察到：
- en: '[PRE26]'
  id: totrans-285
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: The chosen label(s) must be consistent between all nodes in the environment
    that are expected to handle traffic for a given network created with Neutron.
    However, the physical interface mapped to the label may be different. A difference
    in mappings is often observed when one node maps `physnet1` to a one gigabit-capable
    bridge, while another maps `physnet1` to a ten gigabit-capable bridge.
  id: totrans-286
  prefs: []
  type: TYPE_NORMAL
  zh: 所选标签必须在所有预期处理 Neutron 创建的给定网络流量的环境中的所有节点之间保持一致。但是，映射到标签的物理接口可能不同。通常情况下会观察到映射不同的情况，例如一个节点将
    `physnet1` 映射到支持一千兆位的桥接口，而另一个节点将 `physnet1` 映射到支持十千兆位的桥接口。
- en: 'Multiple bridge mappings are allowed and can be added using a comma-separated
    list:'
  id: totrans-287
  prefs: []
  type: TYPE_NORMAL
  zh: 可以允许多个桥接口映射，并可以使用逗号分隔的列表添加：
- en: '[PRE27]'
  id: totrans-288
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'In this installation process, `physnet1` will be used as the interface label
    and will map to the bridge `br-eth2`. Update the Open vSwitch agent configuration
    file accordingly on `compute02`, `compute03`, and `snat01`:'
  id: totrans-289
  prefs: []
  type: TYPE_NORMAL
  zh: 在此安装过程中，`physnet1` 将用作接口标签，并将映射到桥接 `br-eth2`。相应地更新 `compute02`、`compute03` 和
    `snat01` 上的 Open vSwitch 代理配置文件：
- en: '[PRE28]'
  id: totrans-290
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: Configuring the bridges
  id: totrans-291
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 配置桥接口
- en: 'To configure a bridge with Open vSwitch, use the Open vSwitch utility `ovs-vsctl`.
    Create the bridge `br-eth2` on `compute02`, `compute03`, and `snat01`, as follows:'
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用 Open vSwitch 配置桥接，使用 Open vSwitch 实用工具 `ovs-vsctl`。在 `compute02`、`compute03`
    和 `snat01` 上创建桥接 `br-eth2`，如下所示：
- en: '[PRE29]'
  id: totrans-293
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'Use the `ovs-vsctl add-port` command to add physical interface `eth2` to the
    bridge like so:'
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 `ovs-vsctl add-port` 命令将物理接口 `eth2` 添加到桥接口，例如：
- en: '[PRE30]'
  id: totrans-295
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'The configuration of the bridge should persist reboots. However, the bridge
    interface can also be configured in `/etc/network/interfaces` if necessary using
    the following syntax:'
  id: totrans-296
  prefs: []
  type: TYPE_NORMAL
  zh: 桥接配置应该在重新启动后保持持久化。然而，如果需要，桥接接口也可以在 `/etc/network/interfaces` 中配置，使用以下语法：
- en: '[PRE31]'
  id: totrans-297
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: Please note that the physical switch port connected to `eth2` must support 802.1q
    VLAN tagging if VLAN networks of any type are to be created. On many switches,
    the switch port can be configured as a trunk port.
  id: totrans-298
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，连接到 `eth2` 的物理交换机端口必须支持 802.1q VLAN 标签，如果要创建任何类型的 VLAN 网络。在许多交换机上，交换机端口可以配置为中继端口。
- en: Firewall driver
  id: totrans-299
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 防火墙驱动
- en: The `firewall_driver` configuration option instructs Neutron to use a particular
    firewall driver for security group functionality.  Different firewall drivers
    may be configured based on the mechanism driver in use.
  id: totrans-300
  prefs: []
  type: TYPE_NORMAL
  zh: '`firewall_driver` 配置选项指示 Neutron 使用特定的防火墙驱动程序来提供安全组功能。可以根据正在使用的机制驱动程序配置不同的防火墙驱动程序。'
- en: 'Update the ML2 configuration file on `compute02` and `compute03` and define
    the appropriate `firewall_driver` in the `[securitygroup]` section on a single
    line:'
  id: totrans-301
  prefs: []
  type: TYPE_NORMAL
  zh: 更新 `compute02` 和 `compute03` 上的 ML2 配置文件，并在 `[securitygroup]` 部分的单行中定义合适的 `firewall_driver`：
- en: '[PRE32]'
  id: totrans-302
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: The `iptables_hybrid` firewall driver implements firewall rules using iptables
    and relies on the use of Linux bridges in-between the instance's tap interface
    and the integration bridge. The `openvswitch` firewall driver, on the other hand,
    implements firewall rules using OpenFlow and does not rely on Linux bridges or
    iptables. As of the Pike release of OpenStack, the `openvswitch` firewall driver
    is not production-ready and is not recommended.
  id: totrans-303
  prefs: []
  type: TYPE_NORMAL
  zh: '`iptables_hybrid` 防火墙驱动程序使用 iptables 实现防火墙规则，并依赖于实例的 tap 接口与集成桥接之间使用 Linux
    桥接。而 `openvswitch` 防火墙驱动程序则使用 OpenFlow 实现防火墙规则，不依赖于 Linux 桥接或 iptables。从 OpenStack
    Pike 版本开始，`openvswitch` 防火墙驱动程序尚未为生产环境准备好，因此不推荐使用。'
- en: If you do not want to use a firewall and want to disable the application of
    security group rules, set `firewall_driver` to `noop`.
  id: totrans-304
  prefs: []
  type: TYPE_NORMAL
  zh: 如果不想使用防火墙，并希望禁用安全组规则的应用，可以将 `firewall_driver` 设置为 `noop`。
- en: Configuring the DHCP agent to use the Open vSwitch driver
  id: totrans-305
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 配置 DHCP 代理使用 Open vSwitch 驱动程序
- en: 'For Neutron to properly connect DHCP namespace interfaces to the appropriate
    network bridge, the DHCP agent on the node hosting the agent must be configured
    to use the Open vSwitch interface driver, as shown here:'
  id: totrans-306
  prefs: []
  type: TYPE_NORMAL
  zh: 为了让 Neutron 正确地将 DHCP 命名空间接口连接到适当的网络桥接，托管代理的节点上的 DHCP 代理必须配置为使用 Open vSwitch
    接口驱动程序，如下所示：
- en: '[PRE33]'
  id: totrans-307
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: In this environment, the DHCP agent is running on the `controller01` node utilizing
    the Linux bridge driver and agent, and the interface driver was configured to
    work with Linux bridges. No change is necessary at this time. For environments
    running only Open vSwitch, be sure to set the interface driver accordingly.
  id: totrans-308
  prefs: []
  type: TYPE_NORMAL
  zh: 在此环境中，DHCP 代理运行在 `controller01` 节点上，使用 Linux 桥接驱动程序和代理，且接口驱动程序已配置为与 Linux 桥接工作。此时无需更改。对于仅运行
    Open vSwitch 的环境，确保根据需要配置接口驱动程序。
- en: Restarting services
  id: totrans-309
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 重启服务
- en: Now that the appropriate OpenStack configuration files have been modified to
    use Open vSwitch as the networking driver, certain services must be started or
    restarted for the changes to take effect.
  id: totrans-310
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，已经修改了相应的 OpenStack 配置文件以使用 Open vSwitch 作为网络驱动程序，必须启动或重启某些服务才能使更改生效。
- en: 'The Open vSwitch network agent should be restarted on `compute02`, `compute03`,
    and `snat01`:'
  id: totrans-311
  prefs: []
  type: TYPE_NORMAL
  zh: 应该在 `compute02`、`compute03` 和 `snat01` 上重新启动 Open vSwitch 网络代理：
- en: '[PRE34]'
  id: totrans-312
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: 'The following services should be restarted on the `controller` node:'
  id: totrans-313
  prefs: []
  type: TYPE_NORMAL
  zh: 以下服务应该在 `controller` 节点上重新启动：
- en: '[PRE35]'
  id: totrans-314
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: Verifying Open vSwitch agents
  id: totrans-315
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 验证 Open vSwitch 代理
- en: 'To verify that the Open vSwitch network agents have been properly checked in,
    issue the `openstack network agent list` command on the `controller` node:'
  id: totrans-316
  prefs: []
  type: TYPE_NORMAL
  zh: 要验证 Open vSwitch 网络代理是否已正确注册，可以在 `controller` 节点上执行 `openstack network agent
    list` 命令：
- en: '![](img/6d95c416-a899-4f59-9667-1d6bfccad549.png)'
  id: totrans-317
  prefs: []
  type: TYPE_IMG
  zh: '![](img/6d95c416-a899-4f59-9667-1d6bfccad549.png)'
- en: The Open vSwitch agent on `compute02`, `compute03`, and `snat01` should now
    be visible in the output with a state of `UP`. If an agent is not present, or
    the state is `DOWN`, you will need to troubleshoot agent connectivity issues by
    observing log messages found in `/var/log/neutron/neutron-openvswitch-agent.log`
    on the respective host.
  id: totrans-318
  prefs: []
  type: TYPE_NORMAL
  zh: '`compute02`、`compute03` 和 `snat01` 上的 Open vSwitch 代理现在应该在输出中显示，并且状态为 `UP`。如果没有代理出现，或者状态为
    `DOWN`，则需要通过查看各主机上 `/var/log/neutron/neutron-openvswitch-agent.log` 中的日志消息来排除代理连接问题。'
- en: Summary
  id: totrans-319
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: This chapter saw us installing and configuring the Neutron Open vSwitch mechanism
    driver and agent on two `compute` nodes and a dedicated `network` node, which
    will be used for distributed virtual routing functions at a later time. Instances
    scheduled to `compute02` and `compute03` will leverage Open vSwitch virtual network
    components, while `compute01` and network services on `controller01` will leverage
    Linux bridges.
  id: totrans-320
  prefs: []
  type: TYPE_NORMAL
  zh: 本章节我们在两个`compute`节点和一个专用的`network`节点上安装并配置了Neutron Open vSwitch机制驱动和代理，这将在以后用于分布式虚拟路由功能。计划安排在`compute02`和`compute03`上的实例将利用Open
    vSwitch虚拟网络组件，而在`compute01`和`controller01`上的网络服务则将利用Linux桥接。
- en: Both the Linux bridge and Open vSwitch drivers and agents for Neutron provide
    unique solutions to the same problem of connecting virtual machine instances to
    the network. The use of Open vSwitch relies on flow rules to determine how traffic
    in and out of the environment should be processed and requires both user space
    utilities and kernel modules to perform such actions. On the other hand, the use
    of Linux bridges requires the `8021q` and `bridge` kernel modules and relies on
    the use of VLAN and VXLAN interfaces on the host to bridge instances to the physical
    network.For simple environments, I recommend using the ML2 plugin and Linux bridge
    mechanism driver and agent, unless integration with OpenFlow controllers or the
    use of a third-party solution or plugin is required. Other Neutron technologies,
    such as distributed virtual routers, are only available when using the Open vSwitch
    driver and agent.
  id: totrans-321
  prefs: []
  type: TYPE_NORMAL
  zh: Neutron的Linux桥接和Open vSwitch驱动程序和代理都为将虚拟机实例连接到网络的同一问题提供了独特的解决方案。使用Open vSwitch依赖于流规则来确定如何处理环境内外的流量，并需要用户空间工具和内核模块来执行这些操作。另一方面，Linux桥接则需要`8021q`和`bridge`内核模块，并依赖于主机上的VLAN和VXLAN接口来将实例桥接到物理网络。对于简单的环境，我建议使用ML2插件和Linux桥接机制驱动和代理，除非需要与OpenFlow控制器集成或使用第三方解决方案或插件。其他Neutron技术，如分布式虚拟路由器，仅在使用Open
    vSwitch驱动程序和代理时才可用。
- en: In the next chapter, you will be guided through the process of creating different
    types of networks to provide connectivity to instances. The process of creating
    networks is the same for both Linux bridge and Open vSwitch-based environments,
    but the underlying network implementation will vary based on the driver and agent
    in use.
  id: totrans-322
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章节中，您将被引导完成创建不同类型网络的过程，以便为实例提供连接。无论是Linux桥接环境还是基于Open vSwitch的环境，创建网络的过程都是相同的，但基础网络实现会根据使用的驱动程序和代理而有所不同。
