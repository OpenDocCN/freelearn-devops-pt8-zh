- en: Using Auto Scaling
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用自动扩展
- en: Amazon ECS provides built-in internal load balancing to distribute client traffic
    between the tasks in an ECS service. If all the client load were to be sent to
    a single task in a three-task service, the internal load balancer would direct
    some of the client traffic to the other tasks to distribute the client load evenly.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: Amazon ECS提供内置的内部负载均衡功能，用于在ECS服务中的任务之间分配客户端流量。如果所有客户端负载都发送到一个任务上，ECS服务中的内部负载均衡器将把部分流量引导到其他任务上，以便均匀分配客户端负载。
- en: '**Problem: **The number of tasks in a service as configured initially is fixed.
    If the client load is expected to be fixed, the fixed number of tasks in an ECS
    service should suffice. But if client load fluctuates, the ECS service tasks do
    not scale automatically. If the client load were to increase, the preconfigured
    number of tasks may not be able to serve the client traffic.'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '**问题：** 服务中最初配置的任务数量是固定的。如果预期客户端负载是固定的，则ECS服务中的固定任务数量应该足够。但如果客户端负载波动，ECS服务任务不会自动扩展。如果客户端负载增加，预配置的任务数量可能无法处理客户端流量。'
- en: '**Solution: **Amazon ECS supports auto scaling using an auto scaling policy
    that consists of a CloudWatch alarm based on one of the ECS service metrics: `CPUUtilization`
    or `MemoryUtilization`. An alarm threshold must be set before any scaling action
    is performed; for instance, `MemoryUtilization` must not exceed a specific value
    for a specified number of consecutive periods, with each period being one minute,
    five minutes, 15 minutes, or 1 hour. If an alarm threshold is exceeded, a scaling
    action could be performed, such as adding, setting to, or removing a specified
    number or percentage of tasks. The measure of client load is `CPUUtilization`
    or `MemoryUtilization`.'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '**解决方案：** Amazon ECS支持使用自动扩展策略，该策略由基于ECS服务度量的CloudWatch警报组成：`CPUUtilization`或`MemoryUtilization`。必须在执行任何扩展操作之前设置警报阈值；例如，`MemoryUtilization`不能超过指定的特定值，并且该阈值必须在一定数量的连续时段内保持不变，每个时段为1分钟、5分钟、15分钟或1小时。如果超过了警报阈值，则可能执行扩展操作，如增加、设置或移除指定数量或百分比的任务。客户端负载的衡量标准是`CPUUtilization`或`MemoryUtilization`。'
- en: 'The number of tasks scale with the load, as illustrated in the following diagram:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 任务数量随着负载变化，如下图所示：
- en: '![](img/7ae1a2b0-d114-40ee-99a7-acd5bb683de8.png)'
  id: totrans-5
  prefs: []
  type: TYPE_IMG
  zh: '![](img/7ae1a2b0-d114-40ee-99a7-acd5bb683de8.png)'
- en: 'In this chapter, we shall demonstrate configuring and using auto scaling and we
    will learn about the following:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将演示配置和使用自动扩展，并学习以下内容：
- en: Creating an ECS service for a Hello world application
  id: totrans-7
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为“Hello World”应用程序创建一个ECS服务
- en: Types of auto scaling
  id: totrans-8
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 自动扩展的类型
- en: Configuring an auto scaling policy
  id: totrans-9
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 配置自动扩展策略
- en: Demonstrating the use of auto scaling
  id: totrans-10
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 演示自动扩展的使用
- en: Exploring CloudWatch metrics and logs
  id: totrans-11
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 探索CloudWatch指标和日志
- en: Updating a service to modify the number of tasks
  id: totrans-12
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 更新服务以修改任务数量
- en: Creating an ECS service for a Hello world application
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为“Hello World”应用程序创建一个ECS服务
- en: 'Creating an ECS Service for a Hello world application using the `tutum/hello-world`
    Docker image is discussed in detail in [Chapter 2](20fbdcad-0dd7-4066-aafb-1bc74b268b33.xhtml),
    *Networking*. In this section, we shall create a `hello-world` cluster consisting
    of a `hello-world-service` service with three tasks for a `tutum/hello-world`
    Docker image. To create the cluster, service, and task definition, use the same
    procedure as in Chapter 2, *Networking * which is as follows:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`tutum/hello-world` Docker镜像为“Hello World”应用程序创建ECS服务的详细过程，请参见[第2章](20fbdcad-0dd7-4066-aafb-1bc74b268b33.xhtml)，*网络配置*。在本节中，我们将创建一个`hello-world`集群，其中包含一个`hello-world-service`服务，服务中有三个任务，使用的是`tutum/hello-world`
    Docker镜像。创建集群、服务和任务定义的过程与第2章*网络配置*中的过程相同，具体如下：
- en: Create a Container Definition, `hello-world`, for the `tutum/hello-world` Docker
    image
  id: totrans-15
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为`tutum/hello-world` Docker镜像创建容器定义，`hello-world`
- en: Create a task definition, `hello-world-task-definition`
  id: totrans-16
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建任务定义，`hello-world-task-definition`
- en: Create a service, `hello-world-service`
  id: totrans-17
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个服务，`hello-world-service`
- en: Create a cluster, `hello-world`
  id: totrans-18
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个集群，`hello-world`
- en: 'The procedure is the same as in [Chapter 2](20fbdcad-0dd7-4066-aafb-1bc74b268b33.xhtml), *Networking*,
    except for a few differences. Define the service with three tasks instead of the
    default one task:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 该过程与[第2章](20fbdcad-0dd7-4066-aafb-1bc74b268b33.xhtml)中的*网络配置*相同，唯一不同的是定义服务时使用三个任务，而不是默认的一个任务：
- en: 'Click on Edit in the Define your service section, as shown in the following
    screenshot:'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在“定义你的服务”部分点击编辑，如下截图所示：
- en: '![](img/0632223f-0df3-4bfe-9257-7af26cd7d479.png)'
  id: totrans-21
  prefs: []
  type: TYPE_IMG
  zh: '![](img/0632223f-0df3-4bfe-9257-7af26cd7d479.png)'
- en: 'In the Set up service: hello-world-service dialog, set the Number of desired
    tasks to `3`, as shown here. Click on Save:'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在“设置服务：hello-world-service”对话框中，将期望任务数设置为`3`，如图所示。点击保存：
- en: '![](img/fe536390-6712-4ac7-ad6b-104706056a58.png)'
  id: totrans-23
  prefs: []
  type: TYPE_IMG
  zh: '![](img/fe536390-6712-4ac7-ad6b-104706056a58.png)'
- en: 'With the Number of desired tasks set to 3, click on Next in Define your service,
    as shown here:'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将期望任务数设置为3后，点击“下一步”以定义服务，如图所示：
- en: '![](img/e77a0848-4904-4da0-a462-95845dfd044c.png)'
  id: totrans-25
  prefs: []
  type: TYPE_IMG
  zh: '![](img/e77a0848-4904-4da0-a462-95845dfd044c.png)'
- en: 'In Configure your cluster, specify the Cluster name as hello-world, as shown
    here. The other settings, which include VPC ID and Subnets, are not modifiable.
    Click on Next:'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在配置集群中，将集群名称指定为hello-world，如图所示。其他设置（包括VPC ID和子网）是不可修改的。点击下一步：
- en: '![](img/5b487776-339d-4f56-b1b3-f51b9283afe4.png)'
  id: totrans-27
  prefs: []
  type: TYPE_IMG
  zh: '![](img/5b487776-339d-4f56-b1b3-f51b9283afe4.png)'
- en: 'Review the Container definition, Task definition, Service, and Cluster in Review,
    as shown here. An Edit button is provided to modify each of these. Click on Create
    to create the ECS objects, as shown here:'
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在审核中查看容器定义、任务定义、服务和集群，如图所示。每项内容旁边都提供了“编辑”按钮以进行修改。点击创建以创建ECS对象，如图所示：
- en: '![](img/227b2760-8f0a-4c19-b89f-97dac776f057.png)'
  id: totrans-29
  prefs: []
  type: TYPE_IMG
  zh: '![](img/227b2760-8f0a-4c19-b89f-97dac776f057.png)'
- en: 'The Launch Status should indicate that all ECS resources have been created,
    as indicated by the complete status shown here. Click on View service:'
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 启动状态应指示所有ECS资源已创建，并显示“完成”状态，如图所示。点击查看服务：
- en: '![](img/ed796956-e07d-4762-a9f8-d26f89c5c399.png)'
  id: totrans-31
  prefs: []
  type: TYPE_IMG
  zh: '![](img/ed796956-e07d-4762-a9f8-d26f89c5c399.png)'
- en: 'A service gets created, as shown here. The Service name, Cluster, Status, Task
    definition, Launch type, Platform version, Service role, Desired count, Pending
    count, and Running count are listed in the service summary. The Details tab lists
    the Load Balancing and Network Access:'
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如图所示，服务已创建。服务摘要中列出了服务名称、集群、状态、任务定义、启动类型、平台版本、服务角色、期望任务数、待处理任务数和运行任务数。详细信息标签列出了负载均衡和网络访问：
- en: '![](img/fab3c55d-40b2-4013-80ce-643df5861c57.png)'
  id: totrans-33
  prefs: []
  type: TYPE_IMG
  zh: '![](img/fab3c55d-40b2-4013-80ce-643df5861c57.png)'
- en: 'Select the Tasks tab to list the tasks. The Last status column lists the task
    status, which could initially be PENDING. Click on the Refresh button periodically
    to refresh the task status. When all tasks have started running, the Last status
    becomes RUNNING, as shown here:'
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 选择“任务”标签以列出任务。“最后状态”列显示任务状态，初始状态可能是PENDING。定期点击刷新按钮以更新任务状态。当所有任务开始运行时，“最后状态”将变为RUNNING，如图所示：
- en: '![](img/b0225031-8f2c-48b7-8425-77ae59445742.png)'
  id: totrans-35
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b0225031-8f2c-48b7-8425-77ae59445742.png)'
- en: Types of auto scaling
  id: totrans-36
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 自动扩展的类型
- en: 'Two kinds of auto scaling policies are defined:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 定义了两种自动扩展策略：
- en: Target tracking scaling policies
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 目标跟踪扩展策略
- en: Step scaling policies
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 步骤扩展策略
- en: We shall discuss these two kinds of auto scaling policy next, before demonstrating
    the use of auto scaling.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来我们将讨论这两种自动扩展策略，然后再演示如何使用自动扩展。
- en: Target tracking scaling policies
  id: totrans-41
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 目标跟踪扩展策略
- en: The target being referred to is a target value for a specific metric that CloudWatch
    metrics monitor. The two ECS metrics CloudWatch monitors are CPU utilization and
    memory utilization. With target tracking scaling policies, the number of tasks
    is increased or decreased with the objective that the target value of a metric
    is kept. It may not be feasible to keep the precise target value of a metric because
    the number of tasks are increased/decreased in increments/decrements of 1\. The
    metric is kept at the precise configured target value or close to the target value.
    A target tracking scaling policy itself adjusts itself to the fluctuations in
    a metric value to avoid rapid fluctuations in the number of tasks. For high application
    availability, a service scales out faster than it scales in, as fewer tasks hamper application
    availability while extra tasks do not. Multiple target tracking scaling policies
    may be set concurrently and the service is scaled to fulfill the scaling policy
    that effects the greatest increase in task capacity. Increases in CPU or memory
    utilization are indicators that the application is in need of more tasks and the
    service scales out if a target metric is exceeded. Sufficient metric data is a
    prerequisite for a scaling policy to scale. If insufficient data is available,
    the scaling policy does not scale the number of tasks. To scale if insufficient
    data is available, a step scaling policy should be used, which is discussed next.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 所提到的目标是CloudWatch指标监控的特定度量的目标值。CloudWatch监控的两个ECS指标是CPU利用率和内存利用率。使用目标跟踪缩放策略时，任务的数量会增加或减少，以便保持指标的目标值。可能无法精确保持某个指标的目标值，因为任务的数量是按1的增量/减少来变化的。该指标会保持在配置的目标值或接近目标值。目标跟踪缩放策略本身会根据指标值的波动进行调整，以避免任务数量的快速波动。为了保证应用程序的高可用性，服务扩展速度要快于收缩速度，因为较少的任务会影响应用程序的可用性，而额外的任务则不会。可以同时设置多个目标跟踪缩放策略，服务会根据影响任务容量增量最大的缩放策略进行扩展。如果CPU或内存利用率增加，表明应用程序需要更多的任务，如果超过了目标指标，服务会进行扩展。足够的指标数据是缩放策略能生效的前提。如果数据不足，缩放策略不会调整任务数量。如果数据不足时需要进行缩放，应该使用步骤缩放策略，接下来会讨论这一点。
- en: Step scaling policies
  id: totrans-43
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 步骤缩放策略
- en: In the *Target tracking scaling policies* section, it is mentioned that if insufficient
    data is available, step scaling policies could be used. To elaborate on this,
    a CloudWatch alarm could be set to be invoked when a metric state is `INSUFFICIENT_DATA`.
    Such a policy is called a Step Scaling Policy. All step scaling policies make
    use of CloudWatch alarms. CloudWatch alarms can be set to be invoked when a specific
    CloudWatch metric (CPU utilization or memory utilization) exceeds or goes below
    a set threshold. As an example, during high use of an application, these metrics
    are likely to increase and CloudWatch alarms could be set to increase the number
    of tasks. Similarly, during times of low application load, these metrics decrease
    in value and CloudWatch alarms could be set to decrease the number of tasks.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 在*目标跟踪缩放策略*部分中提到，如果数据不足，可以使用步骤缩放策略。为了详细说明这一点，可以设置CloudWatch警报，当某个指标状态为`INSUFFICIENT_DATA`时触发。这样的策略被称为步骤缩放策略。所有的步骤缩放策略都利用了CloudWatch警报。CloudWatch警报可以在特定的CloudWatch指标（CPU利用率或内存利用率）超过或低于设定阈值时触发。例如，在应用程序使用量较高时，这些指标可能会增加，可以设置CloudWatch警报以增加任务数。同样，在应用程序负载较低时，这些指标值下降，可以设置CloudWatch警报以减少任务数。
- en: Service auto scaling, target tracking auto scaling, or step auto scaling, could
    modify a services's desired count.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 服务自动缩放、目标跟踪自动缩放或步骤自动缩放，可以修改服务的期望任务数量。
- en: Configuring an auto scaling policy
  id: totrans-46
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 配置自动缩放策略
- en: 'Auto scaling is not configured by default:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下未配置自动缩放：
- en: To configure auto scaling, click on the Update button, which is shown in the
    preceding screenshot, for the service that is to be auto scaled. The Update Service
    wizard gets started, as shown in the following screenshot.
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 要配置自动缩放，请点击前面截图中显示的更新按钮，选择要进行自动缩放的服务。更新服务向导将启动，如下图所示。
- en: In the Configure service page, the settings are not to be modified unless the
    Desired number of tasks (`3`) needs to be updated. Click on Next step.
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在配置服务页面中，除非需要更新所需任务数量（`3`），否则不应修改设置。点击“下一步”。
- en: In Configure network, we don't need to make any modifications. Click on Next
    step.
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在配置网络中，我们无需进行任何修改。点击“下一步”。
- en: 'In the Service auto scaling page, select the Service auto scaling option Configure
    Service auto scaling to adjust your service’s desired count, as shown here:'
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在服务自动扩展页面，选择“服务自动扩展”选项，配置服务的所需任务数，如图所示：
- en: '![](img/131da8f2-9d2b-42c4-8f6b-065d815d8c36.png)'
  id: totrans-52
  prefs: []
  type: TYPE_IMG
  zh: '![](img/131da8f2-9d2b-42c4-8f6b-065d815d8c36.png)'
- en: 'We shall discuss configuring a step auto scaling policy next. Configuring step
    auto scaling involves the following sequence:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将讨论如何配置步进自动扩展策略。配置步进自动扩展涉及以下步骤：
- en: Define the range for the number of tasks within which the cluster is to be scaled
  id: totrans-54
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 定义集群扩展的任务数范围
- en: Add an auto scaling policy
  id: totrans-55
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 添加自动扩展策略
- en: Define a CloudWatch alarm as a threshold to apply the scaling policy
  id: totrans-56
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将CloudWatch警报定义为触发扩展策略的阈值
- en: Define a scaling action to take if the alarm threshold is exceeded
  id: totrans-57
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果警报阈值被超过，定义要采取的扩展操作
- en: We shall discuss configuring each of these next.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将讨论如何配置每一项内容。
- en: Defining the range of tasks
  id: totrans-59
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 定义任务范围
- en: 'Specify the Minimum number of tasks (`1`), and the Maximum number of tasks
    (`5`), as shown in the following screenshot. The number of tasks specified in
    the example configuration is arbitrary but the maximum number of tasks must be
    the same or more than the desired number of tasks, and the minimum number of tasks
    must be the same or less than the desired number of tasks:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 指定最小任务数（`1`）和最大任务数（`5`），如以下截图所示。示例配置中指定的任务数是任意的，但最大任务数必须等于或大于所需的任务数，最小任务数必须等于或小于所需的任务数：
- en: '![](img/2d2595f7-89dd-4fdc-8a02-1f9c286fe360.png)'
  id: totrans-61
  prefs: []
  type: TYPE_IMG
  zh: '![](img/2d2595f7-89dd-4fdc-8a02-1f9c286fe360.png)'
- en: Setting the number of tasks (minimum, desired, and maximum) does not, by itself,
    configure auto scaling; it only specifies the range in which the number of tasks
    may fluctuate with load fluctuations. An auto scaling policy also needs to be
    added.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 设置任务数量（最小、所需和最大）本身并不会配置自动扩展；它仅指定任务数在负载波动时可以波动的范围。还需要添加一个自动扩展策略。
- en: Adding an auto scaling policy
  id: totrans-63
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 添加自动扩展策略
- en: 'To add a scaling policy, click on Add scaling policy, as shown in the following
    screenshot:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 要添加扩展策略，请点击“添加扩展策略”，如以下截图所示：
- en: '![](img/bf748b50-bc20-422e-89bb-3cea99488726.png)'
  id: totrans-65
  prefs: []
  type: TYPE_IMG
  zh: '![](img/bf748b50-bc20-422e-89bb-3cea99488726.png)'
- en: An Add policy dialog gets started, as shown in the preceding screenshot.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 会弹出一个“添加策略”对话框，如前面的截图所示。
- en: Next, we shall discuss configuring a step auto scaling policy.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将讨论如何配置步进自动扩展策略。
- en: Adding a step scaling policy
  id: totrans-68
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 添加步进扩展策略
- en: In Add Policy, select Scaling policy type as Step scaling, as shown in the following
    screenshot.
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在添加策略中，选择扩展策略类型为步进扩展，如以下截图所示。
- en: 'Specify a Policy name (`AutoScaler`):'
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 指定一个策略名称（`AutoScaler`）：
- en: '![](img/ededc98e-0f04-40df-beb0-185f74c0db8b.png)'
  id: totrans-71
  prefs: []
  type: TYPE_IMG
  zh: '![](img/ededc98e-0f04-40df-beb0-185f74c0db8b.png)'
- en: 'In Execute policy when, select Create new Alarm, as shown here. The Use an
    existing Alarm option is also provided if an existing alarm could be used:'
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在“执行策略时”中，选择“创建新警报”，如图所示。如果可以使用现有警报，也提供了“使用现有警报”选项：
- en: '![](img/90dbb3ea-ac49-40ea-9043-c31328517fae.png)'
  id: totrans-73
  prefs: []
  type: TYPE_IMG
  zh: '![](img/90dbb3ea-ac49-40ea-9043-c31328517fae.png)'
- en: Creating a CloudWatch alarm
  id: totrans-74
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建CloudWatch警报
- en: 'In this section, we shall discuss creating a CloudWatch alarm:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将讨论如何创建一个CloudWatch警报：
- en: Specify an Alarm name, as shown in the following screenshot.
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 指定一个警报名称，如以下截图所示。
- en: 'For a new alarm, ECS metrics are used for the CloudWatch alarm. To use other
    metrics for auto scaling, create an alarm in the CloudWatch console and select
    the alarm within Add policy with Use an existing Alarm. Only two ECS metrics are
    available for configuring a new alarm in Add policy: CPUUtilization and MemorUtilization.
    Select CPUUtilization.'
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于新警报，使用ECS度量指标来创建CloudWatch警报。要使用其他度量指标进行自动扩展，请在CloudWatch控制台中创建一个警报，并在“添加策略”中选择“使用现有警报”。在“添加策略”中配置新警报时，只能使用两个ECS度量指标：CPUUtilization和MemoryUtilization。选择CPUUtilization。
- en: The alarm threshold specifies when the auto scaling policy is to be applied.
    An example of auto scaling is to scale the tasks when MemoryUtilization exceeds
    256 MB. Different measures are available for defining the alarm threshold. The
    different alarm threshold measures are Average, Minimum, Maximum, Sum, and Data
    samples. As an example, select Maximum.
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 警报阈值指定何时应用自动扩展策略。自动扩展的一个示例是在MemoryUtilization超过256 MB时扩展任务。定义警报阈值的措施有多种，分别为：平均值、最小值、最大值、总和和数据样本。作为示例，选择最大值。
- en: Because the ECS service metric is selected as CPUUtilization, the comparison
    operators (<,<=,>,>=) are defined on CPUUtilization. Select >= as an example.
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 因为选择了 ECS 服务度量标准为 CPUUtilization，所以比较操作符（<, <=, >, >=）已应用于 CPUUtilization。以
    >= 为例。
- en: Specify a value (0.1) for the comparison.
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为比较指定一个值（0.1）。
- en: 'Specify the number of consecutive periods after which the Alarm threshold would
    have been exceeded and the auto scaling policy should be applied as 1\. A period
    definition is not fixed and different options to define a period are 1 minute,
    5 minutes, 15 minutes, and 1 hour. The lower the frequency value, the faster the
    response to resource utilization fluctuations would be. Select 1 minute as an
    example. Click on Save, as shown in the following screenshot:'
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 指定在超过警报阈值后应用自动扩展策略的连续期数为 1。一个周期的定义不是固定的，不同的定义周期选项包括 1 分钟、5 分钟、15 分钟和 1 小时。频率值越低，对资源利用波动的响应越快。以
    1 分钟为例。点击“保存”，如以下截图所示：
- en: '![](img/2b80198b-33c2-429b-90cf-486960e08a4e.png)'
  id: totrans-82
  prefs: []
  type: TYPE_IMG
  zh: '![](img/2b80198b-33c2-429b-90cf-486960e08a4e.png)'
- en: A CloudWatch alarm for the auto scaling policy has now been defined.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 已为自动扩展策略定义了 CloudWatch 警报。
- en: Configuring a scaling action
  id: totrans-84
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 配置扩展操作
- en: 'Next, configure a scaling action for which three options are available: Add,
    Set to and Remove:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，为扩展操作配置一个可用的选项，其中包括三种选择：添加、设置为 和 删除：
- en: Select Add to add a specified number of tasks when the alarm threshold is exceeded.
    By alarm threshold exceeded, it does not always imply that some value for a metric
    has been exceeded, but implies that the comparison used in the alarm threshold
    has been exceeded. The comparison itself could be a less than (<) comparison.
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 选择“添加”以在超过警报阈值时添加指定数量的任务。超过警报阈值并不总是意味着某个度量值已超出，而是意味着在警报阈值中使用的比较已被超越。比较本身可能是小于（<）的比较。
- en: Specify the number of tasks to add as 1\. Alternatively, a percentage of tasks
    may be added by selecting percent. The complete scaling is shown next.
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 指定要添加的任务数量为 1。或者，通过选择百分比，可以按任务的百分比进行添加。完整的扩展如下所示：
- en: Multiple scaling actions may be defined with Add.
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可以通过“添加”定义多个扩展操作。
- en: 'Specify a Cooldown period (300 is the default) between scaling actions. The
    cooldown period is relevant if multiple scaling actions are used and we have not
    used multiple scaling actions. Click on Save:'
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 指定扩展操作之间的冷却期（默认值为 300）。冷却期在使用多个扩展操作时相关，如果我们没有使用多个扩展操作，则不需要冷却期。点击“保存”：
- en: '![](img/1b33c500-825c-4612-9191-34ea00607d7e.png)'
  id: totrans-90
  prefs: []
  type: TYPE_IMG
  zh: '![](img/1b33c500-825c-4612-9191-34ea00607d7e.png)'
- en: 'An auto scaling policy (AutoScaler), including the range of tasks, gets defined
    as shown here. Click on Next step:'
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如此处所示，定义了一个自动扩展策略（自动扩展器），包括任务范围。点击“下一步”：
- en: '![](img/e5fd50ad-58bc-43db-89e0-6d7d2434138e.png)'
  id: totrans-92
  prefs: []
  type: TYPE_IMG
  zh: '![](img/e5fd50ad-58bc-43db-89e0-6d7d2434138e.png)'
- en: 'In Review, click on Update Service, as shown in the following screenshot:'
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在“审核”中，点击“更新服务”，如以下截图所示：
- en: '![](img/1735c41a-a6ff-4700-bc2a-f9b97c6e7eff.png)'
  id: totrans-94
  prefs: []
  type: TYPE_IMG
  zh: '![](img/1735c41a-a6ff-4700-bc2a-f9b97c6e7eff.png)'
- en: 'Launch Status indicates that the service has been updated, as shown in the
    following screenshot:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 启动状态表示服务已更新，如下图所示：
- en: '![](img/cd1fd3b9-4eae-4485-ad68-744cb0a929f3.png)'
  id: totrans-96
  prefs: []
  type: TYPE_IMG
  zh: '![](img/cd1fd3b9-4eae-4485-ad68-744cb0a929f3.png)'
- en: 'The following configurations get applied:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 以下配置将应用：
- en: Scalable target gets registered
  id: totrans-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可扩展目标已注册
- en: The scaling policy `AutoScaler` gets created
  id: totrans-99
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 自动扩展策略 `AutoScaler` 被创建
- en: CloudWatch alarm for scaling policy gets created/updated
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为扩展策略创建/更新了 CloudWatch 警报
- en: 'Click on View Service, as shown in the following screenshot:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 点击“查看服务”，如以下截图所示：
- en: '![](img/dccd384c-2492-4ce9-be2b-45672cb65adf.png)'
  id: totrans-102
  prefs: []
  type: TYPE_IMG
  zh: '![](img/dccd384c-2492-4ce9-be2b-45672cb65adf.png)'
- en: 'The updated service is shown here. Select the auto scaling tab to display the
    auto scaling policy added. The auto scaling tab lists the Minimum tasks, Maximum
    tasks, AutoScaler, Policy type, CloudWatch alarm, and Scaling action:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 更新后的服务在此显示。选择自动扩展选项卡以显示已添加的自动扩展策略。自动扩展选项卡列出了最小任务数、最大任务数、自动扩展器、策略类型、CloudWatch
    警报和扩展操作：
- en: '![](img/3813ae75-8673-48a6-bbfd-e39f279a8c69.png)'
  id: totrans-104
  prefs: []
  type: TYPE_IMG
  zh: '![](img/3813ae75-8673-48a6-bbfd-e39f279a8c69.png)'
- en: 'The Events tab lists the events for the service, as shown here. As indicated
    by an event entry, the service has started three tasks and reached a steady state:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: “事件”选项卡列出了服务的事件，如此处所示。根据事件条目，服务已启动三个任务并达到稳定状态：
- en: '![](img/c6cfc979-e52a-47f3-91ba-6a2ec6e51371.png)'
  id: totrans-106
  prefs: []
  type: TYPE_IMG
  zh: '![](img/c6cfc979-e52a-47f3-91ba-6a2ec6e51371.png)'
- en: 'An auto scaling policy has been configured. Select the Tasks tab and three
    tasks are running as before, as shown here. The number of tasks is still three,
    the same as before adding the auto scaling policy, because the service does not
    need to be auto scaled and the three tasks are able to handle the client load:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 已配置了自动扩展策略。选择任务选项卡，三个任务仍在运行，如下所示。任务数量仍然是三个，与添加自动扩展策略之前相同，因为该服务无需进行自动扩展，且三个任务能够处理客户端负载：
- en: '![](img/6eb06818-75f8-4f63-ac17-3366045f7bde.png)'
  id: totrans-108
  prefs: []
  type: TYPE_IMG
  zh: '![](img/6eb06818-75f8-4f63-ac17-3366045f7bde.png)'
- en: Demonstrating the use of auto scaling
  id: totrans-109
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 演示自动扩展的使用
- en: In this section, we shall demonstrate the use of auto scaling by adding an extra
    load to the Hello world service.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 本节中，我们将通过向Hello world服务添加额外负载来演示自动扩展的使用。
- en: 'Invoke the service using the public IP of one of the tasks; the public IP may
    be obtained from a task''s details, as shown in the following screenshot:'
  id: totrans-111
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用其中一个任务的公共IP来调用服务；可以从任务详情中获取公共IP，如下图所示：
- en: '![](img/8cda5241-19fa-4cd7-81bb-4c8ab56377a1.png)'
  id: totrans-112
  prefs: []
  type: TYPE_IMG
  zh: '![](img/8cda5241-19fa-4cd7-81bb-4c8ab56377a1.png)'
- en: 'First, invoke the service in one browser only. The Hello world application
    gets invoked and the service response gets displayed in the browser, as shown
    in the following screenshot:'
  id: totrans-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 首先，只在一个浏览器中调用该服务。Hello world应用程序被调用，服务响应显示在浏览器中，如下图所示：
- en: '![](img/adc96582-e5f2-4d0f-a0dc-e329fe3edbad.png)'
  id: totrans-114
  prefs: []
  type: TYPE_IMG
  zh: '![](img/adc96582-e5f2-4d0f-a0dc-e329fe3edbad.png)'
- en: 'To increase the load, invoke the same Hello world application multiple times
    using the curl tool. Run the following command on a Windows Command line:'
  id: totrans-115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为了增加负载，可以使用curl工具多次调用同一个Hello world应用程序。在Windows命令行中运行以下命令：
- en: '[PRE0]'
  id: totrans-116
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'An internal load balancer automatically distributes the client load among the
    tasks in a service, regardless of which task is invoked by a client. An external
    load balancer may also be configured, as discussed in a later chapter. As the
    client load on the Hello world service is increased, the number of tasks also
    gets increased if the existing number of tasks are not able to handle the load.
    As shown here, the number of running tasks has increased to four:'
  id: totrans-117
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 内部负载均衡器会自动将客户端负载分配到服务中的各个任务，无论哪个任务被客户端调用。外部负载均衡器也可以进行配置，具体内容将在后续章节中讨论。随着Hello
    world服务上客户端负载的增加，如果现有的任务数量无法处理该负载，任务数量也会增加。如图所示，正在运行的任务数量已经增加到四个：
- en: '![](img/766aed96-932a-48ff-b541-693536054a22.png)'
  id: totrans-118
  prefs: []
  type: TYPE_IMG
  zh: '![](img/766aed96-932a-48ff-b541-693536054a22.png)'
- en: 'Increase the load on the service still further with the following curl command:'
  id: totrans-119
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用以下curl命令进一步增加服务负载：
- en: '[PRE1]'
  id: totrans-120
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'As shown here, the number of tasks has increased to five, which is the maximum
    number of tasks that the auto scaler is able to scale to, as specified in the
    auto scaling configuration for the service:'
  id: totrans-121
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如图所示，任务数量已经增加到五个，这是自动扩展器能够扩展到的最大任务数量，具体数量在服务的自动扩展配置中进行了指定：
- en: '![](img/90c79219-8933-4fe0-b73a-a0b431d1cca9.png)'
  id: totrans-122
  prefs: []
  type: TYPE_IMG
  zh: '![](img/90c79219-8933-4fe0-b73a-a0b431d1cca9.png)'
- en: 'The five running tasks are listed in the Tasks tab for the service, as shown
    here:'
  id: totrans-123
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 运行的五个任务在服务的任务选项卡中列出，如下所示：
- en: '![](img/77c7f1c3-dd96-45c7-bda6-8b222c89d43f.png)'
  id: totrans-124
  prefs: []
  type: TYPE_IMG
  zh: '![](img/77c7f1c3-dd96-45c7-bda6-8b222c89d43f.png)'
- en: Exploring CloudWatch metrics and Logs
  id: totrans-125
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 探索CloudWatch指标和日志
- en: 'In this section, we shall explore the CloudWatch metrics and logs generated
    by the ECS service and find log events for the CloudWatch alarm threshold being
    exceeded:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将探索由ECS服务生成的CloudWatch指标和日志，并找到CloudWatch报警阈值被超出时的日志事件：
- en: Open the CloudWatch console as shown here. The alarm summary for the `AutoScaleCPUUtilization`
    gets displayed in a graph.
  id: totrans-127
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 打开CloudWatch控制台，如下所示。`AutoScaleCPUUtilization`的报警摘要将在图表中显示。
- en: 'Click on Browse Metrics to browse metrics:'
  id: totrans-128
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 单击浏览指标以浏览指标：
- en: '![](img/744a88c6-a18c-4326-918a-a4ca7b66f06b.png)'
  id: totrans-129
  prefs: []
  type: TYPE_IMG
  zh: '![](img/744a88c6-a18c-4326-918a-a4ca7b66f06b.png)'
- en: Select Alarms in the margin. The AutoScaleBasedOnCPUUtilization alarm used as
    a threshold for auto scaling gets listed, as shown in the following screenshot.
    The alarm state is ALARM when the alarm threshold is exceeded.
  id: totrans-130
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 选择边栏中的报警。用作自动扩展阈值的AutoScaleBasedOnCPUUtilization报警将列出，如下图所示。当报警阈值被超过时，报警状态为ALARM。
- en: 'The AutoScaleBasedOnCPUUtilization alarm details and graph get displayed. The
    two spikes in CPU utilization in the graph indicate that the alarm threshold has
    been exceeded, which applies the auto scaling to add one task each time the alarm
    threshold is exceeded. The first spike in the graph is for when the load is increased
    slightly, and the second spike is for when the load is increased to a greater
    extent:'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 显示了AutoScaleBasedOnCPUUtilization告警的详细信息和图表。图表中CPU利用率的两个尖峰表示告警阈值已被超过，这会触发自动扩展，每次超过告警阈值时增加一个任务。图表中的第一个尖峰是负载轻微增加时的情况，第二个尖峰是负载大幅增加时的情况：
- en: '![](img/ee1ce06a-b45b-42d4-8bdd-41ccc6f9165e.png)'
  id: totrans-132
  prefs: []
  type: TYPE_IMG
  zh: '![](img/ee1ce06a-b45b-42d4-8bdd-41ccc6f9165e.png)'
- en: 'When the load on the ECS service is reduced, the alarm state becomes OK. Reducing
    client load does not by itself reduce the number of running tasks. The scaling
    action used as an example only scales up the tasks if client load increases. Another
    scaling action would need to be added to scale down tasks on client load reduction. In
    the History tab, two instances of auto scaling action are listed, as shown in
    the following screenshot:'
  id: totrans-133
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当ECS服务的负载减少时，告警状态变为“正常”。减少客户端负载本身并不会减少运行中的任务数量。作为示例使用的扩展操作仅在客户端负载增加时扩展任务。还需要添加另一个扩展操作来在客户端负载减少时缩减任务。在“历史”标签中，列出了两个自动扩展操作的实例，如下所示：
- en: '![](img/f5622ac9-16ac-4c03-9236-7a2f6cbfa4e9.png)'
  id: totrans-134
  prefs: []
  type: TYPE_IMG
  zh: '![](img/f5622ac9-16ac-4c03-9236-7a2f6cbfa4e9.png)'
- en: 'The Desired count of the service has been updated to 5, in addition to increasing
    the auto scaling running count to five tasks. The AutoScaleBasedOnCPUUtilization
    alarm may also be accessed from the auto scaling tab:'
  id: totrans-135
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 服务的所需数量已更新为5，并且自动扩展运行数量也增加到五个任务。还可以从自动扩展标签中访问AutoScaleBasedOnCPUUtilization告警：
- en: '![](img/e95a6b47-efcd-4f1c-a3ef-298447545643.png)'
  id: totrans-136
  prefs: []
  type: TYPE_IMG
  zh: '![](img/e95a6b47-efcd-4f1c-a3ef-298447545643.png)'
- en: Updating auto scaling policy
  id: totrans-137
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 更新自动扩展策略
- en: 'The auto scaling policy only scales the number of running (desired) tasks and
    does not modify the auto scaling policy, which is still set to a range of 1-5
    tasks. The service may be updated to modify any or all of the minimum number of
    tasks, desired count, maximum number of tasks, and scaling action for auto scaling.
    In this section, we shall discuss updating the auto scaling configuration:'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 自动扩展策略仅扩展运行中的（所需的）任务数量，并不会修改自动扩展策略，策略仍然设置为1-5个任务的范围。服务可能会更新以修改任何或所有的最小任务数量、所需数量、最大任务数量以及自动扩展的扩展操作。在这一部分，我们将讨论更新自动扩展配置：
- en: 'Click on Update for the service as before. The Desired number of tasks is set
    to `5`, as shown here, when auto scaling is performed:'
  id: totrans-139
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 点击与之前相同的“更新”按钮来更新服务。自动扩展执行时，所需的任务数量设置为`5`，如下所示：
- en: '![](img/27910814-88b9-41e8-beff-ff38a12b4737.png)'
  id: totrans-140
  prefs: []
  type: TYPE_IMG
  zh: '![](img/27910814-88b9-41e8-beff-ff38a12b4737.png)'
- en: Reduce the Desired number of tasks to `3`, as shown here.
  id: totrans-141
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将所需任务数量减少到`3`，如下所示。
- en: 'To modify the scaling policy, click on the AutoScaler link, as shown here:'
  id: totrans-142
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 要修改扩展策略，请点击AutoScaler链接，如下所示：
- en: '![](img/07a9e93a-a5c5-4aac-a45c-b7640385e392.png)'
  id: totrans-143
  prefs: []
  type: TYPE_IMG
  zh: '![](img/07a9e93a-a5c5-4aac-a45c-b7640385e392.png)'
- en: 'In Edit policy, select Use an existing policy and select the AutoScaleBasedOnCPUUtilization
    policy. The scaling action does not have to be performed when the alarm threshold
    is breached. Modify the scaling action to Add 1 tasks when `0.9<=CPUUtilization`,
    as shown here. The alarm threshold is `CPUUtilization> 0.1` for 60 seconds, while
    the scaling action is performed when `CPUUtilization>=0.9`. The `AutoScaler` policy
    runs each time the CloudWatch alarm threshold is breached, but the scaling action
    is performed only when `CPUUtilization>=0.9`. Click on Save:'
  id: totrans-144
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在“编辑策略”中，选择“使用现有策略”并选择AutoScaleBasedOnCPUUtilization策略。当告警阈值被突破时不必执行扩展操作。将扩展操作修改为当`0.9<=CPUUtilization`时增加1个任务，如下所示。告警阈值为`CPUUtilization>
    0.1`持续60秒，而扩展操作仅在`CPUUtilization>=0.9`时执行。`AutoScaler`策略每次突破CloudWatch告警阈值时运行，但只有在`CPUUtilization>=0.9`时才会执行扩展操作。点击保存：
- en: '![](img/42b209c8-7bf3-4f84-a698-098d0ffc5774.png)'
  id: totrans-145
  prefs: []
  type: TYPE_IMG
  zh: '![](img/42b209c8-7bf3-4f84-a698-098d0ffc5774.png)'
- en: 'The minimum and maximum number of tasks has not been modified and is still
    1 and 5 respectively. Click on Next step, and then click on Update Service, as
    shown here:'
  id: totrans-146
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最小和最大任务数量没有修改，仍然是1和5。点击“下一步”，然后点击“更新服务”，如下所示：
- en: '![](img/06549da3-c47b-49b3-94da-6ce27a11012a.png)'
  id: totrans-147
  prefs: []
  type: TYPE_IMG
  zh: '![](img/06549da3-c47b-49b3-94da-6ce27a11012a.png)'
- en: 'The old auto scaling policy gets deleted and a new auto scaling policy gets
    created, as shown here. The scalable target is the same as before:'
  id: totrans-148
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 旧的自动扩展策略被删除，创建了新的自动扩展策略，如下所示。可扩展目标与之前相同：
- en: '![](img/08bb7b77-28e4-4dbb-baff-e078df9e737b.png)'
  id: totrans-149
  prefs: []
  type: TYPE_IMG
  zh: '![](img/08bb7b77-28e4-4dbb-baff-e078df9e737b.png)'
- en: 'The CloudWatch alarm gets updated. Click on View Service. The Running count
    and Desired count of the service are both 3, as shown here. The scaling action
    has been updated to Add 1 tasks when 0.9 <= CPUUtilization:'
  id: totrans-150
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: CloudWatch警报已更新。点击查看服务。服务的运行任务数和目标任务数都为3，如图所示。扩展操作已更新为当0.9 <= CPUUtilization时添加1个任务：
- en: '![](img/e01c8498-b2b4-4e4a-b175-682d7af7f84f.png)'
  id: totrans-151
  prefs: []
  type: TYPE_IMG
  zh: '![](img/e01c8498-b2b4-4e4a-b175-682d7af7f84f.png)'
- en: 'The Events tab lists the log events generated by the ECS service, as shown
    here. The number of running tasks had increased to five when the client load was
    increased. But, when the client load is removed and the scaling policy updated,
    the number of running tasks becomes three again. As listed in an event, the service
    has stopped two running tasks:'
  id: totrans-152
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 事件选项卡列出了由ECS服务生成的日志事件，如图所示。当客户端负载增加时，运行的任务数增加到五。但是，当客户端负载移除且扩展策略更新时，运行的任务数又变回三。如事件中所列，服务已停止了两个正在运行的任务：
- en: '![](img/0b55de94-3b24-49aa-82d5-36e162963cc0.png)'
  id: totrans-153
  prefs: []
  type: TYPE_IMG
  zh: '![](img/0b55de94-3b24-49aa-82d5-36e162963cc0.png)'
- en: Initially, one task is started. When the alarm threshold is breached for the
    first time, the scaling action is performed to set the desired count for the maximum
    number of tasks to four, as indicated by one of the log messages. The number of
    running tasks increases to four. When the load is increased still further, the
    alarm threshold is breached for the second time and a scaling action is performed
    to set the desired count for the maximum number of tasks to five. The number of
    running tasks increases to five. When the client load is removed and the service
    is updated to modify the desired count to three, two of the running tasks get
    stopped, as indicated by another event message.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 最初，开始了一个任务。当警报阈值首次被突破时，执行扩展操作，将最大任务数的目标数量设置为四，如其中一条日志消息所示。运行的任务数增加到四。当负载进一步增加时，警报阈值第二次被突破，执行扩展操作，将最大任务数的目标数量设置为五。运行的任务数增加到五。当客户端负载移除且服务更新为将目标数修改为三时，两个正在运行的任务被停止，如另一条事件消息所示。
- en: Summary
  id: totrans-155
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we introduced the ECS auto scaling service, as used with the
    Fargate launch type. Configuring auto scaling involves setting a range (minimum
    and maximum) for the number of tasks within which the auto scaling gets applied.
    Configuring auto scaling also requires an auto scaling policy, consisting of a
    CloudWatch alarm threshold for running the auto scaling policy, and one or more
    scaling actions to perform each time the auto scaling policy runs. In the next
    chapter, we shall discuss using an IAM user with Fargate.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 本章介绍了ECS自动扩展服务，适用于Fargate启动类型。配置自动扩展涉及设置任务数范围（最小值和最大值），在该范围内应用自动扩展。配置自动扩展还需要一个自动扩展策略，包括用于运行自动扩展策略的CloudWatch警报阈值，以及每次自动扩展策略运行时执行的一个或多个扩展操作。在下一章中，我们将讨论如何使用IAM用户与Fargate配合使用。
