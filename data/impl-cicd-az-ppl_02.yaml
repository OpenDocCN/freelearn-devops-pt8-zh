- en: '2'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '2'
- en: Creating Build Pipelines
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建构建管道
- en: In the previous chapter, we laid the groundwork for your Azure DevOps journey
    by preparing the build and deployment agents, pools, and deployment groups and
    explaining how to use them. This chapter will take the next step in helping you
    understand how to create your first pipeline. We will explore the fundamentals
    of using jobs, tasks, triggers, and stages and how to create build pipelines based
    on these concepts. This will enable you to streamline your workflow, minimize
    errors, and enhance productivity. It will also help make collaboration more efficient,
    and you’ll be better prepared to implement practices such as CI/CD.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一章中，我们通过准备构建和部署代理、池以及部署组，并解释如何使用它们，为你的 Azure DevOps 之旅打下了基础。本章将迈出下一步，帮助你了解如何创建第一个管道。我们将探讨如何使用任务、触发器、阶段以及如何基于这些概念创建构建管道的基本原理。这将帮助你简化工作流程，减少错误，提高生产力。它还将有助于提高协作效率，让你更好地为实现
    CI/CD 等实践做好准备。
- en: 'In this chapter, we will cover the following topics:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将涵盖以下主题：
- en: Creating a build pipeline with a single job
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建一个带有单一任务的构建管道
- en: Creating tasks
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建任务
- en: Creating multiple jobs
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建多个任务
- en: Creating triggers
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建触发器
- en: Creating stages
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建阶段
- en: Creating a build pipeline with a single job
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建一个带有单一任务的构建管道
- en: After preparing the build and deployment agent in the previous chapter, this
    section will explain how to create a first **build pipeline** on the **Azure DevOps**
    portal. Before creating a first build pipeline, you must create an Azure repo
    for the source code repository. There are two options to create a build pipeline
    – the **classic editor**, which is the GUI editor for dragging and dropping and
    dropping the components to build a pipeline, and **Yet Another Markup Language**
    (**YAML**), which customizes the advanced Azure pipeline by the markup language.
    In this chapter, we will focus on using the classic editor.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一章节准备好构建和部署代理之后，本节将介绍如何在 **Azure DevOps** 门户上创建第一个 **构建管道**。在创建第一个构建管道之前，必须创建一个
    Azure 仓库作为源代码库。有两种创建构建管道的方式：**经典编辑器**，即通过图形界面编辑器拖放组件来构建管道，和 **另一种标记语言** (**YAML**)，它通过标记语言自定义
    Azure 的高级管道。在本章中，我们将重点使用经典编辑器。
- en: 'Let’s create an empty job to see how it works:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们创建一个空白任务来看看它是如何工作的：
- en: 'Click on your project name from the web portal, and then click **Pipelines**
    | **Create Pipeline**:'
  id: totrans-12
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击项目名称，然后点击 **管道** | **创建管道**：
- en: '![Figure 2.1 – Creating a new pipeline](img/B18875_02_1.jpg)'
  id: totrans-13
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.1 – 创建新管道](img/B18875_02_1.jpg)'
- en: Figure 2.1 – Creating a new pipeline
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.1 – 创建新管道
- en: 'Click on **Use the** **classic editor**:'
  id: totrans-15
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击 **使用经典编辑器**：
- en: '![Figure 2.2 – Using the classic editor](img/B18875_02_2.jpg)'
  id: totrans-16
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.2 – 使用经典编辑器](img/B18875_02_2.jpg)'
- en: Figure 2.2 – Using the classic editor
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.2 – 使用经典编辑器
- en: 'Select **Azure Repos Git**, a source code repository that is an existing service
    under Azure DevOps. This is quite compatible with other Azure DevOps services,
    such as Azure Pipelines, that are used in this demo. Select the options shown
    in the following screenshot for **Team project**, **Repository**, and **Default
    branch for manual and scheduled builds** to initiate an Azure pipeline, and then
    click on **Continue**:'
  id: totrans-18
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择 **Azure Repos Git**，这是 Azure DevOps 下的一个现有服务，作为源代码库。它与其他 Azure DevOps 服务（如
    Azure Pipelines）高度兼容，这些服务将在本演示中使用。选择下图所示的选项，用于 **团队项目**、**代码库** 和 **手动及定时构建的默认分支**
    来启动 Azure 管道，然后点击 **继续**：
- en: '![Figure 2.3 – Choosing the default branch](img/B18875_02_3.jpg)'
  id: totrans-19
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.3 – 选择默认分支](img/B18875_02_3.jpg)'
- en: Figure 2.3 – Choosing the default branch
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.3 – 选择默认分支
- en: Click on **Empty Job**. The template provides a single job that contains tasks
    for your pipeline. We will start with an empty job so that you can learn the basic
    settings from the menu before we select all the templates that will be suitable
    for each project.
  id: totrans-21
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击 **空白任务**。该模板提供了一个单一任务，包含用于管道的任务。我们将从空白任务开始，以便你可以先从菜单中学习基本设置，然后再选择适合每个项目的所有模板。
- en: '![Figure 2.4 – Selecting the build template](img/B18875_02_4.jpg)'
  id: totrans-22
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.4 – 选择构建模板](img/B18875_02_4.jpg)'
- en: Figure 2.4 – Selecting the build template
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.4 – 选择构建模板
- en: 'The other options shown in the screenshot include the following:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 屏幕截图中显示的其他选项包括以下内容：
- en: '**.NET Desktop**: The template for building pipelines to build and test .NET
    desktop solutions'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**.NET 桌面**：用于构建和测试 .NET 桌面解决方案的管道模板'
- en: '**Android**: The template for building pipelines to build and test Android
    APK files for Android applications'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Android**：用于构建管道的模板，用于构建和测试 Android APK 文件以用于 Android 应用程序'
- en: '**ASP.NET**: The template for building pipelines to build and test ASP.NET
    web applications'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**ASP.NET**：用于构建管道的模板，用于构建和测试 ASP.NET Web 应用程序'
- en: '**Azure Web App for ASP.Net**: The template for building pipelines to build,
    test, and deploy ASP.NET to Azure Web App services'
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Azure Web App for ASP.Net**：用于构建管道的模板，用于构建、测试和部署 ASP.NET 到 Azure Web App
    服务'
- en: 'Click on the drop-down menu for **Save &** **queue**:'
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击 **保存 &** **队列** 的下拉菜单：
- en: '![Figure 2.5 – Saving a build pipeline](img/B18875_02_5.jpg)'
  id: totrans-30
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.5 – 保存构建管道](img/B18875_02_5.jpg)'
- en: Figure 2.5 – Saving a build pipeline
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.5 – 保存构建管道
- en: 'On the following screen, you can select a folder to save to and add a comment.
    Click on **Save**:'
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在接下来的屏幕上，你可以选择一个文件夹保存并添加评论。点击 **保存**：
- en: '![Figure 2.6 – Confirming a build pipeline](img/B18875_02_6.jpg)'
  id: totrans-33
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.6 – 确认构建管道](img/B18875_02_6.jpg)'
- en: Figure 2.6 – Confirming a build pipeline
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.6 – 确认构建管道
- en: 'After clicking **Save**, a list of all the build pipelines will appear, as
    follows:'
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击 **保存** 后，将显示所有构建管道的列表，如下所示：
- en: '![Figure 2.7 – The Pipelines dashboard](img/B18875_02_7.jpg)'
  id: totrans-36
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.7 – 管道仪表板](img/B18875_02_7.jpg)'
- en: Figure 2.7 – The Pipelines dashboard
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.7 – 管道仪表板
- en: 'After you create a simple build pipeline, you can test it by clicking on the
    pipeline you want and clicking **Run pipeline**:'
  id: totrans-38
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建简单构建管道后，你可以通过点击你想要的管道并点击 **运行管道** 来测试它：
- en: '![Figure 2.8 – Running the pipeline](img/B18875_02_8.jpg)'
  id: totrans-39
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.8 – 运行管道](img/B18875_02_8.jpg)'
- en: Figure 2.8 – Running the pipeline
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.8 – 运行管道
- en: 'You can set specific options before you run a build pipeline:'
  id: totrans-41
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在运行构建管道之前，你可以设置特定的选项：
- en: '**Agent pool**, where you can choose a Microsoft-hosted agent or a self-hosted
    agent'
  id: totrans-42
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**代理池**，在此处你可以选择 Microsoft 托管的代理或自托管代理'
- en: '**Agent Specification**, where you can choose an agent OS to run a build pipeline'
  id: totrans-43
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**代理规格**，在此处你可以选择一个代理操作系统来运行构建管道'
- en: '**Branch/tag**, where you can choose a build pipeline to run'
  id: totrans-44
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**分支/标签**，在此处你可以选择要运行的构建管道'
- en: '![Figure 2.9 – The Run pipeline options](img/B18875_02_9.jpg)'
  id: totrans-45
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.9 – 运行管道选项](img/B18875_02_9.jpg)'
- en: Figure 2.9 – The Run pipeline options
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.9 – 运行管道选项
- en: Finally, you can see the build result in detail and some summary information.
  id: totrans-47
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，你可以详细查看构建结果和一些摘要信息。
- en: '![Figure 2.10 – A detailed build result](img/B18875_02_10.jpg)'
  id: totrans-48
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.10 – 详细的构建结果](img/B18875_02_10.jpg)'
- en: Figure 2.10 – A detailed build result
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.10 – 详细的构建结果
- en: 'You can also see the latest status on the build pipeline row:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 你还可以查看构建管道行上的最新状态：
- en: '![Figure 2.11 – A pipeline with the build result](img/B18875_02_11.jpg)'
  id: totrans-51
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.11 – 带有构建结果的管道](img/B18875_02_11.jpg)'
- en: Figure 2.11 – A pipeline with the build result
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.11 – 带有构建结果的管道
- en: In this section, you learned how to use the classic editor to make it easy to
    create a new build pipeline. In the next section, we will describe how to create
    tasks in this build pipeline.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一部分，你学会了如何使用经典编辑器来轻松创建一个新的构建管道。在下一部分，我们将描述如何在这个构建管道中创建任务。
- en: Creating tasks
  id: totrans-54
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建任务
- en: 'This section will teach you how to create **tasks** under a job. A build pipeline
    will contain one or more jobs, and each job will contain one or more tasks. In
    the previous section, you created a build pipeline that contains only one job.
    Follow these steps to create a task:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 本节将教你如何在作业下创建**任务**。构建管道将包含一个或多个作业，每个作业将包含一个或多个任务。在前一部分中，你创建了一个仅包含一个作业的构建管道。按照以下步骤创建任务：
- en: Edit a build pipeline by clicking on three dots symbols, and then on **Edit**.
  id: totrans-56
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击三个点符号来编辑构建管道，然后点击 **编辑**。
- en: '![Figure 2.12 – Editing a build pipeline](img/B18875_02_12.jpg)'
  id: totrans-57
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.12 – 编辑构建管道](img/B18875_02_12.jpg)'
- en: Figure 2.12 – Editing a build pipeline
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.12 – 编辑构建管道
- en: 'After you edit a build pipeline, click on `Command line` in the search box,
    and then click on **Add**:'
  id: totrans-59
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 编辑构建管道后，点击搜索框中的 `Command line`，然后点击 **添加**：
- en: '![Figure 2.13 – Adding a command-line task](img/B18875_02_13.jpg)'
  id: totrans-60
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.13 – 添加命令行任务](img/B18875_02_13.jpg)'
- en: Figure 2.13 – Adding a command-line task
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.13 – 添加命令行任务
- en: Click on the `First Command` `Line Task`
  id: totrans-62
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击 `First Command` `Line Task`
- en: '`echo "Hello` `First Task"`:'
  id: totrans-63
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`echo "Hello` `First Task"`:'
- en: '![Figure 2.14 – Entering detail on the Command line task](img/B18875_02_14.jpg)'
  id: totrans-64
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.14 – 输入命令行任务的详细信息](img/B18875_02_14.jpg)'
- en: Figure 2.14 – Entering detail on the Command line task
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.14 – 输入命令行任务的详细信息
- en: Then, click **Save &** **queue**.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，点击 **保存 &** **队列**。
- en: 'After you click on **Save & queue**, you will see the confirmation page. Then,
    click **Save** **and run**:'
  id: totrans-67
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**保存并排队**后，你将看到确认页面。然后，点击**保存** **并运行**：
- en: '![Figure 2.15 – Saving and running a build pipeline](img/B18875_02_15.jpg)'
  id: totrans-68
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.15 – 保存并运行构建管道](img/B18875_02_15.jpg)'
- en: Figure 2.15 – Saving and running a build pipeline
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.15 – 保存并运行构建管道
- en: 'Before saving, however, you can also select **Advanced options**. Here, you
    can enter variables while you are building a pipeline instead of preparing them
    in advance. You can see the available options in the following screenshot:'
  id: totrans-70
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然而，在保存之前，你还可以选择**高级选项**。在这里，你可以在构建管道时输入变量，而不是提前准备好它们。你可以在下面的截图中看到可用的选项：
- en: '![Figure 2.16 – Advanced configuration](img/B18875_02_16.jpg)'
  id: totrans-71
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.16 – 高级配置](img/B18875_02_16.jpg)'
- en: Figure 2.16 – Advanced configuration
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.16 – 高级配置
- en: 'Let’s look at these options more closely:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们更仔细地看看这些选项：
- en: '**Advanced**:'
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**高级**：'
- en: '**Working Directory**: You can enter any path to run the command line task.
    If you don’t enter any path, it will run on the root path.'
  id: totrans-75
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**工作目录**：你可以输入任何路径来运行命令行任务。如果你没有输入路径，它将在根路径下运行。'
- en: '**Fail on Standard Error**: Turn on this feature when you need to stop a task
    if any error happens inside it. For example, if you run a command to read an email
    from the internet and the internet disconnects, this task will display errors.'
  id: totrans-76
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**标准错误失败**：当你需要在任务中出现任何错误时停止任务时，启用此功能。例如，如果你运行一个命令从互联网读取邮件，而互联网断开连接，这个任务将显示错误。'
- en: '**Control Options**:'
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**控制选项**：'
- en: '**Enabled**: Turn this on when you need to enable control options:'
  id: totrans-78
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**启用**：当你需要启用控制选项时，开启此功能：'
- en: '**Continue on error**: Turn on when you need to continue running the next task
    if it finds an error.'
  id: totrans-79
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**继续出错**：当你需要在发现错误后继续运行下一个任务时，启用此选项。'
- en: '**Number of retries if task failed**: Enter the number of times you need to
    rerun a task after it fails.'
  id: totrans-80
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**任务失败后的重试次数**：输入任务失败后需要重新运行的次数。'
- en: '**Timeout**: Enter the number of minutes this task will run for before it is
    canceled.'
  id: totrans-81
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**超时**：输入此任务在被取消之前将运行的分钟数。'
- en: '**Run** **this task**:'
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**运行** **此任务**：'
- en: '**Only when all previous tasks** **have succeeded**'
  id: totrans-83
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**仅当所有前置任务** **成功时**'
- en: '**Even if a previous task has failed, unless the build** **was canceled**'
  id: totrans-84
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**即使前置任务失败，除非构建** **被取消**'
- en: '**Even if a previous task has failed, even if the build** **was canceled**'
  id: totrans-85
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**即使前置任务失败，即使构建** **被取消**'
- en: '**Only when a previous task** **has failed**'
  id: totrans-86
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**仅当前置任务** **失败时**'
- en: '**Custom conditions**: This is where you can create a rule if the aforementioned
    options don’t match your needs.'
  id: totrans-87
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**自定义条件**：如果上述选项不符合你的需求，你可以在此处创建规则。'
- en: '**Environment Variables**: You can add additional variables when you run the
    command. For example, you can add a URL when you run this command to download
    the file.'
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**环境变量**：你可以在运行命令时添加额外的变量。例如，你可以在运行此命令时添加一个 URL 来下载文件。'
- en: '**Output Variables**: You can assign the output from this task and carry it
    to the next task. For example, you can pass the token login in the output variable
    after this task to log in successfully to the next task.'
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**输出变量**：你可以将此任务的输出赋值并传递到下一个任务。例如，你可以在此任务的输出变量中传递token login，以便在下一个任务中成功登录。'
- en: 'Once you save these options, you can see the new history of a build pipeline:'
  id: totrans-90
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦你保存了这些选项，你就可以看到构建管道的新历史记录：
- en: '![Figure 2.17 – Displaying the history of a build pipeline](img/B18875_02_17.jpg)'
  id: totrans-91
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.17 – 显示构建管道的历史](img/B18875_02_17.jpg)'
- en: Figure 2.17 – Displaying the history of a build pipeline
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.17 – 显示构建管道的历史
- en: 'Click on the row where you want to see the task details. Here, you will see
    the output of the running command for each task:'
  id: totrans-93
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击你想查看任务详情的行。在这里，你将看到每个任务运行命令的输出：
- en: '![Figure 2.18 – The job status](img/B18875_02_18.jpg)'
  id: totrans-94
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.18 – 作业状态](img/B18875_02_18.jpg)'
- en: Figure 2.18 – The job status
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.18 – 作业状态
- en: 'Click on **Agent job 1** to see the job details:'
  id: totrans-96
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**代理作业 1**以查看作业详情：
- en: '![Figure 2.19 – Job details with tasks](img/B18875_02_19.jpg)'
  id: totrans-97
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.19 – 带有任务的作业详情](img/B18875_02_19.jpg)'
- en: Figure 2.19 – Job details with tasks
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.19 – 带有任务的作业详情
- en: In this section, you learned how to create a task under a build pipeline and
    view the job status and task details. This can help you ensure that all the tasks
    are as expected. The next section will teach you how to create multiple jobs in
    a build pipeline.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，你学会了如何在构建管道中创建任务并查看作业状态和任务详情。这可以帮助你确保所有任务按预期进行。下一节将教你如何在构建管道中创建多个作业。
- en: Creating multiple jobs
  id: totrans-100
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建多个作业
- en: 'Sometimes, when you create a build pipeline for an application that requires
    building its code for different operating systems simultaneously, you need to
    create another job for that purpose. There are two job types – **agent job** and
    **agentless job**. An agent job is a job that needs to run on an agent or target
    computer, and an agentless job will run on the Azure DevOps application server
    directly. The following steps describe how to create other agent jobs under a
    build pipeline:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 有时，当你为需要同时在不同操作系统上构建代码的应用创建构建管道时，你需要为此目的创建另一个任务。任务有两种类型 —— **代理任务**和**无代理任务**。代理任务是需要在代理或目标计算机上运行的任务，而无代理任务将在
    Azure DevOps 应用服务器上直接运行。以下步骤描述了如何在构建管道下创建其他代理任务：
- en: 'Edit a build pipeline by clicking on the **…** symbol and then on **Edit**:'
  id: totrans-102
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过点击**…**符号，再点击**编辑**来编辑构建管道：
- en: '![Figure 2.20 – Editing a build pipeline](img/B18875_02_20..jpg)'
  id: totrans-103
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.20 – 编辑构建管道](img/B18875_02_20..jpg)'
- en: Figure 2.20 – Editing a build pipeline
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.20 – 编辑构建管道
- en: 'Click on the **...** button and select **Add an** **agent job**:'
  id: totrans-105
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**...**按钮并选择**添加代理任务**：
- en: '![Figure 2.21 – Adding an agent job](img/B18875_02_21..jpg)'
  id: totrans-106
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.21 – 添加代理任务](img/B18875_02_21..jpg)'
- en: Figure 2.21 – Adding an agent job
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.21 – 添加代理任务
- en: Click on `Agent` `job 2`
  id: totrans-108
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击`Agent` `job 2`
- en: '**Agent pool**: **Azure Pipelines**'
  id: totrans-109
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**代理池**：**Azure Pipelines**'
- en: '**Agent** **Specification**: **ubuntu-latest**'
  id: totrans-110
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**代理** **规格**：**ubuntu-latest**'
- en: '![Figure 2.22 – Adding another job](img/B18875_02_22..jpg)'
  id: totrans-111
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.22 – 添加另一个任务](img/B18875_02_22..jpg)'
- en: Figure 2.22 – Adding another job
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.22 – 添加另一个任务
- en: 'Click on the `Command line` in the search box, and then click the **Add** button:'
  id: totrans-113
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在搜索框中点击`命令行`，然后点击**添加**按钮：
- en: '![Figure 2.23 – Adding a new task](img/B18875_02_23..jpg)'
  id: totrans-114
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.23 – 添加新任务](img/B18875_02_23..jpg)'
- en: Figure 2.23 – Adding a new task
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.23 – 添加新任务
- en: Click on the row with the `2`.
  id: totrans-116
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击包含`2`的行。
- en: '`Second Command` `Line Task.`'
  id: totrans-117
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`第二个命令行任务`'
- en: '`echo "Hello Second Task on Linux"`. This will print out this text on the resultant
    page after you have finished running a pipeline:'
  id: totrans-118
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`echo "Hello Second Task on Linux"`。运行完管道后，这将把这段文本打印到结果页面：'
- en: '![Figure 2.24 – Updating the second command line task](img/B18875_02_24..jpg)'
  id: totrans-119
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.24 – 更新第二个命令行任务](img/B18875_02_24..jpg)'
- en: Figure 2.24 – Updating the second command line task
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.24 – 更新第二个命令行任务
- en: 'After you click **Save & queue**, you will see the following result:'
  id: totrans-121
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**保存并排队**后，你将看到以下结果：
- en: '![Figure 2.25 – The result of two agent jobs](img/B18875_02_25..jpg)'
  id: totrans-122
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.25 – 两个代理任务的结果](img/B18875_02_25..jpg)'
- en: Figure 2.25 – The result of two agent jobs
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.25 – 两个代理任务的结果
- en: Pro tip
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 专业提示
- en: For error handling, when you have more than one agent Job, you can set up parameters
    in advanced configuration to ensure that **Agent job 2** will run if **Agent job
    1** is completed successfully.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 对于错误处理，当你有多个代理任务时，可以在高级配置中设置参数，确保**代理任务 2**会在**代理任务 1**成功完成后运行。
- en: 'Let’s look at some of the advanced options available in the **Agent job** properties,
    as shown in the following screenshot:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来看一下在**代理任务**属性中可用的一些高级选项，如下图所示：
- en: '![Figure 2.26 – Advanced options for an agent job](img/B18875_02_26..jpg)'
  id: totrans-127
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.26 – 代理任务的高级选项](img/B18875_02_26..jpg)'
- en: Figure 2.26 – Advanced options for an agent job
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.26 – 代理任务的高级选项
- en: 'Let’s look at these options in some detail:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们更详细地了解这些选项：
- en: '**Agent selection**:'
  id: totrans-130
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**代理选择**：'
- en: '**Agent pool**: Select a custom or default agent to build jobs.'
  id: totrans-131
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**代理池**：选择自定义或默认代理来构建任务。'
- en: '**Demands**: Add condition parameters to allow only agents that meet conditions
    to run this agent job. For example, only a Linux agent can run this job.'
  id: totrans-132
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**需求**：添加条件参数，仅允许符合条件的代理运行此代理任务。例如，只有 Linux 代理才能运行此任务。'
- en: '**Execution plan**:'
  id: totrans-133
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**执行计划**：'
- en: '**Parallelism**: The options available here are the following:'
  id: totrans-134
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**并行性**：这里提供的选项如下：'
- en: '**None**: No jobs will run parallelly.'
  id: totrans-135
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**无**：没有任务将并行运行。'
- en: '**Multi-configuration**: Turn this on when you have different configurations
    to run for each agent job. For example, you may need to run a job test on three
    browsers, so you will need Chrome, Edge, and Firefox browsers.'
  id: totrans-136
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**多配置**：当你有不同的配置需要为每个代理任务运行时，启用此选项。例如，你可能需要在三个浏览器上运行测试任务，因此你将需要 Chrome、Edge
    和 Firefox 浏览器。'
- en: '**Multi-agent**: Turn this on when you have many agents and need to use them
    to run an agent job.'
  id: totrans-137
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**多代理**：当你有多个代理并需要使用它们来运行代理任务时，启用此选项。'
- en: '**Timeout**: Enter a minute number; an agent job is allowed to execute on the
    agent before being canceled.'
  id: totrans-138
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**超时**：输入分钟数；代理任务允许在代理上执行的时间，超过该时间将被取消。'
- en: '**Job cancel timeout**: Enter a number of minutes before the agent job is canceled
    after getting a cancel request from the agent.'
  id: totrans-139
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**任务取消超时**：输入在接收到取消请求后，代理任务取消前的分钟数。'
- en: '**Dependencies**: You can select a previous agent job when you need it completed
    successfully before running another agent job.'
  id: totrans-140
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**依赖关系**：当你需要在运行另一个代理任务之前先完成某个任务时，可以选择之前的代理任务。'
- en: '**Additional options**:'
  id: totrans-141
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**附加选项**：'
- en: '**Allow scripts to access the OAuth token**: turn on when you need to use the
    OAuth token to pass to another agent job by using REST API.'
  id: totrans-142
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**允许脚本访问 OAuth 令牌**：当你需要使用 OAuth 令牌通过 REST API 传递给另一个代理任务时，打开此选项。'
- en: '**Run** **this job**:'
  id: totrans-143
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**运行** **此任务**：'
- en: '**Only when all previous jobs** **have succeeded**'
  id: totrans-144
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**仅当所有前置任务** **成功完成时**'
- en: '**Even if a previous job** **has failed**'
  id: totrans-145
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**即使前一个任务** **失败时**'
- en: '**Only when a previous job** **has failed**'
  id: totrans-146
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**仅当前一个任务** **失败时**'
- en: '**Custom condition using variable expressions**: For example, **succeeded()**
    means the agent job will run if the previous one completely successfully'
  id: totrans-147
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**使用变量表达式的自定义条件**：例如，**succeeded()** 表示如果前一个任务完全成功，代理任务将会运行。'
- en: In this section, you learned how to create a second job to separate the Linux
    operation system. Two jobs can run simultaneously, and this use case is suitable
    for running a task in different operating systems without depending on each other,
    such as when you create a build pipeline that needs to deploy your application
    to Google Play and Apple Store simultaneously without running in sequence.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一部分，你将学到如何创建第二个任务来分离 Linux 操作系统。两个任务可以同时运行，这种用例适用于在不同操作系统上运行任务，而不互相依赖，比如你在创建一个构建管道时，需要同时将应用程序部署到
    Google Play 和 Apple Store，而不是按顺序运行。
- en: The following section will teach you how to create a trigger to make a build
    pipeline run automatically.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 以下部分将教你如何创建一个触发器，使构建管道能够自动运行。
- en: Creating triggers
  id: totrans-150
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建触发器
- en: 'This section will teach you how to create a **trigger** – that is, make a build
    pipeline run automatically when you push your code to a specific branch:'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 本部分将教你如何创建一个 **触发器** —— 也就是在你将代码推送到特定分支时使构建管道自动运行：
- en: 'Edit a build pipeline by clicking on the three dots to view the details of
    the build pipeline, and then click on **Edit**:'
  id: totrans-152
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击三点菜单编辑构建管道，查看构建管道的详细信息，然后点击 **编辑**：
- en: '![Figure 2.27 – Editing a build pipeline](img/B18875_02_27..jpg)'
  id: totrans-153
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.27 – 编辑构建管道](img/B18875_02_27..jpg)'
- en: Figure 2.27 – Editing a build pipeline
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.27 – 编辑构建管道
- en: 'Click on **Triggers** and update the following information:'
  id: totrans-155
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击 **触发器** 并更新以下信息：
- en: '**Enable continuous integration**: Turn this on'
  id: totrans-156
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**启用持续集成**：开启此选项'
- en: '**Branch filters** | **Type**: **Include** | **Branch** **specification**:
    **main**'
  id: totrans-157
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**分支过滤器** | **类型**：**包括** | **分支** **规范**：**main**'
- en: 'If you push your code on the main branch, a build pipeline will run automatically;
    this is called enabling continuous integration:'
  id: totrans-158
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果你在主分支上推送代码，构建管道将自动运行；这就是启用持续集成：
- en: '![Figure 2.28 – Turning on continuous integration](img/B18875_02_28..jpg)'
  id: totrans-159
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.28 – 启用持续集成](img/B18875_02_28..jpg)'
- en: Figure 2.28 – Turning on continuous integration
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.28 – 启用持续集成
- en: In this section, you learned how to enable automatically running a build pipeline
    after we push the code. This will reduce the daily workload to manually build
    your code whenever you push it to the source code repository.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一部分，你将学到如何在推送代码后启用自动运行构建管道。这样可以减少每次推送代码到源代码库时手动构建代码的工作量。
- en: The following section will teach you how to create a stage to make a task group
    for deployment environments.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 以下部分将教你如何创建一个阶段，用于部署环境的任务组。
- en: Creating stages
  id: totrans-163
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建阶段
- en: 'This section will teach you how to create a **stage** using the classic editor
    – that is, create a task group for environmental purposes such as development,
    non-functional testing, and production. Each group has jobs and tasks to run for
    each environment. Using many stages is advantageous when we have many environments
    to deploy our applications. This is because if we use only one stage by default
    for the development and production environment, if the development pipeline fails,
    it will continue to run the production pipeline and also fail. Let’s look at how
    we can create a stage:'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 本节将教你如何使用经典编辑器创建一个 **阶段** —— 也就是说，创建一个用于环境目的的任务组，如开发、非功能性测试和生产。每个组都包含为每个环境运行的工作和任务。当我们需要将应用程序部署到多个环境时，使用多个阶段是有优势的。因为如果我们只为开发和生产环境使用一个默认阶段，若开发管道失败，它将继续运行生产管道并导致失败。让我们看看如何创建一个阶段：
- en: 'Click on **Releases** | **New pipeline**:'
  id: totrans-165
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击 **发布** | **新建管道**：
- en: '![Figure 2.29 – Creating a new pipeline](img/B18875_02_29..jpg)'
  id: totrans-166
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.29 – 创建新管道](img/B18875_02_29..jpg)'
- en: Figure 2.29 – Creating a new pipeline
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.29 – 创建新管道
- en: 'Enter a stage name and click on **Save**:'
  id: totrans-168
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输入阶段名称并点击 **保存**：
- en: '![Figure 2.30 – Edit stage properties](img/B18875_02_30..jpg)'
  id: totrans-169
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.30 – 编辑阶段属性](img/B18875_02_30..jpg)'
- en: Figure 2.30 – Edit stage properties
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.30 – 编辑阶段属性
- en: 'Select the relevant repository folder. In our case, it is an Azure Repos folder,
    the root folder for your code and the Azure pipeline file:'
  id: totrans-171
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择相关的仓库文件夹。在我们的案例中，它是一个 Azure Repos 文件夹，包含你的代码和 Azure 管道文件的根文件夹：
- en: '![Figure 2.31 – Confirming a pipeline](img/B18875_02_31..jpg)'
  id: totrans-172
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.31 – 确认管道](img/B18875_02_31..jpg)'
- en: Figure 2.31 – Confirming a pipeline
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.31 – 确认管道
- en: Now that you’ve learned how to create a stage with an empty job, let’s wrap
    up this chapter.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你已经学会了如何创建一个包含空工作任务的阶段，让我们总结一下这一章的内容。
- en: Summary
  id: totrans-175
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, you learned the core features needed to create a pipeline.
    You learned how to create a build pipeline that includes jobs and tasks. You also
    learned how to make a trigger to filter any branch to run a build agent. These
    triggers, combined with jobs and tasks, form the cornerstone of any effective
    CI/CD pipeline, enabling automated, efficient, and reliable software delivery.
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一章中，你学习了创建管道所需的核心功能。你学会了如何创建一个包括工作和任务的构建管道。你还学会了如何设置触发器，以便过滤任何分支来运行构建代理。这些触发器与工作和任务结合，构成了任何有效
    CI/CD 管道的基石，使得软件交付能够自动化、高效且可靠。
- en: In the next chapter, you will learn how to enhance a build pipeline using YAML
    and run it on an agent.
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章，你将学习如何使用 YAML 来增强构建管道，并在代理上运行它。
