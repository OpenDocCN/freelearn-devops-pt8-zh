- en: Creating Standalone Routers with Neutron
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Neutron创建独立路由器
- en: Neutron enables users to build routers that provide connectivity between networks
    created by users and external networks. In a reference implementation, the Neutron
    L3 agent provides IP routing and network address translation for virtual machine
    instances within the cloud by utilizing network namespaces to provide isolated
    routing instances. By creating networks and attaching them to routers, users can
    expose connected virtual machine instances and their applications to the internet.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: Neutron使用户能够构建在用户创建的网络和外部网络之间提供连接的路由器。在参考实现中，Neutron L3代理通过利用网络命名空间为云中的虚拟机实例提供IP路由和网络地址转换，从而提供隔离的路由实例。通过创建网络并将其附加到路由器，用户可以将连接的虚拟机实例及其应用程序暴露到互联网。
- en: Prior to the Juno release of OpenStack, users were limited to building standalone
    routers that acted as single points of failure in the network stack. Since the
    advent of distributed virtual routers in Juno and beyond, standalone routers are
    now referred to as legacy routers. While the preference may be to provide resiliency
    in the form of highly-available or distributed virtual routers, standalone routers
    provide the simplest implementation of the three options.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在OpenStack的Juno版本之前，用户只能构建作为网络堆栈中的单点故障的独立路由器。自从Juno及其之后版本引入了分布式虚拟路由器后，独立路由器现在被称为遗留路由器。尽管偏好可能是提供高可用性或分布式虚拟路由器来实现可靠性，但独立路由器提供了三种选项中最简单的实现。
- en: 'In previous chapters, we discovered the difference between provider and self-service
    project networks and demonstrated the process of booting an instance and connecting
    it to the network. In this chapter, we will work through the following:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在之前的章节中，我们探讨了提供者网络和自服务项目网络之间的区别，并演示了启动实例并将其连接到网络的过程。在本章中，我们将完成以下内容：
- en: Installing and configuring the L3 agent
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装和配置L3代理
- en: Creating an external provider network
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建外部提供者网络
- en: Creating a standalone router in the CLI and Horizon dashboard
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在CLI和Horizon仪表板中创建独立路由器
- en: Attaching a router to both external and tenant networks
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将路由器连接到外部网络和租户网络
- en: Booting instances
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 启动实例
- en: Demonstrating instance and namespace connectivity using Linux bridges
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Linux桥接演示实例和命名空间的连接性
- en: Demonstrating SNAT and DNAT functionality provided by floating IPs
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 演示浮动IP提供的SNAT和DNAT功能
- en: Routing traffic in the cloud
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在云中路由流量
- en: 'In a reference implementation, virtual routers created in Neutron exist as
    network namespaces that reside on nodes running the Neutron L3 agent service.
    A virtual router is often connected to a single external provider network and
    one or more project networks. The router interfaces connected to those networks
    can be identified as follows:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 在参考实现中，Neutron中创建的虚拟路由器作为网络命名空间存在，并驻留在运行Neutron L3代理服务的节点上。虚拟路由器通常连接到一个外部提供者网络和一个或多个项目网络。连接到这些网络的路由器接口可以如下识别：
- en: 'qg: Gateway interface'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: qg：网关接口
- en: qr:&amp;nbsp;Router interface
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: qr：路由器接口
- en: 'Neutron routers are responsible for providing inbound and outbound connectivity
    to and from project networks through the use of Network Address Translation, or
    NAT. The following diagram shows how a router namespace may be connected to multiple
    bridges in a Linux bridge-based implementation:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: Neutron路由器通过使用网络地址转换（NAT）为项目网络提供进出连接。以下图示展示了路由器命名空间如何连接到基于Linux桥接实现的多个桥接：
- en: '![](img/f2f18ced-a8ca-4e65-b5e1-9af3934b16df.png)'
  id: totrans-16
  prefs: []
  type: TYPE_IMG
  zh: '![](img/f2f18ced-a8ca-4e65-b5e1-9af3934b16df.png)'
- en: The preceding diagram demonstrates a Neutron router connected to multiple bridges
    in a Linux bridge-based implementation. In an Open vSwitch-based implementation,
    the router's interfaces are connected directly to the integration bridge. Traffic
    from project networks is routed in through qr interfaces and out the qg interface
    onto the external network. Routing tables within the namespace dictate how traffic
    is routed, and iptables rules dictate how traffic is translated, if necessary.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 上述图示展示了Neutron路由器在基于Linux桥接的实现中如何连接到多个桥接。在基于Open vSwitch的实现中，路由器的接口直接连接到集成桥接。来自项目网络的流量通过qr接口路由到外部网络的qg接口。命名空间中的路由表决定流量的路由方式，iptables规则决定流量是否需要转换。
- en: More on creating and configuring standalone Neutron routers, along with examples
    on how they are connected to the network and provide connectivity to instances,
    can be found later on in this chapter.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 更多关于创建和配置独立 Neutron 路由器的内容，以及它们如何连接到网络并为实例提供连接的示例，请参见本章后面的内容。
- en: Installing and configuring the Neutron L3 agent
  id: totrans-19
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装和配置 Neutron L3 代理
- en: 'To install the Neutron L3 agent, run the following command on the `controller01`
    node:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 要安装 Neutron L3 代理，请在 `controller01` 节点上运行以下命令：
- en: '[PRE0]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Neutron stores the L3 agent configuration in the `/etc/neutron/l3_agent.ini`
    file. The most common configuration options will be covered in the following subsections.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: Neutron 将 L3 代理配置存储在 `/etc/neutron/l3_agent.ini` 文件中。最常见的配置选项将在以下子节中介绍。
- en: Defining an interface driver
  id: totrans-23
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 定义接口驱动程序
- en: The Neutron L3 agent must be configured to use an interface driver that corresponds
    to the chosen mechanism driver. In a reference implementation, that can be either
    the Linux bridge or Open vSwitch drivers. In this environment, the linux bridge
    driver will be installed on `controller01`.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 必须配置 Neutron L3 代理，使用与所选机制驱动程序相对应的接口驱动程序。在参考实现中，这可以是 Linux 桥接驱动程序或 Open vSwitch
    驱动程序。在此环境中，linux 桥接驱动程序将安装在 `controller01` 上。
- en: 'On the `controller01` node, update the Neutron L3 agent configuration file
    at `/etc/neutron/l3_agent.ini` and specify the following Linux bridge interface
    driver for this particular environment:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 在 `controller01` 节点上，更新 Neutron L3 代理配置文件 `/etc/neutron/l3_agent.ini`，并为此特定环境指定以下
    Linux 桥接接口驱动程序：
- en: '[PRE1]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'For your reference, the following can be used when the `network` node hosting
    routers is configured for Open vSwitch:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 作为参考，以下配置可用于当 `network` 节点承载路由器并配置为 Open vSwitch 时：
- en: '[PRE2]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Enabling the metadata proxy
  id: totrans-29
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 启用元数据代理
- en: When Neutron routers are used as the gateway for instances, requests for metadata
    are proxied by the router rather than the DHCP server and are forwarded to the
    Nova metadata service. This feature is enabled by default and can be disabled
    by setting the `enable_metadata_proxy`&amp;nbsp;value to `False`&amp;nbsp;in the
    `l3_agent.ini` configuration file and uncommenting the line. For this environment,
    leave the setting at its default `True` value.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 当 Neutron 路由器作为实例的网关时，元数据请求将通过路由器代理，而不是 DHCP 服务器，并被转发到 Nova 元数据服务。此功能默认启用，可以通过将
    `l3_agent.ini` 配置文件中的 `enable_metadata_proxy` 值设置为 `False` 并取消注释来禁用。在此环境中，保持默认的
    `True` 值即可。
- en: If the metadata proxy is disabled, users may only be able to obtain metadata
    using config-drive.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 如果禁用了元数据代理，用户可能只能通过 config-drive 获取元数据。
- en: Setting the agent mode
  id: totrans-32
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置代理模式
- en: By default, the Neutron L3 agent works in legacy mode, which means that the
    L3 agent is deployed on a centralized node responsible for networking services.
    The default value for `agent_mode` is `legacy`, which shall remain unchanged for
    the remainder of this chapter.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，Neutron L3 代理以传统模式工作，这意味着 L3 代理部署在负责网络服务的集中节点上。`agent_mode` 的默认值为 `legacy`，并将在本章其余部分保持不变。
- en: Enabling the router service plugin
  id: totrans-34
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 启用路由器服务插件
- en: 'The router service plugin must be enabled before Neutron will accept API commands
    related to Neutron routers. On the `controller01` node, update the Neutron API
    server configuration file at `/etc/neutron/neutron.conf` and append&amp;nbsp;`router`
    to the list of service plugins, as shown here:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Neutron 接受与 Neutron 路由器相关的 API 命令之前，必须启用路由器服务插件。在 `controller01` 节点上，更新 Neutron
    API 服务器配置文件 `/etc/neutron/neutron.conf`，并将 `router` 添加到服务插件列表中，如下所示：
- en: '[PRE3]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: The `service_plugins` configuration option may be disabled. Remove any leading
    hash (#) to enable the option.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: '`service_plugins` 配置选项可能已被禁用。删除前导的井号 (#) 来启用该选项。'
- en: Enabling router management in the dashboard
  id: totrans-38
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在仪表板中启用路由器管理
- en: The Horizon dashboard can be used to manage routers, but the option must be
    enabled first.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 可以使用 Horizon 仪表板来管理路由器，但必须首先启用此选项。
- en: 'On the `controller01` node, edit the OpenStack dashboard configuration file
    at `/etc/openstack-dashboard/local_settings.py` and navigate to the `OPENSTACK_NEUTRON_NETWORK`
    configuration option. Change the `enable_router` dictionary value from `False`
    to `True`, as shown here:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 在 `controller01` 节点上，编辑 OpenStack 仪表板配置文件 `/etc/openstack-dashboard/local_settings.py`，然后找到
    `OPENSTACK_NEUTRON_NETWORK` 配置选项。将 `enable_router` 字典的值从 `False` 更改为 `True`，如下所示：
- en: '![](img/b0000103-56b8-4b32-8475-2e88ac9529c2.png)'
  id: totrans-41
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b0000103-56b8-4b32-8475-2e88ac9529c2.png)'
- en: Close the file and proceed with the next section to restart services.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 关闭文件并继续进行下一节，重启服务。
- en: Restarting services
  id: totrans-43
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 重启服务
- en: 'After making changes to the configuration of the Neutron L3 agent and API service,
    issue the following commands on the&amp;nbsp;`controller01` node to restart the
    respective services:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 在对Neutron L3代理和API服务配置进行更改后，在`controller01`节点上执行以下命令以重启相应的服务：
- en: '[PRE4]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Verify that the agent is running:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 验证代理是否正在运行：
- en: '[PRE5]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'The service should return a similar output to the following and be in an active
    (running) state:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 服务应返回类似于以下的输出，并处于活动（运行）状态：
- en: '![](img/3b4553ad-b3e9-4991-928e-92d665c321d8.png)'
  id: totrans-49
  prefs: []
  type: TYPE_IMG
  zh: '![](img/3b4553ad-b3e9-4991-928e-92d665c321d8.png)'
- en: If the service remains stopped, troubleshoot any errors that may be indicated
    in the `/var/log/neutron/l3-agent.log` log file.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 如果服务保持停止状态，请排查`/var/log/neutron/l3-agent.log`日志文件中可能指示的错误。
- en: Router management in the CLI
  id: totrans-51
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在CLI中管理路由器
- en: 'Neutron offers a number of commands that can be used to create and manage routers.
    The primary commands associated with router management include the following:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: Neutron提供了一些命令，可用于创建和管理路由器。与路由器管理相关的主要命令包括以下内容：
- en: '| **Router Management Commands** | **Description** |'
  id: totrans-53
  prefs: []
  type: TYPE_TB
  zh: '| **路由器管理命令** | **描述** |'
- en: '| `router create` | Creates a router |'
  id: totrans-54
  prefs: []
  type: TYPE_TB
  zh: '| `router create` | 创建一个路由器 |'
- en: '| `router delete` | Deletes a router(s) |'
  id: totrans-55
  prefs: []
  type: TYPE_TB
  zh: '| `router delete` | 删除一个或多个路由器 |'
- en: '| `router set` | Sets a router gateway and other properties |'
  id: totrans-56
  prefs: []
  type: TYPE_TB
  zh: '| `router set` | 设置路由器网关及其他属性 |'
- en: '| `router unset` | Unsets a router gateway and other properties |'
  id: totrans-57
  prefs: []
  type: TYPE_TB
  zh: '| `router unset` | 取消设置路由器网关及其他属性 |'
- en: '| `router show` | Displays router details |'
  id: totrans-58
  prefs: []
  type: TYPE_TB
  zh: '| `router show` | 显示路由器详情 |'
- en: '| `router list` | Lists routers |'
  id: totrans-59
  prefs: []
  type: TYPE_TB
  zh: '| `router list` | 列出路由器 |'
- en: '| `router add port` | Adds an interface to a router using an existing port
    |'
  id: totrans-60
  prefs: []
  type: TYPE_TB
  zh: '| `router add port` | 使用现有端口向路由器添加接口 |'
- en: '| `router add subnet` | Adds an interface to a router using an existing subnet
    |'
  id: totrans-61
  prefs: []
  type: TYPE_TB
  zh: '| `router add subnet` | 使用现有子网向路由器添加接口 |'
- en: '| `router remove port` | Removes an interface from a router using a corresponding
    port ID |'
  id: totrans-62
  prefs: []
  type: TYPE_TB
  zh: '| `router remove port` | 使用相应的端口ID从路由器中移除一个接口 |'
- en: '| `router remove subnet` | Removes an interface from a router using a corresponding
    subnet ID |'
  id: totrans-63
  prefs: []
  type: TYPE_TB
  zh: '| `router remove subnet` | 使用相应的子网ID从路由器中移除一个接口 |'
- en: '| `network agent list` | Lists all network agents |'
  id: totrans-64
  prefs: []
  type: TYPE_TB
  zh: '| `network agent list` | 列出所有网络代理 |'
- en: Creating routers in the CLI
  id: totrans-65
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在CLI中创建路由器
- en: Routers in Neutron are associated with projects and can only be managed by users
    associated with the project. Unlike networks, routers cannot be shared among projects.
    However, shared networks can be attached to routers and potentially route traffic
    between different projects. Users with the admin role can associate routers with
    other projects during the router creation process.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: Neutron中的路由器与项目相关联，且只能由与该项目相关的用户管理。与网络不同，路由器不能在项目之间共享。然而，共享网络可以附加到路由器，并可能在不同项目之间路由流量。具有管理员角色的用户可以在创建路由器过程中将路由器与其他项目关联。
- en: 'To create a standalone router, use the `openstack router create`&amp;nbsp;command
    shown here:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 要创建一个独立的路由器，请使用以下显示的`openstack router create`命令：
- en: '[PRE6]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: The router will be created without any interfaces attached and will immediately
    be scheduled to an L3 agent. A corresponding network namespace should be visible
    on the node hosting the respective L3 agent and can be found using the `ip netnslist`
    command.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 路由器将被创建，但不会附加任何接口，并会立即被调度到L3代理。相应的网络命名空间应在托管该L3代理的节点上可见，可以使用`ip netnslist`命令找到它。
- en: Listing routers in the CLI
  id: totrans-70
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在CLI中列出路由器
- en: 'To display a list of existing routers, use the `openstack router list` command
    shown here:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 要显示现有路由器的列表，请使用以下显示的`openstack router list`命令：
- en: '[PRE7]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Filters based on name, project, admin state, scheduled agent, and tags can be
    used to narrow returned results.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 可以根据名称、项目、管理员状态、计划代理和标签等过滤条件来缩小返回结果。
- en: Users will only see routers associated with their project. When executed as
    a user with the admin role, Neutron will return a listing of all routers across
    all projects unless a project ID is specified.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 用户将仅能看到与其项目相关的路由器。以管理员角色执行时，Neutron将返回所有项目中的所有路由器列表，除非指定了项目ID。
- en: Displaying router attributes in the CLI
  id: totrans-75
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在CLI中显示路由器属性
- en: 'To display the attributes of a router, use the `openstack router show` command
    shown here:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 要显示路由器的属性，请使用以下显示的`openstack router show`命令：
- en: '[PRE8]'
  id: totrans-77
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Among the output returned is the admin state, the external network, the SNAT
    state, and project ID associated with the router. Two additional attributes, distributed
    and HA, are used to identify the router as being distributed or highly-available.
    For standalone routers, both attributes will be set to False.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 返回的输出中包含管理员状态、外部网络、SNAT 状态和与路由器关联的项目 ID。两个附加属性，分布式（distributed）和高可用性（HA），用于标识路由器是否为分布式或高度可用。对于独立路由器，这两个属性将被设置为
    False。
- en: Updating router attributes in the CLI
  id: totrans-79
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在 CLI 中更新路由器属性
- en: 'To update the attributes of a router, use the `openstack router set` or `openstack
    router unset`&amp;nbsp;commands shown here:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 要更新路由器的属性，请使用如下所示的 `openstack router set` 或 `openstack router unset` 命令：
- en: '[PRE9]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Working with router interfaces in the CLI
  id: totrans-82
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在 CLI 中处理路由器接口
- en: 'Standalone Neutron routers have two types of interfaces: gateway and internal.
    The gateway interface of a Neutron router is analogous to the WAN interface of
    a physical router. It is the interface connected to an upstream device that provides
    connectivity to external resources. The internal interfaces of Neutron routers
    are analogous to the LAN interfaces of physical routers. Internal interfaces are
    connected to project networks and often serve as the gateway or next hop for instances
    in those networks.'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 独立的 Neutron 路由器有两种类型的接口：网关和内部。Neutron 路由器的网关接口类似于物理路由器的 WAN 接口。它是连接到上游设备的接口，提供与外部资源的连接。Neutron
    路由器的内部接口类似于物理路由器的 LAN 接口。内部接口连接到项目网络，并通常作为这些网络中实例的网关或下一跳。
- en: Attaching internal interfaces to routers
  id: totrans-84
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将内部接口附加到路由器
- en: 'To create an internal router interface and attach it to a subnet, use the `openstack
    router add subnet` command shown here:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 要创建一个内部路由器接口并将其附加到子网，请使用如下所示的 `openstack router add subnet` 命令：
- en: '[PRE10]'
  id: totrans-86
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: The `subnet`&amp;nbsp;argument represents a subnet name or ID to be attached
    to the router. Neutron will assign the gateway IP of the subnet to the router
    when creating the `qr` interface and corresponding port.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: '`subnet` 参数表示要附加到路由器的子网名称或 ID。Neutron 在创建 `qr` 接口和相应端口时，将为路由器分配该子网的网关 IP。'
- en: 'To attach an existing port directly to the router, use the `openstack router
    add port` command shown here:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 要将现有端口直接附加到路由器，请使用如下所示的 `openstack router add port` 命令：
- en: '[PRE11]'
  id: totrans-89
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: The `port` keyword represents a port name or ID to be attached to the router.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: '`port` 关键字表示要附加到路由器的端口名称或 ID。'
- en: A Neutron router can only have one interface in a given subnet, but can be attached
    to multiple subnets simultaneously. The L3 agent is responsible for connecting
    interfaces within the router namespace to the proper bridges on the host.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: Neutron 路由器在给定子网中只能有一个接口，但可以同时连接到多个子网。L3 代理负责将路由器命名空间中的接口连接到主机上的适当桥接器。
- en: In Neutron, a network may contain multiple subnets. A router must be connected
    to all subnets in a network to properly route traffic for that network. Be sure
    not to attach an external network using this process, as traffic may be negatively
    impacted!
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Neutron 中，一个网络可以包含多个子网。路由器必须连接到网络中的所有子网，以便正确地路由该网络的流量。确保不要使用此过程附加外部网络，因为这可能会对流量产生负面影响！
- en: Attaching a gateway interface to a router
  id: totrans-93
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将网关接口附加到路由器
- en: The external interface of a Neutron router is referred to as the gateway interface.
    A router is limited to a single gateway interface. To be eligible for use as an
    external network that can be used for router gateway interfaces, a provider network
    must have its router's external attribute set to True&amp;nbsp;or External.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: Neutron 路由器的外部接口被称为网关接口。一个路由器只能有一个网关接口。要作为可用于路由器网关接口的外部网络，提供者网络必须将路由器的外部属性设置为
    True 或 External。
- en: 'To attach a gateway interface to a router, use the `openstack router set` command
    shown here:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 要将网关接口附加到路由器，请使用如下所示的 `openstack router set` 命令：
- en: '[PRE12]'
  id: totrans-96
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: The `<network>`&amp;nbsp;argument represents a network name or ID to be attached
    to the router as the gateway network. Neutron will assign an IP address from the
    external network to the router. By default, Neutron routers perform source network
    address translation, or SNAT, on all traffic from instances that lack floating
    IPs. NAT and SNAT will be covered in more detail later in this chapter. To disable
    this functionality, use the `--disable-snat`&amp;nbsp;argument when using the
    `openstack router set`&amp;nbsp;command.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: '`<network>`&nbsp;参数表示要附加到路由器的作为网关网络的网络名称或 ID。Neutron 会从外部网络为路由器分配一个 IP 地址。默认情况下，Neutron
    路由器会对所有没有浮动 IP 的实例流量执行源网络地址转换（SNAT）。NAT 和 SNAT 会在本章后面详细讲解。要禁用此功能，请在使用 `openstack
    router set`&nbsp;命令时使用 `--disable-snat`&nbsp;参数。'
- en: Listing interfaces attached to routers
  id: totrans-98
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 列出附加到路由器的接口
- en: 'To list the interfaces attached to a router, use the `openstack port list`
    command shown here:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 要列出附加到路由器的接口，请使用如下所示的 `openstack port list` 命令：
- en: '[PRE13]'
  id: totrans-100
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: The router&amp;nbsp;argument represents the router name or ID.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 路由器&nbsp;参数表示路由器的名称或 ID。
- en: Deleting internal interfaces
  id: totrans-102
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 删除内部接口
- en: 'To delete an internal interface from a router, use the `openstack router remove
    port`&amp;nbsp;or&amp;nbsp;`openstack router remove subnet`&amp;nbsp;commands
    shown here:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 要从路由器中删除内部接口，请使用如下所示的 `openstack router remove port`&nbsp;或&nbsp;`openstack
    router remove subnet`&nbsp;命令：
- en: '[PRE14]'
  id: totrans-104
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: The `<port>`&amp;nbsp;argument represents the name or ID of a particular port
    to be removed from the router, while the `<subnet>`&amp;nbsp;argument represents
    the name of ID of a subnet to be removed from the router. In either case, deleting
    an interface based on port or subnet results in the respective Neutron port being
    removed from the database.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: '`<port>`&nbsp;参数表示要从路由器中删除的特定端口的名称或 ID，而 `<subnet>`&nbsp;参数表示要从路由器中删除的子网的名称或
    ID。在这两种情况下，基于端口或子网删除接口将导致相应的 Neutron 端口从数据库中移除。'
- en: Clearing the gateway interface
  id: totrans-106
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 清除网关接口
- en: Gateway interfaces cannot be removed from a router using the `openstack router
    remove` commands. Instead, the `openstack router unset` command must be used.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 不能通过 `openstack router remove` 命令删除路由器的网关接口。必须使用 `openstack router unset` 命令。
- en: 'To clear the gateway of a router, use the `openstack router unset` command
    shown here:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 要清除路由器的网关，请使用如下所示的 `openstack router unset` 命令：
- en: '[PRE15]'
  id: totrans-109
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Neutron performs checks that will prohibit the clearing of a gateway interface
    in the event floating IPs are associated with the router.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: Neutron 会进行检查，如果路由器与浮动 IP 相关联，则无法清除网关接口。
- en: Deleting routers in the CLI
  id: totrans-111
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在 CLI 中删除路由器
- en: 'To delete a router, use the `openstack router delete`&amp;nbsp;command and
    specify the name or ID of the router:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 要删除路由器，请使用 `openstack router delete`&nbsp;命令并指定路由器的名称或 ID：
- en: '[PRE16]'
  id: totrans-113
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'Multiple routers can also be deleted simultaneously, as follows:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 也可以同时删除多个路由器，方法如下：
- en: '[PRE17]'
  id: totrans-115
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: Neutron will successfully delete the routers as long as all connected ports
    or subnets have been removed and all floating IPs have been disassociated or deleted.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 只要删除了所有连接的端口或子网，并且所有浮动 IP 已被解除关联或删除，Neutron 就会成功删除路由器。
- en: Network address translation
  id: totrans-117
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 网络地址转换
- en: Network address translation, or NAT, is a networking concept that was developed
    in the early 1990s in response to the rapid depletion of IP addresses throughout
    the world. Prior to NAT, every host connected to the internet had a unique IP
    address.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 网络地址转换，或称 NAT，是一种网络概念，最早于 1990 年代初期提出，旨在应对全球 IP 地址迅速枯竭的问题。在 NAT 出现之前，每个连接到互联网的主机都有一个唯一的
    IP 地址。
- en: 'Standalone routers support two types of NAT:'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 独立路由器支持两种类型的 NAT：
- en: one-to-one
  id: totrans-120
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一对一
- en: many-to-one
  id: totrans-121
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 多对一
- en: A one-to-one NAT is a method in which one IP address is directly mapped to another.
    Commonly referred to as a static NAT, a one-to-one NAT is often used to map a
    unique public address to a privately addressed host. Floating IPs utilize one-to-one
    NAT concepts.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 一对一 NAT 是一种将一个 IP 地址直接映射到另一个 IP 地址的方法。常被称为静态 NAT，一对一 NAT 常用于将唯一的公共地址映射到私有地址主机。浮动
    IP 利用了这种一对一 NAT 的概念。
- en: A many-to-one NAT is a method in which multiple addresses are mapped to a single
    address. A many-to-one NAT employs the use of port address translation, or PAT.
    Neutron uses PAT to provide external access to instances behind the router when
    floating IPs are not assigned.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 多对一 NAT 是一种将多个地址映射到一个地址的方法。多对一 NAT 使用端口地址转换（PAT）。当浮动 IP 未分配时，Neutron 使用 PAT
    提供对路由器后端实例的外部访问。
- en: For more information on network address translation, please visit the following
    Wikipedia page at&amp;nbsp;[http://en.wikipedia.org/wiki/Network_address_translation](http://en.wikipedia.org/wiki/Network_address_translation).
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 如需了解更多有关网络地址转换的信息，请访问以下维基百科页面：[http://en.wikipedia.org/wiki/Network_address_translation](http://en.wikipedia.org/wiki/Network_address_translation)。
- en: Floating IP addresses
  id: totrans-125
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 浮动 IP 地址
- en: Self-service project networks, when attached to a Neutron router, often utilize
    the router as their default gateway. By default, when a router receives traffic
    from an instance and routes it upstream, the router performs a port address translation
    and modifies the source address of the packet to appear as its own external interface
    address. When the translation occurs, the ephemeral source port is mapped to the
    original client address in a table that is referred to when the response packet
    is received. This ensures that the packet can be routed upstream and returned
    to the router, where the packet is modified and returned to the instance that
    initiated the connection. Neutron refers to this type of behavior as source NAT.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 自助服务项目网络，在附加到 Neutron 路由器时，通常使用该路由器作为其默认网关。默认情况下，当路由器接收到来自实例的流量并将其路由到上游时，路由器会执行端口地址转换，并将数据包的源地址修改为其自身的外部接口地址。当发生转换时，临时源端口会映射到原始客户端地址，并记录在一个表中，在响应数据包到达时会查阅该表。这确保了数据包能够被路由到上游并返回给路由器，在那里数据包会被修改并返回到发起连接的实例。Neutron
    将这种行为称为源 NAT。
- en: When users require direct inbound access to instances, a floating IP address
    can be utilized. A floating IP address in OpenStack is a one-to-one static NAT
    that maps an external address from an external network to an internal address
    in a project network. This method of NAT allows instances to be accessible from
    remote networks such as the internet. Floating IP addresses are configured on
    the external interface of the router that serves as the gateway for the instance,
    which is then responsible for modifying both the source and destination address
    of packets depending on their direction.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 当用户需要直接访问实例时，可以使用浮动 IP 地址。OpenStack 中的浮动 IP 地址是一个一对一的静态 NAT，将外部网络的外部地址映射到项目网络中的内部地址。这种
    NAT 方法允许实例能够从远程网络（如互联网）进行访问。浮动 IP 地址配置在路由器的外部接口上，该路由器作为实例的网关，负责根据数据包的方向修改数据包的源地址和目标地址。
- en: Floating IP management
  id: totrans-128
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 浮动 IP 管理
- en: 'The OpenStack command-line client offers a number of commands that can be used
    to create and manage floating IPs. The primary commands associated with floating
    IPs include the following:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: OpenStack 命令行客户端提供了多个命令，用于创建和管理浮动 IP。与浮动 IP 相关的主要命令包括以下内容：
- en: '| **Floating IP Commands** | **Description** |'
  id: totrans-130
  prefs: []
  type: TYPE_TB
  zh: '| **浮动 IP 命令** | **描述** |'
- en: '| `floating ip create` | Creates a floating IP |'
  id: totrans-131
  prefs: []
  type: TYPE_TB
  zh: '| `floating ip create` | 创建一个浮动 IP |'
- en: '| `floating ip delete` | Deletes a floating IP&amp;nbsp; |'
  id: totrans-132
  prefs: []
  type: TYPE_TB
  zh: '| `floating ip delete` | 删除一个浮动 IP |'
- en: '| `floating ip list` | Lists floating IP&amp;nbsp; |'
  id: totrans-133
  prefs: []
  type: TYPE_TB
  zh: '| `floating ip list` | 列出浮动 IP |'
- en: '| `floating ip show` | Displays floating IP details |'
  id: totrans-134
  prefs: []
  type: TYPE_TB
  zh: '| `floating ip show` | 显示浮动 IP 详情 |'
- en: '| `floating ip set` | Sets floating IP properties |'
  id: totrans-135
  prefs: []
  type: TYPE_TB
  zh: '| `floating ip set` | 设置浮动 IP 属性 |'
- en: '| `floating ipunset` | Unsets floating IP properties |'
  id: totrans-136
  prefs: []
  type: TYPE_TB
  zh: '| `floating ipunset` | 取消设置浮动 IP 属性 |'
- en: '| `floating ip pool list` | Lists pools of floating IP addresses |'
  id: totrans-137
  prefs: []
  type: TYPE_TB
  zh: '| `floating ip pool list` | 列出浮动 IP 地址池 |'
- en: '| `server add floating ip` | Adds a floating IP address to a server |'
  id: totrans-138
  prefs: []
  type: TYPE_TB
  zh: '| `server add floating ip` | 将浮动 IP 地址添加到服务器 |'
- en: '| `server remove floating ip` | Removes a floating IP address from a server
    |'
  id: totrans-139
  prefs: []
  type: TYPE_TB
  zh: '| `server remove floating ip` | 从服务器中移除浮动 IP 地址 |'
- en: Creating floating IPs in the CLI
  id: totrans-140
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在 CLI 中创建浮动 IP
- en: If you recall from previous chapters, IP addresses are not assigned directly
    to instances. Instead, an IP address is associated with a Neutron port, and that
    port is logically mapped to an instance or other network resource.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你还记得前几章的内容，IP 地址并不会直接分配给实例。相反，IP 地址与 Neutron 端口相关联，并且该端口被逻辑地映射到一个实例或其他网络资源。
- en: 'When a floating IP is created, it will not be functional until it is associated
    with a Neutron port. To create a floating IP from within the CLI, use the `openstack
    floating ip create` command shown here:'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 当浮动 IP 被创建时，除非与 Neutron 端口关联，否则它无法正常工作。要在 CLI 中创建浮动 IP，请使用以下 `openstack floating
    ip create` 命令：
- en: '[PRE18]'
  id: totrans-143
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: Floating IP addresses can only be used within the project in which they were
    created. The&amp;nbsp;`--project`&amp;nbsp;argument can be used by an administrator
    so that they are able to specify the project associated with the floating IP.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 浮动 IP 地址只能在创建它们的项目中使用。管理员可以使用 `--project` 参数，以便指定与浮动 IP 关联的项目。
- en: The `--port` argument is optional and is used to specify the port to be associated
    with the floating IP upon creation.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: '`--port` 参数是可选的，用于在创建时指定要与浮动 IP 关联的端口。'
- en: Because a port can have multiple IP addresses associated with it, it may be
    necessary to define a specific fixed IP to associate the floating IP with. Use
    the `--fixed-ip-address`&amp;nbsp;argument to specify the fixed IP address that
    should be associated with the floating IP.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 因为一个端口可能与多个 IP 地址关联，所以可能需要定义一个特定的固定 IP 来与浮动 IP 关联。使用 `--fixed-ip-address` 参数来指定应与浮动
    IP 关联的固定 IP 地址。
- en: In previous releases of OpenStack, floating IPs were automatically assigned
    from the allocation pool of the external network. This behavior made it difficult
    for users who required particular addresses, especially when upstream NATs or
    firewall rules were already in place that specified certain floating IP addresses.
    Beginning with Kilo, it is possible to create a floating IP using a specified
    address as long as it is available and not associated with another project. With
    this feature, users can specify a particular floating IP address and avoid modifying
    external systems.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 在 OpenStack 的早期版本中，浮动 IP 是从外部网络的分配池中自动分配的。这种行为对于需要特定地址的用户来说很困难，特别是在上游的 NAT 或防火墙规则已经指定了特定的浮动
    IP 地址的情况下。从 Kilo 版本开始，只要地址可用并且没有与其他项目关联，就可以使用指定的地址创建浮动 IP。通过此功能，用户可以指定特定的浮动 IP
    地址，避免修改外部系统。
- en: Use the `--floating-ip-address`&amp;nbsp;argument to specify a particular address
    from the external network for use as a floating IP.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 `--floating-ip-address` 参数来指定从外部网络中选定的地址作为浮动 IP 使用。
- en: Associating floating IPs with ports in the CLI
  id: totrans-149
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在 CLI 中将浮动 IP 与端口关联
- en: Once a floating IP has been created, it is available for use by any user within
    the project that created it. To associate a floating IP with an instance, it is
    first necessary to determine the Neutron port that is associated with the fixed
    IP of the instance.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦浮动 IP 被创建，它可以由创建它的项目中的任何用户使用。要将浮动 IP 与实例关联，首先需要确定与实例固定 IP 关联的 Neutron 端口。
- en: The port ID associated with the fixed IP address of an instance can be determined
    in a couple of different ways. The quickest way may be to use the `openstack port
    list` command with a filter that can narrow down ports per instance.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 可以通过几种不同的方式来确定与实例的固定 IP 地址关联的端口 ID。最快的方法可能是使用 `openstack port list` 命令，并使用过滤器来缩小每个实例的端口范围。
- en: 'For example, the ports of an instance whose ID is `3d577137-9658-4226-906e-88d3117e497e`
    can be determined in the following way:'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，可以通过以下方式确定实例 ID 为 `3d577137-9658-4226-906e-88d3117e497e` 的端口：
- en: '![](img/e3169655-d0d8-4559-8f07-bb3c29bedcba.png)'
  id: totrans-153
  prefs: []
  type: TYPE_IMG
  zh: '![](img/e3169655-d0d8-4559-8f07-bb3c29bedcba.png)'
- en: 'Once the port ID has been determined, use the `openstack floating ip set` command
    to associate the floating IP with the port:'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦确定了端口 ID，就可以使用 `openstack floating ip set` 命令将浮动 IP 与端口关联：
- en: '[PRE19]'
  id: totrans-155
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: Neutron uses the subnet ID of the specified port to determine the router in
    which to configure the floating IP address and respective NAT rules. The logic
    involved means that no more than one standalone router should be attached to a
    project network at any given time when floating IPs are used, otherwise unexpected
    results may occur.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: Neutron 使用指定端口的子网 ID 来确定要配置浮动 IP 地址和相应 NAT 规则的路由器。涉及的逻辑意味着，在使用浮动 IP 时，任何给定时间只能将一个独立的路由器附加到项目网络上，否则可能会发生意外结果。
- en: Listing floating IPs in the CLI
  id: totrans-157
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在 CLI 中列出浮动 IP
- en: 'To determine the association of floating IPs to Neutron ports and addresses,
    use the `openstack floating ip list` command shown here:'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 要确定浮动 IP 与 Neutron 端口和地址的关联，可以使用如下所示的 `openstack floating ip list` 命令：
- en: '[PRE20]'
  id: totrans-159
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: The output returned includes the floating IP ID, fixed IP address, floating
    IP address, and port ID associated with the floating IP. All arguments are optional
    and help with filtering results.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 返回的输出包括浮动 IP ID、固定 IP 地址、浮动 IP 地址和与浮动 IP 关联的端口 ID。所有参数都是可选的，并有助于过滤结果。
- en: Displaying floating IP attributes in the CLI
  id: totrans-161
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在 CLI 中显示浮动 IP 属性
- en: 'To display the attributes of a floating IP in the CLI, use the `openstack floating
    ip show` command shown here:'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 要在CLI中显示浮动IP的属性，请使用以下显示的`openstack floating ip show`命令：
- en: '[PRE21]'
  id: totrans-163
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: The output returned includes the floating IP address and the associated external
    network, fixed IP address, port, project, and router IDs.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 返回的输出包括浮动IP地址以及关联的外部网络、固定IP地址、端口、项目和路由器ID。
- en: Disassociating floating IPs in the CLI
  id: totrans-165
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在CLI中解除浮动IP关联
- en: 'To disassociate a floating IP from a port, use the `openstack floating ip unset`
    command shown here:'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 要将浮动IP与端口解除关联，请使用以下显示的`openstack floating ip unset`命令：
- en: '[PRE22]'
  id: totrans-167
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: Disassociating a floating IP from a port makes the floating IP available for
    use by other users within the project.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 将浮动IP与端口解除关联，使该浮动IP可供项目中的其他用户使用。
- en: Deleting floating IPs in the CLI
  id: totrans-169
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在CLI中删除浮动IP
- en: 'To delete a floating IP, use the `openstack floating ip delete`&amp;nbsp;command
    shown here:'
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 要删除浮动IP，请使用以下显示的`openstack floating ip delete`命令：
- en: '[PRE23]'
  id: totrans-171
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: Deleting a floating IP returns the IP address to the external network allocation
    pool where it can be allocated to other projects and used by other network resources,
    including routers and floating IPs.
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 删除浮动IP会将该IP地址返回到外部网络分配池，之后它可以分配给其他项目并供其他网络资源使用，包括路由器和浮动IP。
- en: Demonstrating traffic flow from an instance to the internet
  id: totrans-173
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 演示从实例到互联网的流量
- en: This section is dedicated to a walkthrough that leverages fundamental Neutron
    concepts that have been discussed in this book so far. I will demonstrate the
    process of creating and connecting standalone Neutron routers to both project
    and external provider networks to provide network connectivity to instances.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 本节专门介绍一个操作示例，利用本书至今讨论的基本Neutron概念。我将演示创建和连接独立的Neutron路由器到项目和外部提供者网络，以为实例提供网络连接。
- en: A VLAN-based provider network will be created and used as an external gateway
    network for the Neutron router, while a VLAN-based project network will be created
    and used by instances. A Neutron router will be created and used to route traffic
    from instances in the project network to the internet, and floating IPs will be
    created and used to provide direct connectivity to instances.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 将创建一个基于VLAN的提供者网络，并将其用作Neutron路由器的外部网关网络，而基于VLAN的项目网络将被创建并供实例使用。一个Neutron路由器将被创建，并用于将项目网络中的实例流量路由到互联网，同时浮动IP将被创建并用于为实例提供直接连接。
- en: Setting the foundation
  id: totrans-176
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置基础
- en: 'In this demonstration, a Cisco Adaptive Security Appliance (ASA) serves as
    the physical network gateway device and is connected to the internet. The following
    networks will be utilized:'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 在本演示中，Cisco自适应安全设备（ASA）充当物理网络网关设备，并连接到互联网。以下网络将被使用：
- en: '| **VLAN name** | **VLAN ID** | **Network** |'
  id: totrans-178
  prefs: []
  type: TYPE_TB
  zh: '| **VLAN名称** | **VLAN ID** | **网络** |'
- en: '| GATEWAY_NET | 30 | 10.30.0.0/24 |'
  id: totrans-179
  prefs: []
  type: TYPE_TB
  zh: '| GATEWAY_NET | 30 | 10.30.0.0/24 |'
- en: '| PROJECT_NET | auto | 192.168.200.0/24 |'
  id: totrans-180
  prefs: []
  type: TYPE_TB
  zh: '| PROJECT_NET | auto | 192.168.200.0/24 |'
- en: An inside interface of the Cisco ASA has been configured with an IP address
    of 10.30.0.1/24 on VLAN 30 and will serve as the gateway for the external provider
    network created in the upcoming section.
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: Cisco ASA的内部接口已配置了IP地址10.30.0.1/24，并位于VLAN 30，将作为下一节中创建的外部提供者网络的网关。
- en: 'The following diagram is the logical diagram of the network to be built as
    part of this demonstration:'
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 以下图示是此演示中将构建的网络的逻辑图：
- en: '![](img/719b1715-d1e1-4683-a3f2-92d0545a774f.png)'
  id: totrans-183
  prefs: []
  type: TYPE_IMG
  zh: '![](img/719b1715-d1e1-4683-a3f2-92d0545a774f.png)'
- en: In the preceding diagram, a Cisco ASA serves as the external network device
    in front of the OpenStack cloud.
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 在上述图示中，Cisco ASA充当了OpenStack云前端的外部网络设备。
- en: Creating an external provider network
  id: totrans-185
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建外部提供者网络
- en: In order to provide instances with external connectivity, a Neutron router must
    be connected to a provider network eligible for use as an external network.
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 为了为实例提供外部连接，必须将Neutron路由器连接到可以用作外部网络的提供者网络。
- en: 'Using the `openstack network create` command, create a provider network in
    the admin project with the following attributes:'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`openstack network create`命令，在管理员项目中创建一个提供者网络，具有以下属性：
- en: 'Name: GATEWAY_NET'
  id: totrans-188
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 名称：GATEWAY_NET
- en: 'Type: VLAN'
  id: totrans-189
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 类型：VLAN
- en: 'Segmentation ID: 30'
  id: totrans-190
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 分段ID：30
- en: 'Physical Network: physnet1'
  id: totrans-191
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 物理网络：physnet1
- en: 'External: True'
  id: totrans-192
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 外部：True
- en: 'The following screenshot displays the resulting output of the `openstack network
    create` command:'
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了`openstack network create`命令的输出结果：
- en: '![](img/3750f014-3494-44ff-ae74-daf6cea9fd3d.png)'
  id: totrans-194
  prefs: []
  type: TYPE_IMG
  zh: '![](img/3750f014-3494-44ff-ae74-daf6cea9fd3d.png)'
- en: 'Using the `openstack subnet create` command, create a subnet with the following
    attributes:'
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`openstack subnet create`命令，创建一个具有以下属性的子网：
- en: 'Name: GATEWAY_SUBNET'
  id: totrans-196
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 名称：GATEWAY_SUBNET
- en: 'Network: 10.30.0.0'
  id: totrans-197
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 网络：10.30.0.0
- en: 'Subnet Mask: 255.255.255.0'
  id: totrans-198
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 子网掩码：255.255.255.0
- en: 'Gateway: 10.30.0.1'
  id: totrans-199
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 网关：10.30.0.1
- en: 'DHCP: Disabled'
  id: totrans-200
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: DHCP：禁用
- en: 'Allocation Pool: 10.30.0.100 - 10.30.0.254'
  id: totrans-201
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 分配池：10.30.0.100 - 10.30.0.254
- en: 'The following screenshot displays the resulting output of the `openstack subnet
    create`&amp;nbsp;command:'
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图展示了`openstack subnet create`命令的输出结果：
- en: '![](img/24f68096-2db5-463f-9cbc-dd123b9b55db.png)'
  id: totrans-203
  prefs: []
  type: TYPE_IMG
  zh: '![](img/24f68096-2db5-463f-9cbc-dd123b9b55db.png)'
- en: Creating a Neutron router
  id: totrans-204
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建Neutron路由器
- en: 'Create a router using the `openstack router create` command with the following
    attribute:'
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`openstack router create`命令创建一个路由器，并指定以下属性：
- en: 'Name: MyLegacyRouter'
  id: totrans-206
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 名称：MyLegacyRouter
- en: 'The following screenshot displays the resulting output of the `openstack router
    create` command:'
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图展示了`openstack router create`命令的输出结果：
- en: '![](img/ea57d17e-9860-48ce-b619-acea2989156b.png)'
  id: totrans-208
  prefs: []
  type: TYPE_IMG
  zh: '![](img/ea57d17e-9860-48ce-b619-acea2989156b.png)'
- en: Attaching the router to an external network
  id: totrans-209
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将路由器连接到外部网络
- en: When attaching a Neutron router an external network, the respective network
    must have its `router:external` attribute set to `True` to be eligible for use
    as an external network. Otherwise, the command will fail. The `GATEWAY_NET`&amp;nbsp;network
    created previously meets this requirement.
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 将Neutron路由器连接到外部网络时，相应的网络必须将其`router:external`属性设置为`True`，以便作为外部网络使用。否则，命令将失败。之前创建的`GATEWAY_NET`网络满足此要求。
- en: 'Using the `openstack router set` command, attach the router `MyLegacyRouter`&amp;nbsp;to
    the `GATEWAY_NET` network:'
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`openstack router set`命令，将路由器`MyLegacyRouter`连接到`GATEWAY_NET`网络：
- en: '[PRE24]'
  id: totrans-212
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'No output will be returned upon successful completion of the command. Using
    the `openstack port list` command, determine the external IP address of the router:'
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 命令成功执行后不会返回输出。使用`openstack port list`命令，确定路由器的外部IP地址：
- en: '![](img/c69f030c-aab8-44a3-81c0-ea7e53e7167b.png)'
  id: totrans-214
  prefs: []
  type: TYPE_IMG
  zh: '![](img/c69f030c-aab8-44a3-81c0-ea7e53e7167b.png)'
- en: In this example, the IP address assigned to the router's external interface
    is `10.30.0.106`.
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 在本例中，分配给路由器外部接口的IP地址是`10.30.0.106`。
- en: Identifying the L3 agent and namespace
  id: totrans-216
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 确定L3代理和命名空间
- en: 'Once the gateway interface has been added, the router will be scheduled to
    an eligible L3 agent. Using the&amp;nbsp;`openstack network agent list` command,
    you can determine which L3 agent the router was scheduled to:'
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦网关接口添加完成，路由器将被调度到一个合适的L3代理。使用`openstack network agent list`命令，你可以确定路由器被调度到哪个L3代理：
- en: '![](img/ed662f35-628f-4f82-b87e-de8b4a75593c.png)'
  id: totrans-218
  prefs: []
  type: TYPE_IMG
  zh: '![](img/ed662f35-628f-4f82-b87e-de8b4a75593c.png)'
- en: In this example, the router was scheduled to the `controller01` node. In an
    environment running multiple `L3` agents, a standalone router can be scheduled
    to any one of the agents, but will not be scheduled to more than one at any given
    time.
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 在本例中，路由器被调度到`controller01`节点。在运行多个`L3`代理的环境中，一个独立的路由器可以调度到任何一个代理，但在任何给定时间只能调度到一个代理。
- en: 'The L3 agent is responsible for creating a network namespace that acts as the
    virtual router. For easy identification, the name of the namespace incorporates
    the router''s ID. The `ip netns list` command can be used to list all network
    namespaces on a node:'
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: L3代理负责创建一个网络命名空间，作为虚拟路由器。为了便于识别，命名空间的名称会包含路由器的ID。可以使用`ip netns list`命令列出节点上的所有网络命名空间：
- en: '![](img/e4cf9cef-1462-4656-a94a-ff32027d0100.png)'
  id: totrans-221
  prefs: []
  type: TYPE_IMG
  zh: '![](img/e4cf9cef-1462-4656-a94a-ff32027d0100.png)'
- en: 'Inside the respective qrouter&amp;nbsp;namespace, you will find an interface
    with a prefix of `qg`. The `qg` interface is the gateway, or external, interface
    of the router. Neutron automatically provisions an IP address to the `qg` interface
    from the allocation pool of the external network''s subnet:'
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 在各自的qrouter命名空间内，你会找到一个前缀为`qg`的接口。`qg`接口是路由器的网关或外部接口。Neutron会自动从外部网络子网的分配池中为`qg`接口分配一个IP地址：
- en: '![](img/5a2cbc65-e507-43f0-b42e-09fd807d591a.png)'
  id: totrans-223
  prefs: []
  type: TYPE_IMG
  zh: '![](img/5a2cbc65-e507-43f0-b42e-09fd807d591a.png)'
- en: In the preceding screenshot, the IP address 10.30.0.106 was automatically configured
    on the external interface inside the namespace.
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 在上述截图中，IP地址10.30.0.106已经在命名空间内部的外部接口上自动配置。
- en: When using the Open vSwitch interface driver, the `qg`&amp;nbsp;interface is
    connected directly to the integration bridge. When using the Linux bridge interface
    driver, as in this example, the `qg` interface is one end of a veth pair whose
    other end is connected to a Linux bridge on the host.
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 当使用Open vSwitch接口驱动程序时，`qg`接口直接连接到集成桥接。当使用Linux桥接接口驱动程序时，如本示例所示，`qg`接口是一个veth对的一端，另一端连接到主机上的Linux桥接。
- en: 'Using ethtool, we can determine the peer index of the corresponding interface
    on the host. This can be useful in troubleshooting connectivity issues in and
    out of network namespaces:'
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 使用ethtool，我们可以确定主机上相应接口的对端索引。这对于排除网络命名空间内外的连接问题非常有用：
- en: '![](img/a3bf5931-c216-4526-8d9b-2c66f607e849.png)'
  id: totrans-227
  prefs: []
  type: TYPE_IMG
  zh: '![](img/a3bf5931-c216-4526-8d9b-2c66f607e849.png)'
- en: 'Using ip link show on the host, the corresponding interface (peer index 16)
    can be found by searching for the index on the controller:'
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 使用主机上的`ip link show`，可以通过在控制器上查找索引来找到相应的接口（对端索引16）：
- en: '![](img/fd969c23-e745-409e-a51e-4ffb35c1af2c.png)'
  id: totrans-229
  prefs: []
  type: TYPE_IMG
  zh: '![](img/fd969c23-e745-409e-a51e-4ffb35c1af2c.png)'
- en: The output conveniently reveals the corresponding network namespace using the
    `link-netnsid` identifier. In this example, the peer interface resides in the
    network namespace with an ID of 3, otherwise known as `qrouter-9ef2eeed-4a55-4f64-b8be-4b07a43ec373`.
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 输出方便地显示了使用`link-netnsid`标识符的相应网络命名空间。在此示例中，对端接口位于ID为3的网络命名空间中，通常称为`qrouter-9ef2eeed-4a55-4f64-b8be-4b07a43ec373`。
- en: The link-netnsid ID from `ip link show` should correspond to a namespace provided
    in the output of the `ip netns list`&amp;nbsp;command.
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: '`ip link show`中的link-netnsid ID应与`ip netns list`命令输出中提供的命名空间对应。'
- en: 'When using the Linux bridge interface driver, the veth interface is connected
    to a bridge that corresponds to the external network shown here:'
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 当使用Linux桥接接口驱动程序时，veth接口连接到与此处显示的外部网络对应的桥接。
- en: '![](img/04c24954-7c53-4d1c-8d78-8a76de8284e7.png)'
  id: totrans-233
  prefs: []
  type: TYPE_IMG
  zh: '![](img/04c24954-7c53-4d1c-8d78-8a76de8284e7.png)'
- en: For easy identification, the bridge name includes the first ten characters of
    the Neutron network ID. In addition, each end of the veth pair includes the first
    ten characters of the port ID associated with the interface.
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 为了便于识别，桥接名称包括Neutron网络ID的前十个字符。此外，每个veth对的两端也包括与接口相关联的端口ID的前十个字符。
- en: The namespace is able to communicate with other devices in the same subnet through
    the bridge. The other interface in the bridge, `eth2.30`, tags traffic as `VLAN
    30` as it exits the bridge and out physical interface `eth2`.
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 命名空间能够通过桥接与同一子网中的其他设备进行通信。桥中的另一个接口`eth2.30`在流量离开桥接并通过物理接口`eth2`时，会将流量标记为`VLAN
    30`。
- en: 'Observe the route table within the namespace. The default gateway address corresponds
    to the address defined in the external provider subnet''s `gateway_ip` attribute.
    In this case, it''s `10.30.0.1`:'
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 查看命名空间中的路由表。默认网关地址与外部提供者子网中`gateway_ip`属性定义的地址对应。在此例中，地址为`10.30.0.1`：
- en: '![](img/cf9e8d80-ded7-4ab1-b63b-bcebb5e8fa40.png)'
  id: totrans-237
  prefs: []
  type: TYPE_IMG
  zh: '![](img/cf9e8d80-ded7-4ab1-b63b-bcebb5e8fa40.png)'
- en: In this example environment, `10.30.0.1` is configured on the Cisco ASA and
    will serve as the next hop gateway for outbound traffic from the Neutron router.
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 在此示例环境中，`10.30.0.1`已在Cisco ASA上配置，并将作为Neutron路由器出站流量的下一跳网关。
- en: Testing gateway connectivity
  id: totrans-239
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 测试网关连接性
- en: 'To test external connectivity from the Neutron router, ping the edge gateway
    device from within the router namespace:'
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 要测试从Neutron路由器的外部连接性，可以从路由器命名空间中ping边缘网关设备：
- en: '![](img/58ff5664-096c-414d-8904-e1172b3670f6.png)'
  id: totrans-241
  prefs: []
  type: TYPE_IMG
  zh: '![](img/58ff5664-096c-414d-8904-e1172b3670f6.png)'
- en: Successful ping attempts from the router namespace to the physical gateway device
    demonstrate proper external VLAN configuration on both physical and virtual networking
    components.
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: 从路由器命名空间到物理网关设备的ping测试成功，表明物理和虚拟网络组件上的外部VLAN配置正确。
- en: Creating an internal network
  id: totrans-243
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建内部网络
- en: 'Within the admin&amp;nbsp;project, create an internal network for instances.
    In this demonstration, a network will be created with the following attribute:'
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 在admin项目中，为实例创建一个内部网络。在此示范中，将创建一个具有以下属性的网络：
- en: 'Name: PROJECT_NET'
  id: totrans-245
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 名称：PROJECT_NET
- en: 'The following screenshot demonstrates the resulting output of the `openstack
    network create` command:'
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图展示了`openstack network create`命令的结果输出：
- en: '![](img/42bdb09b-b245-4de0-b86c-5ad12e4ad384.png)'
  id: totrans-247
  prefs: []
  type: TYPE_IMG
  zh: '![](img/42bdb09b-b245-4de0-b86c-5ad12e4ad384.png)'
- en: Notice how Neutron automatically determined the network type, physical network,
    and segmentation ID for the network. Because the `openstack network create` command
    was executed without specific provider attributes, Neutron relied on the configuration
    found in the plugin configuration file to determine what type of network to create.
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，Neutron如何自动确定网络的类型、物理网络和分段ID。由于执行`openstack network create`命令时未指定特定的提供者属性，Neutron依赖插件配置文件中的配置来确定创建的网络类型。
- en: 'The following configuration options in the ML2 configuration file were used
    to determine the network type, physical network, and segmentation ID:'
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 在ML2配置文件中使用以下配置选项来确定网络类型、物理网络和分段ID：
- en: '[PRE25]'
  id: totrans-250
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: Remember, in this configuration, Neutron will consume all available VLAN segmentation
    IDs as networks are created before moving on to VXLAN networks.
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: 请记住，在此配置中，Neutron将在创建网络之前消耗所有可用的VLAN分段ID，然后才会转到VXLAN网络。
- en: 'Using the `openstack subnet create`&amp;nbsp;command, create a subnet with
    the following attributes:'
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`openstack subnet create`命令，创建一个具有以下属性的子网：
- en: 'Name: PROJECT_SUBNET'
  id: totrans-253
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 名称：PROJECT_SUBNET
- en: 'Network: 192.168.200.0'
  id: totrans-254
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 网络：192.168.200.0
- en: 'Subnet Mask: 255.255.255.0'
  id: totrans-255
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 子网掩码：255.255.255.0
- en: 'Gateway: <auto>'
  id: totrans-256
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 网关：<auto>
- en: 'DHCP Range: <auto>'
  id: totrans-257
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: DHCP范围：<auto>
- en: 'DNS Nameserver: 8.8.8.8'
  id: totrans-258
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: DNS Nameserver：8.8.8.8
- en: 'The output should resemble the following:'
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: 输出应类似于以下内容：
- en: '![](img/cdc6e932-a834-4082-9d9a-61a00aa8c0b2.png)'
  id: totrans-260
  prefs: []
  type: TYPE_IMG
  zh: '![](img/cdc6e932-a834-4082-9d9a-61a00aa8c0b2.png)'
- en: Attaching the router to the internal network
  id: totrans-261
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将路由器连接到内部网络
- en: 'Using the `openstack router add subnet` command, attach the `PROJECT_SUBNET`
    subnet to `MyLegacyRouter`:'
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`openstack router add subnet`命令，将`PROJECT_SUBNET`子网连接到`MyLegacyRouter`：
- en: '[PRE26]'
  id: totrans-263
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'No output is provided if the command is successful. Using the `openstack port
    list` command, determine the internal IP of the router:'
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: 如果命令成功，则不会提供任何输出。使用`openstack port list`命令，确定路由器的内部IP：
- en: '![](img/05f697f4-92ad-4989-a7d7-fc0ddd0457f0.png)'
  id: totrans-265
  prefs: []
  type: TYPE_IMG
  zh: '![](img/05f697f4-92ad-4989-a7d7-fc0ddd0457f0.png)'
- en: In this example, the IP address assigned to the router's internal interface
    is `192.168.200.1`. When a port ID or IP address is not specified when attaching
    the router to a subnet, the IP address assigned to the router's internal interface
    defaults to the address set as the `gateway_ip`&amp;nbsp;for the subnet.
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个示例中，分配给路由器内部接口的IP地址是`192.168.200.1`。当在将路由器连接到子网时没有指定端口ID或IP地址时，分配给路由器内部接口的IP地址默认作为该子网的`gateway_ip`地址。
- en: 'Inside the router namespace, a new interface has been added with a prefix of
    `qr`. A `qr` interface is an internal interface of the router:'
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: 在路由器命名空间内，已添加一个前缀为`qr`的新接口。`qr`接口是路由器的内部接口：
- en: '![](img/218c7718-b0ce-4609-bfef-6ab25111541d.png)'
  id: totrans-268
  prefs: []
  type: TYPE_IMG
  zh: '![](img/218c7718-b0ce-4609-bfef-6ab25111541d.png)'
- en: 'When using the Open vSwitch interface driver, the interface is connected directly
    to the integration bridge. When using the Linux bridge interface driver, as in
    this example, every `qr` interface is one end of a veth pair whose other end is
    connected to a bridge on the host:'
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: 使用Open vSwitch接口驱动时，接口直接连接到集成桥。使用Linux桥接口驱动时，如本示例所示，每个`qr`接口是veth对的一端，另一端连接到主机上的桥接：
- en: '![](img/53b9f95e-19fa-4c16-8cbc-ca3bfa517fa2.png)'
  id: totrans-270
  prefs: []
  type: TYPE_IMG
  zh: '![](img/53b9f95e-19fa-4c16-8cbc-ca3bfa517fa2.png)'
- en: For easy identification, the bridge name includes the first ten characters of
    the respective Neutron network ID. In addition, each end of the veth pair includes
    the first ten characters of the Neutron port ID associated with the interface.
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: 为了便于识别，桥接名称包含了相应Neutron网络ID的前十个字符。此外，veth对的每一端还包括与接口关联的Neutron端口ID的前十个字符。
- en: The router namespace is able to communicate with other devices in the same subnet
    through the bridge. The&amp;nbsp;`eth2.43` interface&amp;nbsp;in the bridge tags
    traffic as `VLAN 43` as it exits the bridge out to the parent interface&amp;nbsp;`eth2`.
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: 路由器命名空间能够通过桥接与同一子网中的其他设备通信。桥接中的`eth2.43`接口在流量离开桥并传送到父接口`eth2`时，将流量标记为`VLAN 43`。
- en: Creating instances
  id: totrans-273
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建实例
- en: 'Create two instances with the following characteristics:'
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: 创建两个具有以下特征的实例：
- en: '| **Name** | **Network** | **Image** | **Flavor** | **Host** |'
  id: totrans-275
  prefs: []
  type: TYPE_TB
  zh: '| **名称** | **网络** | **镜像** | **规格** | **主机** |'
- en: '| MyInstance1 | PROJECT_NET | cirros-0.4.0 | tiny | compute01 |'
  id: totrans-276
  prefs: []
  type: TYPE_TB
  zh: '| MyInstance1 | PROJECT_NET | cirros-0.4.0 | tiny | compute01 |'
- en: '| MyInstance2 | PROJECT_NET | cirros-0.4.0 | tiny | compute02 |'
  id: totrans-277
  prefs: []
  type: TYPE_TB
  zh: '| MyInstance2 | PROJECT_NET | cirros-0.4.0 | tiny | compute02 |'
- en: 'If necessary, use the `openstack image list` command to determine the ID of
    the CirrOS image downloaded in [*Chapter 2*](1638cc46-d387-4ec0-9597-b25eee47618b.xhtml),
    *Installing OpenStack*:'
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
  zh: 如有需要，可以使用`openstack image list`命令来确定在[*第2章*](1638cc46-d387-4ec0-9597-b25eee47618b.xhtml)中下载的CirrOS镜像的ID，*安装OpenStack*：
- en: 'Use the following `openstack server create` commands to boot two instances
    across two `compute` nodes in the `PROJECT_NET` network:'
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: 使用以下`openstack server create`命令启动两个位于`PROJECT_NET`网络的`compute`节点上的实例：
- en: '[PRE27]'
  id: totrans-280
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'The `openstack server list`&amp;nbsp;command can be used to return a list of
    instances and their IP addresses:'
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
  zh: 可以使用`openstack server list`命令返回实例列表及其IP地址：
- en: '![](img/6aafc47e-0fba-41ab-8ee7-15b86aee4dac.png)'
  id: totrans-282
  prefs: []
  type: TYPE_IMG
  zh: '![](img/6aafc47e-0fba-41ab-8ee7-15b86aee4dac.png)'
- en: 'On `compute01`, a Linux bridge has been created that corresponds to the `PROJECT_NET`
    network. When connected to the bridge, we can find a `VLAN` interface and the
    tap interface that corresponds to `MyInstance1`:'
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
  zh: 在`compute01`上，已创建一个与`PROJECT_NET`网络对应的Linux桥接器。当连接到该桥接器时，我们可以找到一个`VLAN`接口和与`MyInstance1`对应的tap接口：
- en: '![](img/3b704a1f-8dca-4d17-8f90-06cba9c8cd1d.png)'
  id: totrans-284
  prefs: []
  type: TYPE_IMG
  zh: '![](img/3b704a1f-8dca-4d17-8f90-06cba9c8cd1d.png)'
- en: When the Linux bridge agent is used, bridges correspond to individual networks,
    and the names will have a prefix of brq.
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
  zh: 当使用Linux桥接代理时，桥接器对应于各个网络，且其名称将带有brq前缀。
- en: 'On `compute02`, we can find the tap interface that corresponds to `MyInstance2`&amp;nbsp;is
    connected to the Linux bridge dedicated to the respective port:'
  id: totrans-286
  prefs: []
  type: TYPE_NORMAL
  zh: 在`compute02`上，我们可以找到与`MyInstance2`对应的tap接口，该接口连接到专用的Linux桥接器，并且与相应端口相连接：
- en: '![](img/d70c0703-c265-406d-9064-c2f77e4495a1.png)'
  id: totrans-287
  prefs: []
  type: TYPE_IMG
  zh: '![](img/d70c0703-c265-406d-9064-c2f77e4495a1.png)'
- en: When the Open vSwitch agent is used along with the `iptables_hybrid` firewall
    driver, bridges correspond to individual ports, and the names will have a prefix
    of `qbr`. These bridges are only used to overcome iptables limitations with Open
    vSwitch virtual switches.
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
  zh: 当与`iptables_hybrid`防火墙驱动程序一起使用Open vSwitch代理时，桥接器对应于各个端口，且其名称将带有`qbr`前缀。这些桥接器仅用于克服iptables在Open
    vSwitch虚拟交换机中的限制。
- en: Verifying instance connectivity
  id: totrans-289
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 验证实例连接性
- en: 'When a network and subnet are created with DHCP enabled, a network namespace
    is created by a DHCP agent that serves as a DHCP server for the network. On the
    host running the Neutron DHCP agent service, the&amp;nbsp;`ip netns list`&amp;nbsp;command
    can be used to reveal the namespace. For easy identification, the name of a DHCP
    namespace corresponds to the ID of the network it is serving:'
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
  zh: 当创建网络和子网并启用DHCP时，DHCP代理将创建一个网络命名空间，作为该网络的DHCP服务器。在运行Neutron DHCP代理服务的主机上，可以使用`ip
    netns list`命令查看命名空间。为了便于识别，DHCP命名空间的名称与其所服务的网络ID相对应：
- en: '![](img/c5a1e65c-5f12-4026-baee-2e871309e92b.png)'
  id: totrans-291
  prefs: []
  type: TYPE_IMG
  zh: '![](img/c5a1e65c-5f12-4026-baee-2e871309e92b.png)'
- en: 'Inside the namespace, an interface with a prefix of `ns` has been created and
    assigned an address from the allocation pool of the subnet:'
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
  zh: 在命名空间内，已创建一个以`ns`为前缀的接口，并从子网的分配池中分配了一个地址：
- en: '![](img/aeb6d3db-edbf-4621-8875-f302fd77fec7.png)'
  id: totrans-293
  prefs: []
  type: TYPE_IMG
  zh: '![](img/aeb6d3db-edbf-4621-8875-f302fd77fec7.png)'
- en: When a DHCP agent is configured to use the Open vSwitch interface driver, the
    `ns`&amp;nbsp;interface inside the namespace is connected directly to the integration
    bridge. When a DHCP agent is configured to use the Linux bridge interface driver,
    as in this example, the `ns` interface is one end of a veth pair whose other end
    is connected to a bridge on the host. The namespace is able to communicate with
    other devices in the same subnet through the respective bridge and VLAN.
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
  zh: 当配置一个DHCP代理以使用Open vSwitch接口驱动时，命名空间内的`ns`接口将直接连接到集成桥接器。当DHCP代理配置为使用Linux桥接接口驱动时，如本例所示，`ns`接口是veth对的一端，另一端连接到主机上的桥接器。通过相应的桥接器和VLAN，命名空间能够与同一子网中的其他设备进行通信。
- en: 'As the instances come online, they send a DHCP request that is served by the
    `dnsmasq` process in the DHCP namespace. A populated ARP table within the namespace
    confirms instances are functioning in the VLAN at Layer 2:'
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
  zh: 随着实例上线，它们会发送一个DHCP请求，由DHCP命名空间中的`dnsmasq`进程处理。命名空间内填充的ARP表确认实例在VLAN的第二层（Layer
    2）中正常工作：
- en: '![](img/e4951937-2fa3-4771-aa87-b53fe47ab3d4.png)'
  id: totrans-296
  prefs: []
  type: TYPE_IMG
  zh: '![](img/e4951937-2fa3-4771-aa87-b53fe47ab3d4.png)'
- en: The L2 population driver is used to pre-populate ARP and forwarding tables to
    reduce overhead on overlay networks and may not provide an accurate picture of
    connectivity in those networks. If an entry is in a PERMANENT state, it has been
    statically programmed and may not reflect actual reachability.
  id: totrans-297
  prefs: []
  type: TYPE_NORMAL
  zh: L2人口驱动程序用于预填充ARP和转发表，以减少覆盖网络上的开销，并且可能无法提供这些网络中连接的准确图景。如果条目处于永久状态，则表示它已被静态编程，可能无法反映实际的可达性。
- en: 'Before you can connect to the instances, security group rules must be updated
    to allow ICMP and SSH. *[Chapter 8](240902fd-5108-446e-afa5-8122de12f0af.xhtml),
    Managing Security Groups*, focuses on the implementation and administration of
    security group rules in more detail. To test connectivity, add ICMP and SSH access
    to security group applied to the instances. Use the following command to determine
    the security group for these particular instances:'
  id: totrans-298
  prefs: []
  type: TYPE_NORMAL
  zh: 在你连接到实例之前，必须更新安全组规则，以允许ICMP和SSH。*[第8章](240902fd-5108-446e-afa5-8122de12f0af.xhtml)，管理安全组*，更详细地讲解了安全组规则的实现和管理。为了测试连接性，请向应用于实例的安全组添加ICMP和SSH访问。使用以下命令确定这些实例的安全组：
- en: '[PRE28]'
  id: totrans-299
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'The output may resemble the following:'
  id: totrans-300
  prefs: []
  type: TYPE_NORMAL
  zh: 输出可能类似于以下内容：
- en: '![](img/3d3712e6-5d35-492f-8a74-9e22addba3b9.png)'
  id: totrans-301
  prefs: []
  type: TYPE_IMG
  zh: '![](img/3d3712e6-5d35-492f-8a74-9e22addba3b9.png)'
- en: 'Use the `openstack security group rule create` command to create rules within
    the respective security group that allow inbound ICMP and SSH:'
  id: totrans-302
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`openstack security group rule create`命令在相应的安全组内创建规则，允许入站的ICMP和SSH：
- en: '![](img/f2390827-62b8-47cf-ad5d-492e17f195c8.png)'
  id: totrans-303
  prefs: []
  type: TYPE_IMG
  zh: '![](img/f2390827-62b8-47cf-ad5d-492e17f195c8.png)'
- en: 'Using the SSH command, connect to the instance `MyInstance1` from either the
    router or DHCP namespace. The CirrOS image has a built-in user named cirros&amp;nbsp;with
    a password of `gocubsgo`:'
  id: totrans-304
  prefs: []
  type: TYPE_NORMAL
  zh: 使用SSH命令，从路由器或DHCP命名空间连接到实例`MyInstance1`。CirrOS镜像内置了一个名为cirros的用户，密码为`gocubsgo`：
- en: '![](img/46460293-9166-450c-8495-bad205050e30.png)'
  id: totrans-305
  prefs: []
  type: TYPE_IMG
  zh: '![](img/46460293-9166-450c-8495-bad205050e30.png)'
- en: 'Observe the routing table inside the instance, like so:'
  id: totrans-306
  prefs: []
  type: TYPE_NORMAL
  zh: 如下所示，观察实例内部的路由表：
- en: '[PRE29]'
  id: totrans-307
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'The default gateway of `192.168.200.1` is the Neutron router that we created
    earlier in this chapter. Pinging an external resource from an instance should
    prove successful, provided external connectivity from the Neutron router exists:'
  id: totrans-308
  prefs: []
  type: TYPE_NORMAL
  zh: '`192.168.200.1`的默认网关是我们在本章之前创建的Neutron路由器。从实例中ping外部资源应该会成功，只要Neutron路由器存在外部连接：'
- en: '![](img/d77ed185-fc20-4e4e-827e-da1009de1d51.png)'
  id: totrans-309
  prefs: []
  type: TYPE_IMG
  zh: '![](img/d77ed185-fc20-4e4e-827e-da1009de1d51.png)'
- en: Observing default NAT behavior
  id: totrans-310
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 观察默认的NAT行为
- en: The default behavior of the Neutron router is to source NAT traffic from instances
    that lack floating IPs when traffic egresses the external, or gateway, interface
    of the router.
  id: totrans-311
  prefs: []
  type: TYPE_NORMAL
  zh: Neutron路由器的默认行为是当流量从路由器的外部或网关接口离开时，对没有浮动IP的实例进行源地址转换（NAT）。
- en: 'Performing a packet capture on the eth2.43&amp;nbsp;interface of the `controller`
    node that corresponds with the `PROJECT_NET` network, we can observe ICMP traffic
    from the instances sourcing from their real or fixed addresses as the traffic
    heads towards the router. The reply also references the same fixed IP address:'
  id: totrans-312
  prefs: []
  type: TYPE_NORMAL
  zh: 在`controller`节点上执行eth2.43接口的数据包捕获，该接口对应于`PROJECT_NET`网络，我们可以观察到从实例发出的ICMP流量，这些流量的源地址为实例的实际或固定IP地址，流量朝向路由器发送，回复也会引用相同的固定IP地址：
- en: '![](img/5e2383e7-cc9e-4508-8e42-da3a2bfe36b1.png)'
  id: totrans-313
  prefs: []
  type: TYPE_IMG
  zh: '![](img/5e2383e7-cc9e-4508-8e42-da3a2bfe36b1.png)'
- en: 'From the eth2.30&amp;nbsp;interface on the `controller` node that corresponds
    to the `GATEWAY_NET` network, we can observe ICMP traffic from the instances after
    it has traversed the router sourcing as the router''s external address, `10.30.0.106`:'
  id: totrans-314
  prefs: []
  type: TYPE_NORMAL
  zh: 从`controller`节点上对应于`GATEWAY_NET`网络的eth2.30接口，我们可以观察到从实例发出的ICMP流量，这些流量已经通过路由器并以路由器的外部地址`10.30.0.106`为源地址：
- en: '![](img/f5f2e7e2-5caf-4387-810e-dcb990be84a6.png)'
  id: totrans-315
  prefs: []
  type: TYPE_IMG
  zh: '![](img/f5f2e7e2-5caf-4387-810e-dcb990be84a6.png)'
- en: 'A look at the iptables chains within the router namespace reveals the NAT rules
    responsible for this behavior:'
  id: totrans-316
  prefs: []
  type: TYPE_NORMAL
  zh: 查看路由器命名空间中的iptables链表可以看到负责此行为的NAT规则：
- en: '![](img/ae6cff3c-be15-49e9-8424-1f236b7a2046.png)'
  id: totrans-317
  prefs: []
  type: TYPE_IMG
  zh: '![](img/ae6cff3c-be15-49e9-8424-1f236b7a2046.png)'
- en: In this configuration, instances can communicate with outside resources through
    the router as long as the instances initiate the connection. Outside resources
    cannot initiate connections directly to instances via their fixed IP address.
  id: totrans-318
  prefs: []
  type: TYPE_NORMAL
  zh: 在此配置中，实例可以通过路由器与外部资源通信，只要实例发起连接。外部资源不能直接通过固定IP地址向实例发起连接。
- en: Assigning floating IPs
  id: totrans-319
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 分配浮动IP
- en: To initiate connections to instances behind Neutron routers from outside networks,
    you must configure a floating IP address and associate it with the instance. In
    OpenStack, a floating IP is associated with a Neutron port that corresponds to
    an interface of the instance accepting connections.
  id: totrans-320
  prefs: []
  type: TYPE_NORMAL
  zh: 要从外部网络发起到 Neutron 路由器后面的实例的连接，必须配置浮动 IP 地址并将其与实例关联。在 OpenStack 中，浮动 IP 与对应实例接受连接的接口的
    Neutron 端口相关联。
- en: 'Using the `openstack port list` command, determine the port ID of each instance
    recently booted. The command allows results to be filtered by device or instance
    ID, as shown in the following screenshot:'
  id: totrans-321
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 `openstack port list` 命令，确定每个最近启动实例的端口 ID。该命令允许按设备或实例 ID 过滤结果，如下所示：
- en: '![](img/db96d180-e739-4a03-b180-13af6da06049.png)'
  id: totrans-322
  prefs: []
  type: TYPE_IMG
  zh: '![](img/db96d180-e739-4a03-b180-13af6da06049.png)'
- en: 'Using the `openstack floating ip create` command, create a single floating
    IP address and associate it with the port of the instance known as `MyInstance1`:'
  id: totrans-323
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 `openstack floating ip create` 命令，创建一个浮动 IP 地址，并将其与名为 `MyInstance1` 的实例端口关联：
- en: '![](img/df5d76e9-284b-4ffb-bccf-ee70879d42d9.png)'
  id: totrans-324
  prefs: []
  type: TYPE_IMG
  zh: '![](img/df5d76e9-284b-4ffb-bccf-ee70879d42d9.png)'
- en: Upon creation, the floating IP may appear to be in a DOWN state. Once the changes
    have been applied to the network, the status should reflect an ACTIVE state.
  id: totrans-325
  prefs: []
  type: TYPE_NORMAL
  zh: 在创建时，浮动 IP 可能会显示为 DOWN 状态。一旦更改应用到网络，状态应显示为 ACTIVE。
- en: 'From within the guest OS, verify that the instance can still communicate with
    outside resources:'
  id: totrans-326
  prefs: []
  type: TYPE_NORMAL
  zh: 从虚拟机操作系统内，验证实例是否仍能与外部资源通信：
- en: '![](img/3357c697-9ad1-461a-9b33-3865100135de.png)'
  id: totrans-327
  prefs: []
  type: TYPE_IMG
  zh: '![](img/3357c697-9ad1-461a-9b33-3865100135de.png)'
- en: 'Performing a packet capture on the&amp;nbsp;`eth2.30` interface on the `controller01`
    node, we can observe ICMP traffic from the instance through the router having
    a source IP that corresponds to the floating IP address `10.30.0.101`:'
  id: totrans-328
  prefs: []
  type: TYPE_NORMAL
  zh: 在 `controller01` 节点上对 `eth2.30` 接口进行数据包捕获，我们可以观察到来自实例通过路由器的 ICMP 流量，其源 IP 对应浮动
    IP 地址 `10.30.0.101`：
- en: '![](img/738ebe80-efc2-4a8a-8ed7-da7d9909500f.png)'
  id: totrans-329
  prefs: []
  type: TYPE_IMG
  zh: '![](img/738ebe80-efc2-4a8a-8ed7-da7d9909500f.png)'
- en: 'Within the router namespace, the floating IP has been configured as a secondary
    address on the `qg` interface:'
  id: totrans-330
  prefs: []
  type: TYPE_NORMAL
  zh: 在路由器命名空间内，浮动 IP 已配置为 `qg` 接口的二级地址：
- en: '![](img/40dc4dea-440b-43d5-97bd-aab19783d907.png)'
  id: totrans-331
  prefs: []
  type: TYPE_IMG
  zh: '![](img/40dc4dea-440b-43d5-97bd-aab19783d907.png)'
- en: When the floating IP is configured as a secondary network address on the `qg`
    interface, the router is able to respond to ARP requests to the floating IP from
    the upstream gateway device and other Neutron routers or devices in the same external
    network. This allows inbound connectivity to the instance via the floating IP.
  id: totrans-332
  prefs: []
  type: TYPE_NORMAL
  zh: 当浮动 IP 配置为 `qg` 接口的二级网络地址时，路由器能够响应来自上游网关设备及其他 Neutron 路由器或同一外部网络中设备的 ARP 请求。这样就可以通过浮动
    IP 实现与实例的入站连接。
- en: 'A look at the `iptables` chains within the router namespace show rules have
    been added to perform the 1:1 NAT translation from the floating IP to the fixed
    IP of `MyInstance1`, and vice versa:'
  id: totrans-333
  prefs: []
  type: TYPE_NORMAL
  zh: 查看路由器命名空间内的 `iptables` 链，显示已经添加规则，将浮动 IP 和 `MyInstance1` 的固定 IP 进行 1:1 NAT 转换，反之亦然：
- en: '![](img/9a7cc48d-8602-46c3-8960-89601fa899d8.png)'
  id: totrans-334
  prefs: []
  type: TYPE_IMG
  zh: '![](img/9a7cc48d-8602-46c3-8960-89601fa899d8.png)'
- en: 'Provided our client workstation can route to the external provider network,
    traffic can be initiated directly to the instance via the floating IP:'
  id: totrans-335
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们的客户端工作站能够路由到外部提供商网络，则可以通过浮动 IP 直接发起流量到实例：
- en: '![](img/1d699426-90d4-4d21-ac62-f2d7642d0892.png)'
  id: totrans-336
  prefs: []
  type: TYPE_IMG
  zh: '![](img/1d699426-90d4-4d21-ac62-f2d7642d0892.png)'
- en: Reassigning floating IPs
  id: totrans-337
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 重新分配浮动 IP
- en: 'Neutron provides the ability to quickly disassociate a floating IP from an
    instance or other network resource and associate it with another. A list of floating
    IPs shows the current association:'
  id: totrans-338
  prefs: []
  type: TYPE_NORMAL
  zh: Neutron 提供了快速将浮动 IP 从实例或其他网络资源上解除关联，并与其他资源关联的能力。浮动 IP 的列表显示当前的关联情况：
- en: '![](img/0c9794c5-9b88-4eb5-b9bc-6e7115101816.png)'
  id: totrans-339
  prefs: []
  type: TYPE_IMG
  zh: '![](img/0c9794c5-9b88-4eb5-b9bc-6e7115101816.png)'
- en: 'Using the `openstack floating ip unset`&amp;nbsp;and `openstack floating ip
    set` commands, disassociate the floating IP from `MyInstance1` and associate it
    with `MyInstance2`. The disassociation can be seen here:'
  id: totrans-340
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 `openstack floating ip unset` 和 `openstack floating ip set` 命令，解除浮动 IP 与
    `MyInstance1` 的关联，并将其与 `MyInstance2` 关联。解除关联可以在这里看到：
- en: '![](img/e0420e13-30e9-4d3f-b593-a72655df3670.png)'
  id: totrans-341
  prefs: []
  type: TYPE_IMG
  zh: '![](img/e0420e13-30e9-4d3f-b593-a72655df3670.png)'
- en: 'No output will be returned if the command is successful. The `openstack floating
    ip list` command shows that the floating IP is no longer associated with a port:'
  id: totrans-342
  prefs: []
  type: TYPE_NORMAL
  zh: 如果命令成功执行，则不会返回任何输出。`openstack floating ip list` 命令显示浮动 IP 不再与端口关联：
- en: '![](img/09cb9ad6-3838-4805-ad7d-73e697cacd2b.png)'
  id: totrans-343
  prefs: []
  type: TYPE_IMG
  zh: '![](img/09cb9ad6-3838-4805-ad7d-73e697cacd2b.png)'
- en: The floating IP is still owned by the project that created it and cannot be
    assigned to another project without first being deleted.
  id: totrans-344
  prefs: []
  type: TYPE_NORMAL
  zh: 浮动IP仍然归创建它的项目所有，必须先删除该浮动IP，才能将其分配给另一个项目。
- en: 'Using the `openstack floating ip set`&amp;nbsp;command, associate the floating
    IP with the port of `MyInstance2`, as shown in the following screenshot:'
  id: totrans-345
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`openstack floating ip set`命令，将浮动IP与`MyInstance2`的端口关联，如下图所示：
- en: '![](img/9057099a-bd42-48e0-919f-7b66082cf0c9.png)'
  id: totrans-346
  prefs: []
  type: TYPE_IMG
  zh: '![](img/9057099a-bd42-48e0-919f-7b66082cf0c9.png)'
- en: 'No output will be returned if the command is successful. Observe the iptables
    rules within the router namespace. The NAT relationship has been modified, and
    traffic from `MyInstance2` will now appear as the floating IP:'
  id: totrans-347
  prefs: []
  type: TYPE_NORMAL
  zh: 如果命令成功执行，将不会返回任何输出。观察路由器命名空间中的iptables规则，NAT关系已被修改，`MyInstance2`的流量现在将显示为浮动IP：
- en: '![](img/eee6370d-a218-4e9a-970e-b735b23d359d.png)'
  id: totrans-348
  prefs: []
  type: TYPE_IMG
  zh: '![](img/eee6370d-a218-4e9a-970e-b735b23d359d.png)'
- en: 'As a result of the new association, attempting an SSH connection to the floating
    IP may result in the following message on the client machine:'
  id: totrans-349
  prefs: []
  type: TYPE_NORMAL
  zh: 由于新的关联，尝试通过浮动IP进行SSH连接时，可能会在客户端机器上看到以下消息：
- en: '![](img/ffcbae62-1dda-4053-ad75-ee8caf3b385c.png)'
  id: totrans-350
  prefs: []
  type: TYPE_IMG
  zh: '![](img/ffcbae62-1dda-4053-ad75-ee8caf3b385c.png)'
- en: 'The warning message is a good indicator that traffic is being sent to a different
    host. Clearing the offending key and logging into the instance reveals it to be
    `MyInstance2`:'
  id: totrans-351
  prefs: []
  type: TYPE_NORMAL
  zh: 警告信息是一个很好的指示，表明流量正在被发送到不同的主机。清除冲突的密钥并登录到实例后，可以发现它是`MyInstance2`：
- en: '![](img/4cdb6df5-788d-41c2-9aac-7bc287678eb6.png)'
  id: totrans-352
  prefs: []
  type: TYPE_IMG
  zh: '![](img/4cdb6df5-788d-41c2-9aac-7bc287678eb6.png)'
- en: At this point, we have successfully deployed two instances behind a single virtual
    router and have verified connectivity to and from the instances using floating
    IPs. In the next section, we will explore how those same tasks can be accomplished
    within the Horizon dashboard.
  id: totrans-353
  prefs: []
  type: TYPE_NORMAL
  zh: 此时，我们已经成功地将两个实例部署在同一个虚拟路由器后，并通过浮动IP验证了实例之间的连通性。在下一部分，我们将探讨如何在Horizon仪表盘中完成相同的任务。
- en: Router management in the dashboard
  id: totrans-354
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 仪表盘中的路由器管理
- en: 'From the Horizon dashboard, routers can be created and managed within the Project
    | Network | Routers pane:'
  id: totrans-355
  prefs: []
  type: TYPE_NORMAL
  zh: 在Horizon仪表盘中，路由器可以在“项目 | 网络 | 路由器”面板中创建和管理：
- en: '![](img/8ce1ed2c-ded0-4613-8ce7-f9e3eca2c5d0.png)'
  id: totrans-356
  prefs: []
  type: TYPE_IMG
  zh: '![](img/8ce1ed2c-ded0-4613-8ce7-f9e3eca2c5d0.png)'
- en: Routers available to the logged-in user can be seen on this page.
  id: totrans-357
  prefs: []
  type: TYPE_NORMAL
  zh: 登录用户可以在此页面查看可用的路由器。
- en: Creating a router in the dashboard
  id: totrans-358
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在仪表盘中创建路由器
- en: 'From the Routers page, click Create Router in the upper right-hand corner to
    create a router. A wizard will open that resembles the following:'
  id: totrans-359
  prefs: []
  type: TYPE_NORMAL
  zh: 从路由器页面，点击右上角的“创建路由器”以创建一个路由器。接下来会弹出一个向导，类似于下图所示：
- en: '![](img/991fd875-a972-4461-80a5-0f3fcf68bf98.png)'
  id: totrans-360
  prefs: []
  type: TYPE_IMG
  zh: '![](img/991fd875-a972-4461-80a5-0f3fcf68bf98.png)'
- en: Enter the name of the router, select its admin state, and choose the appropriate
    external network. Click the blue Create Router button to complete the operation.
  id: totrans-361
  prefs: []
  type: TYPE_NORMAL
  zh: 输入路由器名称，选择其管理员状态，并选择适当的外部网络。点击蓝色的“创建路由器”按钮以完成操作。
- en: Attaching internal interfaces in the dashboard
  id: totrans-362
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在仪表盘中附加内部接口
- en: 'To attach internal interfaces to routers in the dashboard, click the router
    to reveal the Router Details page shown here:'
  id: totrans-363
  prefs: []
  type: TYPE_NORMAL
  zh: 要在仪表盘中将内部接口附加到路由器，请点击路由器以显示路由器详细信息页面，如下所示：
- en: '![](img/2bdc5def-19e6-4718-a426-83603ff6117c.png)'
  id: totrans-364
  prefs: []
  type: TYPE_IMG
  zh: '![](img/2bdc5def-19e6-4718-a426-83603ff6117c.png)'
- en: 'Click the Interfaces tab to reveal details of the router''s interfaces:'
  id: totrans-365
  prefs: []
  type: TYPE_NORMAL
  zh: 点击“接口”标签，显示路由器接口的详细信息：
- en: '![](img/83e7fdaf-9643-48d9-bd0c-492d7613cfb5.png)'
  id: totrans-366
  prefs: []
  type: TYPE_IMG
  zh: '![](img/83e7fdaf-9643-48d9-bd0c-492d7613cfb5.png)'
- en: 'Clicking the Add Interface button reveals a wizard that allows you to select
    details of the interface to be added:'
  id: totrans-367
  prefs: []
  type: TYPE_NORMAL
  zh: 点击“添加接口”按钮，弹出一个向导，允许你选择要添加的接口的详细信息：
- en: '![](img/90cbc4b7-1e80-420b-be6c-ecfc916f365e.png)'
  id: totrans-368
  prefs: []
  type: TYPE_IMG
  zh: '![](img/90cbc4b7-1e80-420b-be6c-ecfc916f365e.png)'
- en: 'Select a subnet you wish to attach to the router from the Subnet&amp;nbsp;menu
    and click the blue Submit button to attach the interface. The newly attached interface
    will be revealed on the Interface pane shown here:'
  id: totrans-369
  prefs: []
  type: TYPE_NORMAL
  zh: 从子网菜单中选择一个你希望连接到路由器的子网，并点击蓝色的提交按钮以附加接口。新附加的接口将在接口面板中显示，如下所示：
- en: '![](img/52af236d-6582-4273-8f0f-7c0853c80fbe.png)'
  id: totrans-370
  prefs: []
  type: TYPE_IMG
  zh: '![](img/52af236d-6582-4273-8f0f-7c0853c80fbe.png)'
- en: It is normal for an interface's status to be Down immediately after adding the
    interface to the router. Neutron will not mark the interface as Active until the
    agents have completed their tasks. Refreshing the dashboard will update the status
    accordingly.
  id: totrans-371
  prefs: []
  type: TYPE_NORMAL
  zh: 在将接口添加到路由器后，接口状态显示为“Down”是正常现象。Neutron 不会将接口标记为“Active”，直到代理完成任务。刷新仪表盘将相应更新状态。
- en: Viewing the network topology in the dashboard
  id: totrans-372
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在仪表盘中查看网络拓扑
- en: From within the dashboard, users can view a logical topology of the network
    based on the network configuration managed by Neutron.
  id: totrans-373
  prefs: []
  type: TYPE_NORMAL
  zh: 在仪表盘中，用户可以查看基于 Neutron 管理的网络配置的网络逻辑拓扑。
- en: 'Click on Network Topology under the Project| Network&amp;nbsp;pane to find
    a logical diagram based on the networks, router, and instances that we created
    earlier:'
  id: totrans-374
  prefs: []
  type: TYPE_NORMAL
  zh: 点击项目|网络面板下的“网络拓扑”，查看我们之前创建的网络、路由器和实例的逻辑图：
- en: '![](img/fd2345dc-7dec-4213-ad10-2f50c4d99709.png)'
  id: totrans-375
  prefs: []
  type: TYPE_IMG
  zh: '![](img/fd2345dc-7dec-4213-ad10-2f50c4d99709.png)'
- en: 'Hovering over the router icon reveals a popup displaying details about the
    router such as connected ports, IPs, and port status:'
  id: totrans-376
  prefs: []
  type: TYPE_NORMAL
  zh: 将鼠标悬停在路由器图标上，会弹出显示有关路由器的详细信息，例如连接的端口、IP 地址和端口状态：
- en: '![](img/80fcd470-7eb1-4672-aa56-14935a672abe.png)'
  id: totrans-377
  prefs: []
  type: TYPE_IMG
  zh: '![](img/80fcd470-7eb1-4672-aa56-14935a672abe.png)'
- en: Associating floating IPs to instances in the dashboard
  id: totrans-378
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在仪表盘中将浮动 IP 与实例关联
- en: 'Floating IPs in the dashboard are managed on the Instances page found within
    the Project| Compute&amp;nbsp;pane. Click the menu under the Actions&amp;nbsp;column
    next to the instance you wish to assign a floating IP to:'
  id: totrans-379
  prefs: []
  type: TYPE_NORMAL
  zh: 仪表盘中的浮动 IP 在项目|计算面板中的实例页面上进行管理。点击希望将浮动 IP 分配给的实例旁边的操作栏菜单：
- en: '![](img/d38bb4ca-e4ca-482b-9a24-f3c6462a59e1.png)'
  id: totrans-380
  prefs: []
  type: TYPE_IMG
  zh: '![](img/d38bb4ca-e4ca-482b-9a24-f3c6462a59e1.png)'
- en: 'To assign a floating IP, click Associate Floating IP. A wizard will be revealed
    that allows you to manage floating IP allocations:'
  id: totrans-381
  prefs: []
  type: TYPE_NORMAL
  zh: 要分配浮动 IP，点击“关联浮动 IP”。此时会出现一个向导，允许你管理浮动 IP 的分配：
- en: '![](img/597dfcef-071a-4ecf-b8db-c1111e2678d4.png)'
  id: totrans-382
  prefs: []
  type: TYPE_IMG
  zh: '![](img/597dfcef-071a-4ecf-b8db-c1111e2678d4.png)'
- en: If there are no floating IP addresses available for allocation, click the plus
    (+)&amp;nbsp;sign to create one. Click the Associate button to associate the floating
    IP with the port.
  id: totrans-383
  prefs: []
  type: TYPE_NORMAL
  zh: 如果没有可分配的浮动 IP 地址，请点击加号 (+) 以创建一个。点击“关联”按钮将浮动 IP 与端口关联。
- en: Disassociating floating IPs in the dashboard
  id: totrans-384
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在仪表盘中取消关联浮动 IP
- en: 'To disassociate a floating IP from an instance in the dashboard, click the
    menu under the Actions column that corresponds to the instance and select Disassociate
    Floating IP:'
  id: totrans-385
  prefs: []
  type: TYPE_NORMAL
  zh: 要在仪表盘中将浮动 IP 与实例取消关联，请点击对应实例的操作栏菜单，并选择“取消关联浮动 IP”：
- en: '![](img/f2873c8d-ea5a-4fa0-8648-93ee518f3360.png)'
  id: totrans-386
  prefs: []
  type: TYPE_IMG
  zh: '![](img/f2873c8d-ea5a-4fa0-8648-93ee518f3360.png)'
- en: 'A message will appear that warns you of the pending action:'
  id: totrans-387
  prefs: []
  type: TYPE_NORMAL
  zh: 将会弹出一条消息，提醒您有待处理的操作：
- en: '![](img/5282f1f4-0c24-4095-9c2f-1ecbf5dca2d9.png)'
  id: totrans-388
  prefs: []
  type: TYPE_IMG
  zh: '![](img/5282f1f4-0c24-4095-9c2f-1ecbf5dca2d9.png)'
- en: Click the blue Disassociate Floating IP button to proceed with the action.
  id: totrans-389
  prefs: []
  type: TYPE_NORMAL
  zh: 点击蓝色的“取消关联浮动 IP”按钮以继续执行操作。
- en: While the floating IP has been disassociated with the instance, it remains under
    the ownership of the project and is not returned to the allocation pool until
    it is deleted.
  id: totrans-390
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管浮动 IP 已与实例取消关联，但它仍归项目所有，直到被删除之前不会返回到分配池。
- en: Summary
  id: totrans-391
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: Neutron routers are a core component of networking in OpenStack and provide
    users the flexibility to design the network to best suit their application. The
    use of floating IPs allows users to quickly and programmatically provide direct
    connectivity to applications while preserving limited IPv4 address space through
    the use of network address translation.
  id: totrans-392
  prefs: []
  type: TYPE_NORMAL
  zh: Neutron 路由器是 OpenStack 网络的核心组件，为用户提供灵活的网络设计，以最适合他们的应用程序。使用浮动 IP 使用户能够快速且通过编程方式为应用程序提供直接连接，同时通过使用网络地址转换（NAT）来节省有限的
    IPv4 地址空间。
- en: Standalone routers are easy to implement but are a single point of failure in
    any network design. In the event of an L3 agent failure, all routers scheduled
    to the agent may become unavailable or unreliable. In the next chapter, we will
    discuss how Neutron implements highly available routers using the Virtual Router
    Redundancy Protocol, or VRRP, to solve many of the shortcomings of legacy standalone
    routers.
  id: totrans-393
  prefs: []
  type: TYPE_NORMAL
  zh: 独立路由器容易实现，但在任何网络设计中都是单点故障。如果 L3 代理出现故障，所有分配给该代理的路由器可能会变得不可用或不可靠。在下一章中，我们将讨论
    Neutron 如何通过虚拟路由冗余协议（VRRP）实现高可用性路由器，以解决传统独立路由器的许多不足之处。
