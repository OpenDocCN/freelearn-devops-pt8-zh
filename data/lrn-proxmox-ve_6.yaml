- en: Chapter 6. Networking with Proxmox VE
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第6章：与Proxmox VE的网络配置
- en: 'In [Chapter 5](ch05.html "Chapter 5. Working with Virtual Disks"), *Managing
    Virtual Disks*, we looked at one of the most flexible, and therefore complex components
    of virtualization: secondary storage. That flexibility and concomitant complexity
    is because we were attentive to performance and tuning I/O throughput to do the
    best we can in the face of the overhead implicit in this kind of virtualization.'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在[第5章](ch05.html "第5章：管理虚拟磁盘")《管理虚拟磁盘》中，我们讨论了虚拟化中最灵活、也是最复杂的组件之一：二级存储。它的灵活性和相应的复杂性来自于我们对性能的关注，并调整I/O吞吐量，以便在这种虚拟化方式带来的开销面前尽可能做到最好。
- en: 'This chapter gives the same attention to another opportunity to optimize I/O
    throughput: *the vNIC configuration of the virtual machine*.'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本章同样关注优化I/O吞吐量的另一个机会：*虚拟机的vNIC配置*。
- en: Since vNIC optimization involves coordinating fewer moving parts, we're going
    to use this opportunity to address networking with Proxmox VE in a broader context—beyond
    just the optimization of the virtual machine, and to the design of networks that
    include Proxmox VE guests and hosts.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 由于vNIC优化涉及协调较少的活动部件，我们将利用这个机会在更广泛的背景下讨论Proxmox VE的网络配置——不仅限于虚拟机的优化，还包括包含Proxmox
    VE来宾和主机的网络设计。
- en: Throughout, we'll (strive to) maintain coherent focus on the Proxmox VE's networking
    model and the possibilities that model opens up for us. We'll cover the topic
    with enough detail to conjure up possibilities for enterprise network deployment.
    At the same time, we'll walk through configurations that make more sense in a
    small office context more consistent with our hardware.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在整个过程中，我们将（努力）保持一致的焦点，集中讨论Proxmox VE的网络模型以及该模型为我们打开的各种可能性。我们将详细讨论这一主题，以激发企业网络部署的可能性。同时，我们将演示一些在小型办公室环境中更符合我们硬件的配置。
- en: 'We''ll proceed as follows:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将按以下方式进行：
- en: Proxmox VE network model
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Proxmox VE网络模型
- en: Configuring virtual machine guests
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置虚拟机来宾
- en: Proxmox VE network model
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Proxmox VE网络模型
- en: This section provides a high-level overview of the Proxmox VE network model.
    It covers subjects relevant to both Proxmox VE guests as well as hosts.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 本节提供Proxmox VE网络模型的高级概述。它涵盖了与Proxmox VE来宾和主机相关的主题。
- en: 'In Proxmox VE 4.0, two fundamental guest network configurations are supported:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 在Proxmox VE 4.0中，支持两种基本的来宾网络配置：
- en: Bridged
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 桥接
- en: Masquerading with NAT
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用NAT进行伪装
- en: The following subsection contrasts these two configuration models and establishes
    effective, sensible use cases for each.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 以下小节对比了这两种配置模型，并为每种模型建立了有效、合理的使用案例。
- en: 'The remainder of the subsection addresses Proxmox VE host configuration concerns:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 剩余的小节将讨论Proxmox VE主机配置相关的问题：
- en: Routed configuration
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 路由配置
- en: VLAN support
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: VLAN支持
- en: NIC bonding
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: NIC绑定
- en: Bridged configuration
  id: totrans-18
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 桥接配置
- en: Bridged networking connects a Proxmox VE guest to a network using the host's
    Ethernet adapter.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 桥接网络将Proxmox VE来宾与主机的以太网适配器连接到网络。
- en: '![Bridged configuration](img/B01784_06_01-1.png)'
  id: totrans-20
  prefs: []
  type: TYPE_IMG
  zh: '![桥接配置](img/B01784_06_01-1.png)'
- en: Visualizing bridged configuration
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 可视化桥接配置
- en: Virtual machines and containers with bridged connections behave precisely as
    if they're connected to the physical network. Indeed, each virtual server has
    a virtual NIC (or vNIC) that appears to the network with a discreet and unique
    MAC (media access control address) and IP address consistent with the physical
    network.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 配备桥接连接的虚拟机和容器表现得就像它们连接到物理网络一样。事实上，每个虚拟服务器都有一个虚拟NIC（或vNIC），它以独特的MAC地址（媒体访问控制地址）和与物理网络一致的IP地址出现在网络中。
- en: This is the default network configuration for Proxmox VE virtual servers.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 这是Proxmox VE虚拟服务器的默认网络配置。
- en: As in the preceding illustration, it may be helpful to think of a bridged connection
    as analogous to attaching a physical machine to a simple network switch.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，思考桥接连接时，可以将其类比为将物理机器连接到简单的网络交换机。
- en: 'In *Mastering Proxmox*, two contrasting diagrams help illustrate how bridged
    networking works to provide an alternative to a more traditional infrastructure
    without virtualization. First, let''s look at a traditional campus infrastructure:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 在《Mastering Proxmox》中，两个对比图帮助说明桥接网络如何提供一种替代传统基础设施（没有虚拟化）的方式。首先，让我们看一下传统的校园基础设施：
- en: '![Bridged configuration](img/B01784_06_02-1.png)'
  id: totrans-26
  prefs: []
  type: TYPE_IMG
  zh: '![桥接配置](img/B01784_06_02-1.png)'
- en: Visualizing a traditional campus infrastructure
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 可视化传统校园基础设施
- en: 'The next diagram, also from *Mastering Proxmox*, represents a campus with a
    virtualized network infrastructure:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 下一个图示，同样来自 *Mastering Proxmox*，展示了一个带有虚拟化网络基础设施的校园：
- en: '![Bridged configuration](img/B01784_06_03-1.png)'
  id: totrans-29
  prefs: []
  type: TYPE_IMG
  zh: '![桥接配置](img/B01784_06_03-1.png)'
- en: Visualizing the same campus with a Proxmox VE virtualized network infrastructure
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 Proxmox VE 虚拟化网络基础设施可视化相同的校园场景
- en: NAT configuration
  id: totrans-31
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: NAT 配置
- en: In some cases, you may want to hide a virtual server behind the PVE host's true
    IP address and masquerade traffic using **network address translation** (**NAT**).
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 在某些情况下，您可能希望隐藏虚拟服务器，将其置于 PVE 主机的真实 IP 地址后，并使用**网络地址转换**（**NAT**）来伪装流量。
- en: In this scenario, the virtual machine or container has full access to network
    resources, but is not directly accessible from outside nodes. If a bridged connection
    is thought of as a kind of switch, NAT virtual servers may be thought of as being
    behind a router that partitions a public network from a private network.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，虚拟机或容器可以完全访问网络资源，但不能直接从外部节点访问。如果将桥接连接视为一种交换机，那么 NAT 虚拟服务器可以视为位于路由器后面，将公共网络与私有网络进行分区。
- en: With virtualization solutions and applications for workstations, such as Oracle's
    VirtualBox or VMware Workstation, NAT virtual machines make so much sense; they're
    fantastic for creating development and testing environments. They have full access
    to the LAN but, unless ports are forwarded, they cannot be accessed by the other
    nodes on the LAN. This is precisely what we want in the development and testing
    environments.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 对于工作站的虚拟化解决方案和应用程序，例如 Oracle 的 VirtualBox 或 VMware Workstation，NAT 虚拟机非常合适；它们非常适合创建开发和测试环境。它们可以完全访问
    LAN，但除非转发端口，否则无法被 LAN 上的其他节点访问。这正是我们在开发和测试环境中所需的。
- en: However, it may be hard at first to come up with a use case for virtual servers
    hosted by Proxmox VE, since the services wouldn't be available to users on the
    physical network.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，一开始可能很难找到 Proxmox VE 托管的虚拟服务器的使用案例，因为这些服务对物理网络上的用户不可用。
- en: 'Here''s an example where NATing virtual servers is an ideal solution: several
    web servers are working together to provide optimal service availability. Each
    is listening on ports 80 and 443 (conventionally, HTTP and HTTPS respectively).
    For efficiency and efficacy, traffic is proxied through a load balancer.'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是一个 NAT 虚拟服务器是理想解决方案的示例：几台 Web 服务器共同工作，以提供最佳的服务可用性。每台服务器在端口 80 和 443 上监听（分别对应
    HTTP 和 HTTPS）。为了效率和功效，流量通过负载均衡器进行代理。
- en: 'As illustrated here, both bridging and NATing are used for the scenario described
    previously:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 如图所示，先前描述的情景中同时使用了桥接和 NAT：
- en: '![NAT configuration](img/B01784_06_04-1024x930.png)'
  id: totrans-38
  prefs: []
  type: TYPE_IMG
  zh: '![NAT 配置](img/B01784_06_04-1024x930.png)'
- en: An example use case of using NAT and bridged configurations with virtual servers
    and Proxmox VE
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 NAT 和桥接配置与虚拟服务器和 Proxmox VE 的常见解决方案
- en: Routed configuration
  id: totrans-40
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 路由配置
- en: If your Proxmox VE instance is hosted by a cloud service, the bridged configuration
    described previously should not work. With an eye toward security, most hosting
    providers disable networking when they detect multiple MAC addresses on a single
    interface ([https://pve.proxmox.com/wiki/Network_Model](https://pve.proxmox.com/wiki/Network_Model)).
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您的 Proxmox VE 实例托管在云服务上，则先前描述的桥接配置可能无法正常工作。出于安全考虑，大多数托管提供商在检测到单个接口上存在多个 MAC
    地址时会禁用网络功能 ([https://pve.proxmox.com/wiki/Network_Model](https://pve.proxmox.com/wiki/Network_Model))。
- en: 'As a result, the bridged configuration provided here would likely not be functional:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，此处提供的桥接配置可能无法正常工作：
- en: '[PRE0]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: A common solution is having a single interface configured with a public, static
    IP (`192.168.10.2` for this example). Using a bridge, additional IP blocks are
    provided for the Proxmox VE guests (assume `10.10.10.1` with a subnet mask of `255.255.255.0`
    for this example).
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 一种常见的解决方案是使用单个接口配置公共静态 IP（本例中为 `192.168.10.2`）。通过桥接，为 Proxmox VE 客户端提供额外的 IP
    地址块（假定为本例中的 `10.10.10.1`，子网掩码为 `255.255.255.0`）。
- en: 'The configuration for a routed solution scenario might look something like
    this:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 路由解决方案场景的配置可能如下所示：
- en: '[PRE1]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: The configurations offered are published on the Proxmox VE wiki page at [https://pve.proxmox.com/wiki/Network_Model#Routed_Configuration](https://pve.proxmox.com/wiki/Network_Model#Routed_Configuration).
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 所提供的配置已发布在 Proxmox VE 维基页面上，网址为 [https://pve.proxmox.com/wiki/Network_Model#Routed_Configuration](https://pve.proxmox.com/wiki/Network_Model#Routed_Configuration)。
- en: In addition, helpful information is incidentally provided in the Proxmox forum
    thread at [http://forum.proxmox.com/threads/2034-Routed-setup](http://forum.proxmox.com/threads/2034-Routed-setup).
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，Proxmox 论坛中的帖子也提供了一些有用的信息，链接请见 [http://forum.proxmox.com/threads/2034-Routed-setup](http://forum.proxmox.com/threads/2034-Routed-setup)。
- en: VLAN support
  id: totrans-49
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: VLAN 支持
- en: Proxmox VE supports VLANs in the network infrastructure.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: Proxmox VE 在网络基础设施中支持 VLAN。
- en: Note
  id: totrans-51
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: A VLAN (or virtual LAN) is now understood as a group of network devices that
    are configured to communicate as if they were attached to the same physical network,
    when they are, in fact, located on any number of different LAN segments. In other
    words, on a campus where physical media intended for a single LAN are available,
    VLANs logically partition that monolithic physical network into a number of logical,
    or virtual LANs. Thus, based on logical connections rather than physical ones,
    VLANs provide an opportunity for enormous flexibility.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: VLAN（或虚拟局域网）现在被理解为一组被配置为可以像连接在同一物理网络上的设备一样进行通信的网络设备，尽管它们实际上位于不同的局域网段中。换句话说，在一个物理介质原本为单一局域网设计的校园网络中，VLAN
    逻辑地将这个单一的物理网络划分为多个逻辑或虚拟局域网。因此，基于逻辑连接而非物理连接，VLAN 提供了巨大的灵活性。
- en: 'The procedure for joining a Proxmox VE host is outlined here; this process
    requires editing the text file at `/etc/network/interfaces`. Have the VLANs already
    set up in your infrastructure:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 加入 Proxmox VE 主机的步骤在此处有说明；此过程需要编辑 `/etc/network/interfaces` 中的文本文件。请确保在您的基础设施中已经设置好
    VLAN：
- en: Create the bonded interfaces for each of the VLANs.
  id: totrans-54
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为每个 VLAN 创建绑定接口。
- en: Edit your `bridge_ports` interfaces to match the VLANs you are using for management.
  id: totrans-55
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 编辑您的 `bridge_ports` 接口，以匹配您用于管理的 VLAN。
- en: Rename your `vmbr` devices so that they reflect your VLAN.
  id: totrans-56
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 重命名您的 `vmbr` 设备，使其反映您的 VLAN。
- en: After ensuring that the switch port that is plugged into the PVE machine is
    trunked using the dot1q encapsulation, restart the interface: `/etc/init.d/networking
    restart`.
  id: totrans-57
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确保已使用 dot1q 封装将接入 PVE 机器的交换机端口设置为 trunk 后，重启接口：`/etc/init.d/networking restart`。
- en: Check your work using the `ifconfig` command.
  id: totrans-58
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 `ifconfig` 命令检查您的工作。
- en: The details are extremely contingent on the logical organization of the network;
    however, the Proxmox VE wiki has a guide with detailed examples at [https://pve.proxmox.com/wiki/Vlans](https://pve.proxmox.com/wiki/Vlans).
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 这些细节极大地依赖于网络的逻辑组织；然而，Proxmox VE 的维基提供了一个包含详细示例的指南，链接请见 [https://pve.proxmox.com/wiki/Vlans](https://pve.proxmox.com/wiki/Vlans)。
- en: NIC bonding
  id: totrans-60
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 网卡绑定
- en: Proxmox VE supports NIC bonding (or NIC teaming) out of the box, and it's configured
    very much as it would be on any Debian-based host.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: Proxmox VE 原生支持网卡绑定（或网卡团队），配置方式与任何基于 Debian 的主机相似。
- en: NIC bonding is a strategy used primarily to increase fault tolerance on a PVE
    server. Bonded NICs that appear to have the same physical device have the same
    MAC address. Linux includes a kernel module called bonding to allow users to bond
    multiple network interfaces into a single channel.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 网卡绑定是一种主要用于提高 PVE 服务器容错能力的策略。绑定后的网卡，尽管看似使用相同的物理设备，其 MAC 地址也是相同的。Linux 包含一个名为
    bonding 的内核模块，允许用户将多个网络接口绑定成一个通道。
- en: Tip
  id: totrans-63
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: To learn more about NIC bonding with GNU/Linux and the pitfalls to avoid, please
    visit Charlie Schulting's article *Understanding NIC Bonding with Linux* at [http://www.enterprisenetworkingplanet.com/linux_unix/article.php/3850636/Understanding-NIC-Bonding-with-Linux.htm](http://www.enterprisenetworkingplanet.com/linux_unix/article.php/3850636/Understanding-NIC-Bonding-with-Linux.htm)
    (posted November 2, 2009). Linux Journal published another great resource called
    "Bond, Ethernet Bond" in 2011: [http://www.linuxjournal.com/article/10931](http://www.linuxjournal.com/article/10931).
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 要了解更多关于 GNU/Linux 中的网卡绑定以及需要避免的陷阱，请访问 Charlie Schulting 的文章 *Understanding NIC
    Bonding with Linux*，链接：[http://www.enterprisenetworkingplanet.com/linux_unix/article.php/3850636/Understanding-NIC-Bonding-with-Linux.htm](http://www.enterprisenetworkingplanet.com/linux_unix/article.php/3850636/Understanding-NIC-Bonding-with-Linux.htm)（发布于
    2009 年 11 月 2 日）。《Linux Journal》在 2011 年发布了另一篇非常有用的资源，标题为 "Bond, Ethernet Bond"：[http://www.linuxjournal.com/article/10931](http://www.linuxjournal.com/article/10931)。
- en: To learn more about bonding with Debian, the GNU/Linux distribution upon which
    Proxmox VE is built, visit the Debian wiki at [https://wiki.debian.org/Bonding](https://wiki.debian.org/Bonding).
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 要了解更多关于与 Debian（Proxmox VE 构建的 GNU/Linux 发行版）相关的网卡绑定信息，请访问 Debian 维基：[https://wiki.debian.org/Bonding](https://wiki.debian.org/Bonding)。
- en: The Proxmox VE wiki has an article on making the best use of bonding at [https://pve.proxmox.com/wiki/Bonding](https://pve.proxmox.com/wiki/Bonding).
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: Proxmox VE的维基有一篇关于如何最好地利用绑定的文章，链接地址为[https://pve.proxmox.com/wiki/Bonding](https://pve.proxmox.com/wiki/Bonding)。
- en: The simplest resource for configuring a Proxmox VE host to take advantage of
    bonding is an official Proxmox tutorial on YouTube at [https://www.youtube.com/watch?v=-8SwpgaxFuk](https://www.youtube.com/watch?v=-8SwpgaxFuk).
    You'll find that, unlike VLAN configuration, bonding can be configured from the
    management interface alone; there's no immediate need to edit files from the command
    line.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 配置Proxmox VE主机以利用绑定的最简单资源是Proxmox官方在YouTube上的教程，链接为[https://www.youtube.com/watch?v=-8SwpgaxFuk](https://www.youtube.com/watch?v=-8SwpgaxFuk)。你会发现，与VLAN配置不同，绑定可以仅通过管理界面进行配置；不需要立即通过命令行编辑文件。
- en: Network configuration for virtual servers
  id: totrans-68
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 虚拟服务器的网络配置
- en: Equipping a virtual machine or container with a vNIC can be a simple matter
    handled completely through the management interface during the initial configuration
    or subsequently as circumstances demand.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 为虚拟机或容器配置vNIC可以是一个简单的任务，可以完全通过管理界面在初始配置时或根据需要后续进行处理。
- en: However, it can also be a fairly complex matter that requires modification of
    configuration files from the command line on the host, in the VM or container,
    or both.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，这也可能是一个相当复杂的问题，可能需要在主机、虚拟机或容器中，或者两者都需要修改配置文件。
- en: 'In this section, we''ll explore the simplest scenario: providing connectivity
    to VMs through the web-based management interface.'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将探讨最简单的场景：通过基于Web的管理界面为虚拟机提供连接。
- en: Providing basic connectivity
  id: totrans-72
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 提供基本连接
- en: Here, we will focus on providing our virtual machines with basic connectivity
    and incorporate them into a flat network. We'll work first with VMs and then with
    containers.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们将重点提供虚拟机的基本连接，并将它们纳入一个扁平网络。我们将首先处理虚拟机，然后处理容器。
- en: Of VMs and vNICs
  id: totrans-74
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 虚拟机与vNIC
- en: In [Chapter 4](ch04.html "Chapter 4. Creating Virtual Machines"), *Creating
    Virtual Machines*, we glossed over the configuration of the virtual network interface
    in the name of efficiency. Here, we'll discuss options provided by the VM creation
    wizard in the administrative interface.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 在[第4章](ch04.html "第4章 创建虚拟机")《创建虚拟机》中，我们为了提高效率，简略了虚拟网络接口的配置。在这里，我们将讨论管理员界面中由虚拟机创建向导提供的选项。
- en: Bridge configuration
  id: totrans-76
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 桥接配置
- en: First, let's configure a VM intended to be used with Debian 8 that's using a
    bridged connection. As previously described, a bridge configuration will integrate
    the VM into the LAN, making it fully available to other nodes, addressable with
    a unique IP, and identifiable by its MAC address. It's analogous to plugging a
    new physical machine into a network switch on the physical network.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们配置一个计划与Debian 8一起使用的虚拟机，该虚拟机使用桥接连接。如前所述，桥接配置将虚拟机集成到局域网中，使其完全对其他节点可用，可以通过唯一的IP地址进行访问，并通过其MAC地址进行识别。这类似于将一台新的物理机器插入到物理网络中的交换机。
- en: 'Recall from [Chapter 4](ch04.html "Chapter 4. Creating Virtual Machines"), *Creating
    Virtual Machines*, that the **Create: Virtual Machine** dialog has eight tabs
    in total and that the **Network** tab is the seventh—the final tab before reviewing
    and committing your configuration for the new VM.'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 回想一下[第4章](ch04.html "第4章 创建虚拟机")《创建虚拟机》中的内容，**创建：虚拟机**对话框总共有八个标签，**网络**标签是第七个——在查看和提交新虚拟机配置之前的最后一个标签。
- en: 'Here are the steps:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是步骤：
- en: Download the Debian 8 netinst image and upload it to the Proxmox VE host using
    any of the methods described in [Chapter 4](ch04.html "Chapter 4. Creating Virtual
    Machines"), *Creating Virtual Machines*.
  id: totrans-80
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下载Debian 8的netinst镜像，并使用在[第4章](ch04.html "第4章 创建虚拟机")《创建虚拟机》中描述的任何方法将其上传到Proxmox
    VE主机。
- en: 'Access the Proxmox VE administrative interface at `https://<my-ip-addr>:8006`
    and create a new VM, specifying the netinst image in the CD/DVD tab of the **Create:
    Virtual Machine** wizard.'
  id: totrans-81
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 访问Proxmox VE管理界面，网址为`https://<my-ip-addr>:8006`，并创建一个新虚拟机，在**创建：虚拟机**向导的CD/DVD标签中指定netinst镜像。
- en: For this VM, the defaults on most tabs will be fine. On the **OS** tab, choose
    the **Linux 3.x/2.6 Kernel** option at the top right of the tab; on the **CPU**
    tab, ensure **Type** is set to **Default (kvm64)**. As discussed in the previous
    chapter, we'll choose **VIRTIO** as our **Bus/Device** on the **Hard Disk** tab
    with the **Cache** option set to **No cache**.![Bridge configuration](img/B01784_06_05.png)
  id: totrans-82
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对于这个虚拟机，绝大多数选项卡上的默认设置已经足够。在**操作系统（OS）**选项卡中，选择右上角的**Linux 3.x/2.6内核**选项；在**CPU**选项卡中，确保**类型（Type）**设置为**默认（kvm64）**。如前一章所述，我们将在**硬盘（Hard
    Disk）**选项卡中选择**VIRTIO**作为我们的**总线/设备（Bus/Device）**，并将**缓存（Cache）**选项设置为**无缓存（No
    cache）**。![桥接配置](img/B01784_06_05.png)
- en: Configuring the hard disk
  id: totrans-83
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 配置硬盘
- en: On the **Network** tab, we'll choose **Bridged mode** in the left column. The
    virtio paravirtualization driver increases performances not only for storage IO,
    but also for network IO. Since virtio drivers are incorporated into GNU/Linux,
    we're going to take advantage of this support by choosing virtio (paravirtualized)
    as the NIC model in the right column of the **Network** tab.
  id: totrans-84
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**网络（Network）**选项卡中，我们将在左列中选择**桥接模式（Bridged mode）**。virtio准虚拟化驱动程序不仅提升了存储IO的性能，还提高了网络IO的性能。由于virtio驱动已经集成到GNU/Linux中，我们将在**网络（Network）**选项卡右列选择virtio（准虚拟化）作为NIC模型，利用这种支持。
- en: When you're all set, review your configuration on the **Confirm** tab and click
    on **Finish** to commit to the VM's creation.
  id: totrans-85
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 配置完成后，查看**确认（Confirm）**选项卡中的配置，点击**完成（Finish）**以确认虚拟机的创建。
- en: Remember, you're not stuck with VNC options through the **Console** tab. Select
    the VM, select the **Hardware** tab, and double-click on **Display** to select
    **SPICE**.
  id: totrans-86
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 请记住，你并不局限于通过**控制台（Console）**选项卡使用VNC选项。选择虚拟机，选择**硬件（Hardware）**选项卡，然后双击**显示（Display）**，选择**SPICE**。
- en: '![Bridge configuration](img/B01784_06_06.png)'
  id: totrans-87
  prefs: []
  type: TYPE_IMG
  zh: '![桥接配置](img/B01784_06_06.png)'
- en: Configuring the display for use with SPICE console option
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 配置用于SPICE控制台选项的显示
- en: 'Note that the **Hardware** tab also indicates that the configured vNIC for
    the VM has now been assigned a MAC. If you select **Network Device** and click
    on the **Edit** button, you should see a similar dialog to the one illustrated
    here:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，**硬件（Hardware）**选项卡还显示已经为虚拟机配置的vNIC分配了MAC地址。如果你选择**网络设备（Network Device）**并点击**编辑（Edit）**按钮，你应该会看到一个类似下面的对话框：
- en: '![Bridge configuration](img/B01784_06_07.png)'
  id: totrans-90
  prefs: []
  type: TYPE_IMG
  zh: '![桥接配置](img/B01784_06_07.png)'
- en: Configuring the Network Device
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 配置网络设备
- en: Now, get ready to start the installation, select the VM, click on **Start**,
    and drop the **Console** menu down to select **SPICE**.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，准备开始安装，选择虚拟机，点击**启动（Start）**，并将**控制台（Console）**菜单下拉，选择**SPICE**。
- en: At this point, follow the on-screen instructions to install Debian 8 to suit
    your taste. You'll have the option to use graphical installation—the screenshots shared
    in this section will be from that installation mode.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 到此为止，根据屏幕上的提示完成Debian 8的安装，按个人需求进行选择。你可以选择使用图形安装模式——本节中分享的截图来自于该安装模式。
- en: '![Bridge configuration](img/B01784_06_08.png)'
  id: totrans-94
  prefs: []
  type: TYPE_IMG
  zh: '![桥接配置](img/B01784_06_08.png)'
- en: Networking works
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 网络工作正常
- en: 'At this stage, you have confirmation that your virtual machine has connectivity:
    if you glance at the management interface, you''ll also see network activity:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 到此为止，你已确认虚拟机已经连接网络：如果你查看管理界面，你还会看到网络活动：
- en: '![Bridge configuration](img/B01784_06_09.png)'
  id: totrans-97
  prefs: []
  type: TYPE_IMG
  zh: '![桥接配置](img/B01784_06_09.png)'
- en: Network confirmed as working
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 网络确认已连接
- en: Proceed through the installation until you are asked to specify packages to
    install. At that point, let's select just enough for a proof-of-concept of bridge
    configuration. Select **web server**, **SSH server**, and **standard system utilities**;
    click on **Continue** to complete the installation.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 继续安装，直到系统要求选择要安装的软件包。此时，选择足够的组件来验证桥接配置的概念。选择**Web服务器**、**SSH服务器**和**标准系统实用程序**；点击**继续（Continue）**完成安装。
- en: '![Bridge configuration](img/B01784_06_10.png)'
  id: totrans-100
  prefs: []
  type: TYPE_IMG
  zh: '![桥接配置](img/B01784_06_10.png)'
- en: Selecting packages to install
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 选择要安装的软件包
- en: 'With all the virtual pieces in place, when you click on **Continue**, you should
    be able to watch the progress as it downloads packages from the Internet and gives
    them a default installation and configuration:'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 当所有虚拟组件就绪后，点击**继续（Continue）**，你应该能够看到进度，系统会从互联网下载软件包并进行默认安装和配置：
- en: '![Bridge configuration](img/B01784_06_11.png)'
  id: totrans-103
  prefs: []
  type: TYPE_IMG
  zh: '![桥接配置](img/B01784_06_11.png)'
- en: Given a bridge configuration, when the installation is complete and the machine
    reboots, it'll be available at a dynamically assigned IP. You should be able to
    confirm this by accessing the machine via SSH or accessing Apache's default web
    page using your browser and pointing to port 80 on the machine.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 在桥接配置的情况下，当安装完成并且机器重启后，它将通过动态分配的 IP 地址可用。你应该能通过 SSH 访问该机器，或者使用浏览器访问 Apache 的默认网页，并指向该机器的
    80 端口来确认这一点。
- en: On the other hand, nothing is confirmed without the IP address.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 另一方面，IP 地址没有确认，什么都无法确定。
- en: Unfortunately, the dynamically assigned IP isn't immediately available through
    the administration interface; we can find it through a scan, or we can simply
    use the console and ask in a terminal session.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 不幸的是，动态分配的 IP 地址无法立即通过管理界面访问；我们可以通过扫描找到它，或者直接使用控制台并在终端会话中查询。
- en: '![Bridge configuration](img/B01784_06_12.png)'
  id: totrans-107
  prefs: []
  type: TYPE_IMG
  zh: '![桥接配置](img/B01784_06_12.png)'
- en: Using ifconfig to discover the dynamically assigned IP address of the guest
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 ifconfig 发现客户机动态分配的 IP 地址
- en: 'The preceding illustration shows the results of `ifconfig` in the new virtual
    machine: `inet addr`, the IPv4 address is 192.168.1.50\. Users can now use any
    machine with a browser or SSH client to control the new web server, for example `ssh
    rik@192.168.1.50`, or `http://192.168.1.50` in this case:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 上面的插图显示了新虚拟机中 `ifconfig` 的结果：`inet addr`，IPv4 地址为 192.168.1.50。现在，用户可以使用任何带有浏览器或
    SSH 客户端的计算机来控制新的网页服务器，例如，`ssh rik@192.168.1.50`，或在此例中使用 `http://192.168.1.50`：
- en: '![Bridge configuration](img/B01784_06_13.png)'
  id: totrans-110
  prefs: []
  type: TYPE_IMG
  zh: '![桥接配置](img/B01784_06_13.png)'
- en: Successful Apache2 access from the LAN
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 成功通过局域网访问 Apache2
- en: We've successfully created a virtual web server available everywhere on our
    flat LANs.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 我们成功创建了一个在整个平面局域网上都可用的虚拟网页服务器。
- en: As long as we keep using a dynamic IP, the address will not be reliable. Configuring
    a static IP address in a VM is not different from doing so on a physical machine.
    It depends on privileged access and knowing the routine and your network configuration;
    you'll need to have an available IP address in mind, and know your subnetwork
    mask, preferred DNS servers, and gateway. You'll also want your root credentials
    on hand.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 只要我们继续使用动态 IP 地址，地址就不可靠。配置虚拟机的静态 IP 地址与配置物理机器的静态 IP 地址没有区别。它取决于特权访问、熟悉常规操作和你的网络配置；你需要有一个可用的
    IP 地址，并知道你的子网掩码、首选 DNS 服务器和网关。同时，你还需要准备好根账户的凭证。
- en: 'Before you make changes, `/etc/network/interfaces` will look like this:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 在你进行更改之前，`/etc/network/interfaces` 看起来像这样：
- en: '![Bridge configuration](img/B01784_06_14.png)'
  id: totrans-115
  prefs: []
  type: TYPE_IMG
  zh: '![桥接配置](img/B01784_06_14.png)'
- en: Interfaces configuration from the CLI
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 从命令行界面配置接口
- en: 'With my target configuration in mind, I can use `nano /etc/network/interfaces`
    to edit the configuration file to match it, as illustrated here:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 有了我的目标配置，我可以使用 `nano /etc/network/interfaces` 编辑配置文件以使其匹配，如下所示：
- en: '![Bridge configuration](img/B01784_06_15.png)'
  id: totrans-118
  prefs: []
  type: TYPE_IMG
  zh: '![桥接配置](img/B01784_06_15.png)'
- en: Editing /etc/network/interfaces in the guest
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 在客户端编辑 /etc/network/interfaces
- en: 'After writing out and rebooting, the web page should be available at the specified
    address, in this case `http://192.168.1.250`:'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 写入并重启后，网页应该能在指定的地址上访问，在本例中为 `http://192.168.1.250`：
- en: '![Bridge configuration](img/B01784_06_16.png)'
  id: totrans-121
  prefs: []
  type: TYPE_IMG
  zh: '![桥接配置](img/B01784_06_16.png)'
- en: The Apache 2 default page
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: Apache 2 默认页面
- en: 'Use the `ifconfig` command to review the configuration of the network interfaces:'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 `ifconfig` 命令查看网络接口的配置：
- en: '![Bridge configuration](img/B01784_06_17.png)'
  id: totrans-124
  prefs: []
  type: TYPE_IMG
  zh: '![桥接配置](img/B01784_06_17.png)'
- en: In a home or small office setting, we simply forward a port on the WAN side
    to port 80 on the VM, and it will be accessible to the world.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 在家庭或小型办公室环境中，我们只需将广域网侧的端口转发到虚拟机的 80 端口，它就能对全世界开放。
- en: In this subsection, we worked through an example of bridge configuration by
    creating a disposable Debian web and SSH server. We saw that using a bridge configuration,
    our virtual server is available to any node on the LAN, and potentially to the
    world.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 在本小节中，我们通过创建一个临时的 Debian 网页和 SSH 服务器，演示了桥接配置的例子。我们看到，使用桥接配置后，我们的虚拟服务器对局域网中的任何节点可用，并且可能对全球开放。
- en: In the following subsection, we'll quickly demonstrate NAT configuration with
    a pretty narrow use case.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的小节中，我们将快速演示具有较窄使用案例的 NAT 配置。
- en: Using NAT configuration
  id: totrans-128
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 使用 NAT 配置
- en: Let's adapt our Debian 8 guest. Instead of a virtual server, let's turn it into
    a desktop machine that's hidden from the rest of the LAN but accessible to users
    with access rights via PVE's web-administration console.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们调整我们的Debian 8来宾系统。我们不再把它作为虚拟服务器，而是将其转变为桌面机器，隐藏于局域网之外，但可通过PVE的网页管理控制台由有访问权限的用户访问。
- en: Log in to the administrative interface, select the Debian VM we created in the
    preceding subsection, shut it down, and select its **Hardware** tab.
  id: totrans-130
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 登录到管理界面，选择前一节中创建的Debian虚拟机，关闭它，并选择其**硬件**标签。
- en: Select the **Network Device** line and click on the **Delete** button to remove
    the interface.
  id: totrans-131
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择**网络设备**行，点击**删除**按钮以移除该接口。
- en: Click on the **Add** button and select **Network device**, as illustrated here.
  id: totrans-132
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**添加**按钮，然后选择**网络设备**，如图所示。
- en: 'In the **Add: Network Device** dialog, select **NAT mode** in the left column
    and choose **VirtIO (paravirtualized)** from the **Model** drop-down menu.![Using
    NAT configuration](img/B01784_06_18.png)'
  id: totrans-133
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**添加：网络设备**对话框中，左侧列选择**NAT模式**，并从**模型**下拉菜单中选择**VirtIO（虚拟化）**。![使用NAT配置](img/B01784_06_18.png)
- en: Setting up a network device with NAT configuration
  id: totrans-134
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 配置带有NAT配置的网络设备
- en: Enter the VM with the console, and return the interface's configuration to its
    prior state by entering `nano /etc/network/interfaces` and editing the file as
    it appears here:![Using NAT configuration](img/B01784_06_19.png)
  id: totrans-135
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 进入虚拟机控制台，并通过输入`nano /etc/network/interfaces`将接口配置恢复为先前状态，按如下方式编辑文件：![使用NAT配置](img/B01784_06_19.png)
- en: Setting up a network device with NAT configuration
  id: totrans-136
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 配置带有NAT配置的网络设备
- en: Restart networking with `/etc/init.d/networking restart`.
  id: totrans-137
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过`/etc/init.d/networking restart`重启网络。
- en: 'Confirm your new address by entering `ifconfig` to see results similar to those
    illustrated here:'
  id: totrans-138
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过输入`ifconfig`来确认您的新地址，您应该看到类似于此处所示的结果：
- en: '![Using NAT configuration](img/B01784_06_20.png)'
  id: totrans-139
  prefs: []
  type: TYPE_IMG
  zh: '![使用NAT配置](img/B01784_06_20.png)'
- en: Results of ifconfig
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: ifconfig的结果
- en: At this point, the VM is accessible only to the Proxmox VE host and cunningly
    masqueraded behind its IP address.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 此时，虚拟机仅对Proxmox VE主机可访问，并巧妙地隐藏在其IP地址后面。
- en: Let's access it and configure the VM for virtual desktop access through **SPICE**.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们访问它，并通过**SPICE**配置虚拟桌面访问。
- en: Make sure the Debian 8 VM machine is selected.
  id: totrans-143
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确保选择了Debian 8虚拟机。
- en: Drop down the **Console** menu and select **SPICE**. You should be prompted
    to log in to a terminal session. Login with the root credentials.
  id: totrans-144
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从**控制台**菜单中下拉并选择**SPICE**。您应该会被提示登录到终端会话。使用root凭据登录。
- en: At the prompt, enter `tasksel` and press  **Enter** to launch the package configuration
    tool.
  id: totrans-145
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在提示符下，输入`tasksel`并按**Enter**启动包配置工具。
- en: In the menu, select the **GNU/Linux Desktop** you'd like to try; in the following
    screenshot, **LXDE** is selected specifically because it is lightweight and our
    drive space is minimal.![Using NAT configuration](img/B01784_06_21.png)
  id: totrans-146
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在菜单中，选择您想尝试的**GNU/Linux桌面**；在下图中，特意选择了**LXDE**，因为它是轻量级的，而且我们的磁盘空间有限。![使用NAT配置](img/B01784_06_21.png)
- en: The package configuration before adding the desktop environment
  id: totrans-147
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 添加桌面环境前的包配置
- en: '![Using NAT configuration](img/B01784_06_22-1024x559.png)'
  id: totrans-148
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![使用NAT配置](img/B01784_06_22-1024x559.png)'
- en: The package configuration after choosing LXDE desktop environment
  id: totrans-149
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 选择LXDE桌面环境后的包配置
- en: After the package installation completes, restart the VM with `reboot` or `shutdown
    -r now`.
  id: totrans-150
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 包安装完成后，使用`reboot`或`shutdown -r now`重启虚拟机。
- en: Welcome to the LXDE desktop environment; log in with the credentials you created
    for the first user during the installation of Debian earlier in the chapter.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 欢迎进入LXDE桌面环境；使用您在本章安装Debian时为第一个用户创建的凭据登录。
- en: 'Going immediately to a browser, we can determine that we have access to services
    on the LAN as well as the Internet:'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 立即打开浏览器，我们可以确定已经可以访问局域网和互联网的服务：
- en: '![Using NAT configuration](img/image_06_023.png)'
  id: totrans-153
  prefs: []
  type: TYPE_IMG
  zh: '![使用NAT配置](img/image_06_023.png)'
- en: Accessing LAN from the VM with NAT configuration
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 从虚拟机访问局域网，配置为NAT模式
- en: '![Using NAT configuration](img/B01784_06_24-1024x766.png)'
  id: totrans-155
  prefs: []
  type: TYPE_IMG
  zh: '![使用NAT配置](img/B01784_06_24-1024x766.png)'
- en: Accessing the Internet from a NAT-configured VM
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 从NAT配置的虚拟机访问互联网
- en: However, returning to the physical workstation, we find that we have no access
    to the VM without going first through the Proxmox host.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，返回物理工作站时，我们发现如果不先通过Proxmox主机，我们无法访问虚拟机。
- en: Instead, we can access the new desktop through the console, and manage permissions
    with the feature-rich rights-management system Proxmox VE provides to restrict
    or permit access to VMs by specific users or groups (see [https://pve.proxmox.com/wiki/User_Management](https://pve.proxmox.com/wiki/User_Management)
    to explore the rich rights management system in PVE).
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 相反，我们可以通过控制台访问新的桌面，并利用Proxmox VE提供的功能丰富的权限管理系统来管理权限，以限制或允许特定用户或组访问虚拟机（请参见[https://pve.proxmox.com/wiki/User_Management](https://pve.proxmox.com/wiki/User_Management)以深入了解PVE中的丰富权限管理系统）。
- en: Summary
  id: totrans-159
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: We conclude having explored the Proxmox VE network model and worked through
    some configurations for virtual machines.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在探索了Proxmox VE网络模型并完成了一些虚拟机配置后，得出了结论。
- en: Along the way, our attention turned once more to virtio paravirtualization drivers—not
    for storage, as in the prior chapter, but rather for network IO. To briefly reiterate,
    virtio paravirtualization drivers for KVM-QEMU virtual machines help optimize
    efficiency by taking some of the sting out of the resource overhead associated
    with virtualization. Proxmox VE doesn't default to virtio, however; it defaults
    instead to the option with the greatest compatibility. In the case of vNICs, that
    default is Intel's E1000 NIC.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 在此过程中，我们再次将注意力转向virtio半虚拟化驱动程序——这次不是用于存储（如上一章所述），而是用于网络IO。简单重述一下，KVM-QEMU虚拟机的virtio半虚拟化驱动程序通过减轻与虚拟化相关的资源开销，帮助优化效率。然而，Proxmox
    VE默认并不使用virtio，而是选择了兼容性最好的选项。在vNIC的情况下，这个默认选项是英特尔的E1000网卡。
- en: In the next chapter, we'll take a somewhat abstracted look at security threats
    and countermeasures specific to virtual machines, containers, and their hosts.
    We'll take our first look at the firewall features built in to the Proxmox VE
    administrative interfaces, and we'll work to realize some of the countermeasures
    proposed.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将对虚拟机、容器及其主机的安全威胁和对策进行一些抽象的探讨。我们将首次了解Proxmox VE管理界面内置的防火墙功能，并将致力于实施一些建议的对策。
- en: That being said, let's harden our Proxmox VE hosts and guests!
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 话虽如此，让我们加强Proxmox VE主机和客户机的安全性！
