- en: Database Services
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 数据库服务
- en: 'In this chapter, we will cover:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下内容：
- en: Creating a database with automatic failover
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建带自动故障切换的数据库
- en: Creating a NAT gateway
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建 NAT 网关
- en: Creating a database read-replica
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建数据库只读副本
- en: Promoting a read-replica to master
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将只读副本提升为主数据库
- en: Creating a one-time database backup
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建一次性数据库备份
- en: Restoring a database from a snapshot
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从快照恢复数据库
- en: Migrating a database
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 迁移数据库
- en: Calculating DynamoDB performance
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 计算 DynamoDB 性能
- en: Introduction
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 简介
- en: Having a persistent storage service is a key component of effectively using
    the AWS cloud for your systems. By ensuring that you have a highly available,
    fault-tolerant location to store your application state in, you can stop depending
    on individual servers for your data.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 持久化存储服务是有效使用 AWS 云服务管理系统的关键组成部分。通过确保拥有一个高度可用、容错的存储位置来保存应用状态，你可以不再依赖单个服务器来存储数据。
- en: Creating a database with automatic failover
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建带自动故障切换的数据库
- en: In this recipe, we're going to create a MySQL RDS database instance configured
    in multi-AZ mode to facilitate automatic failover.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个食谱中，我们将创建一个配置为多可用区（multi-AZ）模式的 MySQL RDS 数据库实例，以便于自动故障切换。
- en: '![](img/image_06_001.png)'
  id: totrans-14
  prefs: []
  type: TYPE_IMG
  zh: '![](img/image_06_001.png)'
- en: Database with automatic failover
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 带自动故障切换的数据库
- en: Getting ready
  id: totrans-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: 'The default VPC will work fine for this example. Once you are comfortable with
    creating databases, you may want to consider a VPC containing private subnets
    that you can use to segment your database away from the Internet and other resources
    (in the style of a three tier application). Either way, you''ll need to note down
    the following:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 默认 VPC 对于本示例而言足够了。一旦你熟悉了创建数据库的操作，你可能会考虑使用包含私有子网的 VPC，将数据库与互联网及其他资源隔离开来（类似三层架构的风格）。无论如何，你需要记下以下信息：
- en: The ID of the VPC
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: VPC 的 ID
- en: The CIDR range of the VPC
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: VPC 的 CIDR 范围
- en: The IDs of at least two subnets in your VPC. These subnets need to be in different
    Availability Zones, for example, `us-east-1a` and `us-east-1b`
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 至少两个子网的 ID，这些子网需要位于不同的可用区，例如 `us-east-1a` 和 `us-east-1b`
- en: How to do it...
  id: totrans-21
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何操作…
- en: 'Create a new CloudFormation template. We''re going to add a total of 12 parameters
    to it:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 创建一个新的 CloudFormation 模板。我们将向其中添加总共 12 个参数：
- en: 'The first three parameters will contain the values we mentioned in the *Getting
    ready* section:'
  id: totrans-23
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 前三个参数将包含我们在 *准备工作* 部分提到的值：
- en: '[PRE0]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'We''re also going to add the database credentials as parameters. This is good
    practice as it means we''re not storing any credentials in our infrastructure
    source code. Note that the password contains the `NoEcho` parameter set to `true`.
    This stops CloudFormation from outputting the password wherever the CloudFormation
    stack details are displayed:'
  id: totrans-25
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们还将添加数据库凭证作为参数。这是一个好习惯，因为这样意味着我们不会在基础设施源代码中存储任何凭证。请注意，密码包含 `NoEcho` 参数，并将其设置为
    `true`。这可以防止 CloudFormation 在显示 CloudFormation 堆栈详情时输出密码：
- en: '[PRE1]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'The next block of parameters pertains to cost and performance. They should
    be mostly self-explanatory. Refer to the AWS documentation on database instance
    types should you wish to change the instance class for this example. We''re supplying
    a default value of 10 GB for the storage size and choosing a magnetic (`standard`)
    volume for the storage type. `gp2` offers better performance, but it costs a little
    more:'
  id: totrans-27
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来的参数块涉及到成本和性能，它们应该大多数都是自解释的。如果你希望更改本示例的实例类型，请参考 AWS 文档中的数据库实例类型。我们为存储大小提供默认值
    10 GB，并选择一个磁性（`standard`）卷作为存储类型。`gp2` 提供更好的性能，但价格稍高：
- en: '[PRE2]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'We need to set some additional parameters for our database. These are the MySQL
    engine version and port. Refer to the AWS documentation for a list of all the
    available versions. We are setting a default value for this parameter as the latest
    version of MySQL at the time of writing:'
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们需要为数据库设置一些附加参数。这些包括 MySQL 引擎版本和端口。请参考 AWS 文档，查看所有可用的版本。我们为此参数设置了一个默认值，使用写作时的最新
    MySQL 版本：
- en: '[PRE3]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Finally, we are going to define some parameters relating to backup and availability.
    We want our database to run in *multi-AZ* mode, we set this to `true` by default.
    We also set a backup retention period of `1` day by default; you might want to
    choose a period larger than this. If you set this value to `0`, backups will be
    disabled (not recommended!):'
  id: totrans-31
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，我们将定义一些与备份和可用性相关的参数。我们希望我们的数据库在 *multi-AZ* 模式下运行，默认将此值设置为 `true`。我们还默认将备份保留期设置为
    `1` 天；你可能希望选择一个更长的保留期。如果你将该值设置为 `0`，则备份将被禁用（不推荐！）：
- en: '[PRE4]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'We''re done with the parameters for this template; we can now go ahead and
    start defining our `Resources`. First of all, we want a security group for our
    DB to reside in. This security group allows inbound access to the database port
    from the CIDR range we''ve defined:'
  id: totrans-33
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们已经完成了此模板的参数定义，现在可以开始定义我们的 `Resources` 了。首先，我们需要一个安全组来容纳我们的数据库。这个安全组允许从我们定义的
    CIDR 范围内访问数据库端口：
- en: '[PRE5]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Next, we need to define a `DBSubnetGroup` resource. This resource is used to
    declare which subnet(s) our DB will reside in. We define two subnets for this
    resource so that the primary and standby servers will reside in separate Availability
    Zones:'
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们需要定义一个 `DBSubnetGroup` 资源。该资源用于声明我们的数据库将位于哪些子网。我们为此资源定义了两个子网，这样主数据库和备用数据库就会分别位于不同的可用区：
- en: '[PRE6]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Finally, we define our RDS instance resource. We specify it as being a MySQL
    database and the rest of the properties are made up of the parameters and resources
    that we''ve defined previously. Lots of `!Ref` is required here:'
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，我们定义我们的 RDS 实例资源。我们指定它为 MySQL 数据库，其他属性则由我们之前定义的参数和资源组成。在这里需要大量使用 `!Ref`：
- en: '[PRE7]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'For good measure, we can add an output to this template that will return the
    hostname for this RDS database:'
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了更精确，我们可以在这个模板中添加一个输出项，用于返回此 RDS 数据库的主机名：
- en: '[PRE8]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'You can provision the database via the CloudFormation web console or use a
    CLI command like so:'
  id: totrans-41
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你可以通过 CloudFormation Web 控制台配置数据库，或者像这样使用 CLI 命令：
- en: '[PRE9]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: How it works...
  id: totrans-43
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的…
- en: In a multi-AZ configuration, AWS will provision a standby MySQL instance in
    a separate Availability Zone. Changes to your database will be replicated to the
    standby DB instance in a synchronous fashion. If there is a problem with your
    primary DB instance AWS will automatically failover to the standby, promote it
    to be the primary DB, and provision a new standby.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 在多可用区配置中，AWS 将在一个独立的可用区配置一个备用 MySQL 实例。对你的数据库的更改将以同步方式复制到备用数据库实例。如果主数据库出现问题，AWS
    会自动切换到备用实例，将其提升为主数据库，并配置新的备用实例。
- en: You don't have access to query standby databases directly. So you can't use
    it to handle all of your read queries, for example. If you wish to use additional
    database instances to increase read capacity, you'll need to provision a *read-replica*.
    We'll cover those in a separate recipe.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 你无法直接查询备用数据库。所以，例如，你不能用它来处理所有的读取查询。如果你希望使用额外的数据库实例来增加读取能力，你需要配置一个*只读副本*。我们将在另一个实例中讨论这些内容。
- en: Backups will always be taken from the standby instance, which means there is
    no interruption to your DB availability. This is not the case if you opted against
    deploying your DB in multi-AZ mode.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 备份将始终从备用实例中获取，这意味着不会中断数据库的可用性。如果你没有选择在多可用区模式下部署数据库，则情况不一样。
- en: 'When you deploy this example it will take roughly 20 minutes or more for the
    stack to report completion. This is because the RDS service needs to go through
    the following process in order to provision a fully working multi-AZ database:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 部署此示例时，堆栈报告完成大约需要 20 分钟或更长时间。这是因为 RDS 服务需要完成以下过程以便配置一个完全正常工作的多可用区数据库：
- en: Provision the primary database
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置主数据库
- en: Back up the primary database
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 备份主数据库
- en: Provision the standby database using the backup from the primary
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用主数据库的备份配置备用数据库
- en: Configure both databases for synchronous replication
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置两个数据库进行同步复制
- en: WARNING
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 警告
- en: Be careful about making changes to your RDS configuration after you've started
    writing data to it, especially when using CloudFormation updates. Some RDS configuration
    changes require the database to be re-provisioned, which can result in data loss.
    We'd recommend using CloudFormation change sets, which will give you an opportunity
    to see which changes are about to cause destructive behavior. The CloudFormation
    RDS docs also provide some information on this.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 在开始向 RDS 配置写入数据后，请小心修改 RDS 配置，特别是当使用 CloudFormation 更新时。一些 RDS 配置变更要求重新配置数据库，这可能会导致数据丢失。我们建议使用
    CloudFormation 变更集，这样你可以看到哪些更改可能会导致破坏性行为。CloudFormation RDS 文档也提供了相关信息。
- en: There's more...
  id: totrans-54
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 还有更多内容...
- en: You can define a maintenance window for your RDS instance. This is the time
    period when AWS will perform maintenance tasks such as security patches or minor
    version upgrades. If you don't specify a maintenance window (which we don't in
    this example), one is chosen for you.
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你可以为 RDS 实例定义维护窗口。这个时间段是 AWS 执行维护任务（如安全补丁或小版本升级）的时间。如果你没有指定维护窗口（我们在这个示例中没有指定），则会为你选择一个。
- en: Creating a NAT gateway
  id: totrans-56
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建一个 NAT 网关
- en: Unless required, your instances should not be publicly exposed to the Internet.
    When your instances are on the Internet, you have to assume that they will be
    attacked at some stage.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 除非必要，否则你的实例不应公开暴露到互联网。当你的实例处于互联网时，你必须假设它们在某个阶段会遭受攻击。
- en: This means most of your workloads should run on instances in private subnets.
    Private subnets are those that are not connected directly to the Internet.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 这意味着大多数工作负载应该运行在私有子网中的实例上。私有子网是指那些没有直接连接到互联网的子网。
- en: In order to give your private instances access to the Internet you use **network
    address translation** (**NAT**). A NAT gateway allows your instances to initiate
    a connection to the Internet, without allowing connections from the Internet.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 为了让你的私有实例可以访问互联网，你需要使用**网络地址转换**（**NAT**）。NAT 网关允许你的实例发起到互联网的连接，而不允许来自互联网的连接。
- en: Getting ready
  id: totrans-60
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: 'For this recipe, you must have the following resources:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 对于此示例，你必须拥有以下资源：
- en: A VPC with an **Internet gateway** (**IGW**)
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个带有**互联网网关**（**IGW**）的 VPC
- en: A public subnet
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 公共子网
- en: A private subnet route table
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个私有子网路由表
- en: You will need the IDs for the public subnet and private subnet route table.
    Both of these resources should be in the same AZ.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 你需要公共子网和私有子网路由表的 ID。两者应位于同一个可用区。
- en: How to do it...
  id: totrans-66
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'Start with the usual CloudFormation template version and description:'
  id: totrans-67
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从通常的 CloudFormation 模板版本和描述开始：
- en: '[PRE10]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'The template must take the following required parameters:'
  id: totrans-69
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 模板必须包含以下必需的参数：
- en: '[PRE11]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'In the `Resources` section, define an Elastic IP that will be assigned to the
    NAT gateway:'
  id: totrans-71
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 `Resources` 部分，定义将分配给 NAT 网关的弹性 IP：
- en: '[PRE12]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Create the NAT gateway resource, assigning it the EIP you just defined in the
    public subnet:'
  id: totrans-73
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建 NAT 网关资源，并将你在公共子网中定义的 EIP 分配给它：
- en: '[PRE13]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Finally, define the route to the NAT gateway and associate it with the private
    subnet''s route table:'
  id: totrans-75
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，定义到 NAT 网关的路由，并将其与私有子网的路由表关联：
- en: '[PRE14]'
  id: totrans-76
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: How it works...
  id: totrans-77
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: 'The parameters required for this recipe are as follows:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 该示例所需的参数如下：
- en: A public subnet ID
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 公共子网 ID
- en: A private subnet route table ID
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个私有子网路由表 ID
- en: The public subnet ID is needed to host the NAT gateway, as it must have Internet
    access. The private subnet route table will be updated with a route to the NAT
    gateway.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 公共子网 ID 用于托管 NAT 网关，因为它必须具有互联网访问权限。私有子网路由表将更新为指向 NAT 网关的路由。
- en: Using the AWS NAT gateway service means that AWS takes care of hosting and securing
    the service for you. The service will be hosted redundantly in a single AZ.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 AWS NAT 网关服务意味着 AWS 会为你托管和保护该服务。该服务将冗余地托管在单个可用区中。
- en: You can use the recipe multiple times to deploy NAT gateways in each of your
    private subnets. Just make sure the public subnet and the private subnet are in
    the same AZ.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以多次使用该模板，在每个私有子网中部署 NAT 网关。只需确保公共子网和私有子网位于同一个可用区（AZ）。
- en: To cater for the unlikely event of an AZ outage (unlikely, but possible) you
    should deploy a NAT gateway per subnet. This means if one NAT gateway goes offline,
    instances in the other AZ can continue to access the Internet as normal. You *are*
    deploying your application in multiple AZs, aren't you?
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 为了应对可用区（AZ）停机的极不可能事件（虽然不太可能，但可能发生），你应在每个子网中部署一个 NAT 网关。这意味着，如果一个 NAT 网关下线，另一个可用区中的实例可以继续正常访问互联网。你*确实*在多个可用区中部署了你的应用，对吧？
- en: This recipe will only work if you have created your own private subnets, as
    the default subnets in a new AWS account are all *public*. Instances in a public
    subnet have direct access to the Internet (via an IGW), so they do not need a
    NAT gateway.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 此示例仅在你已创建自己的私有子网时有效，因为在新 AWS 账户中，默认的子网都是*公共的*。公共子网中的实例可以直接访问互联网（通过 IGW），因此不需要
    NAT 网关。
- en: See also
  id: totrans-86
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 另见
- en: The *Building a secure network* recipe in [Chapter 7](de50c1bf-fc87-4674-9719-c55280a6b60d.xhtml),
    *Networking*
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[第七章](de50c1bf-fc87-4674-9719-c55280a6b60d.xhtml)中的*构建安全网络*示例，*网络*'
- en: Creating a database read-replica
  id: totrans-88
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建数据库只读副本
- en: This recipe will show you how to create an RDS read-replica. You can use read-replicas
    in order to increase the performance of your application by off-loading database
    reads to a separate database instance. You can provision up to five read-replicas
    per source DB.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 本示例将展示如何创建一个 RDS 只读副本。你可以使用只读副本，通过将数据库读取任务分配给一个单独的数据库实例来提高应用的性能。每个源数据库最多可以配置五个只读副本。
- en: '![](img/image_06_002.png)'
  id: totrans-90
  prefs: []
  type: TYPE_IMG
  zh: '![](img/image_06_002.png)'
- en: Read-only database slaves
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 只读数据库从库
- en: Getting ready
  id: totrans-92
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: You will need an RDS DB deployed with backup retention enabled. We are going
    to build upon the DB deployed in the previous *Creating a database with automatic
    failover* recipe.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 你需要一个启用了备份保留的 RDS 数据库。我们将基于前面的 *创建具有自动故障转移的数据库* 配方中的数据库进行构建。
- en: 'You''re going to need the following values:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 你需要以下值：
- en: The identifier for your source RDS instance, for example, `eexocwv5k5kv5z`
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 源 RDS 实例的标识符，例如，`eexocwv5k5kv5z`
- en: A unique identifier for the read-replicate we're going to create, for example, `read-replica-1`
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们将要创建的读取副本的唯一标识符，例如，`read-replica-1`
- en: How to do it...
  id: totrans-97
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'In the AWS CLI, type this command:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 在 AWS CLI 中，输入此命令：
- en: '[PRE15]'
  id: totrans-99
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: How it works...
  id: totrans-100
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: RDS will now go ahead and create a new read-replica for you.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: RDS 现在将为你创建一个新的读取副本。
- en: 'Some parameters are inherited from the source instance and can''t be defined
    at the time of creation:'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 有些参数是从源实例继承的，创建时无法定义：
- en: Storage engine
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 存储引擎
- en: Storage size
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 存储大小
- en: Security group
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安全组
- en: 'The CLI command accepts some parameters that we could have defined, but didn''t
    to keep things simple. They will instead be inherited from the source database.
    The main two are as follows:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: CLI 命令接受一些我们本可以定义的参数，但为了简化操作，我们没有定义这些参数。它们将从源数据库继承。主要的两个参数如下：
- en: '`--db-instance-class`: The same class as the source instance is used'
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`--db-instance-class`：使用与源实例相同的实例类型'
- en: '`--db-subnet-group-name`: The source instance''s subnet group will be used
    and a subnet is chosen at random (hence, an Availability Zone is chosen at random)'
  id: totrans-108
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`--db-subnet-group-name`：将使用源实例的子网组，并随机选择一个子网（因此，随机选择一个可用区）'
- en: There's more...
  id: totrans-109
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 还有更多...
- en: Read-replicas are deployed in a single Availability Zone; there is no standby
    read-replica.
  id: totrans-110
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 读取副本部署在单一的可用区内；没有备用读取副本。
- en: It's not possible to enable backups on read-replicas during time of creation.
    This must be configured afterwards.
  id: totrans-111
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在创建时无法在读取副本上启用备份功能。必须在创建之后进行配置。
- en: The default storage type is `standard` (magnetic). You can increase performance
    by choosing `gp2` or using provisioned IOPS.
  id: totrans-112
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 默认存储类型为 `standard`（磁盘）。通过选择 `gp2` 或使用预置 IOPS，可以提高性能。
- en: It's possible to add MySQL indexes directly to a read-replica to further increase
    read performance. These indexes are not required to be present on the primary
    DB.
  id: totrans-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可以直接向读取副本添加 MySQL 索引，以进一步提高读取性能。这些索引在主数据库上不必存在。
- en: Using read-replicas for availability purposes is more of a complimentary DR
    strategy and shouldn't be used in place of multi-AZ RDS. A multi-AZ configuration
    gives you the benefit of failure detection and automatic failover.
  id: totrans-114
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将读取副本用于可用性目的更像是一种补充的灾难恢复策略，不能替代多可用区 RDS。多可用区配置为你提供故障检测和自动故障转移的好处。
- en: It is possible to deploy a read-replica in an entirely different region.
  id: totrans-115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可以将读取副本部署在完全不同的区域。
- en: Unlike the replication between a primary and standby DB (which is synchronous),
    replication to a read-replica is asynchronous. This means that it's possible for
    a read-replica to fall behind the primary. Keep this in mind when sending time
    sensitive read queries to your read-replicas.
  id: totrans-116
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 与主数据库和备用数据库之间的同步复制不同，读取副本的复制是异步的。这意味着读取副本可能会落后于主数据库。在向读取副本发送时间敏感的读取查询时，务必记住这一点。
- en: Promoting a read-replica to master
  id: totrans-117
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将读取副本提升为主实例
- en: 'We''re going to show you how to promote an RDS read-replica to be a primary
    instance. There are a few reasons you might like to do this:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将向你展示如何将 RDS 读取副本提升为主实例。你可能有几个理由这么做：
- en: To handle a table migration that would typically cause a large amount of downtime,
    especially when messing with columns or indexes
  id: totrans-119
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 处理通常会导致大量停机时间的表迁移，尤其是在处理列或索引时
- en: Because you need to implement sharding
  id: totrans-120
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 因为你需要实现分片
- en: Recovery from failure, should you choose not to deploy your existing primary
    in multi-AZ mode (not recommended)
  id: totrans-121
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果你选择不在多可用区模式下部署现有的主数据库（不推荐），则可以从故障中恢复
- en: Getting ready
  id: totrans-122
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: You're going to need the unique ID, which has been assigned to an RDS read-replica.
    If you followed the previous *Creating a database with automatic failover*, and
    *Creating a database read-replica* recipes, then you'll be all set.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 你将需要唯一标识符，这已经分配给了 RDS 读取副本。如果你按照之前的 *创建具有自动故障转移的数据库* 和 *创建数据库读取副本* 配方操作，那么你应该已经准备好。
- en: It's also a good idea to have backups enabled on this read-replica prior to
    promoting it. This shortens the promotion process because you won't need to wait
    for a backup to be taken. You'll want to set the backup retention period to a
    value between `1` and `8`.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 在提升之前，最好已经在该只读副本上启用了备份。这样可以缩短提升过程，因为您无需等待备份完成。您需要将备份保留期设置为 `1` 到 `8` 之间的值。
- en: Enabling backups on your read-replica will cause it to reboot!
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 启用只读副本的备份将导致其重启！
- en: 'In order to enable backups, you can use the following CLI command:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 为了启用备份，您可以使用以下 CLI 命令：
- en: '[PRE16]'
  id: totrans-127
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: You can drop the `--apply-immediately` parameter if you prefer to wait for the
    reboot to happen during the configured maintenance window. But you'll still want
    to wait until after the reboot happens before you continue with the promotion
    process.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您希望等到重启发生在配置的维护窗口期间，您可以省略 `--apply-immediately` 参数。但您仍然需要等到重启完成后再继续进行提升操作。
- en: To ensure that you have the most up-to-date data before promotion you'll want
    to stop all write traffic to the current source primary DB before going ahead.
    It's also a good idea to make sure that the replication lag on your read-replica
    is `0` (you can check this in CloudWatch).
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 为了确保在提升前拥有最新的数据，您需要停止当前源主数据库的所有写入流量。最好还要确保您的只读副本的复制延迟为 `0`（您可以在 CloudWatch 中检查此项）。
- en: How to do it...
  id: totrans-130
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'Run the following command to promote your read-replica to a primary DB instance.
    This command will cause your read-replica to reboot:'
  id: totrans-131
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行以下命令将您的只读副本提升为主数据库实例。此命令将导致您的只读副本重启：
- en: '[PRE17]'
  id: totrans-132
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'If you wish to then go ahead and configure your new primary RDS instance to
    run in a multi-AZ configuration then you''ll need to run this additional command.
    Expect to wait a while for this operation to complete:'
  id: totrans-133
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果您希望继续配置新的主 RDS 实例以运行多可用区（multi-AZ）配置，那么您需要运行此额外的命令。预计该操作将需要一段时间才能完成：
- en: '[PRE18]'
  id: totrans-134
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: Creating a one-time database backup
  id: totrans-135
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建一次性数据库备份
- en: We're now going to show you how to make a one-off snapshot of your database.
    You might opt to do this if you have a specific requirement around keeping a point
    in time backup of your DB. You might also want to take a snapshot for the purpose
    of creating a new working copy of your dataset.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们将向您展示如何创建数据库的单次快照。如果您有特定的需求，需要保留数据库的某个时间点的备份，您可以选择执行此操作。您也可能希望创建一个快照，以便为您的数据集创建一个新的工作副本。
- en: Getting ready
  id: totrans-137
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: 'In order to proceed you''re going to need the following:'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 为了继续操作，您将需要以下内容：
- en: The identifier for the RDS instance you wish to back up
  id: totrans-139
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您希望备份的 RDS 实例的标识符
- en: A unique identifier that you'd like to assign to this snapshot
  id: totrans-140
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您希望分配给此快照的唯一标识符
- en: 'The snapshot identifier has some constraints:'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 快照标识符有一些限制：
- en: It needs to start with a letter
  id: totrans-142
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它必须以字母开头
- en: It must not be longer than 255 characters
  id: totrans-143
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它不能超过 255 个字符
- en: If your primary database isn't running in a multi-AZ configuration then be aware
    that creating a snapshot will cause an outage. In a multi-AZ configuration the
    snapshot is taken on the standby instance so no outage occurs.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您的主数据库没有运行在多可用区配置中，请注意，创建快照将会导致停机。在多可用区配置中，快照是在备用实例上进行的，因此不会发生停机。
- en: How to do it...
  id: totrans-145
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'Type the following AWS CLI command to initiate the creation of a snapshot.
    You''ll need to wait for a few minutes for the snapshot to complete before you
    can use it:'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 输入以下 AWS CLI 命令以启动快照的创建。您需要等待几分钟，直到快照完成，才能使用它：
- en: '[PRE19]'
  id: totrans-147
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: Restoring a database from a snapshot
  id: totrans-148
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 从快照恢复数据库
- en: We'll now talk through how to restore a database from a snapshot. This process
    creates a new database that will retain a majority of the configuration of the
    database that the snapshot was taken from.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在将讲解如何从快照恢复数据库。此过程会创建一个新数据库，该数据库将保留大部分源数据库的配置。
- en: Getting ready
  id: totrans-150
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: 'You''ll need the following pieces of information:'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 您将需要以下信息：
- en: The ID of the snapshot you wish to restore from
  id: totrans-152
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您希望从中恢复的快照的 ID
- en: A name or identifier that you wish to give to the database we're about to create
  id: totrans-153
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您希望为我们即将创建的数据库指定的名称或标识符
- en: AWS does not allow RDS services in your account to share the same identifier.
    If the source database is still online you'll need to make sure to choose a different
    identifier (or rename the source database).
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: AWS 不允许您账户中的 RDS 服务共享相同的标识符。如果源数据库仍在线，您需要确保选择一个不同的标识符（或者重命名源数据库）。
- en: How to do it...
  id: totrans-155
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'Type the following command:'
  id: totrans-156
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输入以下命令：
- en: '[PRE20]'
  id: totrans-157
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'You may have noticed that this command creates a new database in the default
    security group. This happens because the `restore-db-instance-from-db-snapshot`
    doesn''t accept a security group ID as a parameter. You''ll have to run a second
    command to assign a nondefault security group to the new database:'
  id: totrans-158
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你可能已经注意到，这个命令会在默认安全组中创建一个新数据库。这是因为`restore-db-instance-from-db-snapshot`命令不接受安全组ID作为参数。你需要运行第二个命令来为新数据库分配非默认的安全组：
- en: '[PRE21]'
  id: totrans-159
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: The `modify-db-instance` command will return an error unless the state of the
    target database is `available`.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 除非目标数据库的状态为`available`，否则`modify-db-instance`命令会返回错误。
- en: Also, security group names aren't valid with this command; you'll need to use
    a security group ID instead, for example, `sg-7603d50a`.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，安全组名称在此命令中无效；你需要使用安全组ID，例如`sg-7603d50a`。
- en: There's more...
  id: totrans-162
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 还有更多内容...
- en: The previous command includes the parameter for enabling multi-AZ on the new
    DB. If you'd like the new DB to be running in single-AZ mode only then can you
    simply remove this flag.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 上一个命令包含了启用新数据库的多可用区（multi-AZ）选项。如果你希望新数据库仅运行在单可用区模式下，可以简单地去掉这个标志。
- en: Migrating a database
  id: totrans-164
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 迁移数据库
- en: In this recipe, we will use **Database Migration Service** (**DMS**) to move
    an external database into **Relational Database Service** (**RDS**).
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个教程中，我们将使用**数据库迁移服务**（**DMS**）将外部数据库迁移到**关系型数据库服务**（**RDS**）。
- en: Unlike many of the other recipes, this will be performed manually through the
    web console.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 与许多其他教程不同，本教程将通过Web控制台手动执行。
- en: Most database migrations are one-off, and there are many steps involved. We
    suggest that you first perform the process manually via the console before automating
    it, if required (which you can do with the AWS CLI tool or SDKs).
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数数据库迁移都是一次性的，并且涉及许多步骤。我们建议你首先通过控制台手动执行该过程，之后如果需要，可以使用AWS CLI工具或SDK进行自动化操作。
- en: Getting ready
  id: totrans-168
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备中
- en: 'For this recipe you will need the following:'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 对于这个教程，你需要以下内容：
- en: An external database
  id: totrans-170
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个外部数据库
- en: An RDS database instance
  id: totrans-171
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个RDS数据库实例
- en: The source database in this example is called **employees**, so substitute your
    own database name as required.
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 本示例中的源数据库名为**employees**，所以请根据需要替换为自己的数据库名称。
- en: Both databases must be accessible from the replication instance that will be
    created as part of the recipe. The simplest way to do this is to allow access
    to the databases from the Internet, but obviously this has security implications.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 两个数据库必须能够从将要创建的复制实例访问。最简单的方法是允许数据库从互联网访问，但显然这会带来安全隐患。
- en: How to do it...
  id: totrans-174
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'Navigate to the DMS console:'
  id: totrans-175
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 进入DMS控制台：
- en: '![](img/image_06_003.png)'
  id: totrans-176
  prefs: []
  type: TYPE_IMG
  zh: '![](img/image_06_003.png)'
- en: 'Click on Create Migration to start the migration wizard:'
  id: totrans-177
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击“创建迁移”以启动迁移向导：
- en: '![](img/image_06_004.png)'
  id: totrans-178
  prefs: []
  type: TYPE_IMG
  zh: '![](img/image_06_004.png)'
- en: 'Specify the details for your replication instance. Unless you have a specific
    VPC configuration, the defaults will be fine:'
  id: totrans-179
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 指定复制实例的详细信息。除非你有特定的VPC配置，否则默认设置就足够了：
- en: '![](img/image_06_005.png)'
  id: totrans-180
  prefs: []
  type: TYPE_IMG
  zh: '![](img/image_06_005.png)'
- en: 'While waiting for the replication instance to be ready, fill out the source
    and target endpoint information, including server hostname and port, and the username
    and password to use when connecting:'
  id: totrans-181
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在等待复制实例准备好时，填写源端点和目标端点的信息，包括服务器主机名、端口以及连接时使用的用户名和密码：
- en: '![](img/image_06_006.png)'
  id: totrans-182
  prefs: []
  type: TYPE_IMG
  zh: '![](img/image_06_006.png)'
- en: 'Once the instance is ready, the interface will update and you can proceed:'
  id: totrans-183
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦实例准备好，界面会更新，你可以继续操作：
- en: '![](img/image_06_007.png)'
  id: totrans-184
  prefs: []
  type: TYPE_IMG
  zh: '![](img/image_06_007.png)'
- en: 'In order to confirm and create the source and target endpoints, click on the
    Run test button for each of your databases:'
  id: totrans-185
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了确认并创建源端点和目标端点，点击每个数据库的“运行测试”按钮：
- en: '![](img/image_06_008.png)'
  id: totrans-186
  prefs: []
  type: TYPE_IMG
  zh: '![](img/image_06_008.png)'
- en: 'After the endpoints have been successfully tested and created, define your
    task. In this recipe, we will simply migrate the data (without ongoing replication):'
  id: totrans-187
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在成功测试并创建端点后，定义你的任务。在本教程中，我们将简单地迁移数据（不进行持续复制）：
- en: '![](img/image_06_009.png)'
  id: totrans-188
  prefs: []
  type: TYPE_IMG
  zh: '![](img/image_06_009.png)'
- en: 'For simplicity, drop the tables in the target database (which should be empty)
    to ensure parity between the databases:'
  id: totrans-189
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为简化操作，在目标数据库中删除表（目标数据库应该为空）以确保两数据库之间的一致性：
- en: '![](img/image_06_010.png)'
  id: totrans-190
  prefs: []
  type: TYPE_IMG
  zh: '![](img/image_06_010.png)'
- en: 'Finally, define the mappings between the two databases. In this case, we will
    migrate all the tables (by using the wildcard `%`) in the employees database on
    the source:'
  id: totrans-191
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，定义源数据库和目标数据库之间的映射关系。在本教程中，我们将迁移源数据库中所有表（通过使用通配符`%`）：
- en: '![](img/image_06_011.png)'
  id: totrans-192
  prefs: []
  type: TYPE_IMG
  zh: '![](img/image_06_011.png)'
- en: 'Once you click Add selection rule you will see your rule in the selection rules
    list:'
  id: totrans-193
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦你点击“添加选择规则”，你将看到规则出现在选择规则列表中：
- en: '![](img/image_06_012.png)'
  id: totrans-194
  prefs: []
  type: TYPE_IMG
  zh: '![](img/image_06_012.png)'
- en: 'Once the task is defined you have finished the wizard. You will then see the
    task being created:'
  id: totrans-195
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦任务定义完成，你就完成了向导。然后你将看到任务正在创建：
- en: '![](img/image_06_013.png)'
  id: totrans-196
  prefs: []
  type: TYPE_IMG
  zh: '![](img/image_06_013.png)'
- en: 'Once the status of the task is Ready you can select it and click on the Start/Resume
    button:'
  id: totrans-197
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦任务的状态为“准备就绪”，你可以选择它并点击“开始/恢复”按钮：
- en: '![](img/image_06_014.png)'
  id: totrans-198
  prefs: []
  type: TYPE_IMG
  zh: '![](img/image_06_014.png)'
- en: 'When complete, you will see the task''s details updated in the console:'
  id: totrans-199
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 完成后，你将在控制台中看到任务的详细信息已更新：
- en: '![](img/image_06_015.png)'
  id: totrans-200
  prefs: []
  type: TYPE_IMG
  zh: '![](img/image_06_015.png)'
- en: How it works...
  id: totrans-201
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的……
- en: 'At a high level, this is what the DMS architecture looks like:'
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 从高层次来看，DMS 架构大致如下所示：
- en: '![](img/B06236_06_16.png)'
  id: totrans-203
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B06236_06_16.png)'
- en: Both the **Source** and **Target** databases are external to **DMS**. They are
    represented internally by endpoint resources that are references to the databases.
    Endpoints can be reused between different tasks if needed.
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: '**源**数据库和**目标**数据库都位于**DMS**之外。它们在内部由端点资源表示，端点资源是数据库的引用。如果需要，端点可以在不同任务之间复用。'
- en: This recipe starts by defining the replication instance details. Keep in mind
    that the DMS migration process works best when the migration/transform between
    the two databases is kept *in memory*. This means that for larger jobs you should
    allocate a more powerful instance. If the process needs to temporarily write data
    to disk (such as swap) then the performance and throughput will be much lower.
    This can have flow-on effects, particularly for tasks that include ongoing replication.
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 本教程从定义复制实例的详细信息开始。请记住，当两个数据库之间的迁移/转换保持*内存中*时，DMS 迁移过程效果最佳。这意味着对于较大的任务，你应该分配更强大的实例。如果过程需要暂时将数据写入磁盘（如交换分区），则性能和吞吐量将会大大降低。这可能会产生连锁反应，特别是对于包含持续复制的任务。
- en: 'Next, the two endpoints are defined. It is very important to verify your endpoint
    configuration by using the built-in testing feature so that your tasks do not
    fail later in the process. Generally, if the connectivity test fails, it is one
    of two main issues:'
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，定义这两个端点。通过使用内置的测试功能验证端点配置非常重要，以确保任务在后续过程中不会失败。通常，如果连接性测试失败，可能是以下两个主要问题之一：
- en: Network connectivity issues between the replication instance and the database.
    This is particularly an issue for on-premise databases, which are usually specifically
    restricted from being accessed externally.
  id: totrans-207
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 复制实例与数据库之间的网络连接问题。这对本地部署的数据库尤其重要，因为这些数据库通常会特别限制外部访问。
- en: 'User permissions issues: For example, in the case of MySQL, the root user cannot
    be used to connect to the database externally, so this default user cannot be
    used.'
  id: totrans-208
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用户权限问题：例如，在 MySQL 的情况下，不能使用 root 用户进行外部数据库连接，因此无法使用该默认用户。
- en: Defining the task involves defining your migration type. The recipe uses the
    simplest type; migrate tables. This means that the data will be copied between
    the two databases, and will be complete when the data is propagated. We also get
    to define the behavior on the target database. For simplicity, we have configured
    the task to drop the tables in the target database ensuring that the two databases
    look as similar as possible, even if the tables are renamed, or the table mappings
    change. For the task table mappings we use the wildcard symbol `%` to match all
    tables in the source database. Obviously, you could be more selective if you only
    wanted to match a subset of your data.
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 定义任务时需要定义迁移类型。本教程使用了最简单的类型：迁移表。这意味着数据将被复制到两个数据库之间，当数据传播完毕时任务就完成了。我们还可以定义目标数据库上的行为。为了简便起见，我们将任务配置为删除目标数据库中的表，以确保两个数据库尽可能相似，即使表名被更改或表映射发生变化。对于任务表映射，我们使用通配符符号
    `%` 来匹配源数据库中的所有表。显然，如果只想匹配部分数据，你也可以更加精确地选择。
- en: Once the replication instance, endpoints, and task are defined the wizard ends
    and you are returned to the DMS console. After the task is finished creating it
    can be started.
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦定义了复制实例、端点和任务，向导就结束了，你将返回到 DMS 控制台。任务创建完成后，可以启动任务。
- en: As it is a *migrate existing data-type* task, it will complete once all the
    data has been propagated to the target database.
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 由于这是一个*迁移现有数据类型*的任务，当所有数据传播到目标数据库时，它将完成。
- en: There's more...
  id: totrans-212
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 还有更多……
- en: This is obviously a simple example of what DMS can do. There are other features
    and performance aspects that you should consider in more advanced scenarios.
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 这显然是 DMS 能做的一个简单示例。还有其他功能和性能方面，您应在更复杂的场景中考虑。
- en: Database engines
  id: totrans-214
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 数据库引擎
- en: While this example uses two MySQL databases, it is possible to migrate from
    one database engine to a complete database engine, for example, Oracle to MySQL.
    Unfortunately, this can be a complex process, and while this functionality is
    very useful it is beyond the scope of this recipe. Due to the differences in the
    various engines, there are some limitations on what you can migrate and transform.
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然这个例子使用了两个 MySQL 数据库，但也可以从一个数据库引擎迁移到另一个完整的数据库引擎，例如，从 Oracle 到 MySQL。不幸的是，这可能是一个复杂的过程，尽管这个功能非常有用，但超出了本食谱的范围。由于各种引擎之间的差异，您在迁移和转换过程中会遇到一些限制。
- en: See the *AWS Schema Conversion Tool* documentation for more details on what
    can be migrated between different database engines.
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 请参阅 *AWS Schema Conversion Tool* 文档，了解不同数据库引擎之间可以迁移的内容。
- en: Ongoing replication
  id: totrans-217
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 持续复制
- en: There are also some limits around the ongoing propagation of data—only table
    data can be migrated. Things such as indexes, users, and permissions cannot be
    replicated continually.
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 还有一些关于数据持续传播的限制——只能迁移表数据，索引、用户和权限等无法持续复制。
- en: Multi-AZ
  id: totrans-219
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 多可用区（Multi-AZ）
- en: For ongoing replication tasks, you may want to create a multi-AZ replication
    instance so that the impact of any interruptions of services are minimized. Obviously
    you will need to have a similarly configured (such as multi-AZ) RDS instance as
    your target to get the full benefit!
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 对于持续复制任务，您可能希望创建一个多可用区的复制实例，以便将服务中断的影响降到最低。显然，您需要拥有一个配置相似的（如多可用区）RDS 实例作为目标，以充分获得其好处！
- en: For best performance, when setting up your replication instance you should make
    sure it is in the *same* AZ as your target RDS instance.
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 为了获得最佳性能，在设置复制实例时，您应确保其与目标 RDS 实例位于 *相同的* 可用区。
- en: Calculating DyanmoDB performance
  id: totrans-222
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 计算 DynamoDB 性能
- en: '**DynamoDB** (**DDB**) is the managed NoSQL database service from AWS.'
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: '**DynamoDB**（**DDB**）是 AWS 提供的托管 NoSQL 数据库服务。'
- en: As DDB pricing is based on the amount of read and write capacity units provisioned,
    it is important to be able to calculate the requirements for your use case.
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 由于 DDB 定价基于已配置的读写容量单位数量，因此能够计算出您用例的需求是很重要的。
- en: This recipe uses a written formula to estimate the required **read capacity
    units** (**RCU**) and **write capacity units** (**WCU**) that should be allocated
    to you DDB table.
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 本食谱使用书面公式来估算应分配给 DDB 表的 **读取容量单位**（**RCU**）和 **写入容量单位**（**WCU**）。
- en: It is also crucial to remember that while new partitions will be automatically
    added to a DDB table, they cannot be automatically taken away. This means that
    excessive partitioning can cause long-term impacts to your performance, so you
    should be aware of them.
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 同样重要的是要记住，虽然新的分区会自动添加到 DDB 表中，但不能自动删除。这意味着过度的分区会对性能产生长期影响，因此您需要对此保持警惕。
- en: Getting ready
  id: totrans-227
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: 'All of these calculations assume that you have chosen a good partition key
    for your data. A good partition key ensures the following:'
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 所有这些计算都假设您已经为您的数据选择了一个合适的分区键。一个好的分区键确保以下几点：
- en: Data is evenly spread across all the available partitions
  id: totrans-229
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据均匀分布在所有可用的分区中
- en: Read and write activity is spread evenly in time
  id: totrans-230
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 读写活动在时间上均匀分布
- en: Unfortunately, choosing a good partition key is very data-specific, and beyond
    the scope of this recipe.
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 不幸的是，选择一个好的分区键非常依赖于数据，且超出了本食谱的范围。
- en: All reads are assumed to be strongly consistent.
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 假设所有读取操作都是强一致性的。
- en: How to do it...
  id: totrans-233
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'Start with the size of the items, in **kilobytes** (**KB**):'
  id: totrans-234
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从项目的大小开始，单位为 **千字节**（**KB**）：
- en: '*ItemSize = Size of the items (rows) in KB*'
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: '*ItemSize = 项目（行）大小，以 KB 为单位*'
- en: 'Work out the required number of RCUs required by dividing the number by *4*,
    and rounding up:'
  id: totrans-236
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过将数字除以 *4* 并向上取整，计算所需的 RCU 数量：
- en: '*RCU Per Item = ItemSize / 4 (rounded up)*'
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: '*每项 RCPU = 项目大小 / 4（向上取整）*'
- en: 'Define the expected number of read operations per second. This is one of the
    numbers you will use to provision your table with:'
  id: totrans-238
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 定义每秒预期的读取操作次数。这是您用来配置表格的其中一个数字：
- en: '*Required RCU = Expected Number of Reads * RCU Per Item*'
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: '*所需 RCPU = 预期读取次数 * 每项 RCPU*'
- en: 'Divide the number by *3,000* to calculate the number of DDB partitions required
    to reach the capacity:'
  id: totrans-240
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将数字除以 *3,000* 来计算所需的 DDB 分区数量以达到容量：
- en: '*Read Partitions = Required RCU / 3,000*'
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: '*读取分区 = 所需 RCPU / 3,000*'
- en: 'Next, work out the write capacity required by dividing the item size by *1*,
    and rounding up:'
  id: totrans-242
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，通过将项大小除以*1*并向上取整，计算所需的写入容量：
- en: '*WCU Per Item = ItemSize / 1 (rounded up)*'
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: '*每项 WCPU = 项大小 / 1（向上取整）*'
- en: 'Define the expected number of write operations per second. This is one of the
    numbers you will use to provision your table with:'
  id: totrans-244
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 定义每秒预期的写入操作数。这是您用于配置表时需要使用的数字之一：
- en: '*Required WCU = Expected Number of Writes * WCU Per Item*'
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: '*所需 WCPU = 预期写入数量 * 每项 WCPU*'
- en: 'Divide the number by *1,000* to calculate the number of DDB partitions required
    to reach the capacity:'
  id: totrans-246
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将数字除以*1,000*以计算所需的 DDB 分区数量以达到容量：
- en: '*Write Partitions = Required WCU / 1,000*'
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: '*写入分区 = 所需 WCPU / 1,000*'
- en: 'Add these two values to get the capacity partitions required (rounding up to
    a whole number):'
  id: totrans-248
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将这两个值相加，得到所需的容量分区（向上取整到整数）：
- en: '*Capacity Partitions = Read Partitions + Write Partitions (rounded up)*'
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: '*容量分区 = 读取分区 + 写入分区（向上取整）*'
- en: 'Work out the minimum number of partitions required by the amount of data you
    plan to store:'
  id: totrans-250
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 根据您计划存储的数据量计算所需的最小分区数：
- en: '*Size Partitions = Total Size in GB / 10 (rounded up)*'
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: '*大小分区 = 总大小（GB）/ 10（向上取整）*'
- en: 'Once you have the partition requirements for your use case, take the maximum
    of your previous calculations:'
  id: totrans-252
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦您确定了针对您的用例的分区需求，请取出您之前计算中的最大值：
- en: '*Required Partitions = Maximum value between Capacity Partitions and Size Partitions*'
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: '*所需分区 = 容量分区与大小分区中的最大值*'
- en: 'Since your allocated capacity is spread evenly across partitions, divide the
    RCU and WCU values to get the per-partition performance of your table:'
  id: totrans-254
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 由于您的分配容量在各个分区之间平均分配，请将 RCU 和 WCU 值进行除法运算，以获得每个分区的表性能：
- en: '*Partition Read Throughput = Required RCU / Required Partitions*'
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: '*分区读取吞吐量 = 所需 RCPU / 所需分区*'
- en: '*Partition Write Throughput = Required WCU / Required Partitions*'
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: '*分区写入吞吐量 = 所需 WCPU / 所需分区*'
- en: How it works...
  id: totrans-257
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 工作原理...
- en: Behind the scenes, DDB throughput is controlled by the number of partitions
    that are allocated to your table. It is important to consider how your data will
    be spread across these partitions to ensure you get the performance you expect
    *and have paid for*.
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: 在后台，DDB 吞吐量由分配给您的表的分区数量控制。考虑到您的数据将如何分布在这些分区中非常重要，以确保您获得预期的性能*并支付了相应的费用*。
- en: 'We start this recipe by calculating the size of the items in your database,
    for throughput purposes. DDB has a minimum size it will consider, and even if
    an operation uses less than this size, it is rounded up in terms of allocated
    throughput used. The minimum size depends on the type of operation:'
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: 我们通过计算数据库中项的大小开始此步骤，以便用于吞吐量计算。DDB 有一个最小考虑大小，即使操作使用的大小小于此值，也会按照分配的吞吐量向上取整。最小大小取决于操作类型：
- en: Read operations are calculated in 4-K blocks
  id: totrans-260
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 读取操作按 4 KB 的块计算
- en: Write operations are calculated in 1-K blocks
  id: totrans-261
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 写入操作按 1 KB 的块计算
- en: We then work out what the required RCU and WCU is, based on the expected number
    of operations. These values are what can then be used to provision the DDB table,
    as they represent the minimum required throughput (in optimal conditions).
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们根据预期的操作数量计算所需的 RCPU 和 WCPU。这些值可以用于配置 DDB 表，因为它们代表了在最佳条件下所需的最小吞吐量。
- en: Once you have these values, you can use them to provision your table.
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦您获得了这些值，您可以使用它们来配置您的表。
- en: Next, we calculate the throughput per partition key. These calculations rely
    on knowing what the performance of each partition is expected to be. The numbers
    3,000 (for RCUs) and 1,000 (for WCUs) represent the capacity of a single DDB partition.
    By expressing the capacity in terms of partition performance (reads and writes)
    and adding them together we get the minimum number of partitions required from
    a capacity point of view.
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们计算每个分区键的吞吐量。这些计算依赖于了解每个分区的预期性能。数字 3,000（用于 RCU）和 1,000（用于 WCU）代表单个 DDB
    分区的容量。通过以分区性能（读取和写入）来表示容量，并将它们加在一起，我们可以得到从容量角度来看所需的最小分区数。
- en: We then do the same calculation for total data size. Each DDB partition can
    handle up to 10 GB of data. Any more than that will need to be split between multiple
    partitions.
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们对总数据大小进行相同的计算。每个 DDB 分区最多可以处理 10 GB 的数据。超过这个大小的数据需要在多个分区之间拆分。
- en: The specific values for partition capacity (for reads, writes, and size) have
    been stable for a while, but may change in the future. Double-check that the current
    values are the same as used here for complete accuracy.
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: 分区容量（包括读取、写入和大小）的具体数值已经稳定了一段时间，但未来可能会发生变化。请仔细检查当前值是否与此处使用的值相同，以确保完全准确。
- en: Once we have the minimum partitions for both capacity and size, we take the
    highest value and work with that. This ensures we meet both the capacity and size
    requirements.
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦我们确定了容量和大小的最小分区数，我们将选择其中的最大值并以此为基础。这可以确保我们满足容量和大小的要求。
- en: Finally, we take the provisioned capacity and divide it by the number of partitions.
    This gives us the throughput performance for each partition key, which we can
    then use to confirm against our use case.
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们将配置的容量除以分区数。这将为我们提供每个分区键的吞吐量性能，我们可以用它来与我们的用例进行确认。
- en: There's more...
  id: totrans-269
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 还有更多...
- en: There are many nuances to using DDB efficiently and effectively. Here are some
    of the more important/impactful things to note.
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: 使用DDB时有许多细节需要注意。以下是一些更重要/有影响力的事项。
- en: Burst capacity
  id: totrans-271
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 突发容量
- en: There is a burst capacity available to tables that go over their allocated capacity.
    Unused read and write capacity can be retained for up to five minutes (such as
    300 seconds, for calculation purposes). Relying on this capacity is not good practice,
    and it will undoubtedly cause issues at some stage in the future.
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: 对于超出分配容量的表格，提供了一定的突发容量。未使用的读写容量可以保留最多五分钟（例如，300秒，计算时使用）。依赖这种容量并不是一种好的做法，未来某个阶段无疑会导致问题。
- en: Metrics
  id: totrans-273
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 指标
- en: 'DDB tables automatically send data to CloudWatch metrics. This is the quickest
    and easiest way to confirm that your calculations and provision capacity are meeting
    your needs. It also helps you keep an eye on your usage to track your throughput
    needs over time. All metrics appear in the *AWS/DynamoDB* namespace. Some of the
    most interesting metrics for throughput calculations are as follows:'
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: DDB表格会自动将数据发送到CloudWatch指标。这是确认计算和配置容量是否满足需求的最快和最简单的方法。它还帮助你监控使用情况，跟踪随着时间推移的吞吐量需求。所有指标都显示在*AWS/DynamoDB*命名空间下。以下是一些用于吞吐量计算的有趣指标：
- en: '`ConsumedReadCapacityUnits`'
  id: totrans-275
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ConsumedReadCapacityUnits`'
- en: '`ConsumedWriteCapacityUnits`'
  id: totrans-276
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ConsumedWriteCapacityUnits`'
- en: '`ReadThrottleEvents`'
  id: totrans-277
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ReadThrottleEvents`'
- en: '`WriteThrottleEvents`'
  id: totrans-278
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`WriteThrottleEvents`'
- en: There are other metrics available; see the *Amazon DynamoDB Metrics and Dimensions*
    documentation for more details.
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: 还有其他可用的指标；有关更多详细信息，请参见*Amazon DynamoDB Metrics and Dimensions*文档。
- en: Eventually consistent reads
  id: totrans-280
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 最终一致性读取
- en: Using eventually consistent reads (as opposed to strongly consistent reads)
    *halves* the RCU requirements for calculation purposes. In this recipe, we have
    used strongly consistent reads because it works with all workloads, but you should
    confirm that your use case actually requires it. Use eventually consistent reads
    if it does not.
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
  zh: 使用最终一致性读取（与强一致性读取相对）*将计算所需的RCU要求减少一半*。在这个例子中，我们使用了强一致性读取，因为它适用于所有工作负载，但你应该确认你的用例是否真的需要它。如果不需要，使用最终一致性读取。
- en: By reducing the required provisioned capacity for reads, you effectively reduce
    your *cost* for using DDB.
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
  zh: 通过减少所需的读取配置容量，你可以有效降低使用DDB的*成本*。
